{
    "pipes": [
        {
            "name": "LanguagePipe",
            "id": "pipe-LanguagePipe-5db7bd926e82400d5d38be559c0285b3",
            "file": "src/app/data/pipes/language.pipe.ts",
            "type": "pipe",
            "description": "",
            "properties": [],
            "methods": [
                {
                    "name": "transform",
                    "args": [
                        {
                            "name": "val",
                            "type": "string"
                        }
                    ],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 7,
                    "jsdoctags": [
                        {
                            "name": "val",
                            "type": "string",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "ngname": "language",
            "sourceCode": "import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'language',\n})\nexport class LanguagePipe implements PipeTransform {\n  transform(val: string): string {\n    switch (val) {\n      case 'ar':\n        return 'العربية';\n        break;\n      case 'en':\n        return 'English';\n      case 'ru':\n        return 'русский';\n      case 'tr':\n        return 'Turkish';\n      default:\n        return 'English';\n        break;\n    }\n  }\n}\n"
        },
        {
            "name": "PriceCaculatorPipe",
            "id": "pipe-PriceCaculatorPipe-3598b7f224358264a0d74f373d706189",
            "file": "src/app/data/pipes/price-caculator.pipe.ts",
            "type": "pipe",
            "description": "",
            "properties": [],
            "methods": [
                {
                    "name": "transform",
                    "args": [
                        {
                            "name": "pr",
                            "type": "priceData"
                        },
                        {
                            "name": "count",
                            "type": "GuestCountModel"
                        }
                    ],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 8,
                    "jsdoctags": [
                        {
                            "name": "pr",
                            "type": "priceData",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "count",
                            "type": "GuestCountModel",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "ngname": "priceCaculator",
            "sourceCode": "import { Pipe, PipeTransform } from '@angular/core';\nimport { GuestCountModel } from '../models/guestCountModel';\n\n@Pipe({\n  name: 'priceCaculator',\n})\nexport class PriceCaculatorPipe implements PipeTransform {\n  transform(pr: priceData, count: GuestCountModel): string {\n    return `${pr.basePrice + count.adult * 10}`;\n  }\n}\n\nexport interface priceData {\n  basePrice: number;\n  currency: string;\n}\n"
        },
        {
            "name": "PricePipe",
            "id": "pipe-PricePipe-57bff033b87f828a5366124b03392ecf",
            "file": "src/app/data/pipes/price.pipe.ts",
            "type": "pipe",
            "description": "",
            "properties": [],
            "methods": [
                {
                    "name": "transform",
                    "args": [
                        {
                            "name": "pr",
                            "type": "priceData | string"
                        },
                        {
                            "name": "args",
                            "type": "any[]",
                            "dotDotDotToken": true
                        }
                    ],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 17,
                    "jsdoctags": [
                        {
                            "name": "pr",
                            "type": "priceData | string",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "args",
                            "type": "any[]",
                            "dotDotDotToken": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "ngname": "price",
            "sourceCode": "import { Pipe, PipeTransform } from '@angular/core';\nimport { LocalService } from '../services/local.service';\nimport { priceData } from './price-caculator.pipe';\n\n@Pipe({\n  name: 'price',\n})\nexport class PricePipe implements PipeTransform {\n  // transform(pr: any | null, ...args: any[]): string {\n  //   const countObj = args[0];\n  //   const adultCount = countObj.adult;\n  //   const childern = countObj.children;\n  //   const cur = countObj.currency;\n  //   return `${pr + adultCount * 10}$ ${cur}`;\n  // }\n  constructor(private loc: LocalService) {}\n  transform(pr: priceData | string, ...args: any[]): string {\n    let basePrice;\n    let cur;\n    if (typeof pr == 'string') {\n      basePrice = pr;\n      cur = args[0];\n    } else {\n      basePrice = pr?.basePrice;\n      cur = pr?.currency;\n    }\n\n    return `${basePrice}${this.loc.getTranslation(`currencies.${cur}`)}`;\n  }\n}\n"
        },
        {
            "name": "ServerimagePipe",
            "id": "pipe-ServerimagePipe-b910b483e02508e6a09ff2fbcc4a4475",
            "file": "src/app/data/pipes/serverimage.pipe.ts",
            "type": "pipe",
            "description": "",
            "properties": [],
            "methods": [
                {
                    "name": "transform",
                    "args": [
                        {
                            "name": "pr",
                            "type": "ImageModel | undefined"
                        },
                        {
                            "name": "isThumb",
                            "type": "boolean",
                            "defaultValue": "false"
                        }
                    ],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 13,
                    "jsdoctags": [
                        {
                            "name": "pr",
                            "type": "ImageModel | undefined",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "isThumb",
                            "type": "boolean",
                            "defaultValue": "false",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "ngname": "serverimage",
            "sourceCode": "import { ElementRef, Pipe, PipeTransform } from '@angular/core';\nimport { ImageModel } from '../models/ImageModel';\nimport { WindowService } from '../services/window.service';\nimport { StaticInfo } from '../static/main-info';\nimport { WINDOW_SIZE } from '../utils/enums';\n\n@Pipe({\n  name: 'serverimage',\n})\nexport class ServerimagePipe implements PipeTransform {\n  constructor(private windowService: WindowService, private el: ElementRef) {}\n  //TODO resposive image here\n  transform(pr: ImageModel | undefined, isThumb: boolean = false): string {\n    if (!pr) {\n      return StaticInfo.defaultImage;\n    } else {\n      if (isThumb) return pr.formats?.thumbnail?.url ?? pr.url;\n      switch (\n        this.windowService.getWidthByElementWidth(\n          this.el.nativeElement.offsetWidth\n        )\n      ) {\n        case WINDOW_SIZE.medium:\n          return pr.formats?.medium?.url ?? pr.url;\n        case WINDOW_SIZE.small:\n          return pr.formats?.small?.url ?? pr.url;\n        case WINDOW_SIZE.thumb:\n          return pr.formats?.small?.url ?? pr.url;\n        default:\n          return pr.url;\n      }\n    }\n  }\n}\n"
        },
        {
            "name": "TravelTypePipe",
            "id": "pipe-TravelTypePipe-42d6a23fe882554c0de87577b9c5a061",
            "file": "src/app/data/pipes/travel-type.pipe.ts",
            "type": "pipe",
            "description": "",
            "properties": [],
            "methods": [
                {
                    "name": "transform",
                    "args": [
                        {
                            "name": "value",
                            "type": "TripModel"
                        },
                        {
                            "name": "args",
                            "type": "unknown[]",
                            "dotDotDotToken": true
                        }
                    ],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 9,
                    "jsdoctags": [
                        {
                            "name": "value",
                            "type": "TripModel",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "args",
                            "type": "unknown[]",
                            "dotDotDotToken": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "ngname": "travelType",
            "sourceCode": "import { Pipe, PipeTransform } from '@angular/core';\nimport { TripModel } from '../models/TripModel';\nimport { Enum_Trips_Traveltype } from '../services/saferniGraphql.service';\n\n@Pipe({\n  name: 'travelType',\n})\nexport class TravelTypePipe implements PipeTransform {\n  transform(value: TripModel, ...args: unknown[]): string {\n    if (value.travelType === Enum_Trips_Traveltype.Private)\n      return 'general.privateTour';\n    else return 'general.publicTour';\n  }\n}\n"
        },
        {
            "name": "UpperFirstCharPipe",
            "id": "pipe-UpperFirstCharPipe-4b75a190e86c95bae239f8cd62541a2f",
            "file": "src/app/data/pipes/upper-first-char.pipe.ts",
            "type": "pipe",
            "description": "",
            "properties": [],
            "methods": [
                {
                    "name": "transform",
                    "args": [
                        {
                            "name": "value",
                            "type": "string"
                        },
                        {
                            "name": "args",
                            "type": "unknown[]",
                            "dotDotDotToken": true
                        }
                    ],
                    "optional": false,
                    "returnType": "unknown",
                    "typeParameters": [],
                    "line": 7,
                    "jsdoctags": [
                        {
                            "name": "value",
                            "type": "string",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "args",
                            "type": "unknown[]",
                            "dotDotDotToken": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "ngname": "upperFirstChar",
            "sourceCode": "import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'upperFirstChar',\n})\nexport class UpperFirstCharPipe implements PipeTransform {\n  transform(value: string, ...args: unknown[]): unknown {\n    return [value[0].toUpperCase(), ...value.slice(1)].join('').toString();\n  }\n}\n"
        }
    ],
    "interfaces": [
        {
            "name": "BookingInterface",
            "id": "interface-BookingInterface-9291c8411adaf84f764565c8dcf8c9a6",
            "file": "src/app/data/models/bookingModel.ts",
            "type": "interface",
            "sourceCode": "export class BookingModel {\n  constructor(\n    public id: string = '',\n    public image: string = '',\n    public duration: number = 0,\n    public price: number = 0,\n    public currency: string = '',\n    public fullName: string = '',\n    public email: string = '',\n    public phoneNumber: string = '',\n    public startDate: number = Date.now(),\n    public ticketCount: number = 0,\n    public message: string = '',\n    public ticketImage: string = '',\n    public isApproved: boolean = false\n  ) {}\n}\nexport interface BookingInterface {\n  image: string;\n  id: string;\n  duration: number;\n  price: number;\n  currency: string;\n  fullName: string;\n  email: string;\n  phoneNumber: string;\n  startDate: number;\n  ticketCount: number;\n  message: string;\n  ticketImage: string;\n  isApproved: boolean;\n}\n",
            "properties": [
                {
                    "name": "currency",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 23
                },
                {
                    "name": "duration",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 21
                },
                {
                    "name": "email",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 25
                },
                {
                    "name": "fullName",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 24
                },
                {
                    "name": "id",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 20
                },
                {
                    "name": "image",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 19
                },
                {
                    "name": "isApproved",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 31
                },
                {
                    "name": "message",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 29
                },
                {
                    "name": "phoneNumber",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 26
                },
                {
                    "name": "price",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 22
                },
                {
                    "name": "startDate",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 27
                },
                {
                    "name": "ticketCount",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 28
                },
                {
                    "name": "ticketImage",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 30
                }
            ],
            "indexSignatures": [],
            "kind": 150,
            "methods": []
        },
        {
            "name": "BookingPopupData",
            "id": "interface-BookingPopupData-a4f6eb266e9d8bb58728949c521092ab",
            "file": "src/app/common/widgets/booking-submit-popup/booking-submit-popup.component.ts",
            "type": "interface",
            "sourceCode": "import { Component, Inject, OnInit } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { AnimationOptions } from 'ngx-lottie';\nimport { BehaviorSubject } from 'rxjs';\n\n@Component({\n  selector: 'app-booking-submit-popup',\n  templateUrl: './booking-submit-popup.component.html',\n  styleUrls: ['./booking-submit-popup.component.scss'],\n})\nexport class BookingSubmitPopupComponent implements OnInit {\n  constructor(\n    public dialogRef: MatDialogRef<BookingSubmitPopupComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: BookingPopupData\n  ) {}\n\n  onNoClick(): void {\n    this.dialogRef.close();\n  }\n\n  ngOnInit(): void {}\n\n  options = {\n    autoplay: true,\n    loop: 0,\n    path: this.data.success\n      ? '../../../../assets/animation/booking_submit_animation2.json'\n      : '../../../../assets/animation/error.json',\n  };\n}\n\nexport interface BookingPopupData {\n  success: boolean;\n}\n",
            "properties": [
                {
                    "name": "success",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 33
                }
            ],
            "indexSignatures": [],
            "kind": 150,
            "methods": []
        },
        {
            "name": "FilterOptionsModel",
            "id": "interface-FilterOptionsModel-a73b9c9b1ba4162b1472a94e48a5a2e2",
            "file": "src/app/data/models/filterOptionModlel.ts",
            "type": "interface",
            "sourceCode": "import {\n  Enum_Trips_Traveltype,\n  Enum_Trips_Trip_Type,\n} from '../services/saferniGraphql.service';\n\nexport interface FilterOptionsModel {\n  tripType: Enum_Trips_Trip_Type;\n  minPrice: number;\n  maxPrice: number;\n  date?: number;\n  travelType?: Enum_Trips_Traveltype;\n  hotel?: boolean;\n  hasDiscount?: boolean;\n  cities?: string[];\n  limit?: number;\n  locale?: string;\n  search?: string;\n}\n",
            "properties": [
                {
                    "name": "cities",
                    "type": "string[]",
                    "optional": true,
                    "description": "",
                    "line": 14
                },
                {
                    "name": "date",
                    "type": "number",
                    "optional": true,
                    "description": "",
                    "line": 10
                },
                {
                    "name": "hasDiscount",
                    "type": "boolean",
                    "optional": true,
                    "description": "",
                    "line": 13
                },
                {
                    "name": "hotel",
                    "type": "boolean",
                    "optional": true,
                    "description": "",
                    "line": 12
                },
                {
                    "name": "limit",
                    "type": "number",
                    "optional": true,
                    "description": "",
                    "line": 15
                },
                {
                    "name": "locale",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 16
                },
                {
                    "name": "maxPrice",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 9
                },
                {
                    "name": "minPrice",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 8
                },
                {
                    "name": "search",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 17
                },
                {
                    "name": "travelType",
                    "type": "Enum_Trips_Traveltype",
                    "optional": true,
                    "description": "",
                    "line": 11
                },
                {
                    "name": "tripType",
                    "type": "Enum_Trips_Trip_Type",
                    "optional": false,
                    "description": "",
                    "line": 7
                }
            ],
            "indexSignatures": [],
            "kind": 150,
            "methods": []
        },
        {
            "name": "GuestCountModel",
            "id": "interface-GuestCountModel-9f3ec527078a687526ac273c8f2d2acc",
            "file": "src/app/data/models/guestCountModel.ts",
            "type": "interface",
            "sourceCode": "export interface GuestCountModel {\n  adult: number;\n  child: number;\n}\n",
            "properties": [
                {
                    "name": "adult",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 2
                },
                {
                    "name": "child",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 3
                }
            ],
            "indexSignatures": [],
            "kind": 150,
            "methods": []
        },
        {
            "name": "LoadingState",
            "id": "interface-LoadingState-0f484ece069f49b452de8c4f582c06de",
            "file": "src/app/data/static/main-info.ts",
            "type": "interface",
            "sourceCode": "export class StaticInfo {\n  static projectName = 'prName';\n  static phoneNumber = '+90 539 961 0531';\n  static email = 'safernit@emali.com';\n  static defaultImage = '/assets/images/placeholder/default.jpeg';\n  static insta = 'safernit';\n  static facebook = 'Saferni-104348928523570';\n  static twitter = 'safernit@emali.com';\n\n  static location = 'Istanbul - Turkey';\n\n  //settings\n  static LOADER_MINIMUM_INTERVAL = 0;\n  //routing\n  static offersRoute = 'offers';\n  static bookingRoute = 'booking';\n  static tourInfoRoute = 'tours';\n}\nexport class DevData {\n  static errMsgs = [\n    {\n      name: 'required',\n      msg: 'this field is required',\n    },\n  ];\n}\n\nexport interface LoadingState {\n  msg: any;\n  isLoading: boolean;\n  hasError: boolean;\n  handler?: Function;\n}\n",
            "properties": [
                {
                    "name": "handler",
                    "type": "Function",
                    "optional": true,
                    "description": "",
                    "line": 32
                },
                {
                    "name": "hasError",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 31
                },
                {
                    "name": "isLoading",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 30
                },
                {
                    "name": "msg",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 29
                }
            ],
            "indexSignatures": [],
            "kind": 150,
            "methods": []
        },
        {
            "name": "MetaModel",
            "id": "interface-MetaModel-6ccf046d4a3811aab394fc6a076cd2e7",
            "file": "src/app/data/models/MetaModel.ts",
            "type": "interface",
            "sourceCode": "export interface MetaModel {\n  title?: string;\n  type?: string;\n  image?: string;\n  url?: string;\n  description?: string;\n}\n",
            "properties": [
                {
                    "name": "description",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 6
                },
                {
                    "name": "image",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 4
                },
                {
                    "name": "title",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 2
                },
                {
                    "name": "type",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 3
                },
                {
                    "name": "url",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 5
                }
            ],
            "indexSignatures": [],
            "kind": 150,
            "methods": []
        },
        {
            "name": "MyAdapter",
            "id": "interface-MyAdapter-e988d03886b5f707eaa91017f4f5000f",
            "file": "src/app/data/services/injectionTokens.ts",
            "type": "interface",
            "sourceCode": "import { InjectionToken } from '@angular/core';\nimport { Adapter } from '../adapters/adapter';\nimport { CityModel, CityModelAdapter } from '../models/CityModel';\n\nexport interface MyAdapter {\n  class: Object;\n  adapter: Object;\n}\nexport const ADAPTERINEJCTION: MyAdapter = {\n  class: CityModel,\n  adapter: CityModelAdapter,\n};\n\nexport const ADAPTER_CONFIG = new InjectionToken('app.config');\n",
            "properties": [
                {
                    "name": "adapter",
                    "type": "Object",
                    "optional": false,
                    "description": "",
                    "line": 7
                },
                {
                    "name": "class",
                    "type": "Object",
                    "optional": false,
                    "description": "",
                    "line": 6
                }
            ],
            "indexSignatures": [],
            "kind": 150,
            "methods": []
        },
        {
            "name": "priceData",
            "id": "interface-priceData-3598b7f224358264a0d74f373d706189",
            "file": "src/app/data/pipes/price-caculator.pipe.ts",
            "type": "interface",
            "sourceCode": "import { Pipe, PipeTransform } from '@angular/core';\nimport { GuestCountModel } from '../models/guestCountModel';\n\n@Pipe({\n  name: 'priceCaculator',\n})\nexport class PriceCaculatorPipe implements PipeTransform {\n  transform(pr: priceData, count: GuestCountModel): string {\n    return `${pr.basePrice + count.adult * 10}`;\n  }\n}\n\nexport interface priceData {\n  basePrice: number;\n  currency: string;\n}\n",
            "properties": [
                {
                    "name": "basePrice",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 14
                },
                {
                    "name": "currency",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 15
                }
            ],
            "indexSignatures": [],
            "kind": 150,
            "methods": []
        }
    ],
    "injectables": [
        {
            "name": "AddToNewsLetterGQL",
            "id": "injectable-AddToNewsLetterGQL-54bb7cbcdd682e4d53ca5e8a5c5399f6",
            "file": "src/app/data/services/saferniGraphql.service.ts",
            "properties": [
                {
                    "name": "document",
                    "defaultValue": "AddToNewsLetterDocument",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 3784
                }
            ],
            "methods": [],
            "description": "",
            "sourceCode": "import { gql } from 'apollo-angular';\nimport { Injectable } from '@angular/core';\nimport * as Apollo from 'apollo-angular';\nexport type Maybe<T> = T | null;\nexport type Exact<T extends { [key: string]: unknown }> = { [K in keyof T]: T[K] };\nexport type MakeOptional<T, K extends keyof T> = Omit<T, K> & { [SubKey in K]?: Maybe<T[SubKey]> };\nexport type MakeMaybe<T, K extends keyof T> = Omit<T, K> & { [SubKey in K]: Maybe<T[SubKey]> };\n/** All built-in and custom scalars, mapped to their actual values */\nexport type Scalars = {\n  ID: string;\n  String: string;\n  Boolean: boolean;\n  Int: number;\n  Float: number;\n  /** A date string, such as 2007-12-03, compliant with the `full-date` format outlined in section 5.6 of the RFC 3339 profile of the ISO 8601 standard for representation of dates and times using the Gregorian calendar. */\n  Date: any;\n  /** A date-time string at UTC, such as 2007-12-03T10:15:30Z, compliant with the `date-time` format outlined in section 5.6 of the RFC 3339 profile of the ISO 8601 standard for representation of dates and times using the Gregorian calendar. */\n  DateTime: any;\n  /** The `JSON` scalar type represents JSON values as specified by [ECMA-404](http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf). */\n  JSON: any;\n  /** The `Long` scalar type represents 52-bit integers */\n  Long: any;\n  /** A time string with format: HH:mm:ss.SSS */\n  Time: any;\n  /** The `Upload` scalar type represents a file upload. */\n  Upload: any;\n};\n\n\n\nexport type AdminUser = {\n  __typename?: 'AdminUser';\n  id: Scalars['ID'];\n  username?: Maybe<Scalars['String']>;\n  firstname: Scalars['String'];\n  lastname: Scalars['String'];\n};\n\nexport type Booking = {\n  __typename?: 'Booking';\n  id: Scalars['ID'];\n  _id: Scalars['ID'];\n  createdAt: Scalars['DateTime'];\n  updatedAt: Scalars['DateTime'];\n  trip?: Maybe<Trips>;\n  approved?: Maybe<Scalars['Boolean']>;\n  basePrice: Scalars['Float'];\n  currency: Enum_Booking_Currency;\n  basePeopleCount: Scalars['Int'];\n  discount?: Maybe<Scalars['Float']>;\n  fullName: Scalars['String'];\n  phone: Scalars['String'];\n  message?: Maybe<Scalars['String']>;\n  arrivalDate: Scalars['Date'];\n  language?: Maybe<Scalars['String']>;\n  userBookingStatus?: Maybe<Enum_Booking_Userbookingstatus>;\n  email: Scalars['String'];\n  adults: Scalars['Int'];\n  children?: Maybe<Scalars['Int']>;\n  totalPrice?: Maybe<Scalars['Float']>;\n  published_at?: Maybe<Scalars['DateTime']>;\n};\n\nexport type BookingAggregator = {\n  __typename?: 'BookingAggregator';\n  count?: Maybe<Scalars['Int']>;\n  totalCount?: Maybe<Scalars['Int']>;\n  sum?: Maybe<BookingAggregatorSum>;\n  avg?: Maybe<BookingAggregatorAvg>;\n  min?: Maybe<BookingAggregatorMin>;\n  max?: Maybe<BookingAggregatorMax>;\n};\n\nexport type BookingAggregatorAvg = {\n  __typename?: 'BookingAggregatorAvg';\n  basePrice?: Maybe<Scalars['Float']>;\n  basePeopleCount?: Maybe<Scalars['Float']>;\n  discount?: Maybe<Scalars['Float']>;\n  adults?: Maybe<Scalars['Float']>;\n  children?: Maybe<Scalars['Float']>;\n  totalPrice?: Maybe<Scalars['Float']>;\n};\n\nexport type BookingAggregatorMax = {\n  __typename?: 'BookingAggregatorMax';\n  basePrice?: Maybe<Scalars['Float']>;\n  basePeopleCount?: Maybe<Scalars['Float']>;\n  discount?: Maybe<Scalars['Float']>;\n  adults?: Maybe<Scalars['Float']>;\n  children?: Maybe<Scalars['Float']>;\n  totalPrice?: Maybe<Scalars['Float']>;\n};\n\nexport type BookingAggregatorMin = {\n  __typename?: 'BookingAggregatorMin';\n  basePrice?: Maybe<Scalars['Float']>;\n  basePeopleCount?: Maybe<Scalars['Float']>;\n  discount?: Maybe<Scalars['Float']>;\n  adults?: Maybe<Scalars['Float']>;\n  children?: Maybe<Scalars['Float']>;\n  totalPrice?: Maybe<Scalars['Float']>;\n};\n\nexport type BookingAggregatorSum = {\n  __typename?: 'BookingAggregatorSum';\n  basePrice?: Maybe<Scalars['Float']>;\n  basePeopleCount?: Maybe<Scalars['Float']>;\n  discount?: Maybe<Scalars['Float']>;\n  adults?: Maybe<Scalars['Float']>;\n  children?: Maybe<Scalars['Float']>;\n  totalPrice?: Maybe<Scalars['Float']>;\n};\n\nexport type BookingConnection = {\n  __typename?: 'BookingConnection';\n  values?: Maybe<Array<Maybe<Booking>>>;\n  groupBy?: Maybe<BookingGroupBy>;\n  aggregate?: Maybe<BookingAggregator>;\n};\n\nexport type BookingConnectionAdults = {\n  __typename?: 'BookingConnectionAdults';\n  key?: Maybe<Scalars['Int']>;\n  connection?: Maybe<BookingConnection>;\n};\n\nexport type BookingConnectionApproved = {\n  __typename?: 'BookingConnectionApproved';\n  key?: Maybe<Scalars['Boolean']>;\n  connection?: Maybe<BookingConnection>;\n};\n\nexport type BookingConnectionArrivalDate = {\n  __typename?: 'BookingConnectionArrivalDate';\n  key?: Maybe<Scalars['ID']>;\n  connection?: Maybe<BookingConnection>;\n};\n\nexport type BookingConnectionBasePeopleCount = {\n  __typename?: 'BookingConnectionBasePeopleCount';\n  key?: Maybe<Scalars['Int']>;\n  connection?: Maybe<BookingConnection>;\n};\n\nexport type BookingConnectionBasePrice = {\n  __typename?: 'BookingConnectionBasePrice';\n  key?: Maybe<Scalars['Float']>;\n  connection?: Maybe<BookingConnection>;\n};\n\nexport type BookingConnectionChildren = {\n  __typename?: 'BookingConnectionChildren';\n  key?: Maybe<Scalars['Int']>;\n  connection?: Maybe<BookingConnection>;\n};\n\nexport type BookingConnectionCreatedAt = {\n  __typename?: 'BookingConnectionCreatedAt';\n  key?: Maybe<Scalars['DateTime']>;\n  connection?: Maybe<BookingConnection>;\n};\n\nexport type BookingConnectionCurrency = {\n  __typename?: 'BookingConnectionCurrency';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<BookingConnection>;\n};\n\nexport type BookingConnectionDiscount = {\n  __typename?: 'BookingConnectionDiscount';\n  key?: Maybe<Scalars['Float']>;\n  connection?: Maybe<BookingConnection>;\n};\n\nexport type BookingConnectionEmail = {\n  __typename?: 'BookingConnectionEmail';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<BookingConnection>;\n};\n\nexport type BookingConnectionFullName = {\n  __typename?: 'BookingConnectionFullName';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<BookingConnection>;\n};\n\nexport type BookingConnectionId = {\n  __typename?: 'BookingConnectionId';\n  key?: Maybe<Scalars['ID']>;\n  connection?: Maybe<BookingConnection>;\n};\n\nexport type BookingConnectionLanguage = {\n  __typename?: 'BookingConnectionLanguage';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<BookingConnection>;\n};\n\nexport type BookingConnectionMessage = {\n  __typename?: 'BookingConnectionMessage';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<BookingConnection>;\n};\n\nexport type BookingConnectionPhone = {\n  __typename?: 'BookingConnectionPhone';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<BookingConnection>;\n};\n\nexport type BookingConnectionPublished_At = {\n  __typename?: 'BookingConnectionPublished_at';\n  key?: Maybe<Scalars['DateTime']>;\n  connection?: Maybe<BookingConnection>;\n};\n\nexport type BookingConnectionTotalPrice = {\n  __typename?: 'BookingConnectionTotalPrice';\n  key?: Maybe<Scalars['Float']>;\n  connection?: Maybe<BookingConnection>;\n};\n\nexport type BookingConnectionTrip = {\n  __typename?: 'BookingConnectionTrip';\n  key?: Maybe<Scalars['ID']>;\n  connection?: Maybe<BookingConnection>;\n};\n\nexport type BookingConnectionUpdatedAt = {\n  __typename?: 'BookingConnectionUpdatedAt';\n  key?: Maybe<Scalars['DateTime']>;\n  connection?: Maybe<BookingConnection>;\n};\n\nexport type BookingConnectionUserBookingStatus = {\n  __typename?: 'BookingConnectionUserBookingStatus';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<BookingConnection>;\n};\n\nexport type BookingConnection_Id = {\n  __typename?: 'BookingConnection_id';\n  key?: Maybe<Scalars['ID']>;\n  connection?: Maybe<BookingConnection>;\n};\n\nexport type BookingGroupBy = {\n  __typename?: 'BookingGroupBy';\n  id?: Maybe<Array<Maybe<BookingConnectionId>>>;\n  _id?: Maybe<Array<Maybe<BookingConnection_Id>>>;\n  createdAt?: Maybe<Array<Maybe<BookingConnectionCreatedAt>>>;\n  updatedAt?: Maybe<Array<Maybe<BookingConnectionUpdatedAt>>>;\n  trip?: Maybe<Array<Maybe<BookingConnectionTrip>>>;\n  approved?: Maybe<Array<Maybe<BookingConnectionApproved>>>;\n  basePrice?: Maybe<Array<Maybe<BookingConnectionBasePrice>>>;\n  currency?: Maybe<Array<Maybe<BookingConnectionCurrency>>>;\n  basePeopleCount?: Maybe<Array<Maybe<BookingConnectionBasePeopleCount>>>;\n  discount?: Maybe<Array<Maybe<BookingConnectionDiscount>>>;\n  fullName?: Maybe<Array<Maybe<BookingConnectionFullName>>>;\n  phone?: Maybe<Array<Maybe<BookingConnectionPhone>>>;\n  message?: Maybe<Array<Maybe<BookingConnectionMessage>>>;\n  arrivalDate?: Maybe<Array<Maybe<BookingConnectionArrivalDate>>>;\n  language?: Maybe<Array<Maybe<BookingConnectionLanguage>>>;\n  userBookingStatus?: Maybe<Array<Maybe<BookingConnectionUserBookingStatus>>>;\n  email?: Maybe<Array<Maybe<BookingConnectionEmail>>>;\n  adults?: Maybe<Array<Maybe<BookingConnectionAdults>>>;\n  children?: Maybe<Array<Maybe<BookingConnectionChildren>>>;\n  totalPrice?: Maybe<Array<Maybe<BookingConnectionTotalPrice>>>;\n  published_at?: Maybe<Array<Maybe<BookingConnectionPublished_At>>>;\n};\n\nexport type BookingInput = {\n  trip?: Maybe<Scalars['ID']>;\n  approved?: Maybe<Scalars['Boolean']>;\n  basePrice: Scalars['Float'];\n  currency: Enum_Booking_Currency;\n  basePeopleCount: Scalars['Int'];\n  discount?: Maybe<Scalars['Float']>;\n  fullName: Scalars['String'];\n  phone: Scalars['String'];\n  message?: Maybe<Scalars['String']>;\n  arrivalDate: Scalars['Date'];\n  language?: Maybe<Scalars['String']>;\n  userBookingStatus?: Maybe<Enum_Booking_Userbookingstatus>;\n  email: Scalars['String'];\n  adults: Scalars['Int'];\n  children?: Maybe<Scalars['Int']>;\n  totalPrice?: Maybe<Scalars['Float']>;\n  published_at?: Maybe<Scalars['DateTime']>;\n  created_by?: Maybe<Scalars['ID']>;\n  updated_by?: Maybe<Scalars['ID']>;\n};\n\nexport type City = {\n  __typename?: 'City';\n  id: Scalars['ID'];\n  _id: Scalars['ID'];\n  createdAt: Scalars['DateTime'];\n  updatedAt: Scalars['DateTime'];\n  name: Scalars['String'];\n  description?: Maybe<Scalars['String']>;\n  image?: Maybe<UploadFile>;\n  locale?: Maybe<Scalars['String']>;\n  published_at?: Maybe<Scalars['DateTime']>;\n  locations?: Maybe<Array<Maybe<Location>>>;\n  localizations?: Maybe<Array<Maybe<City>>>;\n};\n\n\nexport type CityLocationsArgs = {\n  sort?: Maybe<Scalars['String']>;\n  limit?: Maybe<Scalars['Int']>;\n  start?: Maybe<Scalars['Int']>;\n  where?: Maybe<Scalars['JSON']>;\n};\n\n\nexport type CityLocalizationsArgs = {\n  sort?: Maybe<Scalars['String']>;\n  limit?: Maybe<Scalars['Int']>;\n  start?: Maybe<Scalars['Int']>;\n  where?: Maybe<Scalars['JSON']>;\n};\n\nexport type CityAggregator = {\n  __typename?: 'CityAggregator';\n  count?: Maybe<Scalars['Int']>;\n  totalCount?: Maybe<Scalars['Int']>;\n};\n\nexport type CityConnection = {\n  __typename?: 'CityConnection';\n  values?: Maybe<Array<Maybe<City>>>;\n  groupBy?: Maybe<CityGroupBy>;\n  aggregate?: Maybe<CityAggregator>;\n};\n\nexport type CityConnectionCreatedAt = {\n  __typename?: 'CityConnectionCreatedAt';\n  key?: Maybe<Scalars['DateTime']>;\n  connection?: Maybe<CityConnection>;\n};\n\nexport type CityConnectionDescription = {\n  __typename?: 'CityConnectionDescription';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<CityConnection>;\n};\n\nexport type CityConnectionId = {\n  __typename?: 'CityConnectionId';\n  key?: Maybe<Scalars['ID']>;\n  connection?: Maybe<CityConnection>;\n};\n\nexport type CityConnectionImage = {\n  __typename?: 'CityConnectionImage';\n  key?: Maybe<Scalars['ID']>;\n  connection?: Maybe<CityConnection>;\n};\n\nexport type CityConnectionLocale = {\n  __typename?: 'CityConnectionLocale';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<CityConnection>;\n};\n\nexport type CityConnectionName = {\n  __typename?: 'CityConnectionName';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<CityConnection>;\n};\n\nexport type CityConnectionPublished_At = {\n  __typename?: 'CityConnectionPublished_at';\n  key?: Maybe<Scalars['DateTime']>;\n  connection?: Maybe<CityConnection>;\n};\n\nexport type CityConnectionUpdatedAt = {\n  __typename?: 'CityConnectionUpdatedAt';\n  key?: Maybe<Scalars['DateTime']>;\n  connection?: Maybe<CityConnection>;\n};\n\nexport type CityConnection_Id = {\n  __typename?: 'CityConnection_id';\n  key?: Maybe<Scalars['ID']>;\n  connection?: Maybe<CityConnection>;\n};\n\nexport type CityGroupBy = {\n  __typename?: 'CityGroupBy';\n  id?: Maybe<Array<Maybe<CityConnectionId>>>;\n  _id?: Maybe<Array<Maybe<CityConnection_Id>>>;\n  createdAt?: Maybe<Array<Maybe<CityConnectionCreatedAt>>>;\n  updatedAt?: Maybe<Array<Maybe<CityConnectionUpdatedAt>>>;\n  name?: Maybe<Array<Maybe<CityConnectionName>>>;\n  description?: Maybe<Array<Maybe<CityConnectionDescription>>>;\n  image?: Maybe<Array<Maybe<CityConnectionImage>>>;\n  locale?: Maybe<Array<Maybe<CityConnectionLocale>>>;\n  published_at?: Maybe<Array<Maybe<CityConnectionPublished_At>>>;\n};\n\nexport type CityInput = {\n  name: Scalars['String'];\n  description?: Maybe<Scalars['String']>;\n  image?: Maybe<Scalars['ID']>;\n  locations?: Maybe<Array<Maybe<Scalars['ID']>>>;\n  localizations?: Maybe<Array<Maybe<Scalars['ID']>>>;\n  locale?: Maybe<Scalars['String']>;\n  published_at?: Maybe<Scalars['DateTime']>;\n  created_by?: Maybe<Scalars['ID']>;\n  updated_by?: Maybe<Scalars['ID']>;\n};\n\nexport type ComponentCoordinateCoordinate = {\n  __typename?: 'ComponentCoordinateCoordinate';\n  id: Scalars['ID'];\n  _id: Scalars['ID'];\n  latitude: Scalars['Float'];\n  longitude: Scalars['Float'];\n};\n\nexport type ComponentCoordinateCoordinateInput = {\n  latitude: Scalars['Float'];\n  longitude: Scalars['Float'];\n};\n\nexport type ComponentFeatureFeature = {\n  __typename?: 'ComponentFeatureFeature';\n  id: Scalars['ID'];\n  _id: Scalars['ID'];\n  feature?: Maybe<Feature>;\n  included?: Maybe<Scalars['Boolean']>;\n};\n\nexport type ComponentFeatureFeatureInput = {\n  feature?: Maybe<Scalars['ID']>;\n  included?: Maybe<Scalars['Boolean']>;\n};\n\nexport type ComponentPricePrice = {\n  __typename?: 'ComponentPricePrice';\n  id: Scalars['ID'];\n  _id: Scalars['ID'];\n  basePrice: Scalars['Float'];\n  currency: Enum_Componentpriceprice_Currency;\n  basePeopleCount: Scalars['Int'];\n  extraAdultFee?: Maybe<Scalars['Float']>;\n  discount?: Maybe<Scalars['Float']>;\n};\n\nexport type ComponentPricePriceInput = {\n  basePrice: Scalars['Float'];\n  currency?: Maybe<Enum_Componentpriceprice_Currency>;\n  basePeopleCount: Scalars['Int'];\n  extraAdultFee?: Maybe<Scalars['Float']>;\n  discount?: Maybe<Scalars['Float']>;\n};\n\nexport type ComponentTimelineTimeline = {\n  __typename?: 'ComponentTimelineTimeline';\n  id: Scalars['ID'];\n  _id: Scalars['ID'];\n  day: Scalars['Int'];\n  description?: Maybe<Scalars['String']>;\n  travelTo?: Maybe<City>;\n  transportationType?: Maybe<Enum_Componenttimelinetimeline_Transportationtype>;\n  restDay?: Maybe<Scalars['Boolean']>;\n  locations?: Maybe<Array<Maybe<Location>>>;\n};\n\n\nexport type ComponentTimelineTimelineLocationsArgs = {\n  sort?: Maybe<Scalars['String']>;\n  limit?: Maybe<Scalars['Int']>;\n  start?: Maybe<Scalars['Int']>;\n  where?: Maybe<Scalars['JSON']>;\n};\n\nexport type ComponentTimelineTimelineInput = {\n  day: Scalars['Int'];\n  description?: Maybe<Scalars['String']>;\n  locations?: Maybe<Array<Maybe<Scalars['ID']>>>;\n  travelTo?: Maybe<Scalars['ID']>;\n  transportationType?: Maybe<Enum_Componenttimelinetimeline_Transportationtype>;\n  restDay?: Maybe<Scalars['Boolean']>;\n};\n\n\n\nexport enum Enum_Booking_Currency {\n  Dollar = 'dollar',\n  Lira = 'lira'\n}\n\nexport enum Enum_Booking_Userbookingstatus {\n  Initial = 'initial',\n  Confirmed = 'confirmed',\n  Canceled = 'canceled'\n}\n\nexport enum Enum_Componentpriceprice_Currency {\n  Dollar = 'dollar',\n  Lira = 'lira'\n}\n\nexport enum Enum_Componenttimelinetimeline_Transportationtype {\n  Arrival = 'arrival',\n  Departure = 'departure',\n  BetweenCities = 'betweenCities',\n  WithinCity = 'withinCity'\n}\n\nexport enum Enum_Partner_Agreementstatus {\n  Agreed = 'Agreed',\n  Discussing = 'discussing',\n  Termination = 'termination'\n}\n\nexport enum Enum_Partner_Revenuesource {\n  PricePercentage = 'pricePercentage',\n  InflatedPrice = 'inflatedPrice'\n}\n\nexport enum Enum_Trips_Currency {\n  Dollar = 'dollar',\n  Lira = 'lira'\n}\n\nexport enum Enum_Trips_Traveltype {\n  Private = 'private',\n  Public = 'public',\n  Both = 'both'\n}\n\nexport enum Enum_Trips_Trip_Type {\n  Touristic = 'touristic',\n  Medical = 'medical'\n}\n\nexport type Feature = {\n  __typename?: 'Feature';\n  id: Scalars['ID'];\n  _id: Scalars['ID'];\n  createdAt: Scalars['DateTime'];\n  updatedAt: Scalars['DateTime'];\n  name: Scalars['String'];\n  info?: Maybe<Scalars['String']>;\n  locale?: Maybe<Scalars['String']>;\n  published_at?: Maybe<Scalars['DateTime']>;\n  localizations?: Maybe<Array<Maybe<Feature>>>;\n};\n\n\nexport type FeatureLocalizationsArgs = {\n  sort?: Maybe<Scalars['String']>;\n  limit?: Maybe<Scalars['Int']>;\n  start?: Maybe<Scalars['Int']>;\n  where?: Maybe<Scalars['JSON']>;\n};\n\nexport type FeatureAggregator = {\n  __typename?: 'FeatureAggregator';\n  count?: Maybe<Scalars['Int']>;\n  totalCount?: Maybe<Scalars['Int']>;\n};\n\nexport type FeatureConnection = {\n  __typename?: 'FeatureConnection';\n  values?: Maybe<Array<Maybe<Feature>>>;\n  groupBy?: Maybe<FeatureGroupBy>;\n  aggregate?: Maybe<FeatureAggregator>;\n};\n\nexport type FeatureConnectionCreatedAt = {\n  __typename?: 'FeatureConnectionCreatedAt';\n  key?: Maybe<Scalars['DateTime']>;\n  connection?: Maybe<FeatureConnection>;\n};\n\nexport type FeatureConnectionId = {\n  __typename?: 'FeatureConnectionId';\n  key?: Maybe<Scalars['ID']>;\n  connection?: Maybe<FeatureConnection>;\n};\n\nexport type FeatureConnectionInfo = {\n  __typename?: 'FeatureConnectionInfo';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<FeatureConnection>;\n};\n\nexport type FeatureConnectionLocale = {\n  __typename?: 'FeatureConnectionLocale';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<FeatureConnection>;\n};\n\nexport type FeatureConnectionName = {\n  __typename?: 'FeatureConnectionName';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<FeatureConnection>;\n};\n\nexport type FeatureConnectionPublished_At = {\n  __typename?: 'FeatureConnectionPublished_at';\n  key?: Maybe<Scalars['DateTime']>;\n  connection?: Maybe<FeatureConnection>;\n};\n\nexport type FeatureConnectionUpdatedAt = {\n  __typename?: 'FeatureConnectionUpdatedAt';\n  key?: Maybe<Scalars['DateTime']>;\n  connection?: Maybe<FeatureConnection>;\n};\n\nexport type FeatureConnection_Id = {\n  __typename?: 'FeatureConnection_id';\n  key?: Maybe<Scalars['ID']>;\n  connection?: Maybe<FeatureConnection>;\n};\n\nexport type FeatureGroupBy = {\n  __typename?: 'FeatureGroupBy';\n  id?: Maybe<Array<Maybe<FeatureConnectionId>>>;\n  _id?: Maybe<Array<Maybe<FeatureConnection_Id>>>;\n  createdAt?: Maybe<Array<Maybe<FeatureConnectionCreatedAt>>>;\n  updatedAt?: Maybe<Array<Maybe<FeatureConnectionUpdatedAt>>>;\n  name?: Maybe<Array<Maybe<FeatureConnectionName>>>;\n  info?: Maybe<Array<Maybe<FeatureConnectionInfo>>>;\n  locale?: Maybe<Array<Maybe<FeatureConnectionLocale>>>;\n  published_at?: Maybe<Array<Maybe<FeatureConnectionPublished_At>>>;\n};\n\nexport type FeatureInput = {\n  name: Scalars['String'];\n  info?: Maybe<Scalars['String']>;\n  localizations?: Maybe<Array<Maybe<Scalars['ID']>>>;\n  locale?: Maybe<Scalars['String']>;\n  published_at?: Maybe<Scalars['DateTime']>;\n  created_by?: Maybe<Scalars['ID']>;\n  updated_by?: Maybe<Scalars['ID']>;\n};\n\nexport type FileInfoInput = {\n  name?: Maybe<Scalars['String']>;\n  alternativeText?: Maybe<Scalars['String']>;\n  caption?: Maybe<Scalars['String']>;\n};\n\nexport type FileInput = {\n  name: Scalars['String'];\n  alternativeText?: Maybe<Scalars['String']>;\n  caption?: Maybe<Scalars['String']>;\n  width?: Maybe<Scalars['Int']>;\n  height?: Maybe<Scalars['Int']>;\n  formats?: Maybe<Scalars['JSON']>;\n  hash: Scalars['String'];\n  ext?: Maybe<Scalars['String']>;\n  mime: Scalars['String'];\n  size: Scalars['Float'];\n  url: Scalars['String'];\n  previewUrl?: Maybe<Scalars['String']>;\n  provider: Scalars['String'];\n  provider_metadata?: Maybe<Scalars['JSON']>;\n  related?: Maybe<Array<Maybe<Scalars['ID']>>>;\n  created_by?: Maybe<Scalars['ID']>;\n  updated_by?: Maybe<Scalars['ID']>;\n};\n\nexport type HomeBanner = {\n  __typename?: 'HomeBanner';\n  id: Scalars['ID'];\n  _id: Scalars['ID'];\n  createdAt: Scalars['DateTime'];\n  updatedAt: Scalars['DateTime'];\n  published_at?: Maybe<Scalars['DateTime']>;\n  images?: Maybe<Array<Maybe<UploadFile>>>;\n};\n\n\nexport type HomeBannerImagesArgs = {\n  sort?: Maybe<Scalars['String']>;\n  limit?: Maybe<Scalars['Int']>;\n  start?: Maybe<Scalars['Int']>;\n  where?: Maybe<Scalars['JSON']>;\n};\n\nexport type HomeBannerInput = {\n  images?: Maybe<Array<Maybe<Scalars['ID']>>>;\n  published_at?: Maybe<Scalars['DateTime']>;\n  created_by?: Maybe<Scalars['ID']>;\n  updated_by?: Maybe<Scalars['ID']>;\n};\n\nexport type HotelInput = {\n  name: Scalars['String'];\n  stars: Scalars['Int'];\n  url?: Maybe<Scalars['String']>;\n  trips?: Maybe<Array<Maybe<Scalars['ID']>>>;\n  published_at?: Maybe<Scalars['DateTime']>;\n  created_by?: Maybe<Scalars['ID']>;\n  updated_by?: Maybe<Scalars['ID']>;\n};\n\nexport type Hotels = {\n  __typename?: 'Hotels';\n  id: Scalars['ID'];\n  _id: Scalars['ID'];\n  createdAt: Scalars['DateTime'];\n  updatedAt: Scalars['DateTime'];\n  name: Scalars['String'];\n  stars: Scalars['Int'];\n  url?: Maybe<Scalars['String']>;\n  published_at?: Maybe<Scalars['DateTime']>;\n  trips?: Maybe<Array<Maybe<Trips>>>;\n};\n\n\nexport type HotelsTripsArgs = {\n  sort?: Maybe<Scalars['String']>;\n  limit?: Maybe<Scalars['Int']>;\n  start?: Maybe<Scalars['Int']>;\n  where?: Maybe<Scalars['JSON']>;\n};\n\nexport type HotelsAggregator = {\n  __typename?: 'HotelsAggregator';\n  count?: Maybe<Scalars['Int']>;\n  totalCount?: Maybe<Scalars['Int']>;\n  sum?: Maybe<HotelsAggregatorSum>;\n  avg?: Maybe<HotelsAggregatorAvg>;\n  min?: Maybe<HotelsAggregatorMin>;\n  max?: Maybe<HotelsAggregatorMax>;\n};\n\nexport type HotelsAggregatorAvg = {\n  __typename?: 'HotelsAggregatorAvg';\n  stars?: Maybe<Scalars['Float']>;\n};\n\nexport type HotelsAggregatorMax = {\n  __typename?: 'HotelsAggregatorMax';\n  stars?: Maybe<Scalars['Float']>;\n};\n\nexport type HotelsAggregatorMin = {\n  __typename?: 'HotelsAggregatorMin';\n  stars?: Maybe<Scalars['Float']>;\n};\n\nexport type HotelsAggregatorSum = {\n  __typename?: 'HotelsAggregatorSum';\n  stars?: Maybe<Scalars['Float']>;\n};\n\nexport type HotelsConnection = {\n  __typename?: 'HotelsConnection';\n  values?: Maybe<Array<Maybe<Hotels>>>;\n  groupBy?: Maybe<HotelsGroupBy>;\n  aggregate?: Maybe<HotelsAggregator>;\n};\n\nexport type HotelsConnectionCreatedAt = {\n  __typename?: 'HotelsConnectionCreatedAt';\n  key?: Maybe<Scalars['DateTime']>;\n  connection?: Maybe<HotelsConnection>;\n};\n\nexport type HotelsConnectionId = {\n  __typename?: 'HotelsConnectionId';\n  key?: Maybe<Scalars['ID']>;\n  connection?: Maybe<HotelsConnection>;\n};\n\nexport type HotelsConnectionName = {\n  __typename?: 'HotelsConnectionName';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<HotelsConnection>;\n};\n\nexport type HotelsConnectionPublished_At = {\n  __typename?: 'HotelsConnectionPublished_at';\n  key?: Maybe<Scalars['DateTime']>;\n  connection?: Maybe<HotelsConnection>;\n};\n\nexport type HotelsConnectionStars = {\n  __typename?: 'HotelsConnectionStars';\n  key?: Maybe<Scalars['Int']>;\n  connection?: Maybe<HotelsConnection>;\n};\n\nexport type HotelsConnectionUpdatedAt = {\n  __typename?: 'HotelsConnectionUpdatedAt';\n  key?: Maybe<Scalars['DateTime']>;\n  connection?: Maybe<HotelsConnection>;\n};\n\nexport type HotelsConnectionUrl = {\n  __typename?: 'HotelsConnectionUrl';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<HotelsConnection>;\n};\n\nexport type HotelsConnection_Id = {\n  __typename?: 'HotelsConnection_id';\n  key?: Maybe<Scalars['ID']>;\n  connection?: Maybe<HotelsConnection>;\n};\n\nexport type HotelsGroupBy = {\n  __typename?: 'HotelsGroupBy';\n  id?: Maybe<Array<Maybe<HotelsConnectionId>>>;\n  _id?: Maybe<Array<Maybe<HotelsConnection_Id>>>;\n  createdAt?: Maybe<Array<Maybe<HotelsConnectionCreatedAt>>>;\n  updatedAt?: Maybe<Array<Maybe<HotelsConnectionUpdatedAt>>>;\n  name?: Maybe<Array<Maybe<HotelsConnectionName>>>;\n  stars?: Maybe<Array<Maybe<HotelsConnectionStars>>>;\n  url?: Maybe<Array<Maybe<HotelsConnectionUrl>>>;\n  published_at?: Maybe<Array<Maybe<HotelsConnectionPublished_At>>>;\n};\n\nexport type I18NLocale = {\n  __typename?: 'I18NLocale';\n  id: Scalars['ID'];\n  _id: Scalars['ID'];\n  createdAt: Scalars['DateTime'];\n  updatedAt: Scalars['DateTime'];\n  name?: Maybe<Scalars['String']>;\n  code?: Maybe<Scalars['String']>;\n};\n\nexport type InputId = {\n  id: Scalars['ID'];\n};\n\n\nexport type LocaleInput = {\n  name?: Maybe<Scalars['String']>;\n  code?: Maybe<Scalars['String']>;\n  created_by?: Maybe<Scalars['ID']>;\n  updated_by?: Maybe<Scalars['ID']>;\n};\n\nexport type Location = {\n  __typename?: 'Location';\n  id: Scalars['ID'];\n  _id: Scalars['ID'];\n  createdAt: Scalars['DateTime'];\n  updatedAt: Scalars['DateTime'];\n  name: Scalars['String'];\n  description?: Maybe<Scalars['String']>;\n  city?: Maybe<City>;\n  coordinate?: Maybe<ComponentCoordinateCoordinate>;\n  locale?: Maybe<Scalars['String']>;\n  published_at?: Maybe<Scalars['DateTime']>;\n  images?: Maybe<Array<Maybe<UploadFile>>>;\n  localizations?: Maybe<Array<Maybe<Location>>>;\n};\n\n\nexport type LocationImagesArgs = {\n  sort?: Maybe<Scalars['String']>;\n  limit?: Maybe<Scalars['Int']>;\n  start?: Maybe<Scalars['Int']>;\n  where?: Maybe<Scalars['JSON']>;\n};\n\n\nexport type LocationLocalizationsArgs = {\n  sort?: Maybe<Scalars['String']>;\n  limit?: Maybe<Scalars['Int']>;\n  start?: Maybe<Scalars['Int']>;\n  where?: Maybe<Scalars['JSON']>;\n};\n\nexport type LocationAggregator = {\n  __typename?: 'LocationAggregator';\n  count?: Maybe<Scalars['Int']>;\n  totalCount?: Maybe<Scalars['Int']>;\n};\n\nexport type LocationConnection = {\n  __typename?: 'LocationConnection';\n  values?: Maybe<Array<Maybe<Location>>>;\n  groupBy?: Maybe<LocationGroupBy>;\n  aggregate?: Maybe<LocationAggregator>;\n};\n\nexport type LocationConnectionCity = {\n  __typename?: 'LocationConnectionCity';\n  key?: Maybe<Scalars['ID']>;\n  connection?: Maybe<LocationConnection>;\n};\n\nexport type LocationConnectionCoordinate = {\n  __typename?: 'LocationConnectionCoordinate';\n  key?: Maybe<Scalars['ID']>;\n  connection?: Maybe<LocationConnection>;\n};\n\nexport type LocationConnectionCreatedAt = {\n  __typename?: 'LocationConnectionCreatedAt';\n  key?: Maybe<Scalars['DateTime']>;\n  connection?: Maybe<LocationConnection>;\n};\n\nexport type LocationConnectionDescription = {\n  __typename?: 'LocationConnectionDescription';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<LocationConnection>;\n};\n\nexport type LocationConnectionId = {\n  __typename?: 'LocationConnectionId';\n  key?: Maybe<Scalars['ID']>;\n  connection?: Maybe<LocationConnection>;\n};\n\nexport type LocationConnectionLocale = {\n  __typename?: 'LocationConnectionLocale';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<LocationConnection>;\n};\n\nexport type LocationConnectionName = {\n  __typename?: 'LocationConnectionName';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<LocationConnection>;\n};\n\nexport type LocationConnectionPublished_At = {\n  __typename?: 'LocationConnectionPublished_at';\n  key?: Maybe<Scalars['DateTime']>;\n  connection?: Maybe<LocationConnection>;\n};\n\nexport type LocationConnectionUpdatedAt = {\n  __typename?: 'LocationConnectionUpdatedAt';\n  key?: Maybe<Scalars['DateTime']>;\n  connection?: Maybe<LocationConnection>;\n};\n\nexport type LocationConnection_Id = {\n  __typename?: 'LocationConnection_id';\n  key?: Maybe<Scalars['ID']>;\n  connection?: Maybe<LocationConnection>;\n};\n\nexport type LocationGroupBy = {\n  __typename?: 'LocationGroupBy';\n  id?: Maybe<Array<Maybe<LocationConnectionId>>>;\n  _id?: Maybe<Array<Maybe<LocationConnection_Id>>>;\n  createdAt?: Maybe<Array<Maybe<LocationConnectionCreatedAt>>>;\n  updatedAt?: Maybe<Array<Maybe<LocationConnectionUpdatedAt>>>;\n  name?: Maybe<Array<Maybe<LocationConnectionName>>>;\n  description?: Maybe<Array<Maybe<LocationConnectionDescription>>>;\n  city?: Maybe<Array<Maybe<LocationConnectionCity>>>;\n  coordinate?: Maybe<Array<Maybe<LocationConnectionCoordinate>>>;\n  locale?: Maybe<Array<Maybe<LocationConnectionLocale>>>;\n  published_at?: Maybe<Array<Maybe<LocationConnectionPublished_At>>>;\n};\n\nexport type LocationInput = {\n  name: Scalars['String'];\n  description?: Maybe<Scalars['String']>;\n  images?: Maybe<Array<Maybe<Scalars['ID']>>>;\n  city?: Maybe<Scalars['ID']>;\n  coordinate?: Maybe<ComponentCoordinateCoordinateInput>;\n  localizations?: Maybe<Array<Maybe<Scalars['ID']>>>;\n  locale?: Maybe<Scalars['String']>;\n  published_at?: Maybe<Scalars['DateTime']>;\n  created_by?: Maybe<Scalars['ID']>;\n  updated_by?: Maybe<Scalars['ID']>;\n};\n\n\nexport type Morph = UsersPermissionsMe | UsersPermissionsMeRole | UsersPermissionsLoginPayload | UserPermissionsPasswordPayload | Booking | BookingConnection | BookingAggregator | BookingAggregatorSum | BookingAggregatorAvg | BookingAggregatorMin | BookingAggregatorMax | BookingGroupBy | BookingConnectionId | BookingConnection_Id | BookingConnectionCreatedAt | BookingConnectionUpdatedAt | BookingConnectionTrip | BookingConnectionApproved | BookingConnectionBasePrice | BookingConnectionCurrency | BookingConnectionBasePeopleCount | BookingConnectionDiscount | BookingConnectionFullName | BookingConnectionPhone | BookingConnectionMessage | BookingConnectionArrivalDate | BookingConnectionLanguage | BookingConnectionUserBookingStatus | BookingConnectionEmail | BookingConnectionAdults | BookingConnectionChildren | BookingConnectionTotalPrice | BookingConnectionPublished_At | CreateBookingPayload | UpdateBookingPayload | DeleteBookingPayload | City | CityConnection | CityAggregator | CityGroupBy | CityConnectionId | CityConnection_Id | CityConnectionCreatedAt | CityConnectionUpdatedAt | CityConnectionName | CityConnectionDescription | CityConnectionImage | CityConnectionLocale | CityConnectionPublished_At | CreateCityPayload | UpdateCityPayload | DeleteCityPayload | Feature | FeatureConnection | FeatureAggregator | FeatureGroupBy | FeatureConnectionId | FeatureConnection_Id | FeatureConnectionCreatedAt | FeatureConnectionUpdatedAt | FeatureConnectionName | FeatureConnectionInfo | FeatureConnectionLocale | FeatureConnectionPublished_At | CreateFeaturePayload | UpdateFeaturePayload | DeleteFeaturePayload | HomeBanner | UpdateHomeBannerPayload | DeleteHomeBannerPayload | Hotels | HotelsConnection | HotelsAggregator | HotelsAggregatorSum | HotelsAggregatorAvg | HotelsAggregatorMin | HotelsAggregatorMax | HotelsGroupBy | HotelsConnectionId | HotelsConnection_Id | HotelsConnectionCreatedAt | HotelsConnectionUpdatedAt | HotelsConnectionName | HotelsConnectionStars | HotelsConnectionUrl | HotelsConnectionPublished_At | CreateHotelPayload | UpdateHotelPayload | DeleteHotelPayload | Location | LocationConnection | LocationAggregator | LocationGroupBy | LocationConnectionId | LocationConnection_Id | LocationConnectionCreatedAt | LocationConnectionUpdatedAt | LocationConnectionName | LocationConnectionDescription | LocationConnectionCity | LocationConnectionCoordinate | LocationConnectionLocale | LocationConnectionPublished_At | CreateLocationPayload | UpdateLocationPayload | DeleteLocationPayload | Partner | PartnerConnection | PartnerAggregator | PartnerAggregatorSum | PartnerAggregatorAvg | PartnerAggregatorMin | PartnerAggregatorMax | PartnerGroupBy | PartnerConnectionId | PartnerConnection_Id | PartnerConnectionCreatedAt | PartnerConnectionUpdatedAt | PartnerConnectionName | PartnerConnectionPhone | PartnerConnectionAddress | PartnerConnectionEmail | PartnerConnectionAgreement | PartnerConnectionCommission | PartnerConnectionRevenueSource | PartnerConnectionAgreementStatus | PartnerConnectionNotes | PartnerConnectionPhone2 | PartnerConnectionPublished_At | CreatePartnerPayload | UpdatePartnerPayload | DeletePartnerPayload | Review | ReviewConnection | ReviewAggregator | ReviewAggregatorSum | ReviewAggregatorAvg | ReviewAggregatorMin | ReviewAggregatorMax | ReviewGroupBy | ReviewConnectionId | ReviewConnection_Id | ReviewConnectionCreatedAt | ReviewConnectionUpdatedAt | ReviewConnectionText | ReviewConnectionRating | ReviewConnectionAuthor | ReviewConnectionActive | ReviewConnectionTrip | ReviewConnectionPublished_At | CreateReviewPayload | UpdateReviewPayload | DeleteReviewPayload | Subscribers | SubscribersConnection | SubscribersAggregator | SubscribersGroupBy | SubscribersConnectionId | SubscribersConnection_Id | SubscribersConnectionCreatedAt | SubscribersConnectionUpdatedAt | SubscribersConnectionEmail | SubscribersConnectionPublished_At | CreateSubscriberPayload | UpdateSubscriberPayload | DeleteSubscriberPayload | Trips | TripsConnection | TripsAggregator | TripsAggregatorSum | TripsAggregatorAvg | TripsAggregatorMin | TripsAggregatorMax | TripsGroupBy | TripsConnectionId | TripsConnection_Id | TripsConnectionCreatedAt | TripsConnectionUpdatedAt | TripsConnectionName | TripsConnectionPreviewImage | TripsConnectionActive | TripsConnectionTrip_Type | TripsConnectionDescription | TripsConnectionDuration | TripsConnectionPartner | TripsConnectionCurrency | TripsConnectionCity | TripsConnectionBasePrice | TripsConnectionBasePeopleCount | TripsConnectionDiscount | TripsConnectionTravelType | TripsConnectionHotel | TripsConnectionLocale | TripsConnectionPublished_At | CreateTripPayload | UpdateTripPayload | DeleteTripPayload | I18NLocale | UploadFile | UploadFileConnection | UploadFileAggregator | UploadFileAggregatorSum | UploadFileAggregatorAvg | UploadFileAggregatorMin | UploadFileAggregatorMax | UploadFileGroupBy | UploadFileConnectionId | UploadFileConnection_Id | UploadFileConnectionCreatedAt | UploadFileConnectionUpdatedAt | UploadFileConnectionName | UploadFileConnectionAlternativeText | UploadFileConnectionCaption | UploadFileConnectionWidth | UploadFileConnectionHeight | UploadFileConnectionFormats | UploadFileConnectionHash | UploadFileConnectionExt | UploadFileConnectionMime | UploadFileConnectionSize | UploadFileConnectionUrl | UploadFileConnectionPreviewUrl | UploadFileConnectionProvider | UploadFileConnectionProvider_Metadata | DeleteFilePayload | UsersPermissionsPermission | UsersPermissionsRole | UsersPermissionsRoleConnection | UsersPermissionsRoleAggregator | UsersPermissionsRoleGroupBy | UsersPermissionsRoleConnectionId | UsersPermissionsRoleConnection_Id | UsersPermissionsRoleConnectionName | UsersPermissionsRoleConnectionDescription | UsersPermissionsRoleConnectionType | CreateRolePayload | UpdateRolePayload | DeleteRolePayload | UsersPermissionsUser | UsersPermissionsUserConnection | UsersPermissionsUserAggregator | UsersPermissionsUserGroupBy | UsersPermissionsUserConnectionId | UsersPermissionsUserConnection_Id | UsersPermissionsUserConnectionCreatedAt | UsersPermissionsUserConnectionUpdatedAt | UsersPermissionsUserConnectionUsername | UsersPermissionsUserConnectionEmail | UsersPermissionsUserConnectionProvider | UsersPermissionsUserConnectionConfirmed | UsersPermissionsUserConnectionBlocked | UsersPermissionsUserConnectionRole | CreateUserPayload | UpdateUserPayload | DeleteUserPayload | ComponentCoordinateCoordinate | ComponentFeatureFeature | ComponentPricePrice | ComponentTimelineTimeline;\n\nexport type Mutation = {\n  __typename?: 'Mutation';\n  createBooking?: Maybe<CreateBookingPayload>;\n  updateBooking?: Maybe<UpdateBookingPayload>;\n  deleteBooking?: Maybe<DeleteBookingPayload>;\n  createCity?: Maybe<CreateCityPayload>;\n  updateCity?: Maybe<UpdateCityPayload>;\n  deleteCity?: Maybe<DeleteCityPayload>;\n  createFeature?: Maybe<CreateFeaturePayload>;\n  updateFeature?: Maybe<UpdateFeaturePayload>;\n  deleteFeature?: Maybe<DeleteFeaturePayload>;\n  updateHomeBanner?: Maybe<UpdateHomeBannerPayload>;\n  deleteHomeBanner?: Maybe<DeleteHomeBannerPayload>;\n  createHotel?: Maybe<CreateHotelPayload>;\n  updateHotel?: Maybe<UpdateHotelPayload>;\n  deleteHotel?: Maybe<DeleteHotelPayload>;\n  createLocation?: Maybe<CreateLocationPayload>;\n  updateLocation?: Maybe<UpdateLocationPayload>;\n  deleteLocation?: Maybe<DeleteLocationPayload>;\n  createPartner?: Maybe<CreatePartnerPayload>;\n  updatePartner?: Maybe<UpdatePartnerPayload>;\n  deletePartner?: Maybe<DeletePartnerPayload>;\n  createReview?: Maybe<CreateReviewPayload>;\n  updateReview?: Maybe<UpdateReviewPayload>;\n  deleteReview?: Maybe<DeleteReviewPayload>;\n  createSubscriber?: Maybe<CreateSubscriberPayload>;\n  updateSubscriber?: Maybe<UpdateSubscriberPayload>;\n  deleteSubscriber?: Maybe<DeleteSubscriberPayload>;\n  createTrip?: Maybe<CreateTripPayload>;\n  updateTrip?: Maybe<UpdateTripPayload>;\n  deleteTrip?: Maybe<DeleteTripPayload>;\n  /** Delete one file */\n  deleteFile?: Maybe<DeleteFilePayload>;\n  /** Create a new role */\n  createRole?: Maybe<CreateRolePayload>;\n  /** Update an existing role */\n  updateRole?: Maybe<UpdateRolePayload>;\n  /** Delete an existing role */\n  deleteRole?: Maybe<DeleteRolePayload>;\n  /** Create a new user */\n  createUser?: Maybe<CreateUserPayload>;\n  /** Update an existing user */\n  updateUser?: Maybe<UpdateUserPayload>;\n  /** Delete an existing user */\n  deleteUser?: Maybe<DeleteUserPayload>;\n  createCityLocalization: City;\n  createFeatureLocalization: Feature;\n  createLocationLocalization: Location;\n  createTripLocalization: Trips;\n  upload: UploadFile;\n  multipleUpload: Array<Maybe<UploadFile>>;\n  updateFileInfo: UploadFile;\n  login: UsersPermissionsLoginPayload;\n  register: UsersPermissionsLoginPayload;\n  forgotPassword?: Maybe<UserPermissionsPasswordPayload>;\n  resetPassword?: Maybe<UsersPermissionsLoginPayload>;\n  emailConfirmation?: Maybe<UsersPermissionsLoginPayload>;\n};\n\n\nexport type MutationCreateBookingArgs = {\n  input?: Maybe<CreateBookingInput>;\n};\n\n\nexport type MutationUpdateBookingArgs = {\n  input?: Maybe<UpdateBookingInput>;\n};\n\n\nexport type MutationDeleteBookingArgs = {\n  input?: Maybe<DeleteBookingInput>;\n};\n\n\nexport type MutationCreateCityArgs = {\n  input?: Maybe<CreateCityInput>;\n};\n\n\nexport type MutationUpdateCityArgs = {\n  input?: Maybe<UpdateCityInput>;\n};\n\n\nexport type MutationDeleteCityArgs = {\n  input?: Maybe<DeleteCityInput>;\n};\n\n\nexport type MutationCreateFeatureArgs = {\n  input?: Maybe<CreateFeatureInput>;\n};\n\n\nexport type MutationUpdateFeatureArgs = {\n  input?: Maybe<UpdateFeatureInput>;\n};\n\n\nexport type MutationDeleteFeatureArgs = {\n  input?: Maybe<DeleteFeatureInput>;\n};\n\n\nexport type MutationUpdateHomeBannerArgs = {\n  input?: Maybe<UpdateHomeBannerInput>;\n};\n\n\nexport type MutationCreateHotelArgs = {\n  input?: Maybe<CreateHotelInput>;\n};\n\n\nexport type MutationUpdateHotelArgs = {\n  input?: Maybe<UpdateHotelInput>;\n};\n\n\nexport type MutationDeleteHotelArgs = {\n  input?: Maybe<DeleteHotelInput>;\n};\n\n\nexport type MutationCreateLocationArgs = {\n  input?: Maybe<CreateLocationInput>;\n};\n\n\nexport type MutationUpdateLocationArgs = {\n  input?: Maybe<UpdateLocationInput>;\n};\n\n\nexport type MutationDeleteLocationArgs = {\n  input?: Maybe<DeleteLocationInput>;\n};\n\n\nexport type MutationCreatePartnerArgs = {\n  input?: Maybe<CreatePartnerInput>;\n};\n\n\nexport type MutationUpdatePartnerArgs = {\n  input?: Maybe<UpdatePartnerInput>;\n};\n\n\nexport type MutationDeletePartnerArgs = {\n  input?: Maybe<DeletePartnerInput>;\n};\n\n\nexport type MutationCreateReviewArgs = {\n  input?: Maybe<CreateReviewInput>;\n};\n\n\nexport type MutationUpdateReviewArgs = {\n  input?: Maybe<UpdateReviewInput>;\n};\n\n\nexport type MutationDeleteReviewArgs = {\n  input?: Maybe<DeleteReviewInput>;\n};\n\n\nexport type MutationCreateSubscriberArgs = {\n  input?: Maybe<CreateSubscriberInput>;\n};\n\n\nexport type MutationUpdateSubscriberArgs = {\n  input?: Maybe<UpdateSubscriberInput>;\n};\n\n\nexport type MutationDeleteSubscriberArgs = {\n  input?: Maybe<DeleteSubscriberInput>;\n};\n\n\nexport type MutationCreateTripArgs = {\n  input?: Maybe<CreateTripInput>;\n};\n\n\nexport type MutationUpdateTripArgs = {\n  input?: Maybe<UpdateTripInput>;\n};\n\n\nexport type MutationDeleteTripArgs = {\n  input?: Maybe<DeleteTripInput>;\n};\n\n\nexport type MutationDeleteFileArgs = {\n  input?: Maybe<DeleteFileInput>;\n};\n\n\nexport type MutationCreateRoleArgs = {\n  input?: Maybe<CreateRoleInput>;\n};\n\n\nexport type MutationUpdateRoleArgs = {\n  input?: Maybe<UpdateRoleInput>;\n};\n\n\nexport type MutationDeleteRoleArgs = {\n  input?: Maybe<DeleteRoleInput>;\n};\n\n\nexport type MutationCreateUserArgs = {\n  input?: Maybe<CreateUserInput>;\n};\n\n\nexport type MutationUpdateUserArgs = {\n  input?: Maybe<UpdateUserInput>;\n};\n\n\nexport type MutationDeleteUserArgs = {\n  input?: Maybe<DeleteUserInput>;\n};\n\n\nexport type MutationCreateCityLocalizationArgs = {\n  input: UpdateCityInput;\n};\n\n\nexport type MutationCreateFeatureLocalizationArgs = {\n  input: UpdateFeatureInput;\n};\n\n\nexport type MutationCreateLocationLocalizationArgs = {\n  input: UpdateLocationInput;\n};\n\n\nexport type MutationCreateTripLocalizationArgs = {\n  input: UpdateTripInput;\n};\n\n\nexport type MutationUploadArgs = {\n  refId?: Maybe<Scalars['ID']>;\n  ref?: Maybe<Scalars['String']>;\n  field?: Maybe<Scalars['String']>;\n  source?: Maybe<Scalars['String']>;\n  info?: Maybe<FileInfoInput>;\n  file: Scalars['Upload'];\n};\n\n\nexport type MutationMultipleUploadArgs = {\n  refId?: Maybe<Scalars['ID']>;\n  ref?: Maybe<Scalars['String']>;\n  field?: Maybe<Scalars['String']>;\n  source?: Maybe<Scalars['String']>;\n  files: Array<Maybe<Scalars['Upload']>>;\n};\n\n\nexport type MutationUpdateFileInfoArgs = {\n  id: Scalars['ID'];\n  info: FileInfoInput;\n};\n\n\nexport type MutationLoginArgs = {\n  input: UsersPermissionsLoginInput;\n};\n\n\nexport type MutationRegisterArgs = {\n  input: UsersPermissionsRegisterInput;\n};\n\n\nexport type MutationForgotPasswordArgs = {\n  email: Scalars['String'];\n};\n\n\nexport type MutationResetPasswordArgs = {\n  password: Scalars['String'];\n  passwordConfirmation: Scalars['String'];\n  code: Scalars['String'];\n};\n\n\nexport type MutationEmailConfirmationArgs = {\n  confirmation: Scalars['String'];\n};\n\nexport type Partner = {\n  __typename?: 'Partner';\n  id: Scalars['ID'];\n  _id: Scalars['ID'];\n  createdAt: Scalars['DateTime'];\n  updatedAt: Scalars['DateTime'];\n  name: Scalars['String'];\n  phone: Scalars['String'];\n  address?: Maybe<Scalars['String']>;\n  email?: Maybe<Scalars['String']>;\n  agreement?: Maybe<Scalars['String']>;\n  commission: Scalars['Float'];\n  revenueSource: Enum_Partner_Revenuesource;\n  agreementStatus: Enum_Partner_Agreementstatus;\n  notes?: Maybe<Scalars['String']>;\n  phone2?: Maybe<Scalars['String']>;\n  published_at?: Maybe<Scalars['DateTime']>;\n  trips?: Maybe<Array<Maybe<Trips>>>;\n};\n\n\nexport type PartnerTripsArgs = {\n  sort?: Maybe<Scalars['String']>;\n  limit?: Maybe<Scalars['Int']>;\n  start?: Maybe<Scalars['Int']>;\n  where?: Maybe<Scalars['JSON']>;\n};\n\nexport type PartnerAggregator = {\n  __typename?: 'PartnerAggregator';\n  count?: Maybe<Scalars['Int']>;\n  totalCount?: Maybe<Scalars['Int']>;\n  sum?: Maybe<PartnerAggregatorSum>;\n  avg?: Maybe<PartnerAggregatorAvg>;\n  min?: Maybe<PartnerAggregatorMin>;\n  max?: Maybe<PartnerAggregatorMax>;\n};\n\nexport type PartnerAggregatorAvg = {\n  __typename?: 'PartnerAggregatorAvg';\n  commission?: Maybe<Scalars['Float']>;\n};\n\nexport type PartnerAggregatorMax = {\n  __typename?: 'PartnerAggregatorMax';\n  commission?: Maybe<Scalars['Float']>;\n};\n\nexport type PartnerAggregatorMin = {\n  __typename?: 'PartnerAggregatorMin';\n  commission?: Maybe<Scalars['Float']>;\n};\n\nexport type PartnerAggregatorSum = {\n  __typename?: 'PartnerAggregatorSum';\n  commission?: Maybe<Scalars['Float']>;\n};\n\nexport type PartnerConnection = {\n  __typename?: 'PartnerConnection';\n  values?: Maybe<Array<Maybe<Partner>>>;\n  groupBy?: Maybe<PartnerGroupBy>;\n  aggregate?: Maybe<PartnerAggregator>;\n};\n\nexport type PartnerConnectionAddress = {\n  __typename?: 'PartnerConnectionAddress';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<PartnerConnection>;\n};\n\nexport type PartnerConnectionAgreement = {\n  __typename?: 'PartnerConnectionAgreement';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<PartnerConnection>;\n};\n\nexport type PartnerConnectionAgreementStatus = {\n  __typename?: 'PartnerConnectionAgreementStatus';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<PartnerConnection>;\n};\n\nexport type PartnerConnectionCommission = {\n  __typename?: 'PartnerConnectionCommission';\n  key?: Maybe<Scalars['Float']>;\n  connection?: Maybe<PartnerConnection>;\n};\n\nexport type PartnerConnectionCreatedAt = {\n  __typename?: 'PartnerConnectionCreatedAt';\n  key?: Maybe<Scalars['DateTime']>;\n  connection?: Maybe<PartnerConnection>;\n};\n\nexport type PartnerConnectionEmail = {\n  __typename?: 'PartnerConnectionEmail';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<PartnerConnection>;\n};\n\nexport type PartnerConnectionId = {\n  __typename?: 'PartnerConnectionId';\n  key?: Maybe<Scalars['ID']>;\n  connection?: Maybe<PartnerConnection>;\n};\n\nexport type PartnerConnectionName = {\n  __typename?: 'PartnerConnectionName';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<PartnerConnection>;\n};\n\nexport type PartnerConnectionNotes = {\n  __typename?: 'PartnerConnectionNotes';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<PartnerConnection>;\n};\n\nexport type PartnerConnectionPhone = {\n  __typename?: 'PartnerConnectionPhone';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<PartnerConnection>;\n};\n\nexport type PartnerConnectionPhone2 = {\n  __typename?: 'PartnerConnectionPhone2';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<PartnerConnection>;\n};\n\nexport type PartnerConnectionPublished_At = {\n  __typename?: 'PartnerConnectionPublished_at';\n  key?: Maybe<Scalars['DateTime']>;\n  connection?: Maybe<PartnerConnection>;\n};\n\nexport type PartnerConnectionRevenueSource = {\n  __typename?: 'PartnerConnectionRevenueSource';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<PartnerConnection>;\n};\n\nexport type PartnerConnectionUpdatedAt = {\n  __typename?: 'PartnerConnectionUpdatedAt';\n  key?: Maybe<Scalars['DateTime']>;\n  connection?: Maybe<PartnerConnection>;\n};\n\nexport type PartnerConnection_Id = {\n  __typename?: 'PartnerConnection_id';\n  key?: Maybe<Scalars['ID']>;\n  connection?: Maybe<PartnerConnection>;\n};\n\nexport type PartnerGroupBy = {\n  __typename?: 'PartnerGroupBy';\n  id?: Maybe<Array<Maybe<PartnerConnectionId>>>;\n  _id?: Maybe<Array<Maybe<PartnerConnection_Id>>>;\n  createdAt?: Maybe<Array<Maybe<PartnerConnectionCreatedAt>>>;\n  updatedAt?: Maybe<Array<Maybe<PartnerConnectionUpdatedAt>>>;\n  name?: Maybe<Array<Maybe<PartnerConnectionName>>>;\n  phone?: Maybe<Array<Maybe<PartnerConnectionPhone>>>;\n  address?: Maybe<Array<Maybe<PartnerConnectionAddress>>>;\n  email?: Maybe<Array<Maybe<PartnerConnectionEmail>>>;\n  agreement?: Maybe<Array<Maybe<PartnerConnectionAgreement>>>;\n  commission?: Maybe<Array<Maybe<PartnerConnectionCommission>>>;\n  revenueSource?: Maybe<Array<Maybe<PartnerConnectionRevenueSource>>>;\n  agreementStatus?: Maybe<Array<Maybe<PartnerConnectionAgreementStatus>>>;\n  notes?: Maybe<Array<Maybe<PartnerConnectionNotes>>>;\n  phone2?: Maybe<Array<Maybe<PartnerConnectionPhone2>>>;\n  published_at?: Maybe<Array<Maybe<PartnerConnectionPublished_At>>>;\n};\n\nexport type PartnerInput = {\n  name: Scalars['String'];\n  phone: Scalars['String'];\n  address?: Maybe<Scalars['String']>;\n  email?: Maybe<Scalars['String']>;\n  trips?: Maybe<Array<Maybe<Scalars['ID']>>>;\n  agreement?: Maybe<Scalars['String']>;\n  commission: Scalars['Float'];\n  revenueSource: Enum_Partner_Revenuesource;\n  agreementStatus: Enum_Partner_Agreementstatus;\n  notes?: Maybe<Scalars['String']>;\n  phone2?: Maybe<Scalars['String']>;\n  published_at?: Maybe<Scalars['DateTime']>;\n  created_by?: Maybe<Scalars['ID']>;\n  updated_by?: Maybe<Scalars['ID']>;\n};\n\nexport enum PublicationState {\n  Live = 'LIVE',\n  Preview = 'PREVIEW'\n}\n\nexport type Query = {\n  __typename?: 'Query';\n  booking?: Maybe<Booking>;\n  bookings?: Maybe<Array<Maybe<Booking>>>;\n  bookingsConnection?: Maybe<BookingConnection>;\n  city?: Maybe<City>;\n  cities?: Maybe<Array<Maybe<City>>>;\n  citiesConnection?: Maybe<CityConnection>;\n  feature?: Maybe<Feature>;\n  features?: Maybe<Array<Maybe<Feature>>>;\n  featuresConnection?: Maybe<FeatureConnection>;\n  homeBanner?: Maybe<HomeBanner>;\n  hotel?: Maybe<Hotels>;\n  hotels?: Maybe<Array<Maybe<Hotels>>>;\n  hotelsConnection?: Maybe<HotelsConnection>;\n  location?: Maybe<Location>;\n  locations?: Maybe<Array<Maybe<Location>>>;\n  locationsConnection?: Maybe<LocationConnection>;\n  partner?: Maybe<Partner>;\n  partners?: Maybe<Array<Maybe<Partner>>>;\n  partnersConnection?: Maybe<PartnerConnection>;\n  review?: Maybe<Review>;\n  reviews?: Maybe<Array<Maybe<Review>>>;\n  reviewsConnection?: Maybe<ReviewConnection>;\n  subscriber?: Maybe<Subscribers>;\n  subscribers?: Maybe<Array<Maybe<Subscribers>>>;\n  subscribersConnection?: Maybe<SubscribersConnection>;\n  trip?: Maybe<Trips>;\n  trips?: Maybe<Array<Maybe<Trips>>>;\n  tripsConnection?: Maybe<TripsConnection>;\n  files?: Maybe<Array<Maybe<UploadFile>>>;\n  filesConnection?: Maybe<UploadFileConnection>;\n  role?: Maybe<UsersPermissionsRole>;\n  /** Retrieve all the existing roles. You can't apply filters on this query. */\n  roles?: Maybe<Array<Maybe<UsersPermissionsRole>>>;\n  rolesConnection?: Maybe<UsersPermissionsRoleConnection>;\n  user?: Maybe<UsersPermissionsUser>;\n  users?: Maybe<Array<Maybe<UsersPermissionsUser>>>;\n  usersConnection?: Maybe<UsersPermissionsUserConnection>;\n  me?: Maybe<UsersPermissionsMe>;\n};\n\n\nexport type QueryBookingArgs = {\n  id: Scalars['ID'];\n  publicationState?: Maybe<PublicationState>;\n};\n\n\nexport type QueryBookingsArgs = {\n  sort?: Maybe<Scalars['String']>;\n  limit?: Maybe<Scalars['Int']>;\n  start?: Maybe<Scalars['Int']>;\n  where?: Maybe<Scalars['JSON']>;\n  publicationState?: Maybe<PublicationState>;\n};\n\n\nexport type QueryBookingsConnectionArgs = {\n  sort?: Maybe<Scalars['String']>;\n  limit?: Maybe<Scalars['Int']>;\n  start?: Maybe<Scalars['Int']>;\n  where?: Maybe<Scalars['JSON']>;\n};\n\n\nexport type QueryCityArgs = {\n  id: Scalars['ID'];\n  publicationState?: Maybe<PublicationState>;\n};\n\n\nexport type QueryCitiesArgs = {\n  sort?: Maybe<Scalars['String']>;\n  limit?: Maybe<Scalars['Int']>;\n  start?: Maybe<Scalars['Int']>;\n  where?: Maybe<Scalars['JSON']>;\n  publicationState?: Maybe<PublicationState>;\n  locale?: Maybe<Scalars['String']>;\n};\n\n\nexport type QueryCitiesConnectionArgs = {\n  sort?: Maybe<Scalars['String']>;\n  limit?: Maybe<Scalars['Int']>;\n  start?: Maybe<Scalars['Int']>;\n  where?: Maybe<Scalars['JSON']>;\n  locale?: Maybe<Scalars['String']>;\n};\n\n\nexport type QueryFeatureArgs = {\n  id: Scalars['ID'];\n  publicationState?: Maybe<PublicationState>;\n};\n\n\nexport type QueryFeaturesArgs = {\n  sort?: Maybe<Scalars['String']>;\n  limit?: Maybe<Scalars['Int']>;\n  start?: Maybe<Scalars['Int']>;\n  where?: Maybe<Scalars['JSON']>;\n  publicationState?: Maybe<PublicationState>;\n  locale?: Maybe<Scalars['String']>;\n};\n\n\nexport type QueryFeaturesConnectionArgs = {\n  sort?: Maybe<Scalars['String']>;\n  limit?: Maybe<Scalars['Int']>;\n  start?: Maybe<Scalars['Int']>;\n  where?: Maybe<Scalars['JSON']>;\n  locale?: Maybe<Scalars['String']>;\n};\n\n\nexport type QueryHomeBannerArgs = {\n  publicationState?: Maybe<PublicationState>;\n};\n\n\nexport type QueryHotelArgs = {\n  id: Scalars['ID'];\n  publicationState?: Maybe<PublicationState>;\n};\n\n\nexport type QueryHotelsArgs = {\n  sort?: Maybe<Scalars['String']>;\n  limit?: Maybe<Scalars['Int']>;\n  start?: Maybe<Scalars['Int']>;\n  where?: Maybe<Scalars['JSON']>;\n  publicationState?: Maybe<PublicationState>;\n};\n\n\nexport type QueryHotelsConnectionArgs = {\n  sort?: Maybe<Scalars['String']>;\n  limit?: Maybe<Scalars['Int']>;\n  start?: Maybe<Scalars['Int']>;\n  where?: Maybe<Scalars['JSON']>;\n};\n\n\nexport type QueryLocationArgs = {\n  id: Scalars['ID'];\n  publicationState?: Maybe<PublicationState>;\n};\n\n\nexport type QueryLocationsArgs = {\n  sort?: Maybe<Scalars['String']>;\n  limit?: Maybe<Scalars['Int']>;\n  start?: Maybe<Scalars['Int']>;\n  where?: Maybe<Scalars['JSON']>;\n  publicationState?: Maybe<PublicationState>;\n  locale?: Maybe<Scalars['String']>;\n};\n\n\nexport type QueryLocationsConnectionArgs = {\n  sort?: Maybe<Scalars['String']>;\n  limit?: Maybe<Scalars['Int']>;\n  start?: Maybe<Scalars['Int']>;\n  where?: Maybe<Scalars['JSON']>;\n  locale?: Maybe<Scalars['String']>;\n};\n\n\nexport type QueryPartnerArgs = {\n  id: Scalars['ID'];\n  publicationState?: Maybe<PublicationState>;\n};\n\n\nexport type QueryPartnersArgs = {\n  sort?: Maybe<Scalars['String']>;\n  limit?: Maybe<Scalars['Int']>;\n  start?: Maybe<Scalars['Int']>;\n  where?: Maybe<Scalars['JSON']>;\n  publicationState?: Maybe<PublicationState>;\n};\n\n\nexport type QueryPartnersConnectionArgs = {\n  sort?: Maybe<Scalars['String']>;\n  limit?: Maybe<Scalars['Int']>;\n  start?: Maybe<Scalars['Int']>;\n  where?: Maybe<Scalars['JSON']>;\n};\n\n\nexport type QueryReviewArgs = {\n  id: Scalars['ID'];\n  publicationState?: Maybe<PublicationState>;\n};\n\n\nexport type QueryReviewsArgs = {\n  sort?: Maybe<Scalars['String']>;\n  limit?: Maybe<Scalars['Int']>;\n  start?: Maybe<Scalars['Int']>;\n  where?: Maybe<Scalars['JSON']>;\n  publicationState?: Maybe<PublicationState>;\n};\n\n\nexport type QueryReviewsConnectionArgs = {\n  sort?: Maybe<Scalars['String']>;\n  limit?: Maybe<Scalars['Int']>;\n  start?: Maybe<Scalars['Int']>;\n  where?: Maybe<Scalars['JSON']>;\n};\n\n\nexport type QuerySubscriberArgs = {\n  id: Scalars['ID'];\n  publicationState?: Maybe<PublicationState>;\n};\n\n\nexport type QuerySubscribersArgs = {\n  sort?: Maybe<Scalars['String']>;\n  limit?: Maybe<Scalars['Int']>;\n  start?: Maybe<Scalars['Int']>;\n  where?: Maybe<Scalars['JSON']>;\n  publicationState?: Maybe<PublicationState>;\n};\n\n\nexport type QuerySubscribersConnectionArgs = {\n  sort?: Maybe<Scalars['String']>;\n  limit?: Maybe<Scalars['Int']>;\n  start?: Maybe<Scalars['Int']>;\n  where?: Maybe<Scalars['JSON']>;\n};\n\n\nexport type QueryTripArgs = {\n  id: Scalars['ID'];\n  publicationState?: Maybe<PublicationState>;\n};\n\n\nexport type QueryTripsArgs = {\n  sort?: Maybe<Scalars['String']>;\n  limit?: Maybe<Scalars['Int']>;\n  start?: Maybe<Scalars['Int']>;\n  where?: Maybe<Scalars['JSON']>;\n  publicationState?: Maybe<PublicationState>;\n  locale?: Maybe<Scalars['String']>;\n};\n\n\nexport type QueryTripsConnectionArgs = {\n  sort?: Maybe<Scalars['String']>;\n  limit?: Maybe<Scalars['Int']>;\n  start?: Maybe<Scalars['Int']>;\n  where?: Maybe<Scalars['JSON']>;\n  locale?: Maybe<Scalars['String']>;\n};\n\n\nexport type QueryFilesArgs = {\n  sort?: Maybe<Scalars['String']>;\n  limit?: Maybe<Scalars['Int']>;\n  start?: Maybe<Scalars['Int']>;\n  where?: Maybe<Scalars['JSON']>;\n  publicationState?: Maybe<PublicationState>;\n};\n\n\nexport type QueryFilesConnectionArgs = {\n  sort?: Maybe<Scalars['String']>;\n  limit?: Maybe<Scalars['Int']>;\n  start?: Maybe<Scalars['Int']>;\n  where?: Maybe<Scalars['JSON']>;\n};\n\n\nexport type QueryRoleArgs = {\n  id: Scalars['ID'];\n  publicationState?: Maybe<PublicationState>;\n};\n\n\nexport type QueryRolesArgs = {\n  sort?: Maybe<Scalars['String']>;\n  limit?: Maybe<Scalars['Int']>;\n  start?: Maybe<Scalars['Int']>;\n  where?: Maybe<Scalars['JSON']>;\n  publicationState?: Maybe<PublicationState>;\n};\n\n\nexport type QueryRolesConnectionArgs = {\n  sort?: Maybe<Scalars['String']>;\n  limit?: Maybe<Scalars['Int']>;\n  start?: Maybe<Scalars['Int']>;\n  where?: Maybe<Scalars['JSON']>;\n};\n\n\nexport type QueryUserArgs = {\n  id: Scalars['ID'];\n  publicationState?: Maybe<PublicationState>;\n};\n\n\nexport type QueryUsersArgs = {\n  sort?: Maybe<Scalars['String']>;\n  limit?: Maybe<Scalars['Int']>;\n  start?: Maybe<Scalars['Int']>;\n  where?: Maybe<Scalars['JSON']>;\n  publicationState?: Maybe<PublicationState>;\n};\n\n\nexport type QueryUsersConnectionArgs = {\n  sort?: Maybe<Scalars['String']>;\n  limit?: Maybe<Scalars['Int']>;\n  start?: Maybe<Scalars['Int']>;\n  where?: Maybe<Scalars['JSON']>;\n};\n\nexport type Review = {\n  __typename?: 'Review';\n  id: Scalars['ID'];\n  _id: Scalars['ID'];\n  createdAt: Scalars['DateTime'];\n  updatedAt: Scalars['DateTime'];\n  text?: Maybe<Scalars['String']>;\n  rating: Scalars['Float'];\n  author?: Maybe<UsersPermissionsUser>;\n  active?: Maybe<Scalars['Boolean']>;\n  trip?: Maybe<Trips>;\n  published_at?: Maybe<Scalars['DateTime']>;\n};\n\nexport type ReviewAggregator = {\n  __typename?: 'ReviewAggregator';\n  count?: Maybe<Scalars['Int']>;\n  totalCount?: Maybe<Scalars['Int']>;\n  sum?: Maybe<ReviewAggregatorSum>;\n  avg?: Maybe<ReviewAggregatorAvg>;\n  min?: Maybe<ReviewAggregatorMin>;\n  max?: Maybe<ReviewAggregatorMax>;\n};\n\nexport type ReviewAggregatorAvg = {\n  __typename?: 'ReviewAggregatorAvg';\n  rating?: Maybe<Scalars['Float']>;\n};\n\nexport type ReviewAggregatorMax = {\n  __typename?: 'ReviewAggregatorMax';\n  rating?: Maybe<Scalars['Float']>;\n};\n\nexport type ReviewAggregatorMin = {\n  __typename?: 'ReviewAggregatorMin';\n  rating?: Maybe<Scalars['Float']>;\n};\n\nexport type ReviewAggregatorSum = {\n  __typename?: 'ReviewAggregatorSum';\n  rating?: Maybe<Scalars['Float']>;\n};\n\nexport type ReviewConnection = {\n  __typename?: 'ReviewConnection';\n  values?: Maybe<Array<Maybe<Review>>>;\n  groupBy?: Maybe<ReviewGroupBy>;\n  aggregate?: Maybe<ReviewAggregator>;\n};\n\nexport type ReviewConnectionActive = {\n  __typename?: 'ReviewConnectionActive';\n  key?: Maybe<Scalars['Boolean']>;\n  connection?: Maybe<ReviewConnection>;\n};\n\nexport type ReviewConnectionAuthor = {\n  __typename?: 'ReviewConnectionAuthor';\n  key?: Maybe<Scalars['ID']>;\n  connection?: Maybe<ReviewConnection>;\n};\n\nexport type ReviewConnectionCreatedAt = {\n  __typename?: 'ReviewConnectionCreatedAt';\n  key?: Maybe<Scalars['DateTime']>;\n  connection?: Maybe<ReviewConnection>;\n};\n\nexport type ReviewConnectionId = {\n  __typename?: 'ReviewConnectionId';\n  key?: Maybe<Scalars['ID']>;\n  connection?: Maybe<ReviewConnection>;\n};\n\nexport type ReviewConnectionPublished_At = {\n  __typename?: 'ReviewConnectionPublished_at';\n  key?: Maybe<Scalars['DateTime']>;\n  connection?: Maybe<ReviewConnection>;\n};\n\nexport type ReviewConnectionRating = {\n  __typename?: 'ReviewConnectionRating';\n  key?: Maybe<Scalars['Float']>;\n  connection?: Maybe<ReviewConnection>;\n};\n\nexport type ReviewConnectionText = {\n  __typename?: 'ReviewConnectionText';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<ReviewConnection>;\n};\n\nexport type ReviewConnectionTrip = {\n  __typename?: 'ReviewConnectionTrip';\n  key?: Maybe<Scalars['ID']>;\n  connection?: Maybe<ReviewConnection>;\n};\n\nexport type ReviewConnectionUpdatedAt = {\n  __typename?: 'ReviewConnectionUpdatedAt';\n  key?: Maybe<Scalars['DateTime']>;\n  connection?: Maybe<ReviewConnection>;\n};\n\nexport type ReviewConnection_Id = {\n  __typename?: 'ReviewConnection_id';\n  key?: Maybe<Scalars['ID']>;\n  connection?: Maybe<ReviewConnection>;\n};\n\nexport type ReviewGroupBy = {\n  __typename?: 'ReviewGroupBy';\n  id?: Maybe<Array<Maybe<ReviewConnectionId>>>;\n  _id?: Maybe<Array<Maybe<ReviewConnection_Id>>>;\n  createdAt?: Maybe<Array<Maybe<ReviewConnectionCreatedAt>>>;\n  updatedAt?: Maybe<Array<Maybe<ReviewConnectionUpdatedAt>>>;\n  text?: Maybe<Array<Maybe<ReviewConnectionText>>>;\n  rating?: Maybe<Array<Maybe<ReviewConnectionRating>>>;\n  author?: Maybe<Array<Maybe<ReviewConnectionAuthor>>>;\n  active?: Maybe<Array<Maybe<ReviewConnectionActive>>>;\n  trip?: Maybe<Array<Maybe<ReviewConnectionTrip>>>;\n  published_at?: Maybe<Array<Maybe<ReviewConnectionPublished_At>>>;\n};\n\nexport type ReviewInput = {\n  text?: Maybe<Scalars['String']>;\n  rating: Scalars['Float'];\n  author?: Maybe<Scalars['ID']>;\n  active?: Maybe<Scalars['Boolean']>;\n  trip?: Maybe<Scalars['ID']>;\n  published_at?: Maybe<Scalars['DateTime']>;\n  created_by?: Maybe<Scalars['ID']>;\n  updated_by?: Maybe<Scalars['ID']>;\n};\n\nexport type RoleInput = {\n  name: Scalars['String'];\n  description?: Maybe<Scalars['String']>;\n  type?: Maybe<Scalars['String']>;\n  permissions?: Maybe<Array<Maybe<Scalars['ID']>>>;\n  users?: Maybe<Array<Maybe<Scalars['ID']>>>;\n  created_by?: Maybe<Scalars['ID']>;\n  updated_by?: Maybe<Scalars['ID']>;\n};\n\nexport type SubscriberInput = {\n  email: Scalars['String'];\n  published_at?: Maybe<Scalars['DateTime']>;\n  created_by?: Maybe<Scalars['ID']>;\n  updated_by?: Maybe<Scalars['ID']>;\n};\n\nexport type Subscribers = {\n  __typename?: 'Subscribers';\n  id: Scalars['ID'];\n  _id: Scalars['ID'];\n  createdAt: Scalars['DateTime'];\n  updatedAt: Scalars['DateTime'];\n  email: Scalars['String'];\n  published_at?: Maybe<Scalars['DateTime']>;\n};\n\nexport type SubscribersAggregator = {\n  __typename?: 'SubscribersAggregator';\n  count?: Maybe<Scalars['Int']>;\n  totalCount?: Maybe<Scalars['Int']>;\n};\n\nexport type SubscribersConnection = {\n  __typename?: 'SubscribersConnection';\n  values?: Maybe<Array<Maybe<Subscribers>>>;\n  groupBy?: Maybe<SubscribersGroupBy>;\n  aggregate?: Maybe<SubscribersAggregator>;\n};\n\nexport type SubscribersConnectionCreatedAt = {\n  __typename?: 'SubscribersConnectionCreatedAt';\n  key?: Maybe<Scalars['DateTime']>;\n  connection?: Maybe<SubscribersConnection>;\n};\n\nexport type SubscribersConnectionEmail = {\n  __typename?: 'SubscribersConnectionEmail';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<SubscribersConnection>;\n};\n\nexport type SubscribersConnectionId = {\n  __typename?: 'SubscribersConnectionId';\n  key?: Maybe<Scalars['ID']>;\n  connection?: Maybe<SubscribersConnection>;\n};\n\nexport type SubscribersConnectionPublished_At = {\n  __typename?: 'SubscribersConnectionPublished_at';\n  key?: Maybe<Scalars['DateTime']>;\n  connection?: Maybe<SubscribersConnection>;\n};\n\nexport type SubscribersConnectionUpdatedAt = {\n  __typename?: 'SubscribersConnectionUpdatedAt';\n  key?: Maybe<Scalars['DateTime']>;\n  connection?: Maybe<SubscribersConnection>;\n};\n\nexport type SubscribersConnection_Id = {\n  __typename?: 'SubscribersConnection_id';\n  key?: Maybe<Scalars['ID']>;\n  connection?: Maybe<SubscribersConnection>;\n};\n\nexport type SubscribersGroupBy = {\n  __typename?: 'SubscribersGroupBy';\n  id?: Maybe<Array<Maybe<SubscribersConnectionId>>>;\n  _id?: Maybe<Array<Maybe<SubscribersConnection_Id>>>;\n  createdAt?: Maybe<Array<Maybe<SubscribersConnectionCreatedAt>>>;\n  updatedAt?: Maybe<Array<Maybe<SubscribersConnectionUpdatedAt>>>;\n  email?: Maybe<Array<Maybe<SubscribersConnectionEmail>>>;\n  published_at?: Maybe<Array<Maybe<SubscribersConnectionPublished_At>>>;\n};\n\n\nexport type TripInput = {\n  name: Scalars['String'];\n  previewImage?: Maybe<Scalars['ID']>;\n  active?: Maybe<Scalars['Boolean']>;\n  trip_type: Enum_Trips_Trip_Type;\n  description?: Maybe<Scalars['String']>;\n  duration: Scalars['Int'];\n  partner?: Maybe<Scalars['ID']>;\n  currency?: Maybe<Enum_Trips_Currency>;\n  city?: Maybe<Scalars['ID']>;\n  features?: Maybe<Array<ComponentFeatureFeatureInput>>;\n  basePrice: Scalars['Int'];\n  basePeopleCount: Scalars['Int'];\n  discount?: Maybe<Scalars['Float']>;\n  travelType: Enum_Trips_Traveltype;\n  hotel?: Maybe<Scalars['ID']>;\n  plan?: Maybe<Array<ComponentTimelineTimelineInput>>;\n  sequence: Scalars['String'];\n  localizations?: Maybe<Array<Maybe<Scalars['ID']>>>;\n  locale?: Maybe<Scalars['String']>;\n  published_at?: Maybe<Scalars['DateTime']>;\n  created_by?: Maybe<Scalars['ID']>;\n  updated_by?: Maybe<Scalars['ID']>;\n};\n\nexport type Trips = {\n  __typename?: 'Trips';\n  id: Scalars['ID'];\n  _id: Scalars['ID'];\n  createdAt: Scalars['DateTime'];\n  updatedAt: Scalars['DateTime'];\n  name: Scalars['String'];\n  previewImage?: Maybe<UploadFile>;\n  active?: Maybe<Scalars['Boolean']>;\n  trip_type: Enum_Trips_Trip_Type;\n  description?: Maybe<Scalars['String']>;\n  duration: Scalars['Int'];\n  partner?: Maybe<Partner>;\n  currency?: Maybe<Enum_Trips_Currency>;\n  city?: Maybe<City>;\n  features?: Maybe<Array<Maybe<ComponentFeatureFeature>>>;\n  basePrice: Scalars['Int'];\n  basePeopleCount: Scalars['Int'];\n  discount?: Maybe<Scalars['Float']>;\n  travelType: Enum_Trips_Traveltype;\n  hotel?: Maybe<Hotels>;\n  plan?: Maybe<Array<Maybe<ComponentTimelineTimeline>>>;\n  locale?: Maybe<Scalars['String']>;\n  published_at?: Maybe<Scalars['DateTime']>;\n  localizations?: Maybe<Array<Maybe<Trips>>>;\n};\n\n\nexport type TripsLocalizationsArgs = {\n  sort?: Maybe<Scalars['String']>;\n  limit?: Maybe<Scalars['Int']>;\n  start?: Maybe<Scalars['Int']>;\n  where?: Maybe<Scalars['JSON']>;\n};\n\nexport type TripsAggregator = {\n  __typename?: 'TripsAggregator';\n  count?: Maybe<Scalars['Int']>;\n  totalCount?: Maybe<Scalars['Int']>;\n  sum?: Maybe<TripsAggregatorSum>;\n  avg?: Maybe<TripsAggregatorAvg>;\n  min?: Maybe<TripsAggregatorMin>;\n  max?: Maybe<TripsAggregatorMax>;\n};\n\nexport type TripsAggregatorAvg = {\n  __typename?: 'TripsAggregatorAvg';\n  duration?: Maybe<Scalars['Float']>;\n  basePrice?: Maybe<Scalars['Float']>;\n  basePeopleCount?: Maybe<Scalars['Float']>;\n  discount?: Maybe<Scalars['Float']>;\n};\n\nexport type TripsAggregatorMax = {\n  __typename?: 'TripsAggregatorMax';\n  duration?: Maybe<Scalars['Float']>;\n  basePrice?: Maybe<Scalars['Float']>;\n  basePeopleCount?: Maybe<Scalars['Float']>;\n  discount?: Maybe<Scalars['Float']>;\n};\n\nexport type TripsAggregatorMin = {\n  __typename?: 'TripsAggregatorMin';\n  duration?: Maybe<Scalars['Float']>;\n  basePrice?: Maybe<Scalars['Float']>;\n  basePeopleCount?: Maybe<Scalars['Float']>;\n  discount?: Maybe<Scalars['Float']>;\n};\n\nexport type TripsAggregatorSum = {\n  __typename?: 'TripsAggregatorSum';\n  duration?: Maybe<Scalars['Float']>;\n  basePrice?: Maybe<Scalars['Float']>;\n  basePeopleCount?: Maybe<Scalars['Float']>;\n  discount?: Maybe<Scalars['Float']>;\n};\n\nexport type TripsConnection = {\n  __typename?: 'TripsConnection';\n  values?: Maybe<Array<Maybe<Trips>>>;\n  groupBy?: Maybe<TripsGroupBy>;\n  aggregate?: Maybe<TripsAggregator>;\n};\n\nexport type TripsConnectionActive = {\n  __typename?: 'TripsConnectionActive';\n  key?: Maybe<Scalars['Boolean']>;\n  connection?: Maybe<TripsConnection>;\n};\n\nexport type TripsConnectionBasePeopleCount = {\n  __typename?: 'TripsConnectionBasePeopleCount';\n  key?: Maybe<Scalars['Int']>;\n  connection?: Maybe<TripsConnection>;\n};\n\nexport type TripsConnectionBasePrice = {\n  __typename?: 'TripsConnectionBasePrice';\n  key?: Maybe<Scalars['Int']>;\n  connection?: Maybe<TripsConnection>;\n};\n\nexport type TripsConnectionCity = {\n  __typename?: 'TripsConnectionCity';\n  key?: Maybe<Scalars['ID']>;\n  connection?: Maybe<TripsConnection>;\n};\n\nexport type TripsConnectionCreatedAt = {\n  __typename?: 'TripsConnectionCreatedAt';\n  key?: Maybe<Scalars['DateTime']>;\n  connection?: Maybe<TripsConnection>;\n};\n\nexport type TripsConnectionCurrency = {\n  __typename?: 'TripsConnectionCurrency';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<TripsConnection>;\n};\n\nexport type TripsConnectionDescription = {\n  __typename?: 'TripsConnectionDescription';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<TripsConnection>;\n};\n\nexport type TripsConnectionDiscount = {\n  __typename?: 'TripsConnectionDiscount';\n  key?: Maybe<Scalars['Float']>;\n  connection?: Maybe<TripsConnection>;\n};\n\nexport type TripsConnectionDuration = {\n  __typename?: 'TripsConnectionDuration';\n  key?: Maybe<Scalars['Int']>;\n  connection?: Maybe<TripsConnection>;\n};\n\nexport type TripsConnectionHotel = {\n  __typename?: 'TripsConnectionHotel';\n  key?: Maybe<Scalars['ID']>;\n  connection?: Maybe<TripsConnection>;\n};\n\nexport type TripsConnectionId = {\n  __typename?: 'TripsConnectionId';\n  key?: Maybe<Scalars['ID']>;\n  connection?: Maybe<TripsConnection>;\n};\n\nexport type TripsConnectionLocale = {\n  __typename?: 'TripsConnectionLocale';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<TripsConnection>;\n};\n\nexport type TripsConnectionName = {\n  __typename?: 'TripsConnectionName';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<TripsConnection>;\n};\n\nexport type TripsConnectionPartner = {\n  __typename?: 'TripsConnectionPartner';\n  key?: Maybe<Scalars['ID']>;\n  connection?: Maybe<TripsConnection>;\n};\n\nexport type TripsConnectionPreviewImage = {\n  __typename?: 'TripsConnectionPreviewImage';\n  key?: Maybe<Scalars['ID']>;\n  connection?: Maybe<TripsConnection>;\n};\n\nexport type TripsConnectionPublished_At = {\n  __typename?: 'TripsConnectionPublished_at';\n  key?: Maybe<Scalars['DateTime']>;\n  connection?: Maybe<TripsConnection>;\n};\n\nexport type TripsConnectionTravelType = {\n  __typename?: 'TripsConnectionTravelType';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<TripsConnection>;\n};\n\nexport type TripsConnectionTrip_Type = {\n  __typename?: 'TripsConnectionTrip_type';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<TripsConnection>;\n};\n\nexport type TripsConnectionUpdatedAt = {\n  __typename?: 'TripsConnectionUpdatedAt';\n  key?: Maybe<Scalars['DateTime']>;\n  connection?: Maybe<TripsConnection>;\n};\n\nexport type TripsConnection_Id = {\n  __typename?: 'TripsConnection_id';\n  key?: Maybe<Scalars['ID']>;\n  connection?: Maybe<TripsConnection>;\n};\n\nexport type TripsGroupBy = {\n  __typename?: 'TripsGroupBy';\n  id?: Maybe<Array<Maybe<TripsConnectionId>>>;\n  _id?: Maybe<Array<Maybe<TripsConnection_Id>>>;\n  createdAt?: Maybe<Array<Maybe<TripsConnectionCreatedAt>>>;\n  updatedAt?: Maybe<Array<Maybe<TripsConnectionUpdatedAt>>>;\n  name?: Maybe<Array<Maybe<TripsConnectionName>>>;\n  previewImage?: Maybe<Array<Maybe<TripsConnectionPreviewImage>>>;\n  active?: Maybe<Array<Maybe<TripsConnectionActive>>>;\n  trip_type?: Maybe<Array<Maybe<TripsConnectionTrip_Type>>>;\n  description?: Maybe<Array<Maybe<TripsConnectionDescription>>>;\n  duration?: Maybe<Array<Maybe<TripsConnectionDuration>>>;\n  partner?: Maybe<Array<Maybe<TripsConnectionPartner>>>;\n  currency?: Maybe<Array<Maybe<TripsConnectionCurrency>>>;\n  city?: Maybe<Array<Maybe<TripsConnectionCity>>>;\n  basePrice?: Maybe<Array<Maybe<TripsConnectionBasePrice>>>;\n  basePeopleCount?: Maybe<Array<Maybe<TripsConnectionBasePeopleCount>>>;\n  discount?: Maybe<Array<Maybe<TripsConnectionDiscount>>>;\n  travelType?: Maybe<Array<Maybe<TripsConnectionTravelType>>>;\n  hotel?: Maybe<Array<Maybe<TripsConnectionHotel>>>;\n  locale?: Maybe<Array<Maybe<TripsConnectionLocale>>>;\n  published_at?: Maybe<Array<Maybe<TripsConnectionPublished_At>>>;\n};\n\n\nexport type UploadFile = {\n  __typename?: 'UploadFile';\n  id: Scalars['ID'];\n  _id: Scalars['ID'];\n  createdAt: Scalars['DateTime'];\n  updatedAt: Scalars['DateTime'];\n  name: Scalars['String'];\n  alternativeText?: Maybe<Scalars['String']>;\n  caption?: Maybe<Scalars['String']>;\n  width?: Maybe<Scalars['Int']>;\n  height?: Maybe<Scalars['Int']>;\n  formats?: Maybe<Scalars['JSON']>;\n  hash: Scalars['String'];\n  ext?: Maybe<Scalars['String']>;\n  mime: Scalars['String'];\n  size: Scalars['Float'];\n  url: Scalars['String'];\n  previewUrl?: Maybe<Scalars['String']>;\n  provider: Scalars['String'];\n  provider_metadata?: Maybe<Scalars['JSON']>;\n  related?: Maybe<Array<Maybe<Morph>>>;\n};\n\n\nexport type UploadFileRelatedArgs = {\n  sort?: Maybe<Scalars['String']>;\n  limit?: Maybe<Scalars['Int']>;\n  start?: Maybe<Scalars['Int']>;\n  where?: Maybe<Scalars['JSON']>;\n};\n\nexport type UploadFileAggregator = {\n  __typename?: 'UploadFileAggregator';\n  count?: Maybe<Scalars['Int']>;\n  totalCount?: Maybe<Scalars['Int']>;\n  sum?: Maybe<UploadFileAggregatorSum>;\n  avg?: Maybe<UploadFileAggregatorAvg>;\n  min?: Maybe<UploadFileAggregatorMin>;\n  max?: Maybe<UploadFileAggregatorMax>;\n};\n\nexport type UploadFileAggregatorAvg = {\n  __typename?: 'UploadFileAggregatorAvg';\n  width?: Maybe<Scalars['Float']>;\n  height?: Maybe<Scalars['Float']>;\n  size?: Maybe<Scalars['Float']>;\n};\n\nexport type UploadFileAggregatorMax = {\n  __typename?: 'UploadFileAggregatorMax';\n  width?: Maybe<Scalars['Float']>;\n  height?: Maybe<Scalars['Float']>;\n  size?: Maybe<Scalars['Float']>;\n};\n\nexport type UploadFileAggregatorMin = {\n  __typename?: 'UploadFileAggregatorMin';\n  width?: Maybe<Scalars['Float']>;\n  height?: Maybe<Scalars['Float']>;\n  size?: Maybe<Scalars['Float']>;\n};\n\nexport type UploadFileAggregatorSum = {\n  __typename?: 'UploadFileAggregatorSum';\n  width?: Maybe<Scalars['Float']>;\n  height?: Maybe<Scalars['Float']>;\n  size?: Maybe<Scalars['Float']>;\n};\n\nexport type UploadFileConnection = {\n  __typename?: 'UploadFileConnection';\n  values?: Maybe<Array<Maybe<UploadFile>>>;\n  groupBy?: Maybe<UploadFileGroupBy>;\n  aggregate?: Maybe<UploadFileAggregator>;\n};\n\nexport type UploadFileConnectionAlternativeText = {\n  __typename?: 'UploadFileConnectionAlternativeText';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<UploadFileConnection>;\n};\n\nexport type UploadFileConnectionCaption = {\n  __typename?: 'UploadFileConnectionCaption';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<UploadFileConnection>;\n};\n\nexport type UploadFileConnectionCreatedAt = {\n  __typename?: 'UploadFileConnectionCreatedAt';\n  key?: Maybe<Scalars['DateTime']>;\n  connection?: Maybe<UploadFileConnection>;\n};\n\nexport type UploadFileConnectionExt = {\n  __typename?: 'UploadFileConnectionExt';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<UploadFileConnection>;\n};\n\nexport type UploadFileConnectionFormats = {\n  __typename?: 'UploadFileConnectionFormats';\n  key?: Maybe<Scalars['JSON']>;\n  connection?: Maybe<UploadFileConnection>;\n};\n\nexport type UploadFileConnectionHash = {\n  __typename?: 'UploadFileConnectionHash';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<UploadFileConnection>;\n};\n\nexport type UploadFileConnectionHeight = {\n  __typename?: 'UploadFileConnectionHeight';\n  key?: Maybe<Scalars['Int']>;\n  connection?: Maybe<UploadFileConnection>;\n};\n\nexport type UploadFileConnectionId = {\n  __typename?: 'UploadFileConnectionId';\n  key?: Maybe<Scalars['ID']>;\n  connection?: Maybe<UploadFileConnection>;\n};\n\nexport type UploadFileConnectionMime = {\n  __typename?: 'UploadFileConnectionMime';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<UploadFileConnection>;\n};\n\nexport type UploadFileConnectionName = {\n  __typename?: 'UploadFileConnectionName';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<UploadFileConnection>;\n};\n\nexport type UploadFileConnectionPreviewUrl = {\n  __typename?: 'UploadFileConnectionPreviewUrl';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<UploadFileConnection>;\n};\n\nexport type UploadFileConnectionProvider = {\n  __typename?: 'UploadFileConnectionProvider';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<UploadFileConnection>;\n};\n\nexport type UploadFileConnectionProvider_Metadata = {\n  __typename?: 'UploadFileConnectionProvider_metadata';\n  key?: Maybe<Scalars['JSON']>;\n  connection?: Maybe<UploadFileConnection>;\n};\n\nexport type UploadFileConnectionSize = {\n  __typename?: 'UploadFileConnectionSize';\n  key?: Maybe<Scalars['Float']>;\n  connection?: Maybe<UploadFileConnection>;\n};\n\nexport type UploadFileConnectionUpdatedAt = {\n  __typename?: 'UploadFileConnectionUpdatedAt';\n  key?: Maybe<Scalars['DateTime']>;\n  connection?: Maybe<UploadFileConnection>;\n};\n\nexport type UploadFileConnectionUrl = {\n  __typename?: 'UploadFileConnectionUrl';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<UploadFileConnection>;\n};\n\nexport type UploadFileConnectionWidth = {\n  __typename?: 'UploadFileConnectionWidth';\n  key?: Maybe<Scalars['Int']>;\n  connection?: Maybe<UploadFileConnection>;\n};\n\nexport type UploadFileConnection_Id = {\n  __typename?: 'UploadFileConnection_id';\n  key?: Maybe<Scalars['ID']>;\n  connection?: Maybe<UploadFileConnection>;\n};\n\nexport type UploadFileGroupBy = {\n  __typename?: 'UploadFileGroupBy';\n  id?: Maybe<Array<Maybe<UploadFileConnectionId>>>;\n  _id?: Maybe<Array<Maybe<UploadFileConnection_Id>>>;\n  createdAt?: Maybe<Array<Maybe<UploadFileConnectionCreatedAt>>>;\n  updatedAt?: Maybe<Array<Maybe<UploadFileConnectionUpdatedAt>>>;\n  name?: Maybe<Array<Maybe<UploadFileConnectionName>>>;\n  alternativeText?: Maybe<Array<Maybe<UploadFileConnectionAlternativeText>>>;\n  caption?: Maybe<Array<Maybe<UploadFileConnectionCaption>>>;\n  width?: Maybe<Array<Maybe<UploadFileConnectionWidth>>>;\n  height?: Maybe<Array<Maybe<UploadFileConnectionHeight>>>;\n  formats?: Maybe<Array<Maybe<UploadFileConnectionFormats>>>;\n  hash?: Maybe<Array<Maybe<UploadFileConnectionHash>>>;\n  ext?: Maybe<Array<Maybe<UploadFileConnectionExt>>>;\n  mime?: Maybe<Array<Maybe<UploadFileConnectionMime>>>;\n  size?: Maybe<Array<Maybe<UploadFileConnectionSize>>>;\n  url?: Maybe<Array<Maybe<UploadFileConnectionUrl>>>;\n  previewUrl?: Maybe<Array<Maybe<UploadFileConnectionPreviewUrl>>>;\n  provider?: Maybe<Array<Maybe<UploadFileConnectionProvider>>>;\n  provider_metadata?: Maybe<Array<Maybe<UploadFileConnectionProvider_Metadata>>>;\n};\n\nexport type UserInput = {\n  username: Scalars['String'];\n  email: Scalars['String'];\n  provider?: Maybe<Scalars['String']>;\n  password?: Maybe<Scalars['String']>;\n  resetPasswordToken?: Maybe<Scalars['String']>;\n  confirmationToken?: Maybe<Scalars['String']>;\n  confirmed?: Maybe<Scalars['Boolean']>;\n  blocked?: Maybe<Scalars['Boolean']>;\n  role?: Maybe<Scalars['ID']>;\n  created_by?: Maybe<Scalars['ID']>;\n  updated_by?: Maybe<Scalars['ID']>;\n};\n\nexport type UserPermissionsPasswordPayload = {\n  __typename?: 'UserPermissionsPasswordPayload';\n  ok: Scalars['Boolean'];\n};\n\nexport type UsersPermissionsLoginInput = {\n  identifier: Scalars['String'];\n  password: Scalars['String'];\n  provider?: Maybe<Scalars['String']>;\n};\n\nexport type UsersPermissionsLoginPayload = {\n  __typename?: 'UsersPermissionsLoginPayload';\n  jwt?: Maybe<Scalars['String']>;\n  user: UsersPermissionsMe;\n};\n\nexport type UsersPermissionsMe = {\n  __typename?: 'UsersPermissionsMe';\n  id: Scalars['ID'];\n  username: Scalars['String'];\n  email: Scalars['String'];\n  confirmed?: Maybe<Scalars['Boolean']>;\n  blocked?: Maybe<Scalars['Boolean']>;\n  role?: Maybe<UsersPermissionsMeRole>;\n};\n\nexport type UsersPermissionsMeRole = {\n  __typename?: 'UsersPermissionsMeRole';\n  id: Scalars['ID'];\n  name: Scalars['String'];\n  description?: Maybe<Scalars['String']>;\n  type?: Maybe<Scalars['String']>;\n};\n\nexport type UsersPermissionsPermission = {\n  __typename?: 'UsersPermissionsPermission';\n  id: Scalars['ID'];\n  _id: Scalars['ID'];\n  type: Scalars['String'];\n  controller: Scalars['String'];\n  action: Scalars['String'];\n  enabled: Scalars['Boolean'];\n  policy?: Maybe<Scalars['String']>;\n  role?: Maybe<UsersPermissionsRole>;\n};\n\nexport type UsersPermissionsRegisterInput = {\n  username: Scalars['String'];\n  email: Scalars['String'];\n  password: Scalars['String'];\n};\n\nexport type UsersPermissionsRole = {\n  __typename?: 'UsersPermissionsRole';\n  id: Scalars['ID'];\n  _id: Scalars['ID'];\n  name: Scalars['String'];\n  description?: Maybe<Scalars['String']>;\n  type?: Maybe<Scalars['String']>;\n  permissions?: Maybe<Array<Maybe<UsersPermissionsPermission>>>;\n  users?: Maybe<Array<Maybe<UsersPermissionsUser>>>;\n};\n\n\nexport type UsersPermissionsRolePermissionsArgs = {\n  sort?: Maybe<Scalars['String']>;\n  limit?: Maybe<Scalars['Int']>;\n  start?: Maybe<Scalars['Int']>;\n  where?: Maybe<Scalars['JSON']>;\n};\n\n\nexport type UsersPermissionsRoleUsersArgs = {\n  sort?: Maybe<Scalars['String']>;\n  limit?: Maybe<Scalars['Int']>;\n  start?: Maybe<Scalars['Int']>;\n  where?: Maybe<Scalars['JSON']>;\n};\n\nexport type UsersPermissionsRoleAggregator = {\n  __typename?: 'UsersPermissionsRoleAggregator';\n  count?: Maybe<Scalars['Int']>;\n  totalCount?: Maybe<Scalars['Int']>;\n};\n\nexport type UsersPermissionsRoleConnection = {\n  __typename?: 'UsersPermissionsRoleConnection';\n  values?: Maybe<Array<Maybe<UsersPermissionsRole>>>;\n  groupBy?: Maybe<UsersPermissionsRoleGroupBy>;\n  aggregate?: Maybe<UsersPermissionsRoleAggregator>;\n};\n\nexport type UsersPermissionsRoleConnectionDescription = {\n  __typename?: 'UsersPermissionsRoleConnectionDescription';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<UsersPermissionsRoleConnection>;\n};\n\nexport type UsersPermissionsRoleConnectionId = {\n  __typename?: 'UsersPermissionsRoleConnectionId';\n  key?: Maybe<Scalars['ID']>;\n  connection?: Maybe<UsersPermissionsRoleConnection>;\n};\n\nexport type UsersPermissionsRoleConnectionName = {\n  __typename?: 'UsersPermissionsRoleConnectionName';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<UsersPermissionsRoleConnection>;\n};\n\nexport type UsersPermissionsRoleConnectionType = {\n  __typename?: 'UsersPermissionsRoleConnectionType';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<UsersPermissionsRoleConnection>;\n};\n\nexport type UsersPermissionsRoleConnection_Id = {\n  __typename?: 'UsersPermissionsRoleConnection_id';\n  key?: Maybe<Scalars['ID']>;\n  connection?: Maybe<UsersPermissionsRoleConnection>;\n};\n\nexport type UsersPermissionsRoleGroupBy = {\n  __typename?: 'UsersPermissionsRoleGroupBy';\n  id?: Maybe<Array<Maybe<UsersPermissionsRoleConnectionId>>>;\n  _id?: Maybe<Array<Maybe<UsersPermissionsRoleConnection_Id>>>;\n  name?: Maybe<Array<Maybe<UsersPermissionsRoleConnectionName>>>;\n  description?: Maybe<Array<Maybe<UsersPermissionsRoleConnectionDescription>>>;\n  type?: Maybe<Array<Maybe<UsersPermissionsRoleConnectionType>>>;\n};\n\nexport type UsersPermissionsUser = {\n  __typename?: 'UsersPermissionsUser';\n  id: Scalars['ID'];\n  _id: Scalars['ID'];\n  createdAt: Scalars['DateTime'];\n  updatedAt: Scalars['DateTime'];\n  username: Scalars['String'];\n  email: Scalars['String'];\n  provider?: Maybe<Scalars['String']>;\n  confirmed?: Maybe<Scalars['Boolean']>;\n  blocked?: Maybe<Scalars['Boolean']>;\n  role?: Maybe<UsersPermissionsRole>;\n};\n\nexport type UsersPermissionsUserAggregator = {\n  __typename?: 'UsersPermissionsUserAggregator';\n  count?: Maybe<Scalars['Int']>;\n  totalCount?: Maybe<Scalars['Int']>;\n};\n\nexport type UsersPermissionsUserConnection = {\n  __typename?: 'UsersPermissionsUserConnection';\n  values?: Maybe<Array<Maybe<UsersPermissionsUser>>>;\n  groupBy?: Maybe<UsersPermissionsUserGroupBy>;\n  aggregate?: Maybe<UsersPermissionsUserAggregator>;\n};\n\nexport type UsersPermissionsUserConnectionBlocked = {\n  __typename?: 'UsersPermissionsUserConnectionBlocked';\n  key?: Maybe<Scalars['Boolean']>;\n  connection?: Maybe<UsersPermissionsUserConnection>;\n};\n\nexport type UsersPermissionsUserConnectionConfirmed = {\n  __typename?: 'UsersPermissionsUserConnectionConfirmed';\n  key?: Maybe<Scalars['Boolean']>;\n  connection?: Maybe<UsersPermissionsUserConnection>;\n};\n\nexport type UsersPermissionsUserConnectionCreatedAt = {\n  __typename?: 'UsersPermissionsUserConnectionCreatedAt';\n  key?: Maybe<Scalars['DateTime']>;\n  connection?: Maybe<UsersPermissionsUserConnection>;\n};\n\nexport type UsersPermissionsUserConnectionEmail = {\n  __typename?: 'UsersPermissionsUserConnectionEmail';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<UsersPermissionsUserConnection>;\n};\n\nexport type UsersPermissionsUserConnectionId = {\n  __typename?: 'UsersPermissionsUserConnectionId';\n  key?: Maybe<Scalars['ID']>;\n  connection?: Maybe<UsersPermissionsUserConnection>;\n};\n\nexport type UsersPermissionsUserConnectionProvider = {\n  __typename?: 'UsersPermissionsUserConnectionProvider';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<UsersPermissionsUserConnection>;\n};\n\nexport type UsersPermissionsUserConnectionRole = {\n  __typename?: 'UsersPermissionsUserConnectionRole';\n  key?: Maybe<Scalars['ID']>;\n  connection?: Maybe<UsersPermissionsUserConnection>;\n};\n\nexport type UsersPermissionsUserConnectionUpdatedAt = {\n  __typename?: 'UsersPermissionsUserConnectionUpdatedAt';\n  key?: Maybe<Scalars['DateTime']>;\n  connection?: Maybe<UsersPermissionsUserConnection>;\n};\n\nexport type UsersPermissionsUserConnectionUsername = {\n  __typename?: 'UsersPermissionsUserConnectionUsername';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<UsersPermissionsUserConnection>;\n};\n\nexport type UsersPermissionsUserConnection_Id = {\n  __typename?: 'UsersPermissionsUserConnection_id';\n  key?: Maybe<Scalars['ID']>;\n  connection?: Maybe<UsersPermissionsUserConnection>;\n};\n\nexport type UsersPermissionsUserGroupBy = {\n  __typename?: 'UsersPermissionsUserGroupBy';\n  id?: Maybe<Array<Maybe<UsersPermissionsUserConnectionId>>>;\n  _id?: Maybe<Array<Maybe<UsersPermissionsUserConnection_Id>>>;\n  createdAt?: Maybe<Array<Maybe<UsersPermissionsUserConnectionCreatedAt>>>;\n  updatedAt?: Maybe<Array<Maybe<UsersPermissionsUserConnectionUpdatedAt>>>;\n  username?: Maybe<Array<Maybe<UsersPermissionsUserConnectionUsername>>>;\n  email?: Maybe<Array<Maybe<UsersPermissionsUserConnectionEmail>>>;\n  provider?: Maybe<Array<Maybe<UsersPermissionsUserConnectionProvider>>>;\n  confirmed?: Maybe<Array<Maybe<UsersPermissionsUserConnectionConfirmed>>>;\n  blocked?: Maybe<Array<Maybe<UsersPermissionsUserConnectionBlocked>>>;\n  role?: Maybe<Array<Maybe<UsersPermissionsUserConnectionRole>>>;\n};\n\nexport type CreateBookingInput = {\n  data?: Maybe<BookingInput>;\n};\n\nexport type CreateBookingPayload = {\n  __typename?: 'createBookingPayload';\n  booking?: Maybe<Booking>;\n};\n\nexport type CreateCityInput = {\n  data?: Maybe<CityInput>;\n};\n\nexport type CreateCityPayload = {\n  __typename?: 'createCityPayload';\n  city?: Maybe<City>;\n};\n\nexport type CreateFeatureInput = {\n  data?: Maybe<FeatureInput>;\n};\n\nexport type CreateFeaturePayload = {\n  __typename?: 'createFeaturePayload';\n  feature?: Maybe<Feature>;\n};\n\nexport type CreateHotelInput = {\n  data?: Maybe<HotelInput>;\n};\n\nexport type CreateHotelPayload = {\n  __typename?: 'createHotelPayload';\n  hotel?: Maybe<Hotels>;\n};\n\nexport type CreateLocationInput = {\n  data?: Maybe<LocationInput>;\n};\n\nexport type CreateLocationPayload = {\n  __typename?: 'createLocationPayload';\n  location?: Maybe<Location>;\n};\n\nexport type CreatePartnerInput = {\n  data?: Maybe<PartnerInput>;\n};\n\nexport type CreatePartnerPayload = {\n  __typename?: 'createPartnerPayload';\n  partner?: Maybe<Partner>;\n};\n\nexport type CreateReviewInput = {\n  data?: Maybe<ReviewInput>;\n};\n\nexport type CreateReviewPayload = {\n  __typename?: 'createReviewPayload';\n  review?: Maybe<Review>;\n};\n\nexport type CreateRoleInput = {\n  data?: Maybe<RoleInput>;\n};\n\nexport type CreateRolePayload = {\n  __typename?: 'createRolePayload';\n  role?: Maybe<UsersPermissionsRole>;\n};\n\nexport type CreateSubscriberInput = {\n  data?: Maybe<SubscriberInput>;\n};\n\nexport type CreateSubscriberPayload = {\n  __typename?: 'createSubscriberPayload';\n  subscriber?: Maybe<Subscribers>;\n};\n\nexport type CreateTripInput = {\n  data?: Maybe<TripInput>;\n};\n\nexport type CreateTripPayload = {\n  __typename?: 'createTripPayload';\n  trip?: Maybe<Trips>;\n};\n\nexport type CreateUserInput = {\n  data?: Maybe<UserInput>;\n};\n\nexport type CreateUserPayload = {\n  __typename?: 'createUserPayload';\n  user?: Maybe<UsersPermissionsUser>;\n};\n\nexport type DeleteBookingInput = {\n  where?: Maybe<InputId>;\n};\n\nexport type DeleteBookingPayload = {\n  __typename?: 'deleteBookingPayload';\n  booking?: Maybe<Booking>;\n};\n\nexport type DeleteCityInput = {\n  where?: Maybe<InputId>;\n};\n\nexport type DeleteCityPayload = {\n  __typename?: 'deleteCityPayload';\n  city?: Maybe<City>;\n};\n\nexport type DeleteFeatureInput = {\n  where?: Maybe<InputId>;\n};\n\nexport type DeleteFeaturePayload = {\n  __typename?: 'deleteFeaturePayload';\n  feature?: Maybe<Feature>;\n};\n\nexport type DeleteFileInput = {\n  where?: Maybe<InputId>;\n};\n\nexport type DeleteFilePayload = {\n  __typename?: 'deleteFilePayload';\n  file?: Maybe<UploadFile>;\n};\n\nexport type DeleteHomeBannerPayload = {\n  __typename?: 'deleteHomeBannerPayload';\n  homeBanner?: Maybe<HomeBanner>;\n};\n\nexport type DeleteHotelInput = {\n  where?: Maybe<InputId>;\n};\n\nexport type DeleteHotelPayload = {\n  __typename?: 'deleteHotelPayload';\n  hotel?: Maybe<Hotels>;\n};\n\nexport type DeleteLocationInput = {\n  where?: Maybe<InputId>;\n};\n\nexport type DeleteLocationPayload = {\n  __typename?: 'deleteLocationPayload';\n  location?: Maybe<Location>;\n};\n\nexport type DeletePartnerInput = {\n  where?: Maybe<InputId>;\n};\n\nexport type DeletePartnerPayload = {\n  __typename?: 'deletePartnerPayload';\n  partner?: Maybe<Partner>;\n};\n\nexport type DeleteReviewInput = {\n  where?: Maybe<InputId>;\n};\n\nexport type DeleteReviewPayload = {\n  __typename?: 'deleteReviewPayload';\n  review?: Maybe<Review>;\n};\n\nexport type DeleteRoleInput = {\n  where?: Maybe<InputId>;\n};\n\nexport type DeleteRolePayload = {\n  __typename?: 'deleteRolePayload';\n  role?: Maybe<UsersPermissionsRole>;\n};\n\nexport type DeleteSubscriberInput = {\n  where?: Maybe<InputId>;\n};\n\nexport type DeleteSubscriberPayload = {\n  __typename?: 'deleteSubscriberPayload';\n  subscriber?: Maybe<Subscribers>;\n};\n\nexport type DeleteTripInput = {\n  where?: Maybe<InputId>;\n};\n\nexport type DeleteTripPayload = {\n  __typename?: 'deleteTripPayload';\n  trip?: Maybe<Trips>;\n};\n\nexport type DeleteUserInput = {\n  where?: Maybe<InputId>;\n};\n\nexport type DeleteUserPayload = {\n  __typename?: 'deleteUserPayload';\n  user?: Maybe<UsersPermissionsUser>;\n};\n\nexport type EditBookingInput = {\n  trip?: Maybe<Scalars['ID']>;\n  approved?: Maybe<Scalars['Boolean']>;\n  basePrice?: Maybe<Scalars['Float']>;\n  currency?: Maybe<Enum_Booking_Currency>;\n  basePeopleCount?: Maybe<Scalars['Int']>;\n  discount?: Maybe<Scalars['Float']>;\n  fullName?: Maybe<Scalars['String']>;\n  phone?: Maybe<Scalars['String']>;\n  message?: Maybe<Scalars['String']>;\n  arrivalDate?: Maybe<Scalars['Date']>;\n  language?: Maybe<Scalars['String']>;\n  userBookingStatus?: Maybe<Enum_Booking_Userbookingstatus>;\n  email?: Maybe<Scalars['String']>;\n  adults?: Maybe<Scalars['Int']>;\n  children?: Maybe<Scalars['Int']>;\n  totalPrice?: Maybe<Scalars['Float']>;\n  published_at?: Maybe<Scalars['DateTime']>;\n  created_by?: Maybe<Scalars['ID']>;\n  updated_by?: Maybe<Scalars['ID']>;\n};\n\nexport type EditCityInput = {\n  name?: Maybe<Scalars['String']>;\n  description?: Maybe<Scalars['String']>;\n  image?: Maybe<Scalars['ID']>;\n  locations?: Maybe<Array<Maybe<Scalars['ID']>>>;\n  localizations?: Maybe<Array<Maybe<Scalars['ID']>>>;\n  locale?: Maybe<Scalars['String']>;\n  published_at?: Maybe<Scalars['DateTime']>;\n  created_by?: Maybe<Scalars['ID']>;\n  updated_by?: Maybe<Scalars['ID']>;\n};\n\nexport type EditComponentCoordinateCoordinateInput = {\n  id?: Maybe<Scalars['ID']>;\n  latitude?: Maybe<Scalars['Float']>;\n  longitude?: Maybe<Scalars['Float']>;\n};\n\nexport type EditComponentFeatureFeatureInput = {\n  id?: Maybe<Scalars['ID']>;\n  feature?: Maybe<Scalars['ID']>;\n  included?: Maybe<Scalars['Boolean']>;\n};\n\nexport type EditComponentPricePriceInput = {\n  id?: Maybe<Scalars['ID']>;\n  basePrice?: Maybe<Scalars['Float']>;\n  currency?: Maybe<Enum_Componentpriceprice_Currency>;\n  basePeopleCount?: Maybe<Scalars['Int']>;\n  extraAdultFee?: Maybe<Scalars['Float']>;\n  discount?: Maybe<Scalars['Float']>;\n};\n\nexport type EditComponentTimelineTimelineInput = {\n  id?: Maybe<Scalars['ID']>;\n  day?: Maybe<Scalars['Int']>;\n  description?: Maybe<Scalars['String']>;\n  locations?: Maybe<Array<Maybe<Scalars['ID']>>>;\n  travelTo?: Maybe<Scalars['ID']>;\n  transportationType?: Maybe<Enum_Componenttimelinetimeline_Transportationtype>;\n  restDay?: Maybe<Scalars['Boolean']>;\n};\n\nexport type EditFeatureInput = {\n  name?: Maybe<Scalars['String']>;\n  info?: Maybe<Scalars['String']>;\n  localizations?: Maybe<Array<Maybe<Scalars['ID']>>>;\n  locale?: Maybe<Scalars['String']>;\n  published_at?: Maybe<Scalars['DateTime']>;\n  created_by?: Maybe<Scalars['ID']>;\n  updated_by?: Maybe<Scalars['ID']>;\n};\n\nexport type EditFileInput = {\n  name?: Maybe<Scalars['String']>;\n  alternativeText?: Maybe<Scalars['String']>;\n  caption?: Maybe<Scalars['String']>;\n  width?: Maybe<Scalars['Int']>;\n  height?: Maybe<Scalars['Int']>;\n  formats?: Maybe<Scalars['JSON']>;\n  hash?: Maybe<Scalars['String']>;\n  ext?: Maybe<Scalars['String']>;\n  mime?: Maybe<Scalars['String']>;\n  size?: Maybe<Scalars['Float']>;\n  url?: Maybe<Scalars['String']>;\n  previewUrl?: Maybe<Scalars['String']>;\n  provider?: Maybe<Scalars['String']>;\n  provider_metadata?: Maybe<Scalars['JSON']>;\n  related?: Maybe<Array<Maybe<Scalars['ID']>>>;\n  created_by?: Maybe<Scalars['ID']>;\n  updated_by?: Maybe<Scalars['ID']>;\n};\n\nexport type EditHomeBannerInput = {\n  images?: Maybe<Array<Maybe<Scalars['ID']>>>;\n  published_at?: Maybe<Scalars['DateTime']>;\n  created_by?: Maybe<Scalars['ID']>;\n  updated_by?: Maybe<Scalars['ID']>;\n};\n\nexport type EditHotelInput = {\n  name?: Maybe<Scalars['String']>;\n  stars?: Maybe<Scalars['Int']>;\n  url?: Maybe<Scalars['String']>;\n  trips?: Maybe<Array<Maybe<Scalars['ID']>>>;\n  published_at?: Maybe<Scalars['DateTime']>;\n  created_by?: Maybe<Scalars['ID']>;\n  updated_by?: Maybe<Scalars['ID']>;\n};\n\nexport type EditLocaleInput = {\n  name?: Maybe<Scalars['String']>;\n  code?: Maybe<Scalars['String']>;\n  created_by?: Maybe<Scalars['ID']>;\n  updated_by?: Maybe<Scalars['ID']>;\n};\n\nexport type EditLocationInput = {\n  name?: Maybe<Scalars['String']>;\n  description?: Maybe<Scalars['String']>;\n  images?: Maybe<Array<Maybe<Scalars['ID']>>>;\n  city?: Maybe<Scalars['ID']>;\n  coordinate?: Maybe<EditComponentCoordinateCoordinateInput>;\n  localizations?: Maybe<Array<Maybe<Scalars['ID']>>>;\n  locale?: Maybe<Scalars['String']>;\n  published_at?: Maybe<Scalars['DateTime']>;\n  created_by?: Maybe<Scalars['ID']>;\n  updated_by?: Maybe<Scalars['ID']>;\n};\n\nexport type EditPartnerInput = {\n  name?: Maybe<Scalars['String']>;\n  phone?: Maybe<Scalars['String']>;\n  address?: Maybe<Scalars['String']>;\n  email?: Maybe<Scalars['String']>;\n  trips?: Maybe<Array<Maybe<Scalars['ID']>>>;\n  agreement?: Maybe<Scalars['String']>;\n  commission?: Maybe<Scalars['Float']>;\n  revenueSource?: Maybe<Enum_Partner_Revenuesource>;\n  agreementStatus?: Maybe<Enum_Partner_Agreementstatus>;\n  notes?: Maybe<Scalars['String']>;\n  phone2?: Maybe<Scalars['String']>;\n  published_at?: Maybe<Scalars['DateTime']>;\n  created_by?: Maybe<Scalars['ID']>;\n  updated_by?: Maybe<Scalars['ID']>;\n};\n\nexport type EditReviewInput = {\n  text?: Maybe<Scalars['String']>;\n  rating?: Maybe<Scalars['Float']>;\n  author?: Maybe<Scalars['ID']>;\n  active?: Maybe<Scalars['Boolean']>;\n  trip?: Maybe<Scalars['ID']>;\n  published_at?: Maybe<Scalars['DateTime']>;\n  created_by?: Maybe<Scalars['ID']>;\n  updated_by?: Maybe<Scalars['ID']>;\n};\n\nexport type EditRoleInput = {\n  name?: Maybe<Scalars['String']>;\n  description?: Maybe<Scalars['String']>;\n  type?: Maybe<Scalars['String']>;\n  permissions?: Maybe<Array<Maybe<Scalars['ID']>>>;\n  users?: Maybe<Array<Maybe<Scalars['ID']>>>;\n  created_by?: Maybe<Scalars['ID']>;\n  updated_by?: Maybe<Scalars['ID']>;\n};\n\nexport type EditSubscriberInput = {\n  email?: Maybe<Scalars['String']>;\n  published_at?: Maybe<Scalars['DateTime']>;\n  created_by?: Maybe<Scalars['ID']>;\n  updated_by?: Maybe<Scalars['ID']>;\n};\n\nexport type EditTripInput = {\n  name?: Maybe<Scalars['String']>;\n  previewImage?: Maybe<Scalars['ID']>;\n  active?: Maybe<Scalars['Boolean']>;\n  trip_type?: Maybe<Enum_Trips_Trip_Type>;\n  description?: Maybe<Scalars['String']>;\n  duration?: Maybe<Scalars['Int']>;\n  partner?: Maybe<Scalars['ID']>;\n  currency?: Maybe<Enum_Trips_Currency>;\n  city?: Maybe<Scalars['ID']>;\n  features?: Maybe<Array<Maybe<EditComponentFeatureFeatureInput>>>;\n  basePrice?: Maybe<Scalars['Int']>;\n  basePeopleCount?: Maybe<Scalars['Int']>;\n  discount?: Maybe<Scalars['Float']>;\n  travelType?: Maybe<Enum_Trips_Traveltype>;\n  hotel?: Maybe<Scalars['ID']>;\n  plan?: Maybe<Array<Maybe<EditComponentTimelineTimelineInput>>>;\n  sequence?: Maybe<Scalars['String']>;\n  localizations?: Maybe<Array<Maybe<Scalars['ID']>>>;\n  locale?: Maybe<Scalars['String']>;\n  published_at?: Maybe<Scalars['DateTime']>;\n  created_by?: Maybe<Scalars['ID']>;\n  updated_by?: Maybe<Scalars['ID']>;\n};\n\nexport type EditUserInput = {\n  username?: Maybe<Scalars['String']>;\n  email?: Maybe<Scalars['String']>;\n  provider?: Maybe<Scalars['String']>;\n  password?: Maybe<Scalars['String']>;\n  resetPasswordToken?: Maybe<Scalars['String']>;\n  confirmationToken?: Maybe<Scalars['String']>;\n  confirmed?: Maybe<Scalars['Boolean']>;\n  blocked?: Maybe<Scalars['Boolean']>;\n  role?: Maybe<Scalars['ID']>;\n  created_by?: Maybe<Scalars['ID']>;\n  updated_by?: Maybe<Scalars['ID']>;\n};\n\nexport type UpdateBookingInput = {\n  where?: Maybe<InputId>;\n  data?: Maybe<EditBookingInput>;\n};\n\nexport type UpdateBookingPayload = {\n  __typename?: 'updateBookingPayload';\n  booking?: Maybe<Booking>;\n};\n\nexport type UpdateCityInput = {\n  where?: Maybe<InputId>;\n  data?: Maybe<EditCityInput>;\n};\n\nexport type UpdateCityPayload = {\n  __typename?: 'updateCityPayload';\n  city?: Maybe<City>;\n};\n\nexport type UpdateFeatureInput = {\n  where?: Maybe<InputId>;\n  data?: Maybe<EditFeatureInput>;\n};\n\nexport type UpdateFeaturePayload = {\n  __typename?: 'updateFeaturePayload';\n  feature?: Maybe<Feature>;\n};\n\nexport type UpdateHomeBannerInput = {\n  data?: Maybe<EditHomeBannerInput>;\n};\n\nexport type UpdateHomeBannerPayload = {\n  __typename?: 'updateHomeBannerPayload';\n  homeBanner?: Maybe<HomeBanner>;\n};\n\nexport type UpdateHotelInput = {\n  where?: Maybe<InputId>;\n  data?: Maybe<EditHotelInput>;\n};\n\nexport type UpdateHotelPayload = {\n  __typename?: 'updateHotelPayload';\n  hotel?: Maybe<Hotels>;\n};\n\nexport type UpdateLocationInput = {\n  where?: Maybe<InputId>;\n  data?: Maybe<EditLocationInput>;\n};\n\nexport type UpdateLocationPayload = {\n  __typename?: 'updateLocationPayload';\n  location?: Maybe<Location>;\n};\n\nexport type UpdatePartnerInput = {\n  where?: Maybe<InputId>;\n  data?: Maybe<EditPartnerInput>;\n};\n\nexport type UpdatePartnerPayload = {\n  __typename?: 'updatePartnerPayload';\n  partner?: Maybe<Partner>;\n};\n\nexport type UpdateReviewInput = {\n  where?: Maybe<InputId>;\n  data?: Maybe<EditReviewInput>;\n};\n\nexport type UpdateReviewPayload = {\n  __typename?: 'updateReviewPayload';\n  review?: Maybe<Review>;\n};\n\nexport type UpdateRoleInput = {\n  where?: Maybe<InputId>;\n  data?: Maybe<EditRoleInput>;\n};\n\nexport type UpdateRolePayload = {\n  __typename?: 'updateRolePayload';\n  role?: Maybe<UsersPermissionsRole>;\n};\n\nexport type UpdateSubscriberInput = {\n  where?: Maybe<InputId>;\n  data?: Maybe<EditSubscriberInput>;\n};\n\nexport type UpdateSubscriberPayload = {\n  __typename?: 'updateSubscriberPayload';\n  subscriber?: Maybe<Subscribers>;\n};\n\nexport type UpdateTripInput = {\n  where?: Maybe<InputId>;\n  data?: Maybe<EditTripInput>;\n};\n\nexport type UpdateTripPayload = {\n  __typename?: 'updateTripPayload';\n  trip?: Maybe<Trips>;\n};\n\nexport type UpdateUserInput = {\n  where?: Maybe<InputId>;\n  data?: Maybe<EditUserInput>;\n};\n\nexport type UpdateUserPayload = {\n  __typename?: 'updateUserPayload';\n  user?: Maybe<UsersPermissionsUser>;\n};\n\nexport type CreateBookingQueryMutationVariables = Exact<{\n  tripId: Scalars['ID'];\n  fullName: Scalars['String'];\n  basePrice: Scalars['Float'];\n  discount?: Maybe<Scalars['Float']>;\n  basePeopleCount: Scalars['Int'];\n  phone: Scalars['String'];\n  arrivalDate: Scalars['Date'];\n  message?: Maybe<Scalars['String']>;\n  currency: Enum_Booking_Currency;\n  email: Scalars['String'];\n  language: Scalars['String'];\n  adults: Scalars['Int'];\n  children: Scalars['Int'];\n}>;\n\n\nexport type CreateBookingQueryMutation = (\n  { __typename?: 'Mutation' }\n  & { createBooking?: Maybe<(\n    { __typename?: 'createBookingPayload' }\n    & { booking?: Maybe<(\n      { __typename?: 'Booking' }\n      & Pick<Booking, 'message'>\n    )> }\n  )> }\n);\n\nexport type CitiesQueryVariables = Exact<{\n  limit?: Maybe<Scalars['Int']>;\n  locale?: Maybe<Scalars['String']>;\n}>;\n\n\nexport type CitiesQuery = (\n  { __typename?: 'Query' }\n  & { cities?: Maybe<Array<Maybe<(\n    { __typename?: 'City' }\n    & CityInfoFragment\n  )>>> }\n);\n\nexport type GetCityQueryVariables = Exact<{\n  id: Scalars['ID'];\n}>;\n\n\nexport type GetCityQuery = (\n  { __typename?: 'Query' }\n  & { city?: Maybe<(\n    { __typename?: 'City' }\n    & CityInfoFragment\n  )> }\n);\n\nexport type GetLocalizedCityQueryVariables = Exact<{\n  id: Scalars['ID'];\n  locale: Scalars['String'];\n}>;\n\n\nexport type GetLocalizedCityQuery = (\n  { __typename?: 'Query' }\n  & { cities?: Maybe<Array<Maybe<(\n    { __typename?: 'City' }\n    & CityInfoFragment\n  )>>> }\n);\n\nexport type CityInfoFragment = (\n  { __typename?: 'City' }\n  & Pick<City, 'id' | 'name' | 'description' | 'locale'>\n  & { localizations?: Maybe<Array<Maybe<(\n    { __typename?: 'City' }\n    & Pick<City, 'id' | 'locale'>\n  )>>>, image?: Maybe<(\n    { __typename?: 'UploadFile' }\n    & Pick<UploadFile, 'id' | 'width' | 'height' | 'url' | 'formats'>\n  )> }\n);\n\nexport type FeaturesQueryVariables = Exact<{\n  locale: Scalars['String'];\n}>;\n\n\nexport type FeaturesQuery = (\n  { __typename?: 'Query' }\n  & { features?: Maybe<Array<Maybe<(\n    { __typename?: 'Feature' }\n    & Pick<Feature, 'name'>\n  )>>> }\n);\n\nexport type HomeCarousellQueryVariables = Exact<{ [key: string]: never; }>;\n\n\nexport type HomeCarousellQuery = (\n  { __typename?: 'Query' }\n  & { homeBanner?: Maybe<(\n    { __typename?: 'HomeBanner' }\n    & { images?: Maybe<Array<Maybe<(\n      { __typename?: 'UploadFile' }\n      & Pick<UploadFile, 'id' | 'width' | 'height' | 'url' | 'formats'>\n    )>>> }\n  )> }\n);\n\nexport type GetLocationsQueryVariables = Exact<{\n  locale: Scalars['String'];\n  ids: Array<Scalars['String']> | Scalars['String'];\n}>;\n\n\nexport type GetLocationsQuery = (\n  { __typename?: 'Query' }\n  & { locations?: Maybe<Array<Maybe<(\n    { __typename?: 'Location' }\n    & Pick<Location, 'id' | 'name' | 'description' | 'locale'>\n    & { coordinate?: Maybe<(\n      { __typename?: 'ComponentCoordinateCoordinate' }\n      & Pick<ComponentCoordinateCoordinate, 'latitude' | 'longitude'>\n    )>, images?: Maybe<Array<Maybe<(\n      { __typename?: 'UploadFile' }\n      & Pick<UploadFile, 'id' | 'width' | 'height' | 'url' | 'formats'>\n    )>>>, city?: Maybe<(\n      { __typename?: 'City' }\n      & Pick<City, 'id' | 'name' | 'description' | 'locale'>\n      & { localizations?: Maybe<Array<Maybe<(\n        { __typename?: 'City' }\n        & Pick<City, 'id' | 'locale'>\n      )>>>, image?: Maybe<(\n        { __typename?: 'UploadFile' }\n        & Pick<UploadFile, 'id' | 'width' | 'height' | 'url' | 'formats'>\n      )> }\n    )> }\n  )>>> }\n);\n\nexport type AddToNewsLetterMutationVariables = Exact<{\n  email: Scalars['String'];\n}>;\n\n\nexport type AddToNewsLetterMutation = (\n  { __typename?: 'Mutation' }\n  & { createSubscriber?: Maybe<(\n    { __typename?: 'createSubscriberPayload' }\n    & { subscriber?: Maybe<(\n      { __typename?: 'Subscribers' }\n      & Pick<Subscribers, 'email'>\n    )> }\n  )> }\n);\n\nexport type TripsQueryVariables = Exact<{\n  limit?: Maybe<Scalars['Int']>;\n  locale?: Maybe<Scalars['String']>;\n  where?: Maybe<Scalars['JSON']>;\n}>;\n\n\nexport type TripsQuery = (\n  { __typename?: 'Query' }\n  & { trips?: Maybe<Array<Maybe<(\n    { __typename?: 'Trips' }\n    & TripInfoFragment\n  )>>> }\n);\n\nexport type GetTripQueryVariables = Exact<{\n  id: Scalars['ID'];\n}>;\n\n\nexport type GetTripQuery = (\n  { __typename?: 'Query' }\n  & { trip?: Maybe<(\n    { __typename?: 'Trips' }\n    & TripInfoFragment\n  )> }\n);\n\nexport type GetLocalizedTripQueryVariables = Exact<{\n  id: Scalars['ID'];\n  locale: Scalars['String'];\n}>;\n\n\nexport type GetLocalizedTripQuery = (\n  { __typename?: 'Query' }\n  & { trips?: Maybe<Array<Maybe<(\n    { __typename?: 'Trips' }\n    & TripInfoFragment\n  )>>> }\n);\n\nexport type TripInfoFragment = (\n  { __typename?: 'Trips' }\n  & Pick<Trips, 'id' | 'name' | 'active' | 'description' | 'locale' | 'trip_type' | 'duration' | 'travelType' | 'basePrice' | 'discount' | 'currency' | 'basePeopleCount'>\n  & { city?: Maybe<(\n    { __typename?: 'City' }\n    & Pick<City, 'id' | 'name'>\n  )>, hotel?: Maybe<(\n    { __typename?: 'Hotels' }\n    & Pick<Hotels, 'id' | 'name' | 'url' | 'stars'>\n  )>, plan?: Maybe<Array<Maybe<(\n    { __typename?: 'ComponentTimelineTimeline' }\n    & Pick<ComponentTimelineTimeline, 'day' | 'transportationType' | 'description' | 'restDay'>\n    & { locations?: Maybe<Array<Maybe<(\n      { __typename?: 'Location' }\n      & Pick<Location, 'id' | 'name'>\n      & { city?: Maybe<(\n        { __typename?: 'City' }\n        & Pick<City, 'id'>\n      )> }\n    )>>>, travelTo?: Maybe<(\n      { __typename?: 'City' }\n      & Pick<City, 'id' | 'name'>\n    )> }\n  )>>>, previewImage?: Maybe<(\n    { __typename?: 'UploadFile' }\n    & Pick<UploadFile, 'id' | 'width' | 'height' | 'url' | 'formats'>\n  )>, localizations?: Maybe<Array<Maybe<(\n    { __typename?: 'Trips' }\n    & Pick<Trips, 'id' | 'locale'>\n  )>>>, features?: Maybe<Array<Maybe<(\n    { __typename?: 'ComponentFeatureFeature' }\n    & Pick<ComponentFeatureFeature, 'included'>\n    & { feature?: Maybe<(\n      { __typename?: 'Feature' }\n      & Pick<Feature, 'name' | 'info'>\n    )> }\n  )>>> }\n);\n\nexport const CityInfoFragmentDoc = gql`\n    fragment CityInfo on City {\n  id\n  name\n  description\n  locale\n  localizations {\n    id\n    locale\n  }\n  image {\n    id\n    width\n    height\n    url\n    formats\n  }\n}\n    `;\nexport const TripInfoFragmentDoc = gql`\n    fragment tripInfo on Trips {\n  id\n  name\n  active\n  description\n  locale\n  trip_type\n  duration\n  travelType\n  city {\n    id\n    name\n  }\n  hotel {\n    id\n    name\n    url\n    stars\n  }\n  plan {\n    day\n    locations {\n      id\n      name\n      city {\n        id\n      }\n    }\n    transportationType\n    travelTo {\n      id\n      name\n    }\n    description\n    restDay\n  }\n  previewImage {\n    id\n    width\n    height\n    url\n    formats\n  }\n  localizations {\n    id\n    locale\n  }\n  basePrice\n  discount\n  currency\n  basePeopleCount\n  features {\n    included\n    feature {\n      name\n      info\n    }\n  }\n}\n    `;\nexport const CreateBookingQueryDocument = gql`\n    mutation createBookingQuery($tripId: ID!, $fullName: String!, $basePrice: Float!, $discount: Float = 0, $basePeopleCount: Int!, $phone: String!, $arrivalDate: Date!, $message: String, $currency: ENUM_BOOKING_CURRENCY!, $email: String!, $language: String!, $adults: Int!, $children: Int!) {\n  createBooking(\n    input: {data: {trip: $tripId, basePrice: $basePrice, discount: $discount, message: $message, fullName: $fullName, basePeopleCount: $basePeopleCount, phone: $phone, arrivalDate: $arrivalDate, currency: $currency, email: $email, language: $language, adults: $adults, children: $children}}\n  ) {\n    booking {\n      message\n    }\n  }\n}\n    `;\n\n  @Injectable({\n    providedIn: 'root'\n  })\n  export class CreateBookingQueryGQL extends Apollo.Mutation<CreateBookingQueryMutation, CreateBookingQueryMutationVariables> {\n    document = CreateBookingQueryDocument;\n    \n    constructor(apollo: Apollo.Apollo) {\n      super(apollo);\n    }\n  }\nexport const CitiesDocument = gql`\n    query cities($limit: Int, $locale: String) {\n  cities(limit: $limit, locale: $locale) {\n    ...CityInfo\n  }\n}\n    ${CityInfoFragmentDoc}`;\n\n  @Injectable({\n    providedIn: 'root'\n  })\n  export class CitiesGQL extends Apollo.Query<CitiesQuery, CitiesQueryVariables> {\n    document = CitiesDocument;\n    \n    constructor(apollo: Apollo.Apollo) {\n      super(apollo);\n    }\n  }\nexport const GetCityDocument = gql`\n    query getCity($id: ID!) {\n  city(id: $id) {\n    ...CityInfo\n  }\n}\n    ${CityInfoFragmentDoc}`;\n\n  @Injectable({\n    providedIn: 'root'\n  })\n  export class GetCityGQL extends Apollo.Query<GetCityQuery, GetCityQueryVariables> {\n    document = GetCityDocument;\n    \n    constructor(apollo: Apollo.Apollo) {\n      super(apollo);\n    }\n  }\nexport const GetLocalizedCityDocument = gql`\n    query getLocalizedCity($id: ID!, $locale: String!) {\n  cities(locale: $locale, where: {_or: [{localizations: {id: $id}}, {id: $id}]}) {\n    ...CityInfo\n  }\n}\n    ${CityInfoFragmentDoc}`;\n\n  @Injectable({\n    providedIn: 'root'\n  })\n  export class GetLocalizedCityGQL extends Apollo.Query<GetLocalizedCityQuery, GetLocalizedCityQueryVariables> {\n    document = GetLocalizedCityDocument;\n    \n    constructor(apollo: Apollo.Apollo) {\n      super(apollo);\n    }\n  }\nexport const FeaturesDocument = gql`\n    query features($locale: String!) {\n  features(locale: $locale) {\n    name\n  }\n}\n    `;\n\n  @Injectable({\n    providedIn: 'root'\n  })\n  export class FeaturesGQL extends Apollo.Query<FeaturesQuery, FeaturesQueryVariables> {\n    document = FeaturesDocument;\n    \n    constructor(apollo: Apollo.Apollo) {\n      super(apollo);\n    }\n  }\nexport const HomeCarousellDocument = gql`\n    query homeCarousell {\n  homeBanner {\n    images {\n      id\n      width\n      height\n      url\n      formats\n    }\n  }\n}\n    `;\n\n  @Injectable({\n    providedIn: 'root'\n  })\n  export class HomeCarousellGQL extends Apollo.Query<HomeCarousellQuery, HomeCarousellQueryVariables> {\n    document = HomeCarousellDocument;\n    \n    constructor(apollo: Apollo.Apollo) {\n      super(apollo);\n    }\n  }\nexport const GetLocationsDocument = gql`\n    query getLocations($locale: String!, $ids: [String!]!) {\n  locations(locale: $locale, where: {id_in: $ids}) {\n    id\n    name\n    description\n    coordinate {\n      latitude\n      longitude\n    }\n    locale\n    images {\n      id\n      width\n      height\n      url\n      formats\n    }\n    city {\n      id\n      name\n      description\n      locale\n      localizations {\n        id\n        locale\n      }\n      image {\n        id\n        width\n        height\n        url\n        formats\n      }\n    }\n  }\n}\n    `;\n\n  @Injectable({\n    providedIn: 'root'\n  })\n  export class GetLocationsGQL extends Apollo.Query<GetLocationsQuery, GetLocationsQueryVariables> {\n    document = GetLocationsDocument;\n    \n    constructor(apollo: Apollo.Apollo) {\n      super(apollo);\n    }\n  }\nexport const AddToNewsLetterDocument = gql`\n    mutation addToNewsLetter($email: String!) {\n  createSubscriber(input: {data: {email: $email}}) {\n    subscriber {\n      email\n    }\n  }\n}\n    `;\n\n  @Injectable({\n    providedIn: 'root'\n  })\n  export class AddToNewsLetterGQL extends Apollo.Mutation<AddToNewsLetterMutation, AddToNewsLetterMutationVariables> {\n    document = AddToNewsLetterDocument;\n    \n    constructor(apollo: Apollo.Apollo) {\n      super(apollo);\n    }\n  }\nexport const TripsDocument = gql`\n    query trips($limit: Int = 10, $locale: String = \"en\", $where: JSON) {\n  trips(limit: $limit, locale: $locale, where: $where) {\n    ...tripInfo\n  }\n}\n    ${TripInfoFragmentDoc}`;\n\n  @Injectable({\n    providedIn: 'root'\n  })\n  export class TripsGQL extends Apollo.Query<TripsQuery, TripsQueryVariables> {\n    document = TripsDocument;\n    \n    constructor(apollo: Apollo.Apollo) {\n      super(apollo);\n    }\n  }\nexport const GetTripDocument = gql`\n    query getTrip($id: ID!) {\n  trip(id: $id) {\n    ...tripInfo\n  }\n}\n    ${TripInfoFragmentDoc}`;\n\n  @Injectable({\n    providedIn: 'root'\n  })\n  export class GetTripGQL extends Apollo.Query<GetTripQuery, GetTripQueryVariables> {\n    document = GetTripDocument;\n    \n    constructor(apollo: Apollo.Apollo) {\n      super(apollo);\n    }\n  }\nexport const GetLocalizedTripDocument = gql`\n    query getLocalizedTrip($id: ID!, $locale: String!) {\n  trips(locale: $locale, where: {_or: [{localizations: {id: $id}}, {id: $id}]}) {\n    ...tripInfo\n  }\n}\n    ${TripInfoFragmentDoc}`;\n\n  @Injectable({\n    providedIn: 'root'\n  })\n  export class GetLocalizedTripGQL extends Apollo.Query<GetLocalizedTripQuery, GetLocalizedTripQueryVariables> {\n    document = GetLocalizedTripDocument;\n    \n    constructor(apollo: Apollo.Apollo) {\n      super(apollo);\n    }\n  }",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "apollo",
                        "type": "Apollo.Apollo"
                    }
                ],
                "line": 3784,
                "jsdoctags": [
                    {
                        "name": "apollo",
                        "type": "Apollo.Apollo",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "type": "injectable"
        },
        {
            "name": "BookingService",
            "id": "injectable-BookingService-b5f72f7ad4ce95804cd2eb9824c88bfd",
            "file": "src/app/data/services/booking.service.ts",
            "properties": [],
            "methods": [
                {
                    "name": "cancelBooking",
                    "args": [
                        {
                            "name": "id",
                            "type": "string"
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 19,
                    "modifierKind": [
                        120
                    ],
                    "jsdoctags": [
                        {
                            "name": "id",
                            "type": "string",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "confirmBooking",
                    "args": [
                        {
                            "name": "id",
                            "type": "string"
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 24,
                    "modifierKind": [
                        120
                    ],
                    "jsdoctags": [
                        {
                            "name": "id",
                            "type": "string",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "createBooking",
                    "args": [
                        {
                            "name": "tripId",
                            "type": "string"
                        },
                        {
                            "name": "fullName",
                            "type": "string"
                        },
                        {
                            "name": "basePrice",
                            "type": "number"
                        },
                        {
                            "name": "basePeopleCount",
                            "type": "number"
                        },
                        {
                            "name": "discount",
                            "type": "number"
                        },
                        {
                            "name": "currency",
                            "type": "Enum_Booking_Currency"
                        },
                        {
                            "name": "phone",
                            "type": "string"
                        },
                        {
                            "name": "arrivalDate",
                            "type": "Date"
                        },
                        {
                            "name": "email",
                            "type": "string"
                        },
                        {
                            "name": "adults",
                            "type": "number"
                        },
                        {
                            "name": "children",
                            "type": "number"
                        },
                        {
                            "name": "message",
                            "type": "string",
                            "optional": true
                        }
                    ],
                    "optional": false,
                    "returnType": "Promise<boolean>",
                    "typeParameters": [],
                    "line": 30,
                    "modifierKind": [
                        120
                    ],
                    "jsdoctags": [
                        {
                            "name": "tripId",
                            "type": "string",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "fullName",
                            "type": "string",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "basePrice",
                            "type": "number",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "basePeopleCount",
                            "type": "number",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "discount",
                            "type": "number",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "currency",
                            "type": "Enum_Booking_Currency",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "phone",
                            "type": "string",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "arrivalDate",
                            "type": "Date",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "email",
                            "type": "string",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "adults",
                            "type": "number",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "children",
                            "type": "number",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "message",
                            "type": "string",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "description": "",
            "sourceCode": "import { formatDate } from '@angular/common';\nimport { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { environment } from 'src/environments/environment.prod';\nimport { LocalService } from './local.service';\nimport {\n  CreateBookingQueryGQL,\n  Enum_Booking_Currency,\n} from './saferniGraphql.service';\n\n@Injectable({ providedIn: 'root' })\nexport class BookingService {\n  constructor(\n    private bookingGql: CreateBookingQueryGQL,\n    private loc: LocalService,\n    private http: HttpClient\n  ) {}\n\n  async cancelBooking(id: string) {\n    await this.http\n      .get(`${environment.api}/cancelBooking?id=${id}`)\n      .toPromise();\n  }\n  async confirmBooking(id: string) {\n    await this.http\n      .get(`${environment.api}/confirmBooking?id=${id}`)\n      .toPromise();\n  }\n\n  async createBooking(\n    tripId: string,\n    fullName: string,\n    basePrice: number,\n    basePeopleCount: number,\n    discount: number,\n    currency: Enum_Booking_Currency,\n    phone: string,\n    arrivalDate: Date,\n    email: string,\n    adults: number,\n    children: number,\n    message?: string\n  ): Promise<boolean> {\n    let result = await this.bookingGql\n      .mutate({\n        tripId: tripId,\n        fullName: fullName,\n        basePrice: basePrice,\n        basePeopleCount: basePeopleCount,\n        discount: discount,\n        currency: currency,\n        phone: phone,\n        arrivalDate: formatDate(arrivalDate, 'yyyy-MM-dd', 'en'),\n        message: message,\n        email: email,\n        language: this.loc.locale,\n        adults,\n        children,\n      })\n      .toPromise();\n\n    return result.data?.createBooking != null && !result.errors;\n  }\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "bookingGql",
                        "type": "CreateBookingQueryGQL"
                    },
                    {
                        "name": "loc",
                        "type": "LocalService"
                    },
                    {
                        "name": "http",
                        "type": "HttpClient"
                    }
                ],
                "line": 12,
                "jsdoctags": [
                    {
                        "name": "bookingGql",
                        "type": "CreateBookingQueryGQL",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "loc",
                        "type": "LocalService",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "http",
                        "type": "HttpClient",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "type": "injectable"
        },
        {
            "name": "CitiesGQL",
            "id": "injectable-CitiesGQL-54bb7cbcdd682e4d53ca5e8a5c5399f6",
            "file": "src/app/data/services/saferniGraphql.service.ts",
            "properties": [
                {
                    "name": "document",
                    "defaultValue": "CitiesDocument",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 3637
                }
            ],
            "methods": [],
            "description": "",
            "sourceCode": "import { gql } from 'apollo-angular';\nimport { Injectable } from '@angular/core';\nimport * as Apollo from 'apollo-angular';\nexport type Maybe<T> = T | null;\nexport type Exact<T extends { [key: string]: unknown }> = { [K in keyof T]: T[K] };\nexport type MakeOptional<T, K extends keyof T> = Omit<T, K> & { [SubKey in K]?: Maybe<T[SubKey]> };\nexport type MakeMaybe<T, K extends keyof T> = Omit<T, K> & { [SubKey in K]: Maybe<T[SubKey]> };\n/** All built-in and custom scalars, mapped to their actual values */\nexport type Scalars = {\n  ID: string;\n  String: string;\n  Boolean: boolean;\n  Int: number;\n  Float: number;\n  /** A date string, such as 2007-12-03, compliant with the `full-date` format outlined in section 5.6 of the RFC 3339 profile of the ISO 8601 standard for representation of dates and times using the Gregorian calendar. */\n  Date: any;\n  /** A date-time string at UTC, such as 2007-12-03T10:15:30Z, compliant with the `date-time` format outlined in section 5.6 of the RFC 3339 profile of the ISO 8601 standard for representation of dates and times using the Gregorian calendar. */\n  DateTime: any;\n  /** The `JSON` scalar type represents JSON values as specified by [ECMA-404](http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf). */\n  JSON: any;\n  /** The `Long` scalar type represents 52-bit integers */\n  Long: any;\n  /** A time string with format: HH:mm:ss.SSS */\n  Time: any;\n  /** The `Upload` scalar type represents a file upload. */\n  Upload: any;\n};\n\n\n\nexport type AdminUser = {\n  __typename?: 'AdminUser';\n  id: Scalars['ID'];\n  username?: Maybe<Scalars['String']>;\n  firstname: Scalars['String'];\n  lastname: Scalars['String'];\n};\n\nexport type Booking = {\n  __typename?: 'Booking';\n  id: Scalars['ID'];\n  _id: Scalars['ID'];\n  createdAt: Scalars['DateTime'];\n  updatedAt: Scalars['DateTime'];\n  trip?: Maybe<Trips>;\n  approved?: Maybe<Scalars['Boolean']>;\n  basePrice: Scalars['Float'];\n  currency: Enum_Booking_Currency;\n  basePeopleCount: Scalars['Int'];\n  discount?: Maybe<Scalars['Float']>;\n  fullName: Scalars['String'];\n  phone: Scalars['String'];\n  message?: Maybe<Scalars['String']>;\n  arrivalDate: Scalars['Date'];\n  language?: Maybe<Scalars['String']>;\n  userBookingStatus?: Maybe<Enum_Booking_Userbookingstatus>;\n  email: Scalars['String'];\n  adults: Scalars['Int'];\n  children?: Maybe<Scalars['Int']>;\n  totalPrice?: Maybe<Scalars['Float']>;\n  published_at?: Maybe<Scalars['DateTime']>;\n};\n\nexport type BookingAggregator = {\n  __typename?: 'BookingAggregator';\n  count?: Maybe<Scalars['Int']>;\n  totalCount?: Maybe<Scalars['Int']>;\n  sum?: Maybe<BookingAggregatorSum>;\n  avg?: Maybe<BookingAggregatorAvg>;\n  min?: Maybe<BookingAggregatorMin>;\n  max?: Maybe<BookingAggregatorMax>;\n};\n\nexport type BookingAggregatorAvg = {\n  __typename?: 'BookingAggregatorAvg';\n  basePrice?: Maybe<Scalars['Float']>;\n  basePeopleCount?: Maybe<Scalars['Float']>;\n  discount?: Maybe<Scalars['Float']>;\n  adults?: Maybe<Scalars['Float']>;\n  children?: Maybe<Scalars['Float']>;\n  totalPrice?: Maybe<Scalars['Float']>;\n};\n\nexport type BookingAggregatorMax = {\n  __typename?: 'BookingAggregatorMax';\n  basePrice?: Maybe<Scalars['Float']>;\n  basePeopleCount?: Maybe<Scalars['Float']>;\n  discount?: Maybe<Scalars['Float']>;\n  adults?: Maybe<Scalars['Float']>;\n  children?: Maybe<Scalars['Float']>;\n  totalPrice?: Maybe<Scalars['Float']>;\n};\n\nexport type BookingAggregatorMin = {\n  __typename?: 'BookingAggregatorMin';\n  basePrice?: Maybe<Scalars['Float']>;\n  basePeopleCount?: Maybe<Scalars['Float']>;\n  discount?: Maybe<Scalars['Float']>;\n  adults?: Maybe<Scalars['Float']>;\n  children?: Maybe<Scalars['Float']>;\n  totalPrice?: Maybe<Scalars['Float']>;\n};\n\nexport type BookingAggregatorSum = {\n  __typename?: 'BookingAggregatorSum';\n  basePrice?: Maybe<Scalars['Float']>;\n  basePeopleCount?: Maybe<Scalars['Float']>;\n  discount?: Maybe<Scalars['Float']>;\n  adults?: Maybe<Scalars['Float']>;\n  children?: Maybe<Scalars['Float']>;\n  totalPrice?: Maybe<Scalars['Float']>;\n};\n\nexport type BookingConnection = {\n  __typename?: 'BookingConnection';\n  values?: Maybe<Array<Maybe<Booking>>>;\n  groupBy?: Maybe<BookingGroupBy>;\n  aggregate?: Maybe<BookingAggregator>;\n};\n\nexport type BookingConnectionAdults = {\n  __typename?: 'BookingConnectionAdults';\n  key?: Maybe<Scalars['Int']>;\n  connection?: Maybe<BookingConnection>;\n};\n\nexport type BookingConnectionApproved = {\n  __typename?: 'BookingConnectionApproved';\n  key?: Maybe<Scalars['Boolean']>;\n  connection?: Maybe<BookingConnection>;\n};\n\nexport type BookingConnectionArrivalDate = {\n  __typename?: 'BookingConnectionArrivalDate';\n  key?: Maybe<Scalars['ID']>;\n  connection?: Maybe<BookingConnection>;\n};\n\nexport type BookingConnectionBasePeopleCount = {\n  __typename?: 'BookingConnectionBasePeopleCount';\n  key?: Maybe<Scalars['Int']>;\n  connection?: Maybe<BookingConnection>;\n};\n\nexport type BookingConnectionBasePrice = {\n  __typename?: 'BookingConnectionBasePrice';\n  key?: Maybe<Scalars['Float']>;\n  connection?: Maybe<BookingConnection>;\n};\n\nexport type BookingConnectionChildren = {\n  __typename?: 'BookingConnectionChildren';\n  key?: Maybe<Scalars['Int']>;\n  connection?: Maybe<BookingConnection>;\n};\n\nexport type BookingConnectionCreatedAt = {\n  __typename?: 'BookingConnectionCreatedAt';\n  key?: Maybe<Scalars['DateTime']>;\n  connection?: Maybe<BookingConnection>;\n};\n\nexport type BookingConnectionCurrency = {\n  __typename?: 'BookingConnectionCurrency';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<BookingConnection>;\n};\n\nexport type BookingConnectionDiscount = {\n  __typename?: 'BookingConnectionDiscount';\n  key?: Maybe<Scalars['Float']>;\n  connection?: Maybe<BookingConnection>;\n};\n\nexport type BookingConnectionEmail = {\n  __typename?: 'BookingConnectionEmail';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<BookingConnection>;\n};\n\nexport type BookingConnectionFullName = {\n  __typename?: 'BookingConnectionFullName';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<BookingConnection>;\n};\n\nexport type BookingConnectionId = {\n  __typename?: 'BookingConnectionId';\n  key?: Maybe<Scalars['ID']>;\n  connection?: Maybe<BookingConnection>;\n};\n\nexport type BookingConnectionLanguage = {\n  __typename?: 'BookingConnectionLanguage';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<BookingConnection>;\n};\n\nexport type BookingConnectionMessage = {\n  __typename?: 'BookingConnectionMessage';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<BookingConnection>;\n};\n\nexport type BookingConnectionPhone = {\n  __typename?: 'BookingConnectionPhone';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<BookingConnection>;\n};\n\nexport type BookingConnectionPublished_At = {\n  __typename?: 'BookingConnectionPublished_at';\n  key?: Maybe<Scalars['DateTime']>;\n  connection?: Maybe<BookingConnection>;\n};\n\nexport type BookingConnectionTotalPrice = {\n  __typename?: 'BookingConnectionTotalPrice';\n  key?: Maybe<Scalars['Float']>;\n  connection?: Maybe<BookingConnection>;\n};\n\nexport type BookingConnectionTrip = {\n  __typename?: 'BookingConnectionTrip';\n  key?: Maybe<Scalars['ID']>;\n  connection?: Maybe<BookingConnection>;\n};\n\nexport type BookingConnectionUpdatedAt = {\n  __typename?: 'BookingConnectionUpdatedAt';\n  key?: Maybe<Scalars['DateTime']>;\n  connection?: Maybe<BookingConnection>;\n};\n\nexport type BookingConnectionUserBookingStatus = {\n  __typename?: 'BookingConnectionUserBookingStatus';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<BookingConnection>;\n};\n\nexport type BookingConnection_Id = {\n  __typename?: 'BookingConnection_id';\n  key?: Maybe<Scalars['ID']>;\n  connection?: Maybe<BookingConnection>;\n};\n\nexport type BookingGroupBy = {\n  __typename?: 'BookingGroupBy';\n  id?: Maybe<Array<Maybe<BookingConnectionId>>>;\n  _id?: Maybe<Array<Maybe<BookingConnection_Id>>>;\n  createdAt?: Maybe<Array<Maybe<BookingConnectionCreatedAt>>>;\n  updatedAt?: Maybe<Array<Maybe<BookingConnectionUpdatedAt>>>;\n  trip?: Maybe<Array<Maybe<BookingConnectionTrip>>>;\n  approved?: Maybe<Array<Maybe<BookingConnectionApproved>>>;\n  basePrice?: Maybe<Array<Maybe<BookingConnectionBasePrice>>>;\n  currency?: Maybe<Array<Maybe<BookingConnectionCurrency>>>;\n  basePeopleCount?: Maybe<Array<Maybe<BookingConnectionBasePeopleCount>>>;\n  discount?: Maybe<Array<Maybe<BookingConnectionDiscount>>>;\n  fullName?: Maybe<Array<Maybe<BookingConnectionFullName>>>;\n  phone?: Maybe<Array<Maybe<BookingConnectionPhone>>>;\n  message?: Maybe<Array<Maybe<BookingConnectionMessage>>>;\n  arrivalDate?: Maybe<Array<Maybe<BookingConnectionArrivalDate>>>;\n  language?: Maybe<Array<Maybe<BookingConnectionLanguage>>>;\n  userBookingStatus?: Maybe<Array<Maybe<BookingConnectionUserBookingStatus>>>;\n  email?: Maybe<Array<Maybe<BookingConnectionEmail>>>;\n  adults?: Maybe<Array<Maybe<BookingConnectionAdults>>>;\n  children?: Maybe<Array<Maybe<BookingConnectionChildren>>>;\n  totalPrice?: Maybe<Array<Maybe<BookingConnectionTotalPrice>>>;\n  published_at?: Maybe<Array<Maybe<BookingConnectionPublished_At>>>;\n};\n\nexport type BookingInput = {\n  trip?: Maybe<Scalars['ID']>;\n  approved?: Maybe<Scalars['Boolean']>;\n  basePrice: Scalars['Float'];\n  currency: Enum_Booking_Currency;\n  basePeopleCount: Scalars['Int'];\n  discount?: Maybe<Scalars['Float']>;\n  fullName: Scalars['String'];\n  phone: Scalars['String'];\n  message?: Maybe<Scalars['String']>;\n  arrivalDate: Scalars['Date'];\n  language?: Maybe<Scalars['String']>;\n  userBookingStatus?: Maybe<Enum_Booking_Userbookingstatus>;\n  email: Scalars['String'];\n  adults: Scalars['Int'];\n  children?: Maybe<Scalars['Int']>;\n  totalPrice?: Maybe<Scalars['Float']>;\n  published_at?: Maybe<Scalars['DateTime']>;\n  created_by?: Maybe<Scalars['ID']>;\n  updated_by?: Maybe<Scalars['ID']>;\n};\n\nexport type City = {\n  __typename?: 'City';\n  id: Scalars['ID'];\n  _id: Scalars['ID'];\n  createdAt: Scalars['DateTime'];\n  updatedAt: Scalars['DateTime'];\n  name: Scalars['String'];\n  description?: Maybe<Scalars['String']>;\n  image?: Maybe<UploadFile>;\n  locale?: Maybe<Scalars['String']>;\n  published_at?: Maybe<Scalars['DateTime']>;\n  locations?: Maybe<Array<Maybe<Location>>>;\n  localizations?: Maybe<Array<Maybe<City>>>;\n};\n\n\nexport type CityLocationsArgs = {\n  sort?: Maybe<Scalars['String']>;\n  limit?: Maybe<Scalars['Int']>;\n  start?: Maybe<Scalars['Int']>;\n  where?: Maybe<Scalars['JSON']>;\n};\n\n\nexport type CityLocalizationsArgs = {\n  sort?: Maybe<Scalars['String']>;\n  limit?: Maybe<Scalars['Int']>;\n  start?: Maybe<Scalars['Int']>;\n  where?: Maybe<Scalars['JSON']>;\n};\n\nexport type CityAggregator = {\n  __typename?: 'CityAggregator';\n  count?: Maybe<Scalars['Int']>;\n  totalCount?: Maybe<Scalars['Int']>;\n};\n\nexport type CityConnection = {\n  __typename?: 'CityConnection';\n  values?: Maybe<Array<Maybe<City>>>;\n  groupBy?: Maybe<CityGroupBy>;\n  aggregate?: Maybe<CityAggregator>;\n};\n\nexport type CityConnectionCreatedAt = {\n  __typename?: 'CityConnectionCreatedAt';\n  key?: Maybe<Scalars['DateTime']>;\n  connection?: Maybe<CityConnection>;\n};\n\nexport type CityConnectionDescription = {\n  __typename?: 'CityConnectionDescription';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<CityConnection>;\n};\n\nexport type CityConnectionId = {\n  __typename?: 'CityConnectionId';\n  key?: Maybe<Scalars['ID']>;\n  connection?: Maybe<CityConnection>;\n};\n\nexport type CityConnectionImage = {\n  __typename?: 'CityConnectionImage';\n  key?: Maybe<Scalars['ID']>;\n  connection?: Maybe<CityConnection>;\n};\n\nexport type CityConnectionLocale = {\n  __typename?: 'CityConnectionLocale';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<CityConnection>;\n};\n\nexport type CityConnectionName = {\n  __typename?: 'CityConnectionName';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<CityConnection>;\n};\n\nexport type CityConnectionPublished_At = {\n  __typename?: 'CityConnectionPublished_at';\n  key?: Maybe<Scalars['DateTime']>;\n  connection?: Maybe<CityConnection>;\n};\n\nexport type CityConnectionUpdatedAt = {\n  __typename?: 'CityConnectionUpdatedAt';\n  key?: Maybe<Scalars['DateTime']>;\n  connection?: Maybe<CityConnection>;\n};\n\nexport type CityConnection_Id = {\n  __typename?: 'CityConnection_id';\n  key?: Maybe<Scalars['ID']>;\n  connection?: Maybe<CityConnection>;\n};\n\nexport type CityGroupBy = {\n  __typename?: 'CityGroupBy';\n  id?: Maybe<Array<Maybe<CityConnectionId>>>;\n  _id?: Maybe<Array<Maybe<CityConnection_Id>>>;\n  createdAt?: Maybe<Array<Maybe<CityConnectionCreatedAt>>>;\n  updatedAt?: Maybe<Array<Maybe<CityConnectionUpdatedAt>>>;\n  name?: Maybe<Array<Maybe<CityConnectionName>>>;\n  description?: Maybe<Array<Maybe<CityConnectionDescription>>>;\n  image?: Maybe<Array<Maybe<CityConnectionImage>>>;\n  locale?: Maybe<Array<Maybe<CityConnectionLocale>>>;\n  published_at?: Maybe<Array<Maybe<CityConnectionPublished_At>>>;\n};\n\nexport type CityInput = {\n  name: Scalars['String'];\n  description?: Maybe<Scalars['String']>;\n  image?: Maybe<Scalars['ID']>;\n  locations?: Maybe<Array<Maybe<Scalars['ID']>>>;\n  localizations?: Maybe<Array<Maybe<Scalars['ID']>>>;\n  locale?: Maybe<Scalars['String']>;\n  published_at?: Maybe<Scalars['DateTime']>;\n  created_by?: Maybe<Scalars['ID']>;\n  updated_by?: Maybe<Scalars['ID']>;\n};\n\nexport type ComponentCoordinateCoordinate = {\n  __typename?: 'ComponentCoordinateCoordinate';\n  id: Scalars['ID'];\n  _id: Scalars['ID'];\n  latitude: Scalars['Float'];\n  longitude: Scalars['Float'];\n};\n\nexport type ComponentCoordinateCoordinateInput = {\n  latitude: Scalars['Float'];\n  longitude: Scalars['Float'];\n};\n\nexport type ComponentFeatureFeature = {\n  __typename?: 'ComponentFeatureFeature';\n  id: Scalars['ID'];\n  _id: Scalars['ID'];\n  feature?: Maybe<Feature>;\n  included?: Maybe<Scalars['Boolean']>;\n};\n\nexport type ComponentFeatureFeatureInput = {\n  feature?: Maybe<Scalars['ID']>;\n  included?: Maybe<Scalars['Boolean']>;\n};\n\nexport type ComponentPricePrice = {\n  __typename?: 'ComponentPricePrice';\n  id: Scalars['ID'];\n  _id: Scalars['ID'];\n  basePrice: Scalars['Float'];\n  currency: Enum_Componentpriceprice_Currency;\n  basePeopleCount: Scalars['Int'];\n  extraAdultFee?: Maybe<Scalars['Float']>;\n  discount?: Maybe<Scalars['Float']>;\n};\n\nexport type ComponentPricePriceInput = {\n  basePrice: Scalars['Float'];\n  currency?: Maybe<Enum_Componentpriceprice_Currency>;\n  basePeopleCount: Scalars['Int'];\n  extraAdultFee?: Maybe<Scalars['Float']>;\n  discount?: Maybe<Scalars['Float']>;\n};\n\nexport type ComponentTimelineTimeline = {\n  __typename?: 'ComponentTimelineTimeline';\n  id: Scalars['ID'];\n  _id: Scalars['ID'];\n  day: Scalars['Int'];\n  description?: Maybe<Scalars['String']>;\n  travelTo?: Maybe<City>;\n  transportationType?: Maybe<Enum_Componenttimelinetimeline_Transportationtype>;\n  restDay?: Maybe<Scalars['Boolean']>;\n  locations?: Maybe<Array<Maybe<Location>>>;\n};\n\n\nexport type ComponentTimelineTimelineLocationsArgs = {\n  sort?: Maybe<Scalars['String']>;\n  limit?: Maybe<Scalars['Int']>;\n  start?: Maybe<Scalars['Int']>;\n  where?: Maybe<Scalars['JSON']>;\n};\n\nexport type ComponentTimelineTimelineInput = {\n  day: Scalars['Int'];\n  description?: Maybe<Scalars['String']>;\n  locations?: Maybe<Array<Maybe<Scalars['ID']>>>;\n  travelTo?: Maybe<Scalars['ID']>;\n  transportationType?: Maybe<Enum_Componenttimelinetimeline_Transportationtype>;\n  restDay?: Maybe<Scalars['Boolean']>;\n};\n\n\n\nexport enum Enum_Booking_Currency {\n  Dollar = 'dollar',\n  Lira = 'lira'\n}\n\nexport enum Enum_Booking_Userbookingstatus {\n  Initial = 'initial',\n  Confirmed = 'confirmed',\n  Canceled = 'canceled'\n}\n\nexport enum Enum_Componentpriceprice_Currency {\n  Dollar = 'dollar',\n  Lira = 'lira'\n}\n\nexport enum Enum_Componenttimelinetimeline_Transportationtype {\n  Arrival = 'arrival',\n  Departure = 'departure',\n  BetweenCities = 'betweenCities',\n  WithinCity = 'withinCity'\n}\n\nexport enum Enum_Partner_Agreementstatus {\n  Agreed = 'Agreed',\n  Discussing = 'discussing',\n  Termination = 'termination'\n}\n\nexport enum Enum_Partner_Revenuesource {\n  PricePercentage = 'pricePercentage',\n  InflatedPrice = 'inflatedPrice'\n}\n\nexport enum Enum_Trips_Currency {\n  Dollar = 'dollar',\n  Lira = 'lira'\n}\n\nexport enum Enum_Trips_Traveltype {\n  Private = 'private',\n  Public = 'public',\n  Both = 'both'\n}\n\nexport enum Enum_Trips_Trip_Type {\n  Touristic = 'touristic',\n  Medical = 'medical'\n}\n\nexport type Feature = {\n  __typename?: 'Feature';\n  id: Scalars['ID'];\n  _id: Scalars['ID'];\n  createdAt: Scalars['DateTime'];\n  updatedAt: Scalars['DateTime'];\n  name: Scalars['String'];\n  info?: Maybe<Scalars['String']>;\n  locale?: Maybe<Scalars['String']>;\n  published_at?: Maybe<Scalars['DateTime']>;\n  localizations?: Maybe<Array<Maybe<Feature>>>;\n};\n\n\nexport type FeatureLocalizationsArgs = {\n  sort?: Maybe<Scalars['String']>;\n  limit?: Maybe<Scalars['Int']>;\n  start?: Maybe<Scalars['Int']>;\n  where?: Maybe<Scalars['JSON']>;\n};\n\nexport type FeatureAggregator = {\n  __typename?: 'FeatureAggregator';\n  count?: Maybe<Scalars['Int']>;\n  totalCount?: Maybe<Scalars['Int']>;\n};\n\nexport type FeatureConnection = {\n  __typename?: 'FeatureConnection';\n  values?: Maybe<Array<Maybe<Feature>>>;\n  groupBy?: Maybe<FeatureGroupBy>;\n  aggregate?: Maybe<FeatureAggregator>;\n};\n\nexport type FeatureConnectionCreatedAt = {\n  __typename?: 'FeatureConnectionCreatedAt';\n  key?: Maybe<Scalars['DateTime']>;\n  connection?: Maybe<FeatureConnection>;\n};\n\nexport type FeatureConnectionId = {\n  __typename?: 'FeatureConnectionId';\n  key?: Maybe<Scalars['ID']>;\n  connection?: Maybe<FeatureConnection>;\n};\n\nexport type FeatureConnectionInfo = {\n  __typename?: 'FeatureConnectionInfo';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<FeatureConnection>;\n};\n\nexport type FeatureConnectionLocale = {\n  __typename?: 'FeatureConnectionLocale';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<FeatureConnection>;\n};\n\nexport type FeatureConnectionName = {\n  __typename?: 'FeatureConnectionName';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<FeatureConnection>;\n};\n\nexport type FeatureConnectionPublished_At = {\n  __typename?: 'FeatureConnectionPublished_at';\n  key?: Maybe<Scalars['DateTime']>;\n  connection?: Maybe<FeatureConnection>;\n};\n\nexport type FeatureConnectionUpdatedAt = {\n  __typename?: 'FeatureConnectionUpdatedAt';\n  key?: Maybe<Scalars['DateTime']>;\n  connection?: Maybe<FeatureConnection>;\n};\n\nexport type FeatureConnection_Id = {\n  __typename?: 'FeatureConnection_id';\n  key?: Maybe<Scalars['ID']>;\n  connection?: Maybe<FeatureConnection>;\n};\n\nexport type FeatureGroupBy = {\n  __typename?: 'FeatureGroupBy';\n  id?: Maybe<Array<Maybe<FeatureConnectionId>>>;\n  _id?: Maybe<Array<Maybe<FeatureConnection_Id>>>;\n  createdAt?: Maybe<Array<Maybe<FeatureConnectionCreatedAt>>>;\n  updatedAt?: Maybe<Array<Maybe<FeatureConnectionUpdatedAt>>>;\n  name?: Maybe<Array<Maybe<FeatureConnectionName>>>;\n  info?: Maybe<Array<Maybe<FeatureConnectionInfo>>>;\n  locale?: Maybe<Array<Maybe<FeatureConnectionLocale>>>;\n  published_at?: Maybe<Array<Maybe<FeatureConnectionPublished_At>>>;\n};\n\nexport type FeatureInput = {\n  name: Scalars['String'];\n  info?: Maybe<Scalars['String']>;\n  localizations?: Maybe<Array<Maybe<Scalars['ID']>>>;\n  locale?: Maybe<Scalars['String']>;\n  published_at?: Maybe<Scalars['DateTime']>;\n  created_by?: Maybe<Scalars['ID']>;\n  updated_by?: Maybe<Scalars['ID']>;\n};\n\nexport type FileInfoInput = {\n  name?: Maybe<Scalars['String']>;\n  alternativeText?: Maybe<Scalars['String']>;\n  caption?: Maybe<Scalars['String']>;\n};\n\nexport type FileInput = {\n  name: Scalars['String'];\n  alternativeText?: Maybe<Scalars['String']>;\n  caption?: Maybe<Scalars['String']>;\n  width?: Maybe<Scalars['Int']>;\n  height?: Maybe<Scalars['Int']>;\n  formats?: Maybe<Scalars['JSON']>;\n  hash: Scalars['String'];\n  ext?: Maybe<Scalars['String']>;\n  mime: Scalars['String'];\n  size: Scalars['Float'];\n  url: Scalars['String'];\n  previewUrl?: Maybe<Scalars['String']>;\n  provider: Scalars['String'];\n  provider_metadata?: Maybe<Scalars['JSON']>;\n  related?: Maybe<Array<Maybe<Scalars['ID']>>>;\n  created_by?: Maybe<Scalars['ID']>;\n  updated_by?: Maybe<Scalars['ID']>;\n};\n\nexport type HomeBanner = {\n  __typename?: 'HomeBanner';\n  id: Scalars['ID'];\n  _id: Scalars['ID'];\n  createdAt: Scalars['DateTime'];\n  updatedAt: Scalars['DateTime'];\n  published_at?: Maybe<Scalars['DateTime']>;\n  images?: Maybe<Array<Maybe<UploadFile>>>;\n};\n\n\nexport type HomeBannerImagesArgs = {\n  sort?: Maybe<Scalars['String']>;\n  limit?: Maybe<Scalars['Int']>;\n  start?: Maybe<Scalars['Int']>;\n  where?: Maybe<Scalars['JSON']>;\n};\n\nexport type HomeBannerInput = {\n  images?: Maybe<Array<Maybe<Scalars['ID']>>>;\n  published_at?: Maybe<Scalars['DateTime']>;\n  created_by?: Maybe<Scalars['ID']>;\n  updated_by?: Maybe<Scalars['ID']>;\n};\n\nexport type HotelInput = {\n  name: Scalars['String'];\n  stars: Scalars['Int'];\n  url?: Maybe<Scalars['String']>;\n  trips?: Maybe<Array<Maybe<Scalars['ID']>>>;\n  published_at?: Maybe<Scalars['DateTime']>;\n  created_by?: Maybe<Scalars['ID']>;\n  updated_by?: Maybe<Scalars['ID']>;\n};\n\nexport type Hotels = {\n  __typename?: 'Hotels';\n  id: Scalars['ID'];\n  _id: Scalars['ID'];\n  createdAt: Scalars['DateTime'];\n  updatedAt: Scalars['DateTime'];\n  name: Scalars['String'];\n  stars: Scalars['Int'];\n  url?: Maybe<Scalars['String']>;\n  published_at?: Maybe<Scalars['DateTime']>;\n  trips?: Maybe<Array<Maybe<Trips>>>;\n};\n\n\nexport type HotelsTripsArgs = {\n  sort?: Maybe<Scalars['String']>;\n  limit?: Maybe<Scalars['Int']>;\n  start?: Maybe<Scalars['Int']>;\n  where?: Maybe<Scalars['JSON']>;\n};\n\nexport type HotelsAggregator = {\n  __typename?: 'HotelsAggregator';\n  count?: Maybe<Scalars['Int']>;\n  totalCount?: Maybe<Scalars['Int']>;\n  sum?: Maybe<HotelsAggregatorSum>;\n  avg?: Maybe<HotelsAggregatorAvg>;\n  min?: Maybe<HotelsAggregatorMin>;\n  max?: Maybe<HotelsAggregatorMax>;\n};\n\nexport type HotelsAggregatorAvg = {\n  __typename?: 'HotelsAggregatorAvg';\n  stars?: Maybe<Scalars['Float']>;\n};\n\nexport type HotelsAggregatorMax = {\n  __typename?: 'HotelsAggregatorMax';\n  stars?: Maybe<Scalars['Float']>;\n};\n\nexport type HotelsAggregatorMin = {\n  __typename?: 'HotelsAggregatorMin';\n  stars?: Maybe<Scalars['Float']>;\n};\n\nexport type HotelsAggregatorSum = {\n  __typename?: 'HotelsAggregatorSum';\n  stars?: Maybe<Scalars['Float']>;\n};\n\nexport type HotelsConnection = {\n  __typename?: 'HotelsConnection';\n  values?: Maybe<Array<Maybe<Hotels>>>;\n  groupBy?: Maybe<HotelsGroupBy>;\n  aggregate?: Maybe<HotelsAggregator>;\n};\n\nexport type HotelsConnectionCreatedAt = {\n  __typename?: 'HotelsConnectionCreatedAt';\n  key?: Maybe<Scalars['DateTime']>;\n  connection?: Maybe<HotelsConnection>;\n};\n\nexport type HotelsConnectionId = {\n  __typename?: 'HotelsConnectionId';\n  key?: Maybe<Scalars['ID']>;\n  connection?: Maybe<HotelsConnection>;\n};\n\nexport type HotelsConnectionName = {\n  __typename?: 'HotelsConnectionName';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<HotelsConnection>;\n};\n\nexport type HotelsConnectionPublished_At = {\n  __typename?: 'HotelsConnectionPublished_at';\n  key?: Maybe<Scalars['DateTime']>;\n  connection?: Maybe<HotelsConnection>;\n};\n\nexport type HotelsConnectionStars = {\n  __typename?: 'HotelsConnectionStars';\n  key?: Maybe<Scalars['Int']>;\n  connection?: Maybe<HotelsConnection>;\n};\n\nexport type HotelsConnectionUpdatedAt = {\n  __typename?: 'HotelsConnectionUpdatedAt';\n  key?: Maybe<Scalars['DateTime']>;\n  connection?: Maybe<HotelsConnection>;\n};\n\nexport type HotelsConnectionUrl = {\n  __typename?: 'HotelsConnectionUrl';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<HotelsConnection>;\n};\n\nexport type HotelsConnection_Id = {\n  __typename?: 'HotelsConnection_id';\n  key?: Maybe<Scalars['ID']>;\n  connection?: Maybe<HotelsConnection>;\n};\n\nexport type HotelsGroupBy = {\n  __typename?: 'HotelsGroupBy';\n  id?: Maybe<Array<Maybe<HotelsConnectionId>>>;\n  _id?: Maybe<Array<Maybe<HotelsConnection_Id>>>;\n  createdAt?: Maybe<Array<Maybe<HotelsConnectionCreatedAt>>>;\n  updatedAt?: Maybe<Array<Maybe<HotelsConnectionUpdatedAt>>>;\n  name?: Maybe<Array<Maybe<HotelsConnectionName>>>;\n  stars?: Maybe<Array<Maybe<HotelsConnectionStars>>>;\n  url?: Maybe<Array<Maybe<HotelsConnectionUrl>>>;\n  published_at?: Maybe<Array<Maybe<HotelsConnectionPublished_At>>>;\n};\n\nexport type I18NLocale = {\n  __typename?: 'I18NLocale';\n  id: Scalars['ID'];\n  _id: Scalars['ID'];\n  createdAt: Scalars['DateTime'];\n  updatedAt: Scalars['DateTime'];\n  name?: Maybe<Scalars['String']>;\n  code?: Maybe<Scalars['String']>;\n};\n\nexport type InputId = {\n  id: Scalars['ID'];\n};\n\n\nexport type LocaleInput = {\n  name?: Maybe<Scalars['String']>;\n  code?: Maybe<Scalars['String']>;\n  created_by?: Maybe<Scalars['ID']>;\n  updated_by?: Maybe<Scalars['ID']>;\n};\n\nexport type Location = {\n  __typename?: 'Location';\n  id: Scalars['ID'];\n  _id: Scalars['ID'];\n  createdAt: Scalars['DateTime'];\n  updatedAt: Scalars['DateTime'];\n  name: Scalars['String'];\n  description?: Maybe<Scalars['String']>;\n  city?: Maybe<City>;\n  coordinate?: Maybe<ComponentCoordinateCoordinate>;\n  locale?: Maybe<Scalars['String']>;\n  published_at?: Maybe<Scalars['DateTime']>;\n  images?: Maybe<Array<Maybe<UploadFile>>>;\n  localizations?: Maybe<Array<Maybe<Location>>>;\n};\n\n\nexport type LocationImagesArgs = {\n  sort?: Maybe<Scalars['String']>;\n  limit?: Maybe<Scalars['Int']>;\n  start?: Maybe<Scalars['Int']>;\n  where?: Maybe<Scalars['JSON']>;\n};\n\n\nexport type LocationLocalizationsArgs = {\n  sort?: Maybe<Scalars['String']>;\n  limit?: Maybe<Scalars['Int']>;\n  start?: Maybe<Scalars['Int']>;\n  where?: Maybe<Scalars['JSON']>;\n};\n\nexport type LocationAggregator = {\n  __typename?: 'LocationAggregator';\n  count?: Maybe<Scalars['Int']>;\n  totalCount?: Maybe<Scalars['Int']>;\n};\n\nexport type LocationConnection = {\n  __typename?: 'LocationConnection';\n  values?: Maybe<Array<Maybe<Location>>>;\n  groupBy?: Maybe<LocationGroupBy>;\n  aggregate?: Maybe<LocationAggregator>;\n};\n\nexport type LocationConnectionCity = {\n  __typename?: 'LocationConnectionCity';\n  key?: Maybe<Scalars['ID']>;\n  connection?: Maybe<LocationConnection>;\n};\n\nexport type LocationConnectionCoordinate = {\n  __typename?: 'LocationConnectionCoordinate';\n  key?: Maybe<Scalars['ID']>;\n  connection?: Maybe<LocationConnection>;\n};\n\nexport type LocationConnectionCreatedAt = {\n  __typename?: 'LocationConnectionCreatedAt';\n  key?: Maybe<Scalars['DateTime']>;\n  connection?: Maybe<LocationConnection>;\n};\n\nexport type LocationConnectionDescription = {\n  __typename?: 'LocationConnectionDescription';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<LocationConnection>;\n};\n\nexport type LocationConnectionId = {\n  __typename?: 'LocationConnectionId';\n  key?: Maybe<Scalars['ID']>;\n  connection?: Maybe<LocationConnection>;\n};\n\nexport type LocationConnectionLocale = {\n  __typename?: 'LocationConnectionLocale';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<LocationConnection>;\n};\n\nexport type LocationConnectionName = {\n  __typename?: 'LocationConnectionName';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<LocationConnection>;\n};\n\nexport type LocationConnectionPublished_At = {\n  __typename?: 'LocationConnectionPublished_at';\n  key?: Maybe<Scalars['DateTime']>;\n  connection?: Maybe<LocationConnection>;\n};\n\nexport type LocationConnectionUpdatedAt = {\n  __typename?: 'LocationConnectionUpdatedAt';\n  key?: Maybe<Scalars['DateTime']>;\n  connection?: Maybe<LocationConnection>;\n};\n\nexport type LocationConnection_Id = {\n  __typename?: 'LocationConnection_id';\n  key?: Maybe<Scalars['ID']>;\n  connection?: Maybe<LocationConnection>;\n};\n\nexport type LocationGroupBy = {\n  __typename?: 'LocationGroupBy';\n  id?: Maybe<Array<Maybe<LocationConnectionId>>>;\n  _id?: Maybe<Array<Maybe<LocationConnection_Id>>>;\n  createdAt?: Maybe<Array<Maybe<LocationConnectionCreatedAt>>>;\n  updatedAt?: Maybe<Array<Maybe<LocationConnectionUpdatedAt>>>;\n  name?: Maybe<Array<Maybe<LocationConnectionName>>>;\n  description?: Maybe<Array<Maybe<LocationConnectionDescription>>>;\n  city?: Maybe<Array<Maybe<LocationConnectionCity>>>;\n  coordinate?: Maybe<Array<Maybe<LocationConnectionCoordinate>>>;\n  locale?: Maybe<Array<Maybe<LocationConnectionLocale>>>;\n  published_at?: Maybe<Array<Maybe<LocationConnectionPublished_At>>>;\n};\n\nexport type LocationInput = {\n  name: Scalars['String'];\n  description?: Maybe<Scalars['String']>;\n  images?: Maybe<Array<Maybe<Scalars['ID']>>>;\n  city?: Maybe<Scalars['ID']>;\n  coordinate?: Maybe<ComponentCoordinateCoordinateInput>;\n  localizations?: Maybe<Array<Maybe<Scalars['ID']>>>;\n  locale?: Maybe<Scalars['String']>;\n  published_at?: Maybe<Scalars['DateTime']>;\n  created_by?: Maybe<Scalars['ID']>;\n  updated_by?: Maybe<Scalars['ID']>;\n};\n\n\nexport type Morph = UsersPermissionsMe | UsersPermissionsMeRole | UsersPermissionsLoginPayload | UserPermissionsPasswordPayload | Booking | BookingConnection | BookingAggregator | BookingAggregatorSum | BookingAggregatorAvg | BookingAggregatorMin | BookingAggregatorMax | BookingGroupBy | BookingConnectionId | BookingConnection_Id | BookingConnectionCreatedAt | BookingConnectionUpdatedAt | BookingConnectionTrip | BookingConnectionApproved | BookingConnectionBasePrice | BookingConnectionCurrency | BookingConnectionBasePeopleCount | BookingConnectionDiscount | BookingConnectionFullName | BookingConnectionPhone | BookingConnectionMessage | BookingConnectionArrivalDate | BookingConnectionLanguage | BookingConnectionUserBookingStatus | BookingConnectionEmail | BookingConnectionAdults | BookingConnectionChildren | BookingConnectionTotalPrice | BookingConnectionPublished_At | CreateBookingPayload | UpdateBookingPayload | DeleteBookingPayload | City | CityConnection | CityAggregator | CityGroupBy | CityConnectionId | CityConnection_Id | CityConnectionCreatedAt | CityConnectionUpdatedAt | CityConnectionName | CityConnectionDescription | CityConnectionImage | CityConnectionLocale | CityConnectionPublished_At | CreateCityPayload | UpdateCityPayload | DeleteCityPayload | Feature | FeatureConnection | FeatureAggregator | FeatureGroupBy | FeatureConnectionId | FeatureConnection_Id | FeatureConnectionCreatedAt | FeatureConnectionUpdatedAt | FeatureConnectionName | FeatureConnectionInfo | FeatureConnectionLocale | FeatureConnectionPublished_At | CreateFeaturePayload | UpdateFeaturePayload | DeleteFeaturePayload | HomeBanner | UpdateHomeBannerPayload | DeleteHomeBannerPayload | Hotels | HotelsConnection | HotelsAggregator | HotelsAggregatorSum | HotelsAggregatorAvg | HotelsAggregatorMin | HotelsAggregatorMax | HotelsGroupBy | HotelsConnectionId | HotelsConnection_Id | HotelsConnectionCreatedAt | HotelsConnectionUpdatedAt | HotelsConnectionName | HotelsConnectionStars | HotelsConnectionUrl | HotelsConnectionPublished_At | CreateHotelPayload | UpdateHotelPayload | DeleteHotelPayload | Location | LocationConnection | LocationAggregator | LocationGroupBy | LocationConnectionId | LocationConnection_Id | LocationConnectionCreatedAt | LocationConnectionUpdatedAt | LocationConnectionName | LocationConnectionDescription | LocationConnectionCity | LocationConnectionCoordinate | LocationConnectionLocale | LocationConnectionPublished_At | CreateLocationPayload | UpdateLocationPayload | DeleteLocationPayload | Partner | PartnerConnection | PartnerAggregator | PartnerAggregatorSum | PartnerAggregatorAvg | PartnerAggregatorMin | PartnerAggregatorMax | PartnerGroupBy | PartnerConnectionId | PartnerConnection_Id | PartnerConnectionCreatedAt | PartnerConnectionUpdatedAt | PartnerConnectionName | PartnerConnectionPhone | PartnerConnectionAddress | PartnerConnectionEmail | PartnerConnectionAgreement | PartnerConnectionCommission | PartnerConnectionRevenueSource | PartnerConnectionAgreementStatus | PartnerConnectionNotes | PartnerConnectionPhone2 | PartnerConnectionPublished_At | CreatePartnerPayload | UpdatePartnerPayload | DeletePartnerPayload | Review | ReviewConnection | ReviewAggregator | ReviewAggregatorSum | ReviewAggregatorAvg | ReviewAggregatorMin | ReviewAggregatorMax | ReviewGroupBy | ReviewConnectionId | ReviewConnection_Id | ReviewConnectionCreatedAt | ReviewConnectionUpdatedAt | ReviewConnectionText | ReviewConnectionRating | ReviewConnectionAuthor | ReviewConnectionActive | ReviewConnectionTrip | ReviewConnectionPublished_At | CreateReviewPayload | UpdateReviewPayload | DeleteReviewPayload | Subscribers | SubscribersConnection | SubscribersAggregator | SubscribersGroupBy | SubscribersConnectionId | SubscribersConnection_Id | SubscribersConnectionCreatedAt | SubscribersConnectionUpdatedAt | SubscribersConnectionEmail | SubscribersConnectionPublished_At | CreateSubscriberPayload | UpdateSubscriberPayload | DeleteSubscriberPayload | Trips | TripsConnection | TripsAggregator | TripsAggregatorSum | TripsAggregatorAvg | TripsAggregatorMin | TripsAggregatorMax | TripsGroupBy | TripsConnectionId | TripsConnection_Id | TripsConnectionCreatedAt | TripsConnectionUpdatedAt | TripsConnectionName | TripsConnectionPreviewImage | TripsConnectionActive | TripsConnectionTrip_Type | TripsConnectionDescription | TripsConnectionDuration | TripsConnectionPartner | TripsConnectionCurrency | TripsConnectionCity | TripsConnectionBasePrice | TripsConnectionBasePeopleCount | TripsConnectionDiscount | TripsConnectionTravelType | TripsConnectionHotel | TripsConnectionLocale | TripsConnectionPublished_At | CreateTripPayload | UpdateTripPayload | DeleteTripPayload | I18NLocale | UploadFile | UploadFileConnection | UploadFileAggregator | UploadFileAggregatorSum | UploadFileAggregatorAvg | UploadFileAggregatorMin | UploadFileAggregatorMax | UploadFileGroupBy | UploadFileConnectionId | UploadFileConnection_Id | UploadFileConnectionCreatedAt | UploadFileConnectionUpdatedAt | UploadFileConnectionName | UploadFileConnectionAlternativeText | UploadFileConnectionCaption | UploadFileConnectionWidth | UploadFileConnectionHeight | UploadFileConnectionFormats | UploadFileConnectionHash | UploadFileConnectionExt | UploadFileConnectionMime | UploadFileConnectionSize | UploadFileConnectionUrl | UploadFileConnectionPreviewUrl | UploadFileConnectionProvider | UploadFileConnectionProvider_Metadata | DeleteFilePayload | UsersPermissionsPermission | UsersPermissionsRole | UsersPermissionsRoleConnection | UsersPermissionsRoleAggregator | UsersPermissionsRoleGroupBy | UsersPermissionsRoleConnectionId | UsersPermissionsRoleConnection_Id | UsersPermissionsRoleConnectionName | UsersPermissionsRoleConnectionDescription | UsersPermissionsRoleConnectionType | CreateRolePayload | UpdateRolePayload | DeleteRolePayload | UsersPermissionsUser | UsersPermissionsUserConnection | UsersPermissionsUserAggregator | UsersPermissionsUserGroupBy | UsersPermissionsUserConnectionId | UsersPermissionsUserConnection_Id | UsersPermissionsUserConnectionCreatedAt | UsersPermissionsUserConnectionUpdatedAt | UsersPermissionsUserConnectionUsername | UsersPermissionsUserConnectionEmail | UsersPermissionsUserConnectionProvider | UsersPermissionsUserConnectionConfirmed | UsersPermissionsUserConnectionBlocked | UsersPermissionsUserConnectionRole | CreateUserPayload | UpdateUserPayload | DeleteUserPayload | ComponentCoordinateCoordinate | ComponentFeatureFeature | ComponentPricePrice | ComponentTimelineTimeline;\n\nexport type Mutation = {\n  __typename?: 'Mutation';\n  createBooking?: Maybe<CreateBookingPayload>;\n  updateBooking?: Maybe<UpdateBookingPayload>;\n  deleteBooking?: Maybe<DeleteBookingPayload>;\n  createCity?: Maybe<CreateCityPayload>;\n  updateCity?: Maybe<UpdateCityPayload>;\n  deleteCity?: Maybe<DeleteCityPayload>;\n  createFeature?: Maybe<CreateFeaturePayload>;\n  updateFeature?: Maybe<UpdateFeaturePayload>;\n  deleteFeature?: Maybe<DeleteFeaturePayload>;\n  updateHomeBanner?: Maybe<UpdateHomeBannerPayload>;\n  deleteHomeBanner?: Maybe<DeleteHomeBannerPayload>;\n  createHotel?: Maybe<CreateHotelPayload>;\n  updateHotel?: Maybe<UpdateHotelPayload>;\n  deleteHotel?: Maybe<DeleteHotelPayload>;\n  createLocation?: Maybe<CreateLocationPayload>;\n  updateLocation?: Maybe<UpdateLocationPayload>;\n  deleteLocation?: Maybe<DeleteLocationPayload>;\n  createPartner?: Maybe<CreatePartnerPayload>;\n  updatePartner?: Maybe<UpdatePartnerPayload>;\n  deletePartner?: Maybe<DeletePartnerPayload>;\n  createReview?: Maybe<CreateReviewPayload>;\n  updateReview?: Maybe<UpdateReviewPayload>;\n  deleteReview?: Maybe<DeleteReviewPayload>;\n  createSubscriber?: Maybe<CreateSubscriberPayload>;\n  updateSubscriber?: Maybe<UpdateSubscriberPayload>;\n  deleteSubscriber?: Maybe<DeleteSubscriberPayload>;\n  createTrip?: Maybe<CreateTripPayload>;\n  updateTrip?: Maybe<UpdateTripPayload>;\n  deleteTrip?: Maybe<DeleteTripPayload>;\n  /** Delete one file */\n  deleteFile?: Maybe<DeleteFilePayload>;\n  /** Create a new role */\n  createRole?: Maybe<CreateRolePayload>;\n  /** Update an existing role */\n  updateRole?: Maybe<UpdateRolePayload>;\n  /** Delete an existing role */\n  deleteRole?: Maybe<DeleteRolePayload>;\n  /** Create a new user */\n  createUser?: Maybe<CreateUserPayload>;\n  /** Update an existing user */\n  updateUser?: Maybe<UpdateUserPayload>;\n  /** Delete an existing user */\n  deleteUser?: Maybe<DeleteUserPayload>;\n  createCityLocalization: City;\n  createFeatureLocalization: Feature;\n  createLocationLocalization: Location;\n  createTripLocalization: Trips;\n  upload: UploadFile;\n  multipleUpload: Array<Maybe<UploadFile>>;\n  updateFileInfo: UploadFile;\n  login: UsersPermissionsLoginPayload;\n  register: UsersPermissionsLoginPayload;\n  forgotPassword?: Maybe<UserPermissionsPasswordPayload>;\n  resetPassword?: Maybe<UsersPermissionsLoginPayload>;\n  emailConfirmation?: Maybe<UsersPermissionsLoginPayload>;\n};\n\n\nexport type MutationCreateBookingArgs = {\n  input?: Maybe<CreateBookingInput>;\n};\n\n\nexport type MutationUpdateBookingArgs = {\n  input?: Maybe<UpdateBookingInput>;\n};\n\n\nexport type MutationDeleteBookingArgs = {\n  input?: Maybe<DeleteBookingInput>;\n};\n\n\nexport type MutationCreateCityArgs = {\n  input?: Maybe<CreateCityInput>;\n};\n\n\nexport type MutationUpdateCityArgs = {\n  input?: Maybe<UpdateCityInput>;\n};\n\n\nexport type MutationDeleteCityArgs = {\n  input?: Maybe<DeleteCityInput>;\n};\n\n\nexport type MutationCreateFeatureArgs = {\n  input?: Maybe<CreateFeatureInput>;\n};\n\n\nexport type MutationUpdateFeatureArgs = {\n  input?: Maybe<UpdateFeatureInput>;\n};\n\n\nexport type MutationDeleteFeatureArgs = {\n  input?: Maybe<DeleteFeatureInput>;\n};\n\n\nexport type MutationUpdateHomeBannerArgs = {\n  input?: Maybe<UpdateHomeBannerInput>;\n};\n\n\nexport type MutationCreateHotelArgs = {\n  input?: Maybe<CreateHotelInput>;\n};\n\n\nexport type MutationUpdateHotelArgs = {\n  input?: Maybe<UpdateHotelInput>;\n};\n\n\nexport type MutationDeleteHotelArgs = {\n  input?: Maybe<DeleteHotelInput>;\n};\n\n\nexport type MutationCreateLocationArgs = {\n  input?: Maybe<CreateLocationInput>;\n};\n\n\nexport type MutationUpdateLocationArgs = {\n  input?: Maybe<UpdateLocationInput>;\n};\n\n\nexport type MutationDeleteLocationArgs = {\n  input?: Maybe<DeleteLocationInput>;\n};\n\n\nexport type MutationCreatePartnerArgs = {\n  input?: Maybe<CreatePartnerInput>;\n};\n\n\nexport type MutationUpdatePartnerArgs = {\n  input?: Maybe<UpdatePartnerInput>;\n};\n\n\nexport type MutationDeletePartnerArgs = {\n  input?: Maybe<DeletePartnerInput>;\n};\n\n\nexport type MutationCreateReviewArgs = {\n  input?: Maybe<CreateReviewInput>;\n};\n\n\nexport type MutationUpdateReviewArgs = {\n  input?: Maybe<UpdateReviewInput>;\n};\n\n\nexport type MutationDeleteReviewArgs = {\n  input?: Maybe<DeleteReviewInput>;\n};\n\n\nexport type MutationCreateSubscriberArgs = {\n  input?: Maybe<CreateSubscriberInput>;\n};\n\n\nexport type MutationUpdateSubscriberArgs = {\n  input?: Maybe<UpdateSubscriberInput>;\n};\n\n\nexport type MutationDeleteSubscriberArgs = {\n  input?: Maybe<DeleteSubscriberInput>;\n};\n\n\nexport type MutationCreateTripArgs = {\n  input?: Maybe<CreateTripInput>;\n};\n\n\nexport type MutationUpdateTripArgs = {\n  input?: Maybe<UpdateTripInput>;\n};\n\n\nexport type MutationDeleteTripArgs = {\n  input?: Maybe<DeleteTripInput>;\n};\n\n\nexport type MutationDeleteFileArgs = {\n  input?: Maybe<DeleteFileInput>;\n};\n\n\nexport type MutationCreateRoleArgs = {\n  input?: Maybe<CreateRoleInput>;\n};\n\n\nexport type MutationUpdateRoleArgs = {\n  input?: Maybe<UpdateRoleInput>;\n};\n\n\nexport type MutationDeleteRoleArgs = {\n  input?: Maybe<DeleteRoleInput>;\n};\n\n\nexport type MutationCreateUserArgs = {\n  input?: Maybe<CreateUserInput>;\n};\n\n\nexport type MutationUpdateUserArgs = {\n  input?: Maybe<UpdateUserInput>;\n};\n\n\nexport type MutationDeleteUserArgs = {\n  input?: Maybe<DeleteUserInput>;\n};\n\n\nexport type MutationCreateCityLocalizationArgs = {\n  input: UpdateCityInput;\n};\n\n\nexport type MutationCreateFeatureLocalizationArgs = {\n  input: UpdateFeatureInput;\n};\n\n\nexport type MutationCreateLocationLocalizationArgs = {\n  input: UpdateLocationInput;\n};\n\n\nexport type MutationCreateTripLocalizationArgs = {\n  input: UpdateTripInput;\n};\n\n\nexport type MutationUploadArgs = {\n  refId?: Maybe<Scalars['ID']>;\n  ref?: Maybe<Scalars['String']>;\n  field?: Maybe<Scalars['String']>;\n  source?: Maybe<Scalars['String']>;\n  info?: Maybe<FileInfoInput>;\n  file: Scalars['Upload'];\n};\n\n\nexport type MutationMultipleUploadArgs = {\n  refId?: Maybe<Scalars['ID']>;\n  ref?: Maybe<Scalars['String']>;\n  field?: Maybe<Scalars['String']>;\n  source?: Maybe<Scalars['String']>;\n  files: Array<Maybe<Scalars['Upload']>>;\n};\n\n\nexport type MutationUpdateFileInfoArgs = {\n  id: Scalars['ID'];\n  info: FileInfoInput;\n};\n\n\nexport type MutationLoginArgs = {\n  input: UsersPermissionsLoginInput;\n};\n\n\nexport type MutationRegisterArgs = {\n  input: UsersPermissionsRegisterInput;\n};\n\n\nexport type MutationForgotPasswordArgs = {\n  email: Scalars['String'];\n};\n\n\nexport type MutationResetPasswordArgs = {\n  password: Scalars['String'];\n  passwordConfirmation: Scalars['String'];\n  code: Scalars['String'];\n};\n\n\nexport type MutationEmailConfirmationArgs = {\n  confirmation: Scalars['String'];\n};\n\nexport type Partner = {\n  __typename?: 'Partner';\n  id: Scalars['ID'];\n  _id: Scalars['ID'];\n  createdAt: Scalars['DateTime'];\n  updatedAt: Scalars['DateTime'];\n  name: Scalars['String'];\n  phone: Scalars['String'];\n  address?: Maybe<Scalars['String']>;\n  email?: Maybe<Scalars['String']>;\n  agreement?: Maybe<Scalars['String']>;\n  commission: Scalars['Float'];\n  revenueSource: Enum_Partner_Revenuesource;\n  agreementStatus: Enum_Partner_Agreementstatus;\n  notes?: Maybe<Scalars['String']>;\n  phone2?: Maybe<Scalars['String']>;\n  published_at?: Maybe<Scalars['DateTime']>;\n  trips?: Maybe<Array<Maybe<Trips>>>;\n};\n\n\nexport type PartnerTripsArgs = {\n  sort?: Maybe<Scalars['String']>;\n  limit?: Maybe<Scalars['Int']>;\n  start?: Maybe<Scalars['Int']>;\n  where?: Maybe<Scalars['JSON']>;\n};\n\nexport type PartnerAggregator = {\n  __typename?: 'PartnerAggregator';\n  count?: Maybe<Scalars['Int']>;\n  totalCount?: Maybe<Scalars['Int']>;\n  sum?: Maybe<PartnerAggregatorSum>;\n  avg?: Maybe<PartnerAggregatorAvg>;\n  min?: Maybe<PartnerAggregatorMin>;\n  max?: Maybe<PartnerAggregatorMax>;\n};\n\nexport type PartnerAggregatorAvg = {\n  __typename?: 'PartnerAggregatorAvg';\n  commission?: Maybe<Scalars['Float']>;\n};\n\nexport type PartnerAggregatorMax = {\n  __typename?: 'PartnerAggregatorMax';\n  commission?: Maybe<Scalars['Float']>;\n};\n\nexport type PartnerAggregatorMin = {\n  __typename?: 'PartnerAggregatorMin';\n  commission?: Maybe<Scalars['Float']>;\n};\n\nexport type PartnerAggregatorSum = {\n  __typename?: 'PartnerAggregatorSum';\n  commission?: Maybe<Scalars['Float']>;\n};\n\nexport type PartnerConnection = {\n  __typename?: 'PartnerConnection';\n  values?: Maybe<Array<Maybe<Partner>>>;\n  groupBy?: Maybe<PartnerGroupBy>;\n  aggregate?: Maybe<PartnerAggregator>;\n};\n\nexport type PartnerConnectionAddress = {\n  __typename?: 'PartnerConnectionAddress';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<PartnerConnection>;\n};\n\nexport type PartnerConnectionAgreement = {\n  __typename?: 'PartnerConnectionAgreement';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<PartnerConnection>;\n};\n\nexport type PartnerConnectionAgreementStatus = {\n  __typename?: 'PartnerConnectionAgreementStatus';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<PartnerConnection>;\n};\n\nexport type PartnerConnectionCommission = {\n  __typename?: 'PartnerConnectionCommission';\n  key?: Maybe<Scalars['Float']>;\n  connection?: Maybe<PartnerConnection>;\n};\n\nexport type PartnerConnectionCreatedAt = {\n  __typename?: 'PartnerConnectionCreatedAt';\n  key?: Maybe<Scalars['DateTime']>;\n  connection?: Maybe<PartnerConnection>;\n};\n\nexport type PartnerConnectionEmail = {\n  __typename?: 'PartnerConnectionEmail';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<PartnerConnection>;\n};\n\nexport type PartnerConnectionId = {\n  __typename?: 'PartnerConnectionId';\n  key?: Maybe<Scalars['ID']>;\n  connection?: Maybe<PartnerConnection>;\n};\n\nexport type PartnerConnectionName = {\n  __typename?: 'PartnerConnectionName';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<PartnerConnection>;\n};\n\nexport type PartnerConnectionNotes = {\n  __typename?: 'PartnerConnectionNotes';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<PartnerConnection>;\n};\n\nexport type PartnerConnectionPhone = {\n  __typename?: 'PartnerConnectionPhone';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<PartnerConnection>;\n};\n\nexport type PartnerConnectionPhone2 = {\n  __typename?: 'PartnerConnectionPhone2';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<PartnerConnection>;\n};\n\nexport type PartnerConnectionPublished_At = {\n  __typename?: 'PartnerConnectionPublished_at';\n  key?: Maybe<Scalars['DateTime']>;\n  connection?: Maybe<PartnerConnection>;\n};\n\nexport type PartnerConnectionRevenueSource = {\n  __typename?: 'PartnerConnectionRevenueSource';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<PartnerConnection>;\n};\n\nexport type PartnerConnectionUpdatedAt = {\n  __typename?: 'PartnerConnectionUpdatedAt';\n  key?: Maybe<Scalars['DateTime']>;\n  connection?: Maybe<PartnerConnection>;\n};\n\nexport type PartnerConnection_Id = {\n  __typename?: 'PartnerConnection_id';\n  key?: Maybe<Scalars['ID']>;\n  connection?: Maybe<PartnerConnection>;\n};\n\nexport type PartnerGroupBy = {\n  __typename?: 'PartnerGroupBy';\n  id?: Maybe<Array<Maybe<PartnerConnectionId>>>;\n  _id?: Maybe<Array<Maybe<PartnerConnection_Id>>>;\n  createdAt?: Maybe<Array<Maybe<PartnerConnectionCreatedAt>>>;\n  updatedAt?: Maybe<Array<Maybe<PartnerConnectionUpdatedAt>>>;\n  name?: Maybe<Array<Maybe<PartnerConnectionName>>>;\n  phone?: Maybe<Array<Maybe<PartnerConnectionPhone>>>;\n  address?: Maybe<Array<Maybe<PartnerConnectionAddress>>>;\n  email?: Maybe<Array<Maybe<PartnerConnectionEmail>>>;\n  agreement?: Maybe<Array<Maybe<PartnerConnectionAgreement>>>;\n  commission?: Maybe<Array<Maybe<PartnerConnectionCommission>>>;\n  revenueSource?: Maybe<Array<Maybe<PartnerConnectionRevenueSource>>>;\n  agreementStatus?: Maybe<Array<Maybe<PartnerConnectionAgreementStatus>>>;\n  notes?: Maybe<Array<Maybe<PartnerConnectionNotes>>>;\n  phone2?: Maybe<Array<Maybe<PartnerConnectionPhone2>>>;\n  published_at?: Maybe<Array<Maybe<PartnerConnectionPublished_At>>>;\n};\n\nexport type PartnerInput = {\n  name: Scalars['String'];\n  phone: Scalars['String'];\n  address?: Maybe<Scalars['String']>;\n  email?: Maybe<Scalars['String']>;\n  trips?: Maybe<Array<Maybe<Scalars['ID']>>>;\n  agreement?: Maybe<Scalars['String']>;\n  commission: Scalars['Float'];\n  revenueSource: Enum_Partner_Revenuesource;\n  agreementStatus: Enum_Partner_Agreementstatus;\n  notes?: Maybe<Scalars['String']>;\n  phone2?: Maybe<Scalars['String']>;\n  published_at?: Maybe<Scalars['DateTime']>;\n  created_by?: Maybe<Scalars['ID']>;\n  updated_by?: Maybe<Scalars['ID']>;\n};\n\nexport enum PublicationState {\n  Live = 'LIVE',\n  Preview = 'PREVIEW'\n}\n\nexport type Query = {\n  __typename?: 'Query';\n  booking?: Maybe<Booking>;\n  bookings?: Maybe<Array<Maybe<Booking>>>;\n  bookingsConnection?: Maybe<BookingConnection>;\n  city?: Maybe<City>;\n  cities?: Maybe<Array<Maybe<City>>>;\n  citiesConnection?: Maybe<CityConnection>;\n  feature?: Maybe<Feature>;\n  features?: Maybe<Array<Maybe<Feature>>>;\n  featuresConnection?: Maybe<FeatureConnection>;\n  homeBanner?: Maybe<HomeBanner>;\n  hotel?: Maybe<Hotels>;\n  hotels?: Maybe<Array<Maybe<Hotels>>>;\n  hotelsConnection?: Maybe<HotelsConnection>;\n  location?: Maybe<Location>;\n  locations?: Maybe<Array<Maybe<Location>>>;\n  locationsConnection?: Maybe<LocationConnection>;\n  partner?: Maybe<Partner>;\n  partners?: Maybe<Array<Maybe<Partner>>>;\n  partnersConnection?: Maybe<PartnerConnection>;\n  review?: Maybe<Review>;\n  reviews?: Maybe<Array<Maybe<Review>>>;\n  reviewsConnection?: Maybe<ReviewConnection>;\n  subscriber?: Maybe<Subscribers>;\n  subscribers?: Maybe<Array<Maybe<Subscribers>>>;\n  subscribersConnection?: Maybe<SubscribersConnection>;\n  trip?: Maybe<Trips>;\n  trips?: Maybe<Array<Maybe<Trips>>>;\n  tripsConnection?: Maybe<TripsConnection>;\n  files?: Maybe<Array<Maybe<UploadFile>>>;\n  filesConnection?: Maybe<UploadFileConnection>;\n  role?: Maybe<UsersPermissionsRole>;\n  /** Retrieve all the existing roles. You can't apply filters on this query. */\n  roles?: Maybe<Array<Maybe<UsersPermissionsRole>>>;\n  rolesConnection?: Maybe<UsersPermissionsRoleConnection>;\n  user?: Maybe<UsersPermissionsUser>;\n  users?: Maybe<Array<Maybe<UsersPermissionsUser>>>;\n  usersConnection?: Maybe<UsersPermissionsUserConnection>;\n  me?: Maybe<UsersPermissionsMe>;\n};\n\n\nexport type QueryBookingArgs = {\n  id: Scalars['ID'];\n  publicationState?: Maybe<PublicationState>;\n};\n\n\nexport type QueryBookingsArgs = {\n  sort?: Maybe<Scalars['String']>;\n  limit?: Maybe<Scalars['Int']>;\n  start?: Maybe<Scalars['Int']>;\n  where?: Maybe<Scalars['JSON']>;\n  publicationState?: Maybe<PublicationState>;\n};\n\n\nexport type QueryBookingsConnectionArgs = {\n  sort?: Maybe<Scalars['String']>;\n  limit?: Maybe<Scalars['Int']>;\n  start?: Maybe<Scalars['Int']>;\n  where?: Maybe<Scalars['JSON']>;\n};\n\n\nexport type QueryCityArgs = {\n  id: Scalars['ID'];\n  publicationState?: Maybe<PublicationState>;\n};\n\n\nexport type QueryCitiesArgs = {\n  sort?: Maybe<Scalars['String']>;\n  limit?: Maybe<Scalars['Int']>;\n  start?: Maybe<Scalars['Int']>;\n  where?: Maybe<Scalars['JSON']>;\n  publicationState?: Maybe<PublicationState>;\n  locale?: Maybe<Scalars['String']>;\n};\n\n\nexport type QueryCitiesConnectionArgs = {\n  sort?: Maybe<Scalars['String']>;\n  limit?: Maybe<Scalars['Int']>;\n  start?: Maybe<Scalars['Int']>;\n  where?: Maybe<Scalars['JSON']>;\n  locale?: Maybe<Scalars['String']>;\n};\n\n\nexport type QueryFeatureArgs = {\n  id: Scalars['ID'];\n  publicationState?: Maybe<PublicationState>;\n};\n\n\nexport type QueryFeaturesArgs = {\n  sort?: Maybe<Scalars['String']>;\n  limit?: Maybe<Scalars['Int']>;\n  start?: Maybe<Scalars['Int']>;\n  where?: Maybe<Scalars['JSON']>;\n  publicationState?: Maybe<PublicationState>;\n  locale?: Maybe<Scalars['String']>;\n};\n\n\nexport type QueryFeaturesConnectionArgs = {\n  sort?: Maybe<Scalars['String']>;\n  limit?: Maybe<Scalars['Int']>;\n  start?: Maybe<Scalars['Int']>;\n  where?: Maybe<Scalars['JSON']>;\n  locale?: Maybe<Scalars['String']>;\n};\n\n\nexport type QueryHomeBannerArgs = {\n  publicationState?: Maybe<PublicationState>;\n};\n\n\nexport type QueryHotelArgs = {\n  id: Scalars['ID'];\n  publicationState?: Maybe<PublicationState>;\n};\n\n\nexport type QueryHotelsArgs = {\n  sort?: Maybe<Scalars['String']>;\n  limit?: Maybe<Scalars['Int']>;\n  start?: Maybe<Scalars['Int']>;\n  where?: Maybe<Scalars['JSON']>;\n  publicationState?: Maybe<PublicationState>;\n};\n\n\nexport type QueryHotelsConnectionArgs = {\n  sort?: Maybe<Scalars['String']>;\n  limit?: Maybe<Scalars['Int']>;\n  start?: Maybe<Scalars['Int']>;\n  where?: Maybe<Scalars['JSON']>;\n};\n\n\nexport type QueryLocationArgs = {\n  id: Scalars['ID'];\n  publicationState?: Maybe<PublicationState>;\n};\n\n\nexport type QueryLocationsArgs = {\n  sort?: Maybe<Scalars['String']>;\n  limit?: Maybe<Scalars['Int']>;\n  start?: Maybe<Scalars['Int']>;\n  where?: Maybe<Scalars['JSON']>;\n  publicationState?: Maybe<PublicationState>;\n  locale?: Maybe<Scalars['String']>;\n};\n\n\nexport type QueryLocationsConnectionArgs = {\n  sort?: Maybe<Scalars['String']>;\n  limit?: Maybe<Scalars['Int']>;\n  start?: Maybe<Scalars['Int']>;\n  where?: Maybe<Scalars['JSON']>;\n  locale?: Maybe<Scalars['String']>;\n};\n\n\nexport type QueryPartnerArgs = {\n  id: Scalars['ID'];\n  publicationState?: Maybe<PublicationState>;\n};\n\n\nexport type QueryPartnersArgs = {\n  sort?: Maybe<Scalars['String']>;\n  limit?: Maybe<Scalars['Int']>;\n  start?: Maybe<Scalars['Int']>;\n  where?: Maybe<Scalars['JSON']>;\n  publicationState?: Maybe<PublicationState>;\n};\n\n\nexport type QueryPartnersConnectionArgs = {\n  sort?: Maybe<Scalars['String']>;\n  limit?: Maybe<Scalars['Int']>;\n  start?: Maybe<Scalars['Int']>;\n  where?: Maybe<Scalars['JSON']>;\n};\n\n\nexport type QueryReviewArgs = {\n  id: Scalars['ID'];\n  publicationState?: Maybe<PublicationState>;\n};\n\n\nexport type QueryReviewsArgs = {\n  sort?: Maybe<Scalars['String']>;\n  limit?: Maybe<Scalars['Int']>;\n  start?: Maybe<Scalars['Int']>;\n  where?: Maybe<Scalars['JSON']>;\n  publicationState?: Maybe<PublicationState>;\n};\n\n\nexport type QueryReviewsConnectionArgs = {\n  sort?: Maybe<Scalars['String']>;\n  limit?: Maybe<Scalars['Int']>;\n  start?: Maybe<Scalars['Int']>;\n  where?: Maybe<Scalars['JSON']>;\n};\n\n\nexport type QuerySubscriberArgs = {\n  id: Scalars['ID'];\n  publicationState?: Maybe<PublicationState>;\n};\n\n\nexport type QuerySubscribersArgs = {\n  sort?: Maybe<Scalars['String']>;\n  limit?: Maybe<Scalars['Int']>;\n  start?: Maybe<Scalars['Int']>;\n  where?: Maybe<Scalars['JSON']>;\n  publicationState?: Maybe<PublicationState>;\n};\n\n\nexport type QuerySubscribersConnectionArgs = {\n  sort?: Maybe<Scalars['String']>;\n  limit?: Maybe<Scalars['Int']>;\n  start?: Maybe<Scalars['Int']>;\n  where?: Maybe<Scalars['JSON']>;\n};\n\n\nexport type QueryTripArgs = {\n  id: Scalars['ID'];\n  publicationState?: Maybe<PublicationState>;\n};\n\n\nexport type QueryTripsArgs = {\n  sort?: Maybe<Scalars['String']>;\n  limit?: Maybe<Scalars['Int']>;\n  start?: Maybe<Scalars['Int']>;\n  where?: Maybe<Scalars['JSON']>;\n  publicationState?: Maybe<PublicationState>;\n  locale?: Maybe<Scalars['String']>;\n};\n\n\nexport type QueryTripsConnectionArgs = {\n  sort?: Maybe<Scalars['String']>;\n  limit?: Maybe<Scalars['Int']>;\n  start?: Maybe<Scalars['Int']>;\n  where?: Maybe<Scalars['JSON']>;\n  locale?: Maybe<Scalars['String']>;\n};\n\n\nexport type QueryFilesArgs = {\n  sort?: Maybe<Scalars['String']>;\n  limit?: Maybe<Scalars['Int']>;\n  start?: Maybe<Scalars['Int']>;\n  where?: Maybe<Scalars['JSON']>;\n  publicationState?: Maybe<PublicationState>;\n};\n\n\nexport type QueryFilesConnectionArgs = {\n  sort?: Maybe<Scalars['String']>;\n  limit?: Maybe<Scalars['Int']>;\n  start?: Maybe<Scalars['Int']>;\n  where?: Maybe<Scalars['JSON']>;\n};\n\n\nexport type QueryRoleArgs = {\n  id: Scalars['ID'];\n  publicationState?: Maybe<PublicationState>;\n};\n\n\nexport type QueryRolesArgs = {\n  sort?: Maybe<Scalars['String']>;\n  limit?: Maybe<Scalars['Int']>;\n  start?: Maybe<Scalars['Int']>;\n  where?: Maybe<Scalars['JSON']>;\n  publicationState?: Maybe<PublicationState>;\n};\n\n\nexport type QueryRolesConnectionArgs = {\n  sort?: Maybe<Scalars['String']>;\n  limit?: Maybe<Scalars['Int']>;\n  start?: Maybe<Scalars['Int']>;\n  where?: Maybe<Scalars['JSON']>;\n};\n\n\nexport type QueryUserArgs = {\n  id: Scalars['ID'];\n  publicationState?: Maybe<PublicationState>;\n};\n\n\nexport type QueryUsersArgs = {\n  sort?: Maybe<Scalars['String']>;\n  limit?: Maybe<Scalars['Int']>;\n  start?: Maybe<Scalars['Int']>;\n  where?: Maybe<Scalars['JSON']>;\n  publicationState?: Maybe<PublicationState>;\n};\n\n\nexport type QueryUsersConnectionArgs = {\n  sort?: Maybe<Scalars['String']>;\n  limit?: Maybe<Scalars['Int']>;\n  start?: Maybe<Scalars['Int']>;\n  where?: Maybe<Scalars['JSON']>;\n};\n\nexport type Review = {\n  __typename?: 'Review';\n  id: Scalars['ID'];\n  _id: Scalars['ID'];\n  createdAt: Scalars['DateTime'];\n  updatedAt: Scalars['DateTime'];\n  text?: Maybe<Scalars['String']>;\n  rating: Scalars['Float'];\n  author?: Maybe<UsersPermissionsUser>;\n  active?: Maybe<Scalars['Boolean']>;\n  trip?: Maybe<Trips>;\n  published_at?: Maybe<Scalars['DateTime']>;\n};\n\nexport type ReviewAggregator = {\n  __typename?: 'ReviewAggregator';\n  count?: Maybe<Scalars['Int']>;\n  totalCount?: Maybe<Scalars['Int']>;\n  sum?: Maybe<ReviewAggregatorSum>;\n  avg?: Maybe<ReviewAggregatorAvg>;\n  min?: Maybe<ReviewAggregatorMin>;\n  max?: Maybe<ReviewAggregatorMax>;\n};\n\nexport type ReviewAggregatorAvg = {\n  __typename?: 'ReviewAggregatorAvg';\n  rating?: Maybe<Scalars['Float']>;\n};\n\nexport type ReviewAggregatorMax = {\n  __typename?: 'ReviewAggregatorMax';\n  rating?: Maybe<Scalars['Float']>;\n};\n\nexport type ReviewAggregatorMin = {\n  __typename?: 'ReviewAggregatorMin';\n  rating?: Maybe<Scalars['Float']>;\n};\n\nexport type ReviewAggregatorSum = {\n  __typename?: 'ReviewAggregatorSum';\n  rating?: Maybe<Scalars['Float']>;\n};\n\nexport type ReviewConnection = {\n  __typename?: 'ReviewConnection';\n  values?: Maybe<Array<Maybe<Review>>>;\n  groupBy?: Maybe<ReviewGroupBy>;\n  aggregate?: Maybe<ReviewAggregator>;\n};\n\nexport type ReviewConnectionActive = {\n  __typename?: 'ReviewConnectionActive';\n  key?: Maybe<Scalars['Boolean']>;\n  connection?: Maybe<ReviewConnection>;\n};\n\nexport type ReviewConnectionAuthor = {\n  __typename?: 'ReviewConnectionAuthor';\n  key?: Maybe<Scalars['ID']>;\n  connection?: Maybe<ReviewConnection>;\n};\n\nexport type ReviewConnectionCreatedAt = {\n  __typename?: 'ReviewConnectionCreatedAt';\n  key?: Maybe<Scalars['DateTime']>;\n  connection?: Maybe<ReviewConnection>;\n};\n\nexport type ReviewConnectionId = {\n  __typename?: 'ReviewConnectionId';\n  key?: Maybe<Scalars['ID']>;\n  connection?: Maybe<ReviewConnection>;\n};\n\nexport type ReviewConnectionPublished_At = {\n  __typename?: 'ReviewConnectionPublished_at';\n  key?: Maybe<Scalars['DateTime']>;\n  connection?: Maybe<ReviewConnection>;\n};\n\nexport type ReviewConnectionRating = {\n  __typename?: 'ReviewConnectionRating';\n  key?: Maybe<Scalars['Float']>;\n  connection?: Maybe<ReviewConnection>;\n};\n\nexport type ReviewConnectionText = {\n  __typename?: 'ReviewConnectionText';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<ReviewConnection>;\n};\n\nexport type ReviewConnectionTrip = {\n  __typename?: 'ReviewConnectionTrip';\n  key?: Maybe<Scalars['ID']>;\n  connection?: Maybe<ReviewConnection>;\n};\n\nexport type ReviewConnectionUpdatedAt = {\n  __typename?: 'ReviewConnectionUpdatedAt';\n  key?: Maybe<Scalars['DateTime']>;\n  connection?: Maybe<ReviewConnection>;\n};\n\nexport type ReviewConnection_Id = {\n  __typename?: 'ReviewConnection_id';\n  key?: Maybe<Scalars['ID']>;\n  connection?: Maybe<ReviewConnection>;\n};\n\nexport type ReviewGroupBy = {\n  __typename?: 'ReviewGroupBy';\n  id?: Maybe<Array<Maybe<ReviewConnectionId>>>;\n  _id?: Maybe<Array<Maybe<ReviewConnection_Id>>>;\n  createdAt?: Maybe<Array<Maybe<ReviewConnectionCreatedAt>>>;\n  updatedAt?: Maybe<Array<Maybe<ReviewConnectionUpdatedAt>>>;\n  text?: Maybe<Array<Maybe<ReviewConnectionText>>>;\n  rating?: Maybe<Array<Maybe<ReviewConnectionRating>>>;\n  author?: Maybe<Array<Maybe<ReviewConnectionAuthor>>>;\n  active?: Maybe<Array<Maybe<ReviewConnectionActive>>>;\n  trip?: Maybe<Array<Maybe<ReviewConnectionTrip>>>;\n  published_at?: Maybe<Array<Maybe<ReviewConnectionPublished_At>>>;\n};\n\nexport type ReviewInput = {\n  text?: Maybe<Scalars['String']>;\n  rating: Scalars['Float'];\n  author?: Maybe<Scalars['ID']>;\n  active?: Maybe<Scalars['Boolean']>;\n  trip?: Maybe<Scalars['ID']>;\n  published_at?: Maybe<Scalars['DateTime']>;\n  created_by?: Maybe<Scalars['ID']>;\n  updated_by?: Maybe<Scalars['ID']>;\n};\n\nexport type RoleInput = {\n  name: Scalars['String'];\n  description?: Maybe<Scalars['String']>;\n  type?: Maybe<Scalars['String']>;\n  permissions?: Maybe<Array<Maybe<Scalars['ID']>>>;\n  users?: Maybe<Array<Maybe<Scalars['ID']>>>;\n  created_by?: Maybe<Scalars['ID']>;\n  updated_by?: Maybe<Scalars['ID']>;\n};\n\nexport type SubscriberInput = {\n  email: Scalars['String'];\n  published_at?: Maybe<Scalars['DateTime']>;\n  created_by?: Maybe<Scalars['ID']>;\n  updated_by?: Maybe<Scalars['ID']>;\n};\n\nexport type Subscribers = {\n  __typename?: 'Subscribers';\n  id: Scalars['ID'];\n  _id: Scalars['ID'];\n  createdAt: Scalars['DateTime'];\n  updatedAt: Scalars['DateTime'];\n  email: Scalars['String'];\n  published_at?: Maybe<Scalars['DateTime']>;\n};\n\nexport type SubscribersAggregator = {\n  __typename?: 'SubscribersAggregator';\n  count?: Maybe<Scalars['Int']>;\n  totalCount?: Maybe<Scalars['Int']>;\n};\n\nexport type SubscribersConnection = {\n  __typename?: 'SubscribersConnection';\n  values?: Maybe<Array<Maybe<Subscribers>>>;\n  groupBy?: Maybe<SubscribersGroupBy>;\n  aggregate?: Maybe<SubscribersAggregator>;\n};\n\nexport type SubscribersConnectionCreatedAt = {\n  __typename?: 'SubscribersConnectionCreatedAt';\n  key?: Maybe<Scalars['DateTime']>;\n  connection?: Maybe<SubscribersConnection>;\n};\n\nexport type SubscribersConnectionEmail = {\n  __typename?: 'SubscribersConnectionEmail';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<SubscribersConnection>;\n};\n\nexport type SubscribersConnectionId = {\n  __typename?: 'SubscribersConnectionId';\n  key?: Maybe<Scalars['ID']>;\n  connection?: Maybe<SubscribersConnection>;\n};\n\nexport type SubscribersConnectionPublished_At = {\n  __typename?: 'SubscribersConnectionPublished_at';\n  key?: Maybe<Scalars['DateTime']>;\n  connection?: Maybe<SubscribersConnection>;\n};\n\nexport type SubscribersConnectionUpdatedAt = {\n  __typename?: 'SubscribersConnectionUpdatedAt';\n  key?: Maybe<Scalars['DateTime']>;\n  connection?: Maybe<SubscribersConnection>;\n};\n\nexport type SubscribersConnection_Id = {\n  __typename?: 'SubscribersConnection_id';\n  key?: Maybe<Scalars['ID']>;\n  connection?: Maybe<SubscribersConnection>;\n};\n\nexport type SubscribersGroupBy = {\n  __typename?: 'SubscribersGroupBy';\n  id?: Maybe<Array<Maybe<SubscribersConnectionId>>>;\n  _id?: Maybe<Array<Maybe<SubscribersConnection_Id>>>;\n  createdAt?: Maybe<Array<Maybe<SubscribersConnectionCreatedAt>>>;\n  updatedAt?: Maybe<Array<Maybe<SubscribersConnectionUpdatedAt>>>;\n  email?: Maybe<Array<Maybe<SubscribersConnectionEmail>>>;\n  published_at?: Maybe<Array<Maybe<SubscribersConnectionPublished_At>>>;\n};\n\n\nexport type TripInput = {\n  name: Scalars['String'];\n  previewImage?: Maybe<Scalars['ID']>;\n  active?: Maybe<Scalars['Boolean']>;\n  trip_type: Enum_Trips_Trip_Type;\n  description?: Maybe<Scalars['String']>;\n  duration: Scalars['Int'];\n  partner?: Maybe<Scalars['ID']>;\n  currency?: Maybe<Enum_Trips_Currency>;\n  city?: Maybe<Scalars['ID']>;\n  features?: Maybe<Array<ComponentFeatureFeatureInput>>;\n  basePrice: Scalars['Int'];\n  basePeopleCount: Scalars['Int'];\n  discount?: Maybe<Scalars['Float']>;\n  travelType: Enum_Trips_Traveltype;\n  hotel?: Maybe<Scalars['ID']>;\n  plan?: Maybe<Array<ComponentTimelineTimelineInput>>;\n  sequence: Scalars['String'];\n  localizations?: Maybe<Array<Maybe<Scalars['ID']>>>;\n  locale?: Maybe<Scalars['String']>;\n  published_at?: Maybe<Scalars['DateTime']>;\n  created_by?: Maybe<Scalars['ID']>;\n  updated_by?: Maybe<Scalars['ID']>;\n};\n\nexport type Trips = {\n  __typename?: 'Trips';\n  id: Scalars['ID'];\n  _id: Scalars['ID'];\n  createdAt: Scalars['DateTime'];\n  updatedAt: Scalars['DateTime'];\n  name: Scalars['String'];\n  previewImage?: Maybe<UploadFile>;\n  active?: Maybe<Scalars['Boolean']>;\n  trip_type: Enum_Trips_Trip_Type;\n  description?: Maybe<Scalars['String']>;\n  duration: Scalars['Int'];\n  partner?: Maybe<Partner>;\n  currency?: Maybe<Enum_Trips_Currency>;\n  city?: Maybe<City>;\n  features?: Maybe<Array<Maybe<ComponentFeatureFeature>>>;\n  basePrice: Scalars['Int'];\n  basePeopleCount: Scalars['Int'];\n  discount?: Maybe<Scalars['Float']>;\n  travelType: Enum_Trips_Traveltype;\n  hotel?: Maybe<Hotels>;\n  plan?: Maybe<Array<Maybe<ComponentTimelineTimeline>>>;\n  locale?: Maybe<Scalars['String']>;\n  published_at?: Maybe<Scalars['DateTime']>;\n  localizations?: Maybe<Array<Maybe<Trips>>>;\n};\n\n\nexport type TripsLocalizationsArgs = {\n  sort?: Maybe<Scalars['String']>;\n  limit?: Maybe<Scalars['Int']>;\n  start?: Maybe<Scalars['Int']>;\n  where?: Maybe<Scalars['JSON']>;\n};\n\nexport type TripsAggregator = {\n  __typename?: 'TripsAggregator';\n  count?: Maybe<Scalars['Int']>;\n  totalCount?: Maybe<Scalars['Int']>;\n  sum?: Maybe<TripsAggregatorSum>;\n  avg?: Maybe<TripsAggregatorAvg>;\n  min?: Maybe<TripsAggregatorMin>;\n  max?: Maybe<TripsAggregatorMax>;\n};\n\nexport type TripsAggregatorAvg = {\n  __typename?: 'TripsAggregatorAvg';\n  duration?: Maybe<Scalars['Float']>;\n  basePrice?: Maybe<Scalars['Float']>;\n  basePeopleCount?: Maybe<Scalars['Float']>;\n  discount?: Maybe<Scalars['Float']>;\n};\n\nexport type TripsAggregatorMax = {\n  __typename?: 'TripsAggregatorMax';\n  duration?: Maybe<Scalars['Float']>;\n  basePrice?: Maybe<Scalars['Float']>;\n  basePeopleCount?: Maybe<Scalars['Float']>;\n  discount?: Maybe<Scalars['Float']>;\n};\n\nexport type TripsAggregatorMin = {\n  __typename?: 'TripsAggregatorMin';\n  duration?: Maybe<Scalars['Float']>;\n  basePrice?: Maybe<Scalars['Float']>;\n  basePeopleCount?: Maybe<Scalars['Float']>;\n  discount?: Maybe<Scalars['Float']>;\n};\n\nexport type TripsAggregatorSum = {\n  __typename?: 'TripsAggregatorSum';\n  duration?: Maybe<Scalars['Float']>;\n  basePrice?: Maybe<Scalars['Float']>;\n  basePeopleCount?: Maybe<Scalars['Float']>;\n  discount?: Maybe<Scalars['Float']>;\n};\n\nexport type TripsConnection = {\n  __typename?: 'TripsConnection';\n  values?: Maybe<Array<Maybe<Trips>>>;\n  groupBy?: Maybe<TripsGroupBy>;\n  aggregate?: Maybe<TripsAggregator>;\n};\n\nexport type TripsConnectionActive = {\n  __typename?: 'TripsConnectionActive';\n  key?: Maybe<Scalars['Boolean']>;\n  connection?: Maybe<TripsConnection>;\n};\n\nexport type TripsConnectionBasePeopleCount = {\n  __typename?: 'TripsConnectionBasePeopleCount';\n  key?: Maybe<Scalars['Int']>;\n  connection?: Maybe<TripsConnection>;\n};\n\nexport type TripsConnectionBasePrice = {\n  __typename?: 'TripsConnectionBasePrice';\n  key?: Maybe<Scalars['Int']>;\n  connection?: Maybe<TripsConnection>;\n};\n\nexport type TripsConnectionCity = {\n  __typename?: 'TripsConnectionCity';\n  key?: Maybe<Scalars['ID']>;\n  connection?: Maybe<TripsConnection>;\n};\n\nexport type TripsConnectionCreatedAt = {\n  __typename?: 'TripsConnectionCreatedAt';\n  key?: Maybe<Scalars['DateTime']>;\n  connection?: Maybe<TripsConnection>;\n};\n\nexport type TripsConnectionCurrency = {\n  __typename?: 'TripsConnectionCurrency';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<TripsConnection>;\n};\n\nexport type TripsConnectionDescription = {\n  __typename?: 'TripsConnectionDescription';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<TripsConnection>;\n};\n\nexport type TripsConnectionDiscount = {\n  __typename?: 'TripsConnectionDiscount';\n  key?: Maybe<Scalars['Float']>;\n  connection?: Maybe<TripsConnection>;\n};\n\nexport type TripsConnectionDuration = {\n  __typename?: 'TripsConnectionDuration';\n  key?: Maybe<Scalars['Int']>;\n  connection?: Maybe<TripsConnection>;\n};\n\nexport type TripsConnectionHotel = {\n  __typename?: 'TripsConnectionHotel';\n  key?: Maybe<Scalars['ID']>;\n  connection?: Maybe<TripsConnection>;\n};\n\nexport type TripsConnectionId = {\n  __typename?: 'TripsConnectionId';\n  key?: Maybe<Scalars['ID']>;\n  connection?: Maybe<TripsConnection>;\n};\n\nexport type TripsConnectionLocale = {\n  __typename?: 'TripsConnectionLocale';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<TripsConnection>;\n};\n\nexport type TripsConnectionName = {\n  __typename?: 'TripsConnectionName';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<TripsConnection>;\n};\n\nexport type TripsConnectionPartner = {\n  __typename?: 'TripsConnectionPartner';\n  key?: Maybe<Scalars['ID']>;\n  connection?: Maybe<TripsConnection>;\n};\n\nexport type TripsConnectionPreviewImage = {\n  __typename?: 'TripsConnectionPreviewImage';\n  key?: Maybe<Scalars['ID']>;\n  connection?: Maybe<TripsConnection>;\n};\n\nexport type TripsConnectionPublished_At = {\n  __typename?: 'TripsConnectionPublished_at';\n  key?: Maybe<Scalars['DateTime']>;\n  connection?: Maybe<TripsConnection>;\n};\n\nexport type TripsConnectionTravelType = {\n  __typename?: 'TripsConnectionTravelType';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<TripsConnection>;\n};\n\nexport type TripsConnectionTrip_Type = {\n  __typename?: 'TripsConnectionTrip_type';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<TripsConnection>;\n};\n\nexport type TripsConnectionUpdatedAt = {\n  __typename?: 'TripsConnectionUpdatedAt';\n  key?: Maybe<Scalars['DateTime']>;\n  connection?: Maybe<TripsConnection>;\n};\n\nexport type TripsConnection_Id = {\n  __typename?: 'TripsConnection_id';\n  key?: Maybe<Scalars['ID']>;\n  connection?: Maybe<TripsConnection>;\n};\n\nexport type TripsGroupBy = {\n  __typename?: 'TripsGroupBy';\n  id?: Maybe<Array<Maybe<TripsConnectionId>>>;\n  _id?: Maybe<Array<Maybe<TripsConnection_Id>>>;\n  createdAt?: Maybe<Array<Maybe<TripsConnectionCreatedAt>>>;\n  updatedAt?: Maybe<Array<Maybe<TripsConnectionUpdatedAt>>>;\n  name?: Maybe<Array<Maybe<TripsConnectionName>>>;\n  previewImage?: Maybe<Array<Maybe<TripsConnectionPreviewImage>>>;\n  active?: Maybe<Array<Maybe<TripsConnectionActive>>>;\n  trip_type?: Maybe<Array<Maybe<TripsConnectionTrip_Type>>>;\n  description?: Maybe<Array<Maybe<TripsConnectionDescription>>>;\n  duration?: Maybe<Array<Maybe<TripsConnectionDuration>>>;\n  partner?: Maybe<Array<Maybe<TripsConnectionPartner>>>;\n  currency?: Maybe<Array<Maybe<TripsConnectionCurrency>>>;\n  city?: Maybe<Array<Maybe<TripsConnectionCity>>>;\n  basePrice?: Maybe<Array<Maybe<TripsConnectionBasePrice>>>;\n  basePeopleCount?: Maybe<Array<Maybe<TripsConnectionBasePeopleCount>>>;\n  discount?: Maybe<Array<Maybe<TripsConnectionDiscount>>>;\n  travelType?: Maybe<Array<Maybe<TripsConnectionTravelType>>>;\n  hotel?: Maybe<Array<Maybe<TripsConnectionHotel>>>;\n  locale?: Maybe<Array<Maybe<TripsConnectionLocale>>>;\n  published_at?: Maybe<Array<Maybe<TripsConnectionPublished_At>>>;\n};\n\n\nexport type UploadFile = {\n  __typename?: 'UploadFile';\n  id: Scalars['ID'];\n  _id: Scalars['ID'];\n  createdAt: Scalars['DateTime'];\n  updatedAt: Scalars['DateTime'];\n  name: Scalars['String'];\n  alternativeText?: Maybe<Scalars['String']>;\n  caption?: Maybe<Scalars['String']>;\n  width?: Maybe<Scalars['Int']>;\n  height?: Maybe<Scalars['Int']>;\n  formats?: Maybe<Scalars['JSON']>;\n  hash: Scalars['String'];\n  ext?: Maybe<Scalars['String']>;\n  mime: Scalars['String'];\n  size: Scalars['Float'];\n  url: Scalars['String'];\n  previewUrl?: Maybe<Scalars['String']>;\n  provider: Scalars['String'];\n  provider_metadata?: Maybe<Scalars['JSON']>;\n  related?: Maybe<Array<Maybe<Morph>>>;\n};\n\n\nexport type UploadFileRelatedArgs = {\n  sort?: Maybe<Scalars['String']>;\n  limit?: Maybe<Scalars['Int']>;\n  start?: Maybe<Scalars['Int']>;\n  where?: Maybe<Scalars['JSON']>;\n};\n\nexport type UploadFileAggregator = {\n  __typename?: 'UploadFileAggregator';\n  count?: Maybe<Scalars['Int']>;\n  totalCount?: Maybe<Scalars['Int']>;\n  sum?: Maybe<UploadFileAggregatorSum>;\n  avg?: Maybe<UploadFileAggregatorAvg>;\n  min?: Maybe<UploadFileAggregatorMin>;\n  max?: Maybe<UploadFileAggregatorMax>;\n};\n\nexport type UploadFileAggregatorAvg = {\n  __typename?: 'UploadFileAggregatorAvg';\n  width?: Maybe<Scalars['Float']>;\n  height?: Maybe<Scalars['Float']>;\n  size?: Maybe<Scalars['Float']>;\n};\n\nexport type UploadFileAggregatorMax = {\n  __typename?: 'UploadFileAggregatorMax';\n  width?: Maybe<Scalars['Float']>;\n  height?: Maybe<Scalars['Float']>;\n  size?: Maybe<Scalars['Float']>;\n};\n\nexport type UploadFileAggregatorMin = {\n  __typename?: 'UploadFileAggregatorMin';\n  width?: Maybe<Scalars['Float']>;\n  height?: Maybe<Scalars['Float']>;\n  size?: Maybe<Scalars['Float']>;\n};\n\nexport type UploadFileAggregatorSum = {\n  __typename?: 'UploadFileAggregatorSum';\n  width?: Maybe<Scalars['Float']>;\n  height?: Maybe<Scalars['Float']>;\n  size?: Maybe<Scalars['Float']>;\n};\n\nexport type UploadFileConnection = {\n  __typename?: 'UploadFileConnection';\n  values?: Maybe<Array<Maybe<UploadFile>>>;\n  groupBy?: Maybe<UploadFileGroupBy>;\n  aggregate?: Maybe<UploadFileAggregator>;\n};\n\nexport type UploadFileConnectionAlternativeText = {\n  __typename?: 'UploadFileConnectionAlternativeText';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<UploadFileConnection>;\n};\n\nexport type UploadFileConnectionCaption = {\n  __typename?: 'UploadFileConnectionCaption';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<UploadFileConnection>;\n};\n\nexport type UploadFileConnectionCreatedAt = {\n  __typename?: 'UploadFileConnectionCreatedAt';\n  key?: Maybe<Scalars['DateTime']>;\n  connection?: Maybe<UploadFileConnection>;\n};\n\nexport type UploadFileConnectionExt = {\n  __typename?: 'UploadFileConnectionExt';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<UploadFileConnection>;\n};\n\nexport type UploadFileConnectionFormats = {\n  __typename?: 'UploadFileConnectionFormats';\n  key?: Maybe<Scalars['JSON']>;\n  connection?: Maybe<UploadFileConnection>;\n};\n\nexport type UploadFileConnectionHash = {\n  __typename?: 'UploadFileConnectionHash';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<UploadFileConnection>;\n};\n\nexport type UploadFileConnectionHeight = {\n  __typename?: 'UploadFileConnectionHeight';\n  key?: Maybe<Scalars['Int']>;\n  connection?: Maybe<UploadFileConnection>;\n};\n\nexport type UploadFileConnectionId = {\n  __typename?: 'UploadFileConnectionId';\n  key?: Maybe<Scalars['ID']>;\n  connection?: Maybe<UploadFileConnection>;\n};\n\nexport type UploadFileConnectionMime = {\n  __typename?: 'UploadFileConnectionMime';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<UploadFileConnection>;\n};\n\nexport type UploadFileConnectionName = {\n  __typename?: 'UploadFileConnectionName';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<UploadFileConnection>;\n};\n\nexport type UploadFileConnectionPreviewUrl = {\n  __typename?: 'UploadFileConnectionPreviewUrl';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<UploadFileConnection>;\n};\n\nexport type UploadFileConnectionProvider = {\n  __typename?: 'UploadFileConnectionProvider';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<UploadFileConnection>;\n};\n\nexport type UploadFileConnectionProvider_Metadata = {\n  __typename?: 'UploadFileConnectionProvider_metadata';\n  key?: Maybe<Scalars['JSON']>;\n  connection?: Maybe<UploadFileConnection>;\n};\n\nexport type UploadFileConnectionSize = {\n  __typename?: 'UploadFileConnectionSize';\n  key?: Maybe<Scalars['Float']>;\n  connection?: Maybe<UploadFileConnection>;\n};\n\nexport type UploadFileConnectionUpdatedAt = {\n  __typename?: 'UploadFileConnectionUpdatedAt';\n  key?: Maybe<Scalars['DateTime']>;\n  connection?: Maybe<UploadFileConnection>;\n};\n\nexport type UploadFileConnectionUrl = {\n  __typename?: 'UploadFileConnectionUrl';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<UploadFileConnection>;\n};\n\nexport type UploadFileConnectionWidth = {\n  __typename?: 'UploadFileConnectionWidth';\n  key?: Maybe<Scalars['Int']>;\n  connection?: Maybe<UploadFileConnection>;\n};\n\nexport type UploadFileConnection_Id = {\n  __typename?: 'UploadFileConnection_id';\n  key?: Maybe<Scalars['ID']>;\n  connection?: Maybe<UploadFileConnection>;\n};\n\nexport type UploadFileGroupBy = {\n  __typename?: 'UploadFileGroupBy';\n  id?: Maybe<Array<Maybe<UploadFileConnectionId>>>;\n  _id?: Maybe<Array<Maybe<UploadFileConnection_Id>>>;\n  createdAt?: Maybe<Array<Maybe<UploadFileConnectionCreatedAt>>>;\n  updatedAt?: Maybe<Array<Maybe<UploadFileConnectionUpdatedAt>>>;\n  name?: Maybe<Array<Maybe<UploadFileConnectionName>>>;\n  alternativeText?: Maybe<Array<Maybe<UploadFileConnectionAlternativeText>>>;\n  caption?: Maybe<Array<Maybe<UploadFileConnectionCaption>>>;\n  width?: Maybe<Array<Maybe<UploadFileConnectionWidth>>>;\n  height?: Maybe<Array<Maybe<UploadFileConnectionHeight>>>;\n  formats?: Maybe<Array<Maybe<UploadFileConnectionFormats>>>;\n  hash?: Maybe<Array<Maybe<UploadFileConnectionHash>>>;\n  ext?: Maybe<Array<Maybe<UploadFileConnectionExt>>>;\n  mime?: Maybe<Array<Maybe<UploadFileConnectionMime>>>;\n  size?: Maybe<Array<Maybe<UploadFileConnectionSize>>>;\n  url?: Maybe<Array<Maybe<UploadFileConnectionUrl>>>;\n  previewUrl?: Maybe<Array<Maybe<UploadFileConnectionPreviewUrl>>>;\n  provider?: Maybe<Array<Maybe<UploadFileConnectionProvider>>>;\n  provider_metadata?: Maybe<Array<Maybe<UploadFileConnectionProvider_Metadata>>>;\n};\n\nexport type UserInput = {\n  username: Scalars['String'];\n  email: Scalars['String'];\n  provider?: Maybe<Scalars['String']>;\n  password?: Maybe<Scalars['String']>;\n  resetPasswordToken?: Maybe<Scalars['String']>;\n  confirmationToken?: Maybe<Scalars['String']>;\n  confirmed?: Maybe<Scalars['Boolean']>;\n  blocked?: Maybe<Scalars['Boolean']>;\n  role?: Maybe<Scalars['ID']>;\n  created_by?: Maybe<Scalars['ID']>;\n  updated_by?: Maybe<Scalars['ID']>;\n};\n\nexport type UserPermissionsPasswordPayload = {\n  __typename?: 'UserPermissionsPasswordPayload';\n  ok: Scalars['Boolean'];\n};\n\nexport type UsersPermissionsLoginInput = {\n  identifier: Scalars['String'];\n  password: Scalars['String'];\n  provider?: Maybe<Scalars['String']>;\n};\n\nexport type UsersPermissionsLoginPayload = {\n  __typename?: 'UsersPermissionsLoginPayload';\n  jwt?: Maybe<Scalars['String']>;\n  user: UsersPermissionsMe;\n};\n\nexport type UsersPermissionsMe = {\n  __typename?: 'UsersPermissionsMe';\n  id: Scalars['ID'];\n  username: Scalars['String'];\n  email: Scalars['String'];\n  confirmed?: Maybe<Scalars['Boolean']>;\n  blocked?: Maybe<Scalars['Boolean']>;\n  role?: Maybe<UsersPermissionsMeRole>;\n};\n\nexport type UsersPermissionsMeRole = {\n  __typename?: 'UsersPermissionsMeRole';\n  id: Scalars['ID'];\n  name: Scalars['String'];\n  description?: Maybe<Scalars['String']>;\n  type?: Maybe<Scalars['String']>;\n};\n\nexport type UsersPermissionsPermission = {\n  __typename?: 'UsersPermissionsPermission';\n  id: Scalars['ID'];\n  _id: Scalars['ID'];\n  type: Scalars['String'];\n  controller: Scalars['String'];\n  action: Scalars['String'];\n  enabled: Scalars['Boolean'];\n  policy?: Maybe<Scalars['String']>;\n  role?: Maybe<UsersPermissionsRole>;\n};\n\nexport type UsersPermissionsRegisterInput = {\n  username: Scalars['String'];\n  email: Scalars['String'];\n  password: Scalars['String'];\n};\n\nexport type UsersPermissionsRole = {\n  __typename?: 'UsersPermissionsRole';\n  id: Scalars['ID'];\n  _id: Scalars['ID'];\n  name: Scalars['String'];\n  description?: Maybe<Scalars['String']>;\n  type?: Maybe<Scalars['String']>;\n  permissions?: Maybe<Array<Maybe<UsersPermissionsPermission>>>;\n  users?: Maybe<Array<Maybe<UsersPermissionsUser>>>;\n};\n\n\nexport type UsersPermissionsRolePermissionsArgs = {\n  sort?: Maybe<Scalars['String']>;\n  limit?: Maybe<Scalars['Int']>;\n  start?: Maybe<Scalars['Int']>;\n  where?: Maybe<Scalars['JSON']>;\n};\n\n\nexport type UsersPermissionsRoleUsersArgs = {\n  sort?: Maybe<Scalars['String']>;\n  limit?: Maybe<Scalars['Int']>;\n  start?: Maybe<Scalars['Int']>;\n  where?: Maybe<Scalars['JSON']>;\n};\n\nexport type UsersPermissionsRoleAggregator = {\n  __typename?: 'UsersPermissionsRoleAggregator';\n  count?: Maybe<Scalars['Int']>;\n  totalCount?: Maybe<Scalars['Int']>;\n};\n\nexport type UsersPermissionsRoleConnection = {\n  __typename?: 'UsersPermissionsRoleConnection';\n  values?: Maybe<Array<Maybe<UsersPermissionsRole>>>;\n  groupBy?: Maybe<UsersPermissionsRoleGroupBy>;\n  aggregate?: Maybe<UsersPermissionsRoleAggregator>;\n};\n\nexport type UsersPermissionsRoleConnectionDescription = {\n  __typename?: 'UsersPermissionsRoleConnectionDescription';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<UsersPermissionsRoleConnection>;\n};\n\nexport type UsersPermissionsRoleConnectionId = {\n  __typename?: 'UsersPermissionsRoleConnectionId';\n  key?: Maybe<Scalars['ID']>;\n  connection?: Maybe<UsersPermissionsRoleConnection>;\n};\n\nexport type UsersPermissionsRoleConnectionName = {\n  __typename?: 'UsersPermissionsRoleConnectionName';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<UsersPermissionsRoleConnection>;\n};\n\nexport type UsersPermissionsRoleConnectionType = {\n  __typename?: 'UsersPermissionsRoleConnectionType';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<UsersPermissionsRoleConnection>;\n};\n\nexport type UsersPermissionsRoleConnection_Id = {\n  __typename?: 'UsersPermissionsRoleConnection_id';\n  key?: Maybe<Scalars['ID']>;\n  connection?: Maybe<UsersPermissionsRoleConnection>;\n};\n\nexport type UsersPermissionsRoleGroupBy = {\n  __typename?: 'UsersPermissionsRoleGroupBy';\n  id?: Maybe<Array<Maybe<UsersPermissionsRoleConnectionId>>>;\n  _id?: Maybe<Array<Maybe<UsersPermissionsRoleConnection_Id>>>;\n  name?: Maybe<Array<Maybe<UsersPermissionsRoleConnectionName>>>;\n  description?: Maybe<Array<Maybe<UsersPermissionsRoleConnectionDescription>>>;\n  type?: Maybe<Array<Maybe<UsersPermissionsRoleConnectionType>>>;\n};\n\nexport type UsersPermissionsUser = {\n  __typename?: 'UsersPermissionsUser';\n  id: Scalars['ID'];\n  _id: Scalars['ID'];\n  createdAt: Scalars['DateTime'];\n  updatedAt: Scalars['DateTime'];\n  username: Scalars['String'];\n  email: Scalars['String'];\n  provider?: Maybe<Scalars['String']>;\n  confirmed?: Maybe<Scalars['Boolean']>;\n  blocked?: Maybe<Scalars['Boolean']>;\n  role?: Maybe<UsersPermissionsRole>;\n};\n\nexport type UsersPermissionsUserAggregator = {\n  __typename?: 'UsersPermissionsUserAggregator';\n  count?: Maybe<Scalars['Int']>;\n  totalCount?: Maybe<Scalars['Int']>;\n};\n\nexport type UsersPermissionsUserConnection = {\n  __typename?: 'UsersPermissionsUserConnection';\n  values?: Maybe<Array<Maybe<UsersPermissionsUser>>>;\n  groupBy?: Maybe<UsersPermissionsUserGroupBy>;\n  aggregate?: Maybe<UsersPermissionsUserAggregator>;\n};\n\nexport type UsersPermissionsUserConnectionBlocked = {\n  __typename?: 'UsersPermissionsUserConnectionBlocked';\n  key?: Maybe<Scalars['Boolean']>;\n  connection?: Maybe<UsersPermissionsUserConnection>;\n};\n\nexport type UsersPermissionsUserConnectionConfirmed = {\n  __typename?: 'UsersPermissionsUserConnectionConfirmed';\n  key?: Maybe<Scalars['Boolean']>;\n  connection?: Maybe<UsersPermissionsUserConnection>;\n};\n\nexport type UsersPermissionsUserConnectionCreatedAt = {\n  __typename?: 'UsersPermissionsUserConnectionCreatedAt';\n  key?: Maybe<Scalars['DateTime']>;\n  connection?: Maybe<UsersPermissionsUserConnection>;\n};\n\nexport type UsersPermissionsUserConnectionEmail = {\n  __typename?: 'UsersPermissionsUserConnectionEmail';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<UsersPermissionsUserConnection>;\n};\n\nexport type UsersPermissionsUserConnectionId = {\n  __typename?: 'UsersPermissionsUserConnectionId';\n  key?: Maybe<Scalars['ID']>;\n  connection?: Maybe<UsersPermissionsUserConnection>;\n};\n\nexport type UsersPermissionsUserConnectionProvider = {\n  __typename?: 'UsersPermissionsUserConnectionProvider';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<UsersPermissionsUserConnection>;\n};\n\nexport type UsersPermissionsUserConnectionRole = {\n  __typename?: 'UsersPermissionsUserConnectionRole';\n  key?: Maybe<Scalars['ID']>;\n  connection?: Maybe<UsersPermissionsUserConnection>;\n};\n\nexport type UsersPermissionsUserConnectionUpdatedAt = {\n  __typename?: 'UsersPermissionsUserConnectionUpdatedAt';\n  key?: Maybe<Scalars['DateTime']>;\n  connection?: Maybe<UsersPermissionsUserConnection>;\n};\n\nexport type UsersPermissionsUserConnectionUsername = {\n  __typename?: 'UsersPermissionsUserConnectionUsername';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<UsersPermissionsUserConnection>;\n};\n\nexport type UsersPermissionsUserConnection_Id = {\n  __typename?: 'UsersPermissionsUserConnection_id';\n  key?: Maybe<Scalars['ID']>;\n  connection?: Maybe<UsersPermissionsUserConnection>;\n};\n\nexport type UsersPermissionsUserGroupBy = {\n  __typename?: 'UsersPermissionsUserGroupBy';\n  id?: Maybe<Array<Maybe<UsersPermissionsUserConnectionId>>>;\n  _id?: Maybe<Array<Maybe<UsersPermissionsUserConnection_Id>>>;\n  createdAt?: Maybe<Array<Maybe<UsersPermissionsUserConnectionCreatedAt>>>;\n  updatedAt?: Maybe<Array<Maybe<UsersPermissionsUserConnectionUpdatedAt>>>;\n  username?: Maybe<Array<Maybe<UsersPermissionsUserConnectionUsername>>>;\n  email?: Maybe<Array<Maybe<UsersPermissionsUserConnectionEmail>>>;\n  provider?: Maybe<Array<Maybe<UsersPermissionsUserConnectionProvider>>>;\n  confirmed?: Maybe<Array<Maybe<UsersPermissionsUserConnectionConfirmed>>>;\n  blocked?: Maybe<Array<Maybe<UsersPermissionsUserConnectionBlocked>>>;\n  role?: Maybe<Array<Maybe<UsersPermissionsUserConnectionRole>>>;\n};\n\nexport type CreateBookingInput = {\n  data?: Maybe<BookingInput>;\n};\n\nexport type CreateBookingPayload = {\n  __typename?: 'createBookingPayload';\n  booking?: Maybe<Booking>;\n};\n\nexport type CreateCityInput = {\n  data?: Maybe<CityInput>;\n};\n\nexport type CreateCityPayload = {\n  __typename?: 'createCityPayload';\n  city?: Maybe<City>;\n};\n\nexport type CreateFeatureInput = {\n  data?: Maybe<FeatureInput>;\n};\n\nexport type CreateFeaturePayload = {\n  __typename?: 'createFeaturePayload';\n  feature?: Maybe<Feature>;\n};\n\nexport type CreateHotelInput = {\n  data?: Maybe<HotelInput>;\n};\n\nexport type CreateHotelPayload = {\n  __typename?: 'createHotelPayload';\n  hotel?: Maybe<Hotels>;\n};\n\nexport type CreateLocationInput = {\n  data?: Maybe<LocationInput>;\n};\n\nexport type CreateLocationPayload = {\n  __typename?: 'createLocationPayload';\n  location?: Maybe<Location>;\n};\n\nexport type CreatePartnerInput = {\n  data?: Maybe<PartnerInput>;\n};\n\nexport type CreatePartnerPayload = {\n  __typename?: 'createPartnerPayload';\n  partner?: Maybe<Partner>;\n};\n\nexport type CreateReviewInput = {\n  data?: Maybe<ReviewInput>;\n};\n\nexport type CreateReviewPayload = {\n  __typename?: 'createReviewPayload';\n  review?: Maybe<Review>;\n};\n\nexport type CreateRoleInput = {\n  data?: Maybe<RoleInput>;\n};\n\nexport type CreateRolePayload = {\n  __typename?: 'createRolePayload';\n  role?: Maybe<UsersPermissionsRole>;\n};\n\nexport type CreateSubscriberInput = {\n  data?: Maybe<SubscriberInput>;\n};\n\nexport type CreateSubscriberPayload = {\n  __typename?: 'createSubscriberPayload';\n  subscriber?: Maybe<Subscribers>;\n};\n\nexport type CreateTripInput = {\n  data?: Maybe<TripInput>;\n};\n\nexport type CreateTripPayload = {\n  __typename?: 'createTripPayload';\n  trip?: Maybe<Trips>;\n};\n\nexport type CreateUserInput = {\n  data?: Maybe<UserInput>;\n};\n\nexport type CreateUserPayload = {\n  __typename?: 'createUserPayload';\n  user?: Maybe<UsersPermissionsUser>;\n};\n\nexport type DeleteBookingInput = {\n  where?: Maybe<InputId>;\n};\n\nexport type DeleteBookingPayload = {\n  __typename?: 'deleteBookingPayload';\n  booking?: Maybe<Booking>;\n};\n\nexport type DeleteCityInput = {\n  where?: Maybe<InputId>;\n};\n\nexport type DeleteCityPayload = {\n  __typename?: 'deleteCityPayload';\n  city?: Maybe<City>;\n};\n\nexport type DeleteFeatureInput = {\n  where?: Maybe<InputId>;\n};\n\nexport type DeleteFeaturePayload = {\n  __typename?: 'deleteFeaturePayload';\n  feature?: Maybe<Feature>;\n};\n\nexport type DeleteFileInput = {\n  where?: Maybe<InputId>;\n};\n\nexport type DeleteFilePayload = {\n  __typename?: 'deleteFilePayload';\n  file?: Maybe<UploadFile>;\n};\n\nexport type DeleteHomeBannerPayload = {\n  __typename?: 'deleteHomeBannerPayload';\n  homeBanner?: Maybe<HomeBanner>;\n};\n\nexport type DeleteHotelInput = {\n  where?: Maybe<InputId>;\n};\n\nexport type DeleteHotelPayload = {\n  __typename?: 'deleteHotelPayload';\n  hotel?: Maybe<Hotels>;\n};\n\nexport type DeleteLocationInput = {\n  where?: Maybe<InputId>;\n};\n\nexport type DeleteLocationPayload = {\n  __typename?: 'deleteLocationPayload';\n  location?: Maybe<Location>;\n};\n\nexport type DeletePartnerInput = {\n  where?: Maybe<InputId>;\n};\n\nexport type DeletePartnerPayload = {\n  __typename?: 'deletePartnerPayload';\n  partner?: Maybe<Partner>;\n};\n\nexport type DeleteReviewInput = {\n  where?: Maybe<InputId>;\n};\n\nexport type DeleteReviewPayload = {\n  __typename?: 'deleteReviewPayload';\n  review?: Maybe<Review>;\n};\n\nexport type DeleteRoleInput = {\n  where?: Maybe<InputId>;\n};\n\nexport type DeleteRolePayload = {\n  __typename?: 'deleteRolePayload';\n  role?: Maybe<UsersPermissionsRole>;\n};\n\nexport type DeleteSubscriberInput = {\n  where?: Maybe<InputId>;\n};\n\nexport type DeleteSubscriberPayload = {\n  __typename?: 'deleteSubscriberPayload';\n  subscriber?: Maybe<Subscribers>;\n};\n\nexport type DeleteTripInput = {\n  where?: Maybe<InputId>;\n};\n\nexport type DeleteTripPayload = {\n  __typename?: 'deleteTripPayload';\n  trip?: Maybe<Trips>;\n};\n\nexport type DeleteUserInput = {\n  where?: Maybe<InputId>;\n};\n\nexport type DeleteUserPayload = {\n  __typename?: 'deleteUserPayload';\n  user?: Maybe<UsersPermissionsUser>;\n};\n\nexport type EditBookingInput = {\n  trip?: Maybe<Scalars['ID']>;\n  approved?: Maybe<Scalars['Boolean']>;\n  basePrice?: Maybe<Scalars['Float']>;\n  currency?: Maybe<Enum_Booking_Currency>;\n  basePeopleCount?: Maybe<Scalars['Int']>;\n  discount?: Maybe<Scalars['Float']>;\n  fullName?: Maybe<Scalars['String']>;\n  phone?: Maybe<Scalars['String']>;\n  message?: Maybe<Scalars['String']>;\n  arrivalDate?: Maybe<Scalars['Date']>;\n  language?: Maybe<Scalars['String']>;\n  userBookingStatus?: Maybe<Enum_Booking_Userbookingstatus>;\n  email?: Maybe<Scalars['String']>;\n  adults?: Maybe<Scalars['Int']>;\n  children?: Maybe<Scalars['Int']>;\n  totalPrice?: Maybe<Scalars['Float']>;\n  published_at?: Maybe<Scalars['DateTime']>;\n  created_by?: Maybe<Scalars['ID']>;\n  updated_by?: Maybe<Scalars['ID']>;\n};\n\nexport type EditCityInput = {\n  name?: Maybe<Scalars['String']>;\n  description?: Maybe<Scalars['String']>;\n  image?: Maybe<Scalars['ID']>;\n  locations?: Maybe<Array<Maybe<Scalars['ID']>>>;\n  localizations?: Maybe<Array<Maybe<Scalars['ID']>>>;\n  locale?: Maybe<Scalars['String']>;\n  published_at?: Maybe<Scalars['DateTime']>;\n  created_by?: Maybe<Scalars['ID']>;\n  updated_by?: Maybe<Scalars['ID']>;\n};\n\nexport type EditComponentCoordinateCoordinateInput = {\n  id?: Maybe<Scalars['ID']>;\n  latitude?: Maybe<Scalars['Float']>;\n  longitude?: Maybe<Scalars['Float']>;\n};\n\nexport type EditComponentFeatureFeatureInput = {\n  id?: Maybe<Scalars['ID']>;\n  feature?: Maybe<Scalars['ID']>;\n  included?: Maybe<Scalars['Boolean']>;\n};\n\nexport type EditComponentPricePriceInput = {\n  id?: Maybe<Scalars['ID']>;\n  basePrice?: Maybe<Scalars['Float']>;\n  currency?: Maybe<Enum_Componentpriceprice_Currency>;\n  basePeopleCount?: Maybe<Scalars['Int']>;\n  extraAdultFee?: Maybe<Scalars['Float']>;\n  discount?: Maybe<Scalars['Float']>;\n};\n\nexport type EditComponentTimelineTimelineInput = {\n  id?: Maybe<Scalars['ID']>;\n  day?: Maybe<Scalars['Int']>;\n  description?: Maybe<Scalars['String']>;\n  locations?: Maybe<Array<Maybe<Scalars['ID']>>>;\n  travelTo?: Maybe<Scalars['ID']>;\n  transportationType?: Maybe<Enum_Componenttimelinetimeline_Transportationtype>;\n  restDay?: Maybe<Scalars['Boolean']>;\n};\n\nexport type EditFeatureInput = {\n  name?: Maybe<Scalars['String']>;\n  info?: Maybe<Scalars['String']>;\n  localizations?: Maybe<Array<Maybe<Scalars['ID']>>>;\n  locale?: Maybe<Scalars['String']>;\n  published_at?: Maybe<Scalars['DateTime']>;\n  created_by?: Maybe<Scalars['ID']>;\n  updated_by?: Maybe<Scalars['ID']>;\n};\n\nexport type EditFileInput = {\n  name?: Maybe<Scalars['String']>;\n  alternativeText?: Maybe<Scalars['String']>;\n  caption?: Maybe<Scalars['String']>;\n  width?: Maybe<Scalars['Int']>;\n  height?: Maybe<Scalars['Int']>;\n  formats?: Maybe<Scalars['JSON']>;\n  hash?: Maybe<Scalars['String']>;\n  ext?: Maybe<Scalars['String']>;\n  mime?: Maybe<Scalars['String']>;\n  size?: Maybe<Scalars['Float']>;\n  url?: Maybe<Scalars['String']>;\n  previewUrl?: Maybe<Scalars['String']>;\n  provider?: Maybe<Scalars['String']>;\n  provider_metadata?: Maybe<Scalars['JSON']>;\n  related?: Maybe<Array<Maybe<Scalars['ID']>>>;\n  created_by?: Maybe<Scalars['ID']>;\n  updated_by?: Maybe<Scalars['ID']>;\n};\n\nexport type EditHomeBannerInput = {\n  images?: Maybe<Array<Maybe<Scalars['ID']>>>;\n  published_at?: Maybe<Scalars['DateTime']>;\n  created_by?: Maybe<Scalars['ID']>;\n  updated_by?: Maybe<Scalars['ID']>;\n};\n\nexport type EditHotelInput = {\n  name?: Maybe<Scalars['String']>;\n  stars?: Maybe<Scalars['Int']>;\n  url?: Maybe<Scalars['String']>;\n  trips?: Maybe<Array<Maybe<Scalars['ID']>>>;\n  published_at?: Maybe<Scalars['DateTime']>;\n  created_by?: Maybe<Scalars['ID']>;\n  updated_by?: Maybe<Scalars['ID']>;\n};\n\nexport type EditLocaleInput = {\n  name?: Maybe<Scalars['String']>;\n  code?: Maybe<Scalars['String']>;\n  created_by?: Maybe<Scalars['ID']>;\n  updated_by?: Maybe<Scalars['ID']>;\n};\n\nexport type EditLocationInput = {\n  name?: Maybe<Scalars['String']>;\n  description?: Maybe<Scalars['String']>;\n  images?: Maybe<Array<Maybe<Scalars['ID']>>>;\n  city?: Maybe<Scalars['ID']>;\n  coordinate?: Maybe<EditComponentCoordinateCoordinateInput>;\n  localizations?: Maybe<Array<Maybe<Scalars['ID']>>>;\n  locale?: Maybe<Scalars['String']>;\n  published_at?: Maybe<Scalars['DateTime']>;\n  created_by?: Maybe<Scalars['ID']>;\n  updated_by?: Maybe<Scalars['ID']>;\n};\n\nexport type EditPartnerInput = {\n  name?: Maybe<Scalars['String']>;\n  phone?: Maybe<Scalars['String']>;\n  address?: Maybe<Scalars['String']>;\n  email?: Maybe<Scalars['String']>;\n  trips?: Maybe<Array<Maybe<Scalars['ID']>>>;\n  agreement?: Maybe<Scalars['String']>;\n  commission?: Maybe<Scalars['Float']>;\n  revenueSource?: Maybe<Enum_Partner_Revenuesource>;\n  agreementStatus?: Maybe<Enum_Partner_Agreementstatus>;\n  notes?: Maybe<Scalars['String']>;\n  phone2?: Maybe<Scalars['String']>;\n  published_at?: Maybe<Scalars['DateTime']>;\n  created_by?: Maybe<Scalars['ID']>;\n  updated_by?: Maybe<Scalars['ID']>;\n};\n\nexport type EditReviewInput = {\n  text?: Maybe<Scalars['String']>;\n  rating?: Maybe<Scalars['Float']>;\n  author?: Maybe<Scalars['ID']>;\n  active?: Maybe<Scalars['Boolean']>;\n  trip?: Maybe<Scalars['ID']>;\n  published_at?: Maybe<Scalars['DateTime']>;\n  created_by?: Maybe<Scalars['ID']>;\n  updated_by?: Maybe<Scalars['ID']>;\n};\n\nexport type EditRoleInput = {\n  name?: Maybe<Scalars['String']>;\n  description?: Maybe<Scalars['String']>;\n  type?: Maybe<Scalars['String']>;\n  permissions?: Maybe<Array<Maybe<Scalars['ID']>>>;\n  users?: Maybe<Array<Maybe<Scalars['ID']>>>;\n  created_by?: Maybe<Scalars['ID']>;\n  updated_by?: Maybe<Scalars['ID']>;\n};\n\nexport type EditSubscriberInput = {\n  email?: Maybe<Scalars['String']>;\n  published_at?: Maybe<Scalars['DateTime']>;\n  created_by?: Maybe<Scalars['ID']>;\n  updated_by?: Maybe<Scalars['ID']>;\n};\n\nexport type EditTripInput = {\n  name?: Maybe<Scalars['String']>;\n  previewImage?: Maybe<Scalars['ID']>;\n  active?: Maybe<Scalars['Boolean']>;\n  trip_type?: Maybe<Enum_Trips_Trip_Type>;\n  description?: Maybe<Scalars['String']>;\n  duration?: Maybe<Scalars['Int']>;\n  partner?: Maybe<Scalars['ID']>;\n  currency?: Maybe<Enum_Trips_Currency>;\n  city?: Maybe<Scalars['ID']>;\n  features?: Maybe<Array<Maybe<EditComponentFeatureFeatureInput>>>;\n  basePrice?: Maybe<Scalars['Int']>;\n  basePeopleCount?: Maybe<Scalars['Int']>;\n  discount?: Maybe<Scalars['Float']>;\n  travelType?: Maybe<Enum_Trips_Traveltype>;\n  hotel?: Maybe<Scalars['ID']>;\n  plan?: Maybe<Array<Maybe<EditComponentTimelineTimelineInput>>>;\n  sequence?: Maybe<Scalars['String']>;\n  localizations?: Maybe<Array<Maybe<Scalars['ID']>>>;\n  locale?: Maybe<Scalars['String']>;\n  published_at?: Maybe<Scalars['DateTime']>;\n  created_by?: Maybe<Scalars['ID']>;\n  updated_by?: Maybe<Scalars['ID']>;\n};\n\nexport type EditUserInput = {\n  username?: Maybe<Scalars['String']>;\n  email?: Maybe<Scalars['String']>;\n  provider?: Maybe<Scalars['String']>;\n  password?: Maybe<Scalars['String']>;\n  resetPasswordToken?: Maybe<Scalars['String']>;\n  confirmationToken?: Maybe<Scalars['String']>;\n  confirmed?: Maybe<Scalars['Boolean']>;\n  blocked?: Maybe<Scalars['Boolean']>;\n  role?: Maybe<Scalars['ID']>;\n  created_by?: Maybe<Scalars['ID']>;\n  updated_by?: Maybe<Scalars['ID']>;\n};\n\nexport type UpdateBookingInput = {\n  where?: Maybe<InputId>;\n  data?: Maybe<EditBookingInput>;\n};\n\nexport type UpdateBookingPayload = {\n  __typename?: 'updateBookingPayload';\n  booking?: Maybe<Booking>;\n};\n\nexport type UpdateCityInput = {\n  where?: Maybe<InputId>;\n  data?: Maybe<EditCityInput>;\n};\n\nexport type UpdateCityPayload = {\n  __typename?: 'updateCityPayload';\n  city?: Maybe<City>;\n};\n\nexport type UpdateFeatureInput = {\n  where?: Maybe<InputId>;\n  data?: Maybe<EditFeatureInput>;\n};\n\nexport type UpdateFeaturePayload = {\n  __typename?: 'updateFeaturePayload';\n  feature?: Maybe<Feature>;\n};\n\nexport type UpdateHomeBannerInput = {\n  data?: Maybe<EditHomeBannerInput>;\n};\n\nexport type UpdateHomeBannerPayload = {\n  __typename?: 'updateHomeBannerPayload';\n  homeBanner?: Maybe<HomeBanner>;\n};\n\nexport type UpdateHotelInput = {\n  where?: Maybe<InputId>;\n  data?: Maybe<EditHotelInput>;\n};\n\nexport type UpdateHotelPayload = {\n  __typename?: 'updateHotelPayload';\n  hotel?: Maybe<Hotels>;\n};\n\nexport type UpdateLocationInput = {\n  where?: Maybe<InputId>;\n  data?: Maybe<EditLocationInput>;\n};\n\nexport type UpdateLocationPayload = {\n  __typename?: 'updateLocationPayload';\n  location?: Maybe<Location>;\n};\n\nexport type UpdatePartnerInput = {\n  where?: Maybe<InputId>;\n  data?: Maybe<EditPartnerInput>;\n};\n\nexport type UpdatePartnerPayload = {\n  __typename?: 'updatePartnerPayload';\n  partner?: Maybe<Partner>;\n};\n\nexport type UpdateReviewInput = {\n  where?: Maybe<InputId>;\n  data?: Maybe<EditReviewInput>;\n};\n\nexport type UpdateReviewPayload = {\n  __typename?: 'updateReviewPayload';\n  review?: Maybe<Review>;\n};\n\nexport type UpdateRoleInput = {\n  where?: Maybe<InputId>;\n  data?: Maybe<EditRoleInput>;\n};\n\nexport type UpdateRolePayload = {\n  __typename?: 'updateRolePayload';\n  role?: Maybe<UsersPermissionsRole>;\n};\n\nexport type UpdateSubscriberInput = {\n  where?: Maybe<InputId>;\n  data?: Maybe<EditSubscriberInput>;\n};\n\nexport type UpdateSubscriberPayload = {\n  __typename?: 'updateSubscriberPayload';\n  subscriber?: Maybe<Subscribers>;\n};\n\nexport type UpdateTripInput = {\n  where?: Maybe<InputId>;\n  data?: Maybe<EditTripInput>;\n};\n\nexport type UpdateTripPayload = {\n  __typename?: 'updateTripPayload';\n  trip?: Maybe<Trips>;\n};\n\nexport type UpdateUserInput = {\n  where?: Maybe<InputId>;\n  data?: Maybe<EditUserInput>;\n};\n\nexport type UpdateUserPayload = {\n  __typename?: 'updateUserPayload';\n  user?: Maybe<UsersPermissionsUser>;\n};\n\nexport type CreateBookingQueryMutationVariables = Exact<{\n  tripId: Scalars['ID'];\n  fullName: Scalars['String'];\n  basePrice: Scalars['Float'];\n  discount?: Maybe<Scalars['Float']>;\n  basePeopleCount: Scalars['Int'];\n  phone: Scalars['String'];\n  arrivalDate: Scalars['Date'];\n  message?: Maybe<Scalars['String']>;\n  currency: Enum_Booking_Currency;\n  email: Scalars['String'];\n  language: Scalars['String'];\n  adults: Scalars['Int'];\n  children: Scalars['Int'];\n}>;\n\n\nexport type CreateBookingQueryMutation = (\n  { __typename?: 'Mutation' }\n  & { createBooking?: Maybe<(\n    { __typename?: 'createBookingPayload' }\n    & { booking?: Maybe<(\n      { __typename?: 'Booking' }\n      & Pick<Booking, 'message'>\n    )> }\n  )> }\n);\n\nexport type CitiesQueryVariables = Exact<{\n  limit?: Maybe<Scalars['Int']>;\n  locale?: Maybe<Scalars['String']>;\n}>;\n\n\nexport type CitiesQuery = (\n  { __typename?: 'Query' }\n  & { cities?: Maybe<Array<Maybe<(\n    { __typename?: 'City' }\n    & CityInfoFragment\n  )>>> }\n);\n\nexport type GetCityQueryVariables = Exact<{\n  id: Scalars['ID'];\n}>;\n\n\nexport type GetCityQuery = (\n  { __typename?: 'Query' }\n  & { city?: Maybe<(\n    { __typename?: 'City' }\n    & CityInfoFragment\n  )> }\n);\n\nexport type GetLocalizedCityQueryVariables = Exact<{\n  id: Scalars['ID'];\n  locale: Scalars['String'];\n}>;\n\n\nexport type GetLocalizedCityQuery = (\n  { __typename?: 'Query' }\n  & { cities?: Maybe<Array<Maybe<(\n    { __typename?: 'City' }\n    & CityInfoFragment\n  )>>> }\n);\n\nexport type CityInfoFragment = (\n  { __typename?: 'City' }\n  & Pick<City, 'id' | 'name' | 'description' | 'locale'>\n  & { localizations?: Maybe<Array<Maybe<(\n    { __typename?: 'City' }\n    & Pick<City, 'id' | 'locale'>\n  )>>>, image?: Maybe<(\n    { __typename?: 'UploadFile' }\n    & Pick<UploadFile, 'id' | 'width' | 'height' | 'url' | 'formats'>\n  )> }\n);\n\nexport type FeaturesQueryVariables = Exact<{\n  locale: Scalars['String'];\n}>;\n\n\nexport type FeaturesQuery = (\n  { __typename?: 'Query' }\n  & { features?: Maybe<Array<Maybe<(\n    { __typename?: 'Feature' }\n    & Pick<Feature, 'name'>\n  )>>> }\n);\n\nexport type HomeCarousellQueryVariables = Exact<{ [key: string]: never; }>;\n\n\nexport type HomeCarousellQuery = (\n  { __typename?: 'Query' }\n  & { homeBanner?: Maybe<(\n    { __typename?: 'HomeBanner' }\n    & { images?: Maybe<Array<Maybe<(\n      { __typename?: 'UploadFile' }\n      & Pick<UploadFile, 'id' | 'width' | 'height' | 'url' | 'formats'>\n    )>>> }\n  )> }\n);\n\nexport type GetLocationsQueryVariables = Exact<{\n  locale: Scalars['String'];\n  ids: Array<Scalars['String']> | Scalars['String'];\n}>;\n\n\nexport type GetLocationsQuery = (\n  { __typename?: 'Query' }\n  & { locations?: Maybe<Array<Maybe<(\n    { __typename?: 'Location' }\n    & Pick<Location, 'id' | 'name' | 'description' | 'locale'>\n    & { coordinate?: Maybe<(\n      { __typename?: 'ComponentCoordinateCoordinate' }\n      & Pick<ComponentCoordinateCoordinate, 'latitude' | 'longitude'>\n    )>, images?: Maybe<Array<Maybe<(\n      { __typename?: 'UploadFile' }\n      & Pick<UploadFile, 'id' | 'width' | 'height' | 'url' | 'formats'>\n    )>>>, city?: Maybe<(\n      { __typename?: 'City' }\n      & Pick<City, 'id' | 'name' | 'description' | 'locale'>\n      & { localizations?: Maybe<Array<Maybe<(\n        { __typename?: 'City' }\n        & Pick<City, 'id' | 'locale'>\n      )>>>, image?: Maybe<(\n        { __typename?: 'UploadFile' }\n        & Pick<UploadFile, 'id' | 'width' | 'height' | 'url' | 'formats'>\n      )> }\n    )> }\n  )>>> }\n);\n\nexport type AddToNewsLetterMutationVariables = Exact<{\n  email: Scalars['String'];\n}>;\n\n\nexport type AddToNewsLetterMutation = (\n  { __typename?: 'Mutation' }\n  & { createSubscriber?: Maybe<(\n    { __typename?: 'createSubscriberPayload' }\n    & { subscriber?: Maybe<(\n      { __typename?: 'Subscribers' }\n      & Pick<Subscribers, 'email'>\n    )> }\n  )> }\n);\n\nexport type TripsQueryVariables = Exact<{\n  limit?: Maybe<Scalars['Int']>;\n  locale?: Maybe<Scalars['String']>;\n  where?: Maybe<Scalars['JSON']>;\n}>;\n\n\nexport type TripsQuery = (\n  { __typename?: 'Query' }\n  & { trips?: Maybe<Array<Maybe<(\n    { __typename?: 'Trips' }\n    & TripInfoFragment\n  )>>> }\n);\n\nexport type GetTripQueryVariables = Exact<{\n  id: Scalars['ID'];\n}>;\n\n\nexport type GetTripQuery = (\n  { __typename?: 'Query' }\n  & { trip?: Maybe<(\n    { __typename?: 'Trips' }\n    & TripInfoFragment\n  )> }\n);\n\nexport type GetLocalizedTripQueryVariables = Exact<{\n  id: Scalars['ID'];\n  locale: Scalars['String'];\n}>;\n\n\nexport type GetLocalizedTripQuery = (\n  { __typename?: 'Query' }\n  & { trips?: Maybe<Array<Maybe<(\n    { __typename?: 'Trips' }\n    & TripInfoFragment\n  )>>> }\n);\n\nexport type TripInfoFragment = (\n  { __typename?: 'Trips' }\n  & Pick<Trips, 'id' | 'name' | 'active' | 'description' | 'locale' | 'trip_type' | 'duration' | 'travelType' | 'basePrice' | 'discount' | 'currency' | 'basePeopleCount'>\n  & { city?: Maybe<(\n    { __typename?: 'City' }\n    & Pick<City, 'id' | 'name'>\n  )>, hotel?: Maybe<(\n    { __typename?: 'Hotels' }\n    & Pick<Hotels, 'id' | 'name' | 'url' | 'stars'>\n  )>, plan?: Maybe<Array<Maybe<(\n    { __typename?: 'ComponentTimelineTimeline' }\n    & Pick<ComponentTimelineTimeline, 'day' | 'transportationType' | 'description' | 'restDay'>\n    & { locations?: Maybe<Array<Maybe<(\n      { __typename?: 'Location' }\n      & Pick<Location, 'id' | 'name'>\n      & { city?: Maybe<(\n        { __typename?: 'City' }\n        & Pick<City, 'id'>\n      )> }\n    )>>>, travelTo?: Maybe<(\n      { __typename?: 'City' }\n      & Pick<City, 'id' | 'name'>\n    )> }\n  )>>>, previewImage?: Maybe<(\n    { __typename?: 'UploadFile' }\n    & Pick<UploadFile, 'id' | 'width' | 'height' | 'url' | 'formats'>\n  )>, localizations?: Maybe<Array<Maybe<(\n    { __typename?: 'Trips' }\n    & Pick<Trips, 'id' | 'locale'>\n  )>>>, features?: Maybe<Array<Maybe<(\n    { __typename?: 'ComponentFeatureFeature' }\n    & Pick<ComponentFeatureFeature, 'included'>\n    & { feature?: Maybe<(\n      { __typename?: 'Feature' }\n      & Pick<Feature, 'name' | 'info'>\n    )> }\n  )>>> }\n);\n\nexport const CityInfoFragmentDoc = gql`\n    fragment CityInfo on City {\n  id\n  name\n  description\n  locale\n  localizations {\n    id\n    locale\n  }\n  image {\n    id\n    width\n    height\n    url\n    formats\n  }\n}\n    `;\nexport const TripInfoFragmentDoc = gql`\n    fragment tripInfo on Trips {\n  id\n  name\n  active\n  description\n  locale\n  trip_type\n  duration\n  travelType\n  city {\n    id\n    name\n  }\n  hotel {\n    id\n    name\n    url\n    stars\n  }\n  plan {\n    day\n    locations {\n      id\n      name\n      city {\n        id\n      }\n    }\n    transportationType\n    travelTo {\n      id\n      name\n    }\n    description\n    restDay\n  }\n  previewImage {\n    id\n    width\n    height\n    url\n    formats\n  }\n  localizations {\n    id\n    locale\n  }\n  basePrice\n  discount\n  currency\n  basePeopleCount\n  features {\n    included\n    feature {\n      name\n      info\n    }\n  }\n}\n    `;\nexport const CreateBookingQueryDocument = gql`\n    mutation createBookingQuery($tripId: ID!, $fullName: String!, $basePrice: Float!, $discount: Float = 0, $basePeopleCount: Int!, $phone: String!, $arrivalDate: Date!, $message: String, $currency: ENUM_BOOKING_CURRENCY!, $email: String!, $language: String!, $adults: Int!, $children: Int!) {\n  createBooking(\n    input: {data: {trip: $tripId, basePrice: $basePrice, discount: $discount, message: $message, fullName: $fullName, basePeopleCount: $basePeopleCount, phone: $phone, arrivalDate: $arrivalDate, currency: $currency, email: $email, language: $language, adults: $adults, children: $children}}\n  ) {\n    booking {\n      message\n    }\n  }\n}\n    `;\n\n  @Injectable({\n    providedIn: 'root'\n  })\n  export class CreateBookingQueryGQL extends Apollo.Mutation<CreateBookingQueryMutation, CreateBookingQueryMutationVariables> {\n    document = CreateBookingQueryDocument;\n    \n    constructor(apollo: Apollo.Apollo) {\n      super(apollo);\n    }\n  }\nexport const CitiesDocument = gql`\n    query cities($limit: Int, $locale: String) {\n  cities(limit: $limit, locale: $locale) {\n    ...CityInfo\n  }\n}\n    ${CityInfoFragmentDoc}`;\n\n  @Injectable({\n    providedIn: 'root'\n  })\n  export class CitiesGQL extends Apollo.Query<CitiesQuery, CitiesQueryVariables> {\n    document = CitiesDocument;\n    \n    constructor(apollo: Apollo.Apollo) {\n      super(apollo);\n    }\n  }\nexport const GetCityDocument = gql`\n    query getCity($id: ID!) {\n  city(id: $id) {\n    ...CityInfo\n  }\n}\n    ${CityInfoFragmentDoc}`;\n\n  @Injectable({\n    providedIn: 'root'\n  })\n  export class GetCityGQL extends Apollo.Query<GetCityQuery, GetCityQueryVariables> {\n    document = GetCityDocument;\n    \n    constructor(apollo: Apollo.Apollo) {\n      super(apollo);\n    }\n  }\nexport const GetLocalizedCityDocument = gql`\n    query getLocalizedCity($id: ID!, $locale: String!) {\n  cities(locale: $locale, where: {_or: [{localizations: {id: $id}}, {id: $id}]}) {\n    ...CityInfo\n  }\n}\n    ${CityInfoFragmentDoc}`;\n\n  @Injectable({\n    providedIn: 'root'\n  })\n  export class GetLocalizedCityGQL extends Apollo.Query<GetLocalizedCityQuery, GetLocalizedCityQueryVariables> {\n    document = GetLocalizedCityDocument;\n    \n    constructor(apollo: Apollo.Apollo) {\n      super(apollo);\n    }\n  }\nexport const FeaturesDocument = gql`\n    query features($locale: String!) {\n  features(locale: $locale) {\n    name\n  }\n}\n    `;\n\n  @Injectable({\n    providedIn: 'root'\n  })\n  export class FeaturesGQL extends Apollo.Query<FeaturesQuery, FeaturesQueryVariables> {\n    document = FeaturesDocument;\n    \n    constructor(apollo: Apollo.Apollo) {\n      super(apollo);\n    }\n  }\nexport const HomeCarousellDocument = gql`\n    query homeCarousell {\n  homeBanner {\n    images {\n      id\n      width\n      height\n      url\n      formats\n    }\n  }\n}\n    `;\n\n  @Injectable({\n    providedIn: 'root'\n  })\n  export class HomeCarousellGQL extends Apollo.Query<HomeCarousellQuery, HomeCarousellQueryVariables> {\n    document = HomeCarousellDocument;\n    \n    constructor(apollo: Apollo.Apollo) {\n      super(apollo);\n    }\n  }\nexport const GetLocationsDocument = gql`\n    query getLocations($locale: String!, $ids: [String!]!) {\n  locations(locale: $locale, where: {id_in: $ids}) {\n    id\n    name\n    description\n    coordinate {\n      latitude\n      longitude\n    }\n    locale\n    images {\n      id\n      width\n      height\n      url\n      formats\n    }\n    city {\n      id\n      name\n      description\n      locale\n      localizations {\n        id\n        locale\n      }\n      image {\n        id\n        width\n        height\n        url\n        formats\n      }\n    }\n  }\n}\n    `;\n\n  @Injectable({\n    providedIn: 'root'\n  })\n  export class GetLocationsGQL extends Apollo.Query<GetLocationsQuery, GetLocationsQueryVariables> {\n    document = GetLocationsDocument;\n    \n    constructor(apollo: Apollo.Apollo) {\n      super(apollo);\n    }\n  }\nexport const AddToNewsLetterDocument = gql`\n    mutation addToNewsLetter($email: String!) {\n  createSubscriber(input: {data: {email: $email}}) {\n    subscriber {\n      email\n    }\n  }\n}\n    `;\n\n  @Injectable({\n    providedIn: 'root'\n  })\n  export class AddToNewsLetterGQL extends Apollo.Mutation<AddToNewsLetterMutation, AddToNewsLetterMutationVariables> {\n    document = AddToNewsLetterDocument;\n    \n    constructor(apollo: Apollo.Apollo) {\n      super(apollo);\n    }\n  }\nexport const TripsDocument = gql`\n    query trips($limit: Int = 10, $locale: String = \"en\", $where: JSON) {\n  trips(limit: $limit, locale: $locale, where: $where) {\n    ...tripInfo\n  }\n}\n    ${TripInfoFragmentDoc}`;\n\n  @Injectable({\n    providedIn: 'root'\n  })\n  export class TripsGQL extends Apollo.Query<TripsQuery, TripsQueryVariables> {\n    document = TripsDocument;\n    \n    constructor(apollo: Apollo.Apollo) {\n      super(apollo);\n    }\n  }\nexport const GetTripDocument = gql`\n    query getTrip($id: ID!) {\n  trip(id: $id) {\n    ...tripInfo\n  }\n}\n    ${TripInfoFragmentDoc}`;\n\n  @Injectable({\n    providedIn: 'root'\n  })\n  export class GetTripGQL extends Apollo.Query<GetTripQuery, GetTripQueryVariables> {\n    document = GetTripDocument;\n    \n    constructor(apollo: Apollo.Apollo) {\n      super(apollo);\n    }\n  }\nexport const GetLocalizedTripDocument = gql`\n    query getLocalizedTrip($id: ID!, $locale: String!) {\n  trips(locale: $locale, where: {_or: [{localizations: {id: $id}}, {id: $id}]}) {\n    ...tripInfo\n  }\n}\n    ${TripInfoFragmentDoc}`;\n\n  @Injectable({\n    providedIn: 'root'\n  })\n  export class GetLocalizedTripGQL extends Apollo.Query<GetLocalizedTripQuery, GetLocalizedTripQueryVariables> {\n    document = GetLocalizedTripDocument;\n    \n    constructor(apollo: Apollo.Apollo) {\n      super(apollo);\n    }\n  }",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "apollo",
                        "type": "Apollo.Apollo"
                    }
                ],
                "line": 3637,
                "jsdoctags": [
                    {
                        "name": "apollo",
                        "type": "Apollo.Apollo",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "type": "injectable"
        },
        {
            "name": "CityModelAdapter",
            "id": "injectable-CityModelAdapter-c60a41a4c8b4cc52f711551158a03537",
            "file": "src/app/data/models/CityModel.ts",
            "properties": [],
            "methods": [
                {
                    "name": "adapt",
                    "args": [
                        {
                            "name": "item",
                            "type": "any"
                        }
                    ],
                    "optional": false,
                    "returnType": "CityModel",
                    "typeParameters": [],
                    "line": 22,
                    "jsdoctags": [
                        {
                            "name": "item",
                            "type": "any",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "description": "",
            "sourceCode": "import { Injectable } from '@angular/core';\nimport { Adapter } from '../adapters/adapter';\nimport { ImageModel, ImageModelAdapter } from './ImageModel';\nimport {\n  LocalizationType,\n  StrapiLocalizationsAdapter,\n} from './localization.type';\n\nexport class CityModel {\n  constructor(\n    public id: string,\n    public name: string,\n    public description?: string,\n    public locale?: string,\n    public image?: ImageModel,\n    public localizations?: LocalizationType[]\n  ) {}\n}\n\n@Injectable({ providedIn: 'root' })\nexport class CityModelAdapter implements Adapter<CityModel> {\n  adapt(item: any): CityModel {\n    return new CityModel(\n      item?.id,\n      item?.name,\n      item?.description,\n      item?.locale,\n      new ImageModelAdapter().adapt(item?.image),\n      new StrapiLocalizationsAdapter().adapt(item?.localizations)\n    );\n  }\n}\n",
            "type": "injectable"
        },
        {
            "name": "CityService",
            "id": "injectable-CityService-62fd10a2a6f4cbf0dadde9a7fb36d3d2",
            "file": "src/app/data/services/city.service.ts",
            "properties": [
                {
                    "name": "data",
                    "defaultValue": "[]",
                    "type": "T[]",
                    "optional": false,
                    "description": "",
                    "line": 10,
                    "inheritance": {
                        "file": "BaseService"
                    }
                },
                {
                    "name": "data$",
                    "defaultValue": "new BehaviorSubject<T[]>([])",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 11,
                    "inheritance": {
                        "file": "BaseService"
                    }
                },
                {
                    "name": "loadingState$",
                    "defaultValue": "new BehaviorSubject<LoadingState>({\n    hasError: false,\n    isLoading: false,\n    msg: '',\n    handler: () => {},\n  })",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 15,
                    "inheritance": {
                        "file": "BaseService"
                    }
                }
            ],
            "methods": [
                {
                    "name": "getLocalizedCity",
                    "args": [
                        {
                            "name": "id",
                            "type": "string"
                        },
                        {
                            "name": "locale",
                            "type": "string"
                        }
                    ],
                    "optional": false,
                    "returnType": "Promise<CityModel>",
                    "typeParameters": [],
                    "line": 35,
                    "modifierKind": [
                        120
                    ],
                    "jsdoctags": [
                        {
                            "name": "id",
                            "type": "string",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "locale",
                            "type": "string",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "init",
                    "args": [],
                    "optional": false,
                    "returnType": "Promise<CityModel[]>",
                    "typeParameters": [],
                    "line": 23,
                    "modifierKind": [
                        120
                    ]
                },
                {
                    "name": "_doStuff",
                    "args": [
                        {
                            "name": "toDo",
                            "type": "Function"
                        }
                    ],
                    "optional": false,
                    "returnType": "Promise<T | undefined>",
                    "typeParameters": [
                        "T"
                    ],
                    "line": 43,
                    "modifierKind": [
                        120
                    ],
                    "jsdoctags": [
                        {
                            "name": "toDo",
                            "type": "Function",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "BaseService"
                    }
                },
                {
                    "name": "clearSub",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 39,
                    "inheritance": {
                        "file": "BaseService"
                    }
                },
                {
                    "name": "init",
                    "args": [
                        {
                            "name": "params",
                            "type": "any",
                            "optional": true
                        }
                    ],
                    "optional": false,
                    "returnType": "Promise<T[]>",
                    "typeParameters": [],
                    "line": 9,
                    "modifierKind": [
                        117
                    ],
                    "jsdoctags": [
                        {
                            "name": "params",
                            "type": "any",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "BaseService"
                    }
                },
                {
                    "name": "prepareData",
                    "args": [
                        {
                            "name": "data",
                            "type": "T[]"
                        }
                    ],
                    "optional": false,
                    "returnType": "{}",
                    "typeParameters": [],
                    "line": 33,
                    "jsdoctags": [
                        {
                            "name": "data",
                            "type": "T[]",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "BaseService"
                    }
                },
                {
                    "name": "setBusy",
                    "args": [
                        {
                            "name": "isBusy",
                            "type": "",
                            "defaultValue": "false"
                        },
                        {
                            "name": "err",
                            "type": "any | undefined",
                            "defaultValue": "undefined"
                        },
                        {
                            "name": "handler",
                            "type": "Function | undefined",
                            "defaultValue": "undefined"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 21,
                    "jsdoctags": [
                        {
                            "name": "isBusy",
                            "type": "",
                            "defaultValue": "false",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "err",
                            "type": "any | undefined",
                            "defaultValue": "undefined",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "handler",
                            "type": "Function | undefined",
                            "defaultValue": "undefined",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "BaseService"
                    }
                }
            ],
            "description": "",
            "sourceCode": "import { Injectable } from '@angular/core';\nimport { CityModel, CityModelAdapter } from '../models/CityModel';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { BaseService } from '../services/base.service';\nimport { CitiesGQL, GetLocalizedCityGQL } from './saferniGraphql.service';\nimport { LocalService } from './local.service';\nimport { ErrorService } from './error.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class CityService extends BaseService<CityModel> {\n  constructor(\n    private adapter: CityModelAdapter,\n    private citiesGql: CitiesGQL,\n    private loc: LocalService,\n    private localizedCityService: GetLocalizedCityGQL,\n    errSer: ErrorService\n  ) {\n    super(errSer);\n  }\n  async init(): Promise<CityModel[]> {\n    if (this.data.length > 0) {\n      return this.data;\n    }\n    let data = await this.citiesGql\n      .fetch({ locale: this.loc.locale })\n      .toPromise();\n    const models = data.data.cities?.map((city) => this.adapter.adapt(city))!;\n    this.prepareData(models);\n    return this.data;\n  }\n\n  async getLocalizedCity(id: string, locale: string): Promise<CityModel> {\n    let data = await this.localizedCityService\n      .fetch({ id: id, locale: locale })\n      .toPromise();\n\n    return this.adapter.adapt(data.data.cities![0])!;\n  }\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "adapter",
                        "type": "CityModelAdapter"
                    },
                    {
                        "name": "citiesGql",
                        "type": "CitiesGQL"
                    },
                    {
                        "name": "loc",
                        "type": "LocalService"
                    },
                    {
                        "name": "localizedCityService",
                        "type": "GetLocalizedCityGQL"
                    },
                    {
                        "name": "errSer",
                        "type": "ErrorService"
                    }
                ],
                "line": 13,
                "jsdoctags": [
                    {
                        "name": "adapter",
                        "type": "CityModelAdapter",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "citiesGql",
                        "type": "CitiesGQL",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "loc",
                        "type": "LocalService",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "localizedCityService",
                        "type": "GetLocalizedCityGQL",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "errSer",
                        "type": "ErrorService",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": "BaseService",
            "type": "injectable"
        },
        {
            "name": "CreateBookingQueryGQL",
            "id": "injectable-CreateBookingQueryGQL-54bb7cbcdd682e4d53ca5e8a5c5399f6",
            "file": "src/app/data/services/saferniGraphql.service.ts",
            "properties": [
                {
                    "name": "document",
                    "defaultValue": "CreateBookingQueryDocument",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 3619
                }
            ],
            "methods": [],
            "description": "",
            "sourceCode": "import { gql } from 'apollo-angular';\nimport { Injectable } from '@angular/core';\nimport * as Apollo from 'apollo-angular';\nexport type Maybe<T> = T | null;\nexport type Exact<T extends { [key: string]: unknown }> = { [K in keyof T]: T[K] };\nexport type MakeOptional<T, K extends keyof T> = Omit<T, K> & { [SubKey in K]?: Maybe<T[SubKey]> };\nexport type MakeMaybe<T, K extends keyof T> = Omit<T, K> & { [SubKey in K]: Maybe<T[SubKey]> };\n/** All built-in and custom scalars, mapped to their actual values */\nexport type Scalars = {\n  ID: string;\n  String: string;\n  Boolean: boolean;\n  Int: number;\n  Float: number;\n  /** A date string, such as 2007-12-03, compliant with the `full-date` format outlined in section 5.6 of the RFC 3339 profile of the ISO 8601 standard for representation of dates and times using the Gregorian calendar. */\n  Date: any;\n  /** A date-time string at UTC, such as 2007-12-03T10:15:30Z, compliant with the `date-time` format outlined in section 5.6 of the RFC 3339 profile of the ISO 8601 standard for representation of dates and times using the Gregorian calendar. */\n  DateTime: any;\n  /** The `JSON` scalar type represents JSON values as specified by [ECMA-404](http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf). */\n  JSON: any;\n  /** The `Long` scalar type represents 52-bit integers */\n  Long: any;\n  /** A time string with format: HH:mm:ss.SSS */\n  Time: any;\n  /** The `Upload` scalar type represents a file upload. */\n  Upload: any;\n};\n\n\n\nexport type AdminUser = {\n  __typename?: 'AdminUser';\n  id: Scalars['ID'];\n  username?: Maybe<Scalars['String']>;\n  firstname: Scalars['String'];\n  lastname: Scalars['String'];\n};\n\nexport type Booking = {\n  __typename?: 'Booking';\n  id: Scalars['ID'];\n  _id: Scalars['ID'];\n  createdAt: Scalars['DateTime'];\n  updatedAt: Scalars['DateTime'];\n  trip?: Maybe<Trips>;\n  approved?: Maybe<Scalars['Boolean']>;\n  basePrice: Scalars['Float'];\n  currency: Enum_Booking_Currency;\n  basePeopleCount: Scalars['Int'];\n  discount?: Maybe<Scalars['Float']>;\n  fullName: Scalars['String'];\n  phone: Scalars['String'];\n  message?: Maybe<Scalars['String']>;\n  arrivalDate: Scalars['Date'];\n  language?: Maybe<Scalars['String']>;\n  userBookingStatus?: Maybe<Enum_Booking_Userbookingstatus>;\n  email: Scalars['String'];\n  adults: Scalars['Int'];\n  children?: Maybe<Scalars['Int']>;\n  totalPrice?: Maybe<Scalars['Float']>;\n  published_at?: Maybe<Scalars['DateTime']>;\n};\n\nexport type BookingAggregator = {\n  __typename?: 'BookingAggregator';\n  count?: Maybe<Scalars['Int']>;\n  totalCount?: Maybe<Scalars['Int']>;\n  sum?: Maybe<BookingAggregatorSum>;\n  avg?: Maybe<BookingAggregatorAvg>;\n  min?: Maybe<BookingAggregatorMin>;\n  max?: Maybe<BookingAggregatorMax>;\n};\n\nexport type BookingAggregatorAvg = {\n  __typename?: 'BookingAggregatorAvg';\n  basePrice?: Maybe<Scalars['Float']>;\n  basePeopleCount?: Maybe<Scalars['Float']>;\n  discount?: Maybe<Scalars['Float']>;\n  adults?: Maybe<Scalars['Float']>;\n  children?: Maybe<Scalars['Float']>;\n  totalPrice?: Maybe<Scalars['Float']>;\n};\n\nexport type BookingAggregatorMax = {\n  __typename?: 'BookingAggregatorMax';\n  basePrice?: Maybe<Scalars['Float']>;\n  basePeopleCount?: Maybe<Scalars['Float']>;\n  discount?: Maybe<Scalars['Float']>;\n  adults?: Maybe<Scalars['Float']>;\n  children?: Maybe<Scalars['Float']>;\n  totalPrice?: Maybe<Scalars['Float']>;\n};\n\nexport type BookingAggregatorMin = {\n  __typename?: 'BookingAggregatorMin';\n  basePrice?: Maybe<Scalars['Float']>;\n  basePeopleCount?: Maybe<Scalars['Float']>;\n  discount?: Maybe<Scalars['Float']>;\n  adults?: Maybe<Scalars['Float']>;\n  children?: Maybe<Scalars['Float']>;\n  totalPrice?: Maybe<Scalars['Float']>;\n};\n\nexport type BookingAggregatorSum = {\n  __typename?: 'BookingAggregatorSum';\n  basePrice?: Maybe<Scalars['Float']>;\n  basePeopleCount?: Maybe<Scalars['Float']>;\n  discount?: Maybe<Scalars['Float']>;\n  adults?: Maybe<Scalars['Float']>;\n  children?: Maybe<Scalars['Float']>;\n  totalPrice?: Maybe<Scalars['Float']>;\n};\n\nexport type BookingConnection = {\n  __typename?: 'BookingConnection';\n  values?: Maybe<Array<Maybe<Booking>>>;\n  groupBy?: Maybe<BookingGroupBy>;\n  aggregate?: Maybe<BookingAggregator>;\n};\n\nexport type BookingConnectionAdults = {\n  __typename?: 'BookingConnectionAdults';\n  key?: Maybe<Scalars['Int']>;\n  connection?: Maybe<BookingConnection>;\n};\n\nexport type BookingConnectionApproved = {\n  __typename?: 'BookingConnectionApproved';\n  key?: Maybe<Scalars['Boolean']>;\n  connection?: Maybe<BookingConnection>;\n};\n\nexport type BookingConnectionArrivalDate = {\n  __typename?: 'BookingConnectionArrivalDate';\n  key?: Maybe<Scalars['ID']>;\n  connection?: Maybe<BookingConnection>;\n};\n\nexport type BookingConnectionBasePeopleCount = {\n  __typename?: 'BookingConnectionBasePeopleCount';\n  key?: Maybe<Scalars['Int']>;\n  connection?: Maybe<BookingConnection>;\n};\n\nexport type BookingConnectionBasePrice = {\n  __typename?: 'BookingConnectionBasePrice';\n  key?: Maybe<Scalars['Float']>;\n  connection?: Maybe<BookingConnection>;\n};\n\nexport type BookingConnectionChildren = {\n  __typename?: 'BookingConnectionChildren';\n  key?: Maybe<Scalars['Int']>;\n  connection?: Maybe<BookingConnection>;\n};\n\nexport type BookingConnectionCreatedAt = {\n  __typename?: 'BookingConnectionCreatedAt';\n  key?: Maybe<Scalars['DateTime']>;\n  connection?: Maybe<BookingConnection>;\n};\n\nexport type BookingConnectionCurrency = {\n  __typename?: 'BookingConnectionCurrency';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<BookingConnection>;\n};\n\nexport type BookingConnectionDiscount = {\n  __typename?: 'BookingConnectionDiscount';\n  key?: Maybe<Scalars['Float']>;\n  connection?: Maybe<BookingConnection>;\n};\n\nexport type BookingConnectionEmail = {\n  __typename?: 'BookingConnectionEmail';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<BookingConnection>;\n};\n\nexport type BookingConnectionFullName = {\n  __typename?: 'BookingConnectionFullName';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<BookingConnection>;\n};\n\nexport type BookingConnectionId = {\n  __typename?: 'BookingConnectionId';\n  key?: Maybe<Scalars['ID']>;\n  connection?: Maybe<BookingConnection>;\n};\n\nexport type BookingConnectionLanguage = {\n  __typename?: 'BookingConnectionLanguage';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<BookingConnection>;\n};\n\nexport type BookingConnectionMessage = {\n  __typename?: 'BookingConnectionMessage';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<BookingConnection>;\n};\n\nexport type BookingConnectionPhone = {\n  __typename?: 'BookingConnectionPhone';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<BookingConnection>;\n};\n\nexport type BookingConnectionPublished_At = {\n  __typename?: 'BookingConnectionPublished_at';\n  key?: Maybe<Scalars['DateTime']>;\n  connection?: Maybe<BookingConnection>;\n};\n\nexport type BookingConnectionTotalPrice = {\n  __typename?: 'BookingConnectionTotalPrice';\n  key?: Maybe<Scalars['Float']>;\n  connection?: Maybe<BookingConnection>;\n};\n\nexport type BookingConnectionTrip = {\n  __typename?: 'BookingConnectionTrip';\n  key?: Maybe<Scalars['ID']>;\n  connection?: Maybe<BookingConnection>;\n};\n\nexport type BookingConnectionUpdatedAt = {\n  __typename?: 'BookingConnectionUpdatedAt';\n  key?: Maybe<Scalars['DateTime']>;\n  connection?: Maybe<BookingConnection>;\n};\n\nexport type BookingConnectionUserBookingStatus = {\n  __typename?: 'BookingConnectionUserBookingStatus';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<BookingConnection>;\n};\n\nexport type BookingConnection_Id = {\n  __typename?: 'BookingConnection_id';\n  key?: Maybe<Scalars['ID']>;\n  connection?: Maybe<BookingConnection>;\n};\n\nexport type BookingGroupBy = {\n  __typename?: 'BookingGroupBy';\n  id?: Maybe<Array<Maybe<BookingConnectionId>>>;\n  _id?: Maybe<Array<Maybe<BookingConnection_Id>>>;\n  createdAt?: Maybe<Array<Maybe<BookingConnectionCreatedAt>>>;\n  updatedAt?: Maybe<Array<Maybe<BookingConnectionUpdatedAt>>>;\n  trip?: Maybe<Array<Maybe<BookingConnectionTrip>>>;\n  approved?: Maybe<Array<Maybe<BookingConnectionApproved>>>;\n  basePrice?: Maybe<Array<Maybe<BookingConnectionBasePrice>>>;\n  currency?: Maybe<Array<Maybe<BookingConnectionCurrency>>>;\n  basePeopleCount?: Maybe<Array<Maybe<BookingConnectionBasePeopleCount>>>;\n  discount?: Maybe<Array<Maybe<BookingConnectionDiscount>>>;\n  fullName?: Maybe<Array<Maybe<BookingConnectionFullName>>>;\n  phone?: Maybe<Array<Maybe<BookingConnectionPhone>>>;\n  message?: Maybe<Array<Maybe<BookingConnectionMessage>>>;\n  arrivalDate?: Maybe<Array<Maybe<BookingConnectionArrivalDate>>>;\n  language?: Maybe<Array<Maybe<BookingConnectionLanguage>>>;\n  userBookingStatus?: Maybe<Array<Maybe<BookingConnectionUserBookingStatus>>>;\n  email?: Maybe<Array<Maybe<BookingConnectionEmail>>>;\n  adults?: Maybe<Array<Maybe<BookingConnectionAdults>>>;\n  children?: Maybe<Array<Maybe<BookingConnectionChildren>>>;\n  totalPrice?: Maybe<Array<Maybe<BookingConnectionTotalPrice>>>;\n  published_at?: Maybe<Array<Maybe<BookingConnectionPublished_At>>>;\n};\n\nexport type BookingInput = {\n  trip?: Maybe<Scalars['ID']>;\n  approved?: Maybe<Scalars['Boolean']>;\n  basePrice: Scalars['Float'];\n  currency: Enum_Booking_Currency;\n  basePeopleCount: Scalars['Int'];\n  discount?: Maybe<Scalars['Float']>;\n  fullName: Scalars['String'];\n  phone: Scalars['String'];\n  message?: Maybe<Scalars['String']>;\n  arrivalDate: Scalars['Date'];\n  language?: Maybe<Scalars['String']>;\n  userBookingStatus?: Maybe<Enum_Booking_Userbookingstatus>;\n  email: Scalars['String'];\n  adults: Scalars['Int'];\n  children?: Maybe<Scalars['Int']>;\n  totalPrice?: Maybe<Scalars['Float']>;\n  published_at?: Maybe<Scalars['DateTime']>;\n  created_by?: Maybe<Scalars['ID']>;\n  updated_by?: Maybe<Scalars['ID']>;\n};\n\nexport type City = {\n  __typename?: 'City';\n  id: Scalars['ID'];\n  _id: Scalars['ID'];\n  createdAt: Scalars['DateTime'];\n  updatedAt: Scalars['DateTime'];\n  name: Scalars['String'];\n  description?: Maybe<Scalars['String']>;\n  image?: Maybe<UploadFile>;\n  locale?: Maybe<Scalars['String']>;\n  published_at?: Maybe<Scalars['DateTime']>;\n  locations?: Maybe<Array<Maybe<Location>>>;\n  localizations?: Maybe<Array<Maybe<City>>>;\n};\n\n\nexport type CityLocationsArgs = {\n  sort?: Maybe<Scalars['String']>;\n  limit?: Maybe<Scalars['Int']>;\n  start?: Maybe<Scalars['Int']>;\n  where?: Maybe<Scalars['JSON']>;\n};\n\n\nexport type CityLocalizationsArgs = {\n  sort?: Maybe<Scalars['String']>;\n  limit?: Maybe<Scalars['Int']>;\n  start?: Maybe<Scalars['Int']>;\n  where?: Maybe<Scalars['JSON']>;\n};\n\nexport type CityAggregator = {\n  __typename?: 'CityAggregator';\n  count?: Maybe<Scalars['Int']>;\n  totalCount?: Maybe<Scalars['Int']>;\n};\n\nexport type CityConnection = {\n  __typename?: 'CityConnection';\n  values?: Maybe<Array<Maybe<City>>>;\n  groupBy?: Maybe<CityGroupBy>;\n  aggregate?: Maybe<CityAggregator>;\n};\n\nexport type CityConnectionCreatedAt = {\n  __typename?: 'CityConnectionCreatedAt';\n  key?: Maybe<Scalars['DateTime']>;\n  connection?: Maybe<CityConnection>;\n};\n\nexport type CityConnectionDescription = {\n  __typename?: 'CityConnectionDescription';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<CityConnection>;\n};\n\nexport type CityConnectionId = {\n  __typename?: 'CityConnectionId';\n  key?: Maybe<Scalars['ID']>;\n  connection?: Maybe<CityConnection>;\n};\n\nexport type CityConnectionImage = {\n  __typename?: 'CityConnectionImage';\n  key?: Maybe<Scalars['ID']>;\n  connection?: Maybe<CityConnection>;\n};\n\nexport type CityConnectionLocale = {\n  __typename?: 'CityConnectionLocale';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<CityConnection>;\n};\n\nexport type CityConnectionName = {\n  __typename?: 'CityConnectionName';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<CityConnection>;\n};\n\nexport type CityConnectionPublished_At = {\n  __typename?: 'CityConnectionPublished_at';\n  key?: Maybe<Scalars['DateTime']>;\n  connection?: Maybe<CityConnection>;\n};\n\nexport type CityConnectionUpdatedAt = {\n  __typename?: 'CityConnectionUpdatedAt';\n  key?: Maybe<Scalars['DateTime']>;\n  connection?: Maybe<CityConnection>;\n};\n\nexport type CityConnection_Id = {\n  __typename?: 'CityConnection_id';\n  key?: Maybe<Scalars['ID']>;\n  connection?: Maybe<CityConnection>;\n};\n\nexport type CityGroupBy = {\n  __typename?: 'CityGroupBy';\n  id?: Maybe<Array<Maybe<CityConnectionId>>>;\n  _id?: Maybe<Array<Maybe<CityConnection_Id>>>;\n  createdAt?: Maybe<Array<Maybe<CityConnectionCreatedAt>>>;\n  updatedAt?: Maybe<Array<Maybe<CityConnectionUpdatedAt>>>;\n  name?: Maybe<Array<Maybe<CityConnectionName>>>;\n  description?: Maybe<Array<Maybe<CityConnectionDescription>>>;\n  image?: Maybe<Array<Maybe<CityConnectionImage>>>;\n  locale?: Maybe<Array<Maybe<CityConnectionLocale>>>;\n  published_at?: Maybe<Array<Maybe<CityConnectionPublished_At>>>;\n};\n\nexport type CityInput = {\n  name: Scalars['String'];\n  description?: Maybe<Scalars['String']>;\n  image?: Maybe<Scalars['ID']>;\n  locations?: Maybe<Array<Maybe<Scalars['ID']>>>;\n  localizations?: Maybe<Array<Maybe<Scalars['ID']>>>;\n  locale?: Maybe<Scalars['String']>;\n  published_at?: Maybe<Scalars['DateTime']>;\n  created_by?: Maybe<Scalars['ID']>;\n  updated_by?: Maybe<Scalars['ID']>;\n};\n\nexport type ComponentCoordinateCoordinate = {\n  __typename?: 'ComponentCoordinateCoordinate';\n  id: Scalars['ID'];\n  _id: Scalars['ID'];\n  latitude: Scalars['Float'];\n  longitude: Scalars['Float'];\n};\n\nexport type ComponentCoordinateCoordinateInput = {\n  latitude: Scalars['Float'];\n  longitude: Scalars['Float'];\n};\n\nexport type ComponentFeatureFeature = {\n  __typename?: 'ComponentFeatureFeature';\n  id: Scalars['ID'];\n  _id: Scalars['ID'];\n  feature?: Maybe<Feature>;\n  included?: Maybe<Scalars['Boolean']>;\n};\n\nexport type ComponentFeatureFeatureInput = {\n  feature?: Maybe<Scalars['ID']>;\n  included?: Maybe<Scalars['Boolean']>;\n};\n\nexport type ComponentPricePrice = {\n  __typename?: 'ComponentPricePrice';\n  id: Scalars['ID'];\n  _id: Scalars['ID'];\n  basePrice: Scalars['Float'];\n  currency: Enum_Componentpriceprice_Currency;\n  basePeopleCount: Scalars['Int'];\n  extraAdultFee?: Maybe<Scalars['Float']>;\n  discount?: Maybe<Scalars['Float']>;\n};\n\nexport type ComponentPricePriceInput = {\n  basePrice: Scalars['Float'];\n  currency?: Maybe<Enum_Componentpriceprice_Currency>;\n  basePeopleCount: Scalars['Int'];\n  extraAdultFee?: Maybe<Scalars['Float']>;\n  discount?: Maybe<Scalars['Float']>;\n};\n\nexport type ComponentTimelineTimeline = {\n  __typename?: 'ComponentTimelineTimeline';\n  id: Scalars['ID'];\n  _id: Scalars['ID'];\n  day: Scalars['Int'];\n  description?: Maybe<Scalars['String']>;\n  travelTo?: Maybe<City>;\n  transportationType?: Maybe<Enum_Componenttimelinetimeline_Transportationtype>;\n  restDay?: Maybe<Scalars['Boolean']>;\n  locations?: Maybe<Array<Maybe<Location>>>;\n};\n\n\nexport type ComponentTimelineTimelineLocationsArgs = {\n  sort?: Maybe<Scalars['String']>;\n  limit?: Maybe<Scalars['Int']>;\n  start?: Maybe<Scalars['Int']>;\n  where?: Maybe<Scalars['JSON']>;\n};\n\nexport type ComponentTimelineTimelineInput = {\n  day: Scalars['Int'];\n  description?: Maybe<Scalars['String']>;\n  locations?: Maybe<Array<Maybe<Scalars['ID']>>>;\n  travelTo?: Maybe<Scalars['ID']>;\n  transportationType?: Maybe<Enum_Componenttimelinetimeline_Transportationtype>;\n  restDay?: Maybe<Scalars['Boolean']>;\n};\n\n\n\nexport enum Enum_Booking_Currency {\n  Dollar = 'dollar',\n  Lira = 'lira'\n}\n\nexport enum Enum_Booking_Userbookingstatus {\n  Initial = 'initial',\n  Confirmed = 'confirmed',\n  Canceled = 'canceled'\n}\n\nexport enum Enum_Componentpriceprice_Currency {\n  Dollar = 'dollar',\n  Lira = 'lira'\n}\n\nexport enum Enum_Componenttimelinetimeline_Transportationtype {\n  Arrival = 'arrival',\n  Departure = 'departure',\n  BetweenCities = 'betweenCities',\n  WithinCity = 'withinCity'\n}\n\nexport enum Enum_Partner_Agreementstatus {\n  Agreed = 'Agreed',\n  Discussing = 'discussing',\n  Termination = 'termination'\n}\n\nexport enum Enum_Partner_Revenuesource {\n  PricePercentage = 'pricePercentage',\n  InflatedPrice = 'inflatedPrice'\n}\n\nexport enum Enum_Trips_Currency {\n  Dollar = 'dollar',\n  Lira = 'lira'\n}\n\nexport enum Enum_Trips_Traveltype {\n  Private = 'private',\n  Public = 'public',\n  Both = 'both'\n}\n\nexport enum Enum_Trips_Trip_Type {\n  Touristic = 'touristic',\n  Medical = 'medical'\n}\n\nexport type Feature = {\n  __typename?: 'Feature';\n  id: Scalars['ID'];\n  _id: Scalars['ID'];\n  createdAt: Scalars['DateTime'];\n  updatedAt: Scalars['DateTime'];\n  name: Scalars['String'];\n  info?: Maybe<Scalars['String']>;\n  locale?: Maybe<Scalars['String']>;\n  published_at?: Maybe<Scalars['DateTime']>;\n  localizations?: Maybe<Array<Maybe<Feature>>>;\n};\n\n\nexport type FeatureLocalizationsArgs = {\n  sort?: Maybe<Scalars['String']>;\n  limit?: Maybe<Scalars['Int']>;\n  start?: Maybe<Scalars['Int']>;\n  where?: Maybe<Scalars['JSON']>;\n};\n\nexport type FeatureAggregator = {\n  __typename?: 'FeatureAggregator';\n  count?: Maybe<Scalars['Int']>;\n  totalCount?: Maybe<Scalars['Int']>;\n};\n\nexport type FeatureConnection = {\n  __typename?: 'FeatureConnection';\n  values?: Maybe<Array<Maybe<Feature>>>;\n  groupBy?: Maybe<FeatureGroupBy>;\n  aggregate?: Maybe<FeatureAggregator>;\n};\n\nexport type FeatureConnectionCreatedAt = {\n  __typename?: 'FeatureConnectionCreatedAt';\n  key?: Maybe<Scalars['DateTime']>;\n  connection?: Maybe<FeatureConnection>;\n};\n\nexport type FeatureConnectionId = {\n  __typename?: 'FeatureConnectionId';\n  key?: Maybe<Scalars['ID']>;\n  connection?: Maybe<FeatureConnection>;\n};\n\nexport type FeatureConnectionInfo = {\n  __typename?: 'FeatureConnectionInfo';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<FeatureConnection>;\n};\n\nexport type FeatureConnectionLocale = {\n  __typename?: 'FeatureConnectionLocale';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<FeatureConnection>;\n};\n\nexport type FeatureConnectionName = {\n  __typename?: 'FeatureConnectionName';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<FeatureConnection>;\n};\n\nexport type FeatureConnectionPublished_At = {\n  __typename?: 'FeatureConnectionPublished_at';\n  key?: Maybe<Scalars['DateTime']>;\n  connection?: Maybe<FeatureConnection>;\n};\n\nexport type FeatureConnectionUpdatedAt = {\n  __typename?: 'FeatureConnectionUpdatedAt';\n  key?: Maybe<Scalars['DateTime']>;\n  connection?: Maybe<FeatureConnection>;\n};\n\nexport type FeatureConnection_Id = {\n  __typename?: 'FeatureConnection_id';\n  key?: Maybe<Scalars['ID']>;\n  connection?: Maybe<FeatureConnection>;\n};\n\nexport type FeatureGroupBy = {\n  __typename?: 'FeatureGroupBy';\n  id?: Maybe<Array<Maybe<FeatureConnectionId>>>;\n  _id?: Maybe<Array<Maybe<FeatureConnection_Id>>>;\n  createdAt?: Maybe<Array<Maybe<FeatureConnectionCreatedAt>>>;\n  updatedAt?: Maybe<Array<Maybe<FeatureConnectionUpdatedAt>>>;\n  name?: Maybe<Array<Maybe<FeatureConnectionName>>>;\n  info?: Maybe<Array<Maybe<FeatureConnectionInfo>>>;\n  locale?: Maybe<Array<Maybe<FeatureConnectionLocale>>>;\n  published_at?: Maybe<Array<Maybe<FeatureConnectionPublished_At>>>;\n};\n\nexport type FeatureInput = {\n  name: Scalars['String'];\n  info?: Maybe<Scalars['String']>;\n  localizations?: Maybe<Array<Maybe<Scalars['ID']>>>;\n  locale?: Maybe<Scalars['String']>;\n  published_at?: Maybe<Scalars['DateTime']>;\n  created_by?: Maybe<Scalars['ID']>;\n  updated_by?: Maybe<Scalars['ID']>;\n};\n\nexport type FileInfoInput = {\n  name?: Maybe<Scalars['String']>;\n  alternativeText?: Maybe<Scalars['String']>;\n  caption?: Maybe<Scalars['String']>;\n};\n\nexport type FileInput = {\n  name: Scalars['String'];\n  alternativeText?: Maybe<Scalars['String']>;\n  caption?: Maybe<Scalars['String']>;\n  width?: Maybe<Scalars['Int']>;\n  height?: Maybe<Scalars['Int']>;\n  formats?: Maybe<Scalars['JSON']>;\n  hash: Scalars['String'];\n  ext?: Maybe<Scalars['String']>;\n  mime: Scalars['String'];\n  size: Scalars['Float'];\n  url: Scalars['String'];\n  previewUrl?: Maybe<Scalars['String']>;\n  provider: Scalars['String'];\n  provider_metadata?: Maybe<Scalars['JSON']>;\n  related?: Maybe<Array<Maybe<Scalars['ID']>>>;\n  created_by?: Maybe<Scalars['ID']>;\n  updated_by?: Maybe<Scalars['ID']>;\n};\n\nexport type HomeBanner = {\n  __typename?: 'HomeBanner';\n  id: Scalars['ID'];\n  _id: Scalars['ID'];\n  createdAt: Scalars['DateTime'];\n  updatedAt: Scalars['DateTime'];\n  published_at?: Maybe<Scalars['DateTime']>;\n  images?: Maybe<Array<Maybe<UploadFile>>>;\n};\n\n\nexport type HomeBannerImagesArgs = {\n  sort?: Maybe<Scalars['String']>;\n  limit?: Maybe<Scalars['Int']>;\n  start?: Maybe<Scalars['Int']>;\n  where?: Maybe<Scalars['JSON']>;\n};\n\nexport type HomeBannerInput = {\n  images?: Maybe<Array<Maybe<Scalars['ID']>>>;\n  published_at?: Maybe<Scalars['DateTime']>;\n  created_by?: Maybe<Scalars['ID']>;\n  updated_by?: Maybe<Scalars['ID']>;\n};\n\nexport type HotelInput = {\n  name: Scalars['String'];\n  stars: Scalars['Int'];\n  url?: Maybe<Scalars['String']>;\n  trips?: Maybe<Array<Maybe<Scalars['ID']>>>;\n  published_at?: Maybe<Scalars['DateTime']>;\n  created_by?: Maybe<Scalars['ID']>;\n  updated_by?: Maybe<Scalars['ID']>;\n};\n\nexport type Hotels = {\n  __typename?: 'Hotels';\n  id: Scalars['ID'];\n  _id: Scalars['ID'];\n  createdAt: Scalars['DateTime'];\n  updatedAt: Scalars['DateTime'];\n  name: Scalars['String'];\n  stars: Scalars['Int'];\n  url?: Maybe<Scalars['String']>;\n  published_at?: Maybe<Scalars['DateTime']>;\n  trips?: Maybe<Array<Maybe<Trips>>>;\n};\n\n\nexport type HotelsTripsArgs = {\n  sort?: Maybe<Scalars['String']>;\n  limit?: Maybe<Scalars['Int']>;\n  start?: Maybe<Scalars['Int']>;\n  where?: Maybe<Scalars['JSON']>;\n};\n\nexport type HotelsAggregator = {\n  __typename?: 'HotelsAggregator';\n  count?: Maybe<Scalars['Int']>;\n  totalCount?: Maybe<Scalars['Int']>;\n  sum?: Maybe<HotelsAggregatorSum>;\n  avg?: Maybe<HotelsAggregatorAvg>;\n  min?: Maybe<HotelsAggregatorMin>;\n  max?: Maybe<HotelsAggregatorMax>;\n};\n\nexport type HotelsAggregatorAvg = {\n  __typename?: 'HotelsAggregatorAvg';\n  stars?: Maybe<Scalars['Float']>;\n};\n\nexport type HotelsAggregatorMax = {\n  __typename?: 'HotelsAggregatorMax';\n  stars?: Maybe<Scalars['Float']>;\n};\n\nexport type HotelsAggregatorMin = {\n  __typename?: 'HotelsAggregatorMin';\n  stars?: Maybe<Scalars['Float']>;\n};\n\nexport type HotelsAggregatorSum = {\n  __typename?: 'HotelsAggregatorSum';\n  stars?: Maybe<Scalars['Float']>;\n};\n\nexport type HotelsConnection = {\n  __typename?: 'HotelsConnection';\n  values?: Maybe<Array<Maybe<Hotels>>>;\n  groupBy?: Maybe<HotelsGroupBy>;\n  aggregate?: Maybe<HotelsAggregator>;\n};\n\nexport type HotelsConnectionCreatedAt = {\n  __typename?: 'HotelsConnectionCreatedAt';\n  key?: Maybe<Scalars['DateTime']>;\n  connection?: Maybe<HotelsConnection>;\n};\n\nexport type HotelsConnectionId = {\n  __typename?: 'HotelsConnectionId';\n  key?: Maybe<Scalars['ID']>;\n  connection?: Maybe<HotelsConnection>;\n};\n\nexport type HotelsConnectionName = {\n  __typename?: 'HotelsConnectionName';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<HotelsConnection>;\n};\n\nexport type HotelsConnectionPublished_At = {\n  __typename?: 'HotelsConnectionPublished_at';\n  key?: Maybe<Scalars['DateTime']>;\n  connection?: Maybe<HotelsConnection>;\n};\n\nexport type HotelsConnectionStars = {\n  __typename?: 'HotelsConnectionStars';\n  key?: Maybe<Scalars['Int']>;\n  connection?: Maybe<HotelsConnection>;\n};\n\nexport type HotelsConnectionUpdatedAt = {\n  __typename?: 'HotelsConnectionUpdatedAt';\n  key?: Maybe<Scalars['DateTime']>;\n  connection?: Maybe<HotelsConnection>;\n};\n\nexport type HotelsConnectionUrl = {\n  __typename?: 'HotelsConnectionUrl';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<HotelsConnection>;\n};\n\nexport type HotelsConnection_Id = {\n  __typename?: 'HotelsConnection_id';\n  key?: Maybe<Scalars['ID']>;\n  connection?: Maybe<HotelsConnection>;\n};\n\nexport type HotelsGroupBy = {\n  __typename?: 'HotelsGroupBy';\n  id?: Maybe<Array<Maybe<HotelsConnectionId>>>;\n  _id?: Maybe<Array<Maybe<HotelsConnection_Id>>>;\n  createdAt?: Maybe<Array<Maybe<HotelsConnectionCreatedAt>>>;\n  updatedAt?: Maybe<Array<Maybe<HotelsConnectionUpdatedAt>>>;\n  name?: Maybe<Array<Maybe<HotelsConnectionName>>>;\n  stars?: Maybe<Array<Maybe<HotelsConnectionStars>>>;\n  url?: Maybe<Array<Maybe<HotelsConnectionUrl>>>;\n  published_at?: Maybe<Array<Maybe<HotelsConnectionPublished_At>>>;\n};\n\nexport type I18NLocale = {\n  __typename?: 'I18NLocale';\n  id: Scalars['ID'];\n  _id: Scalars['ID'];\n  createdAt: Scalars['DateTime'];\n  updatedAt: Scalars['DateTime'];\n  name?: Maybe<Scalars['String']>;\n  code?: Maybe<Scalars['String']>;\n};\n\nexport type InputId = {\n  id: Scalars['ID'];\n};\n\n\nexport type LocaleInput = {\n  name?: Maybe<Scalars['String']>;\n  code?: Maybe<Scalars['String']>;\n  created_by?: Maybe<Scalars['ID']>;\n  updated_by?: Maybe<Scalars['ID']>;\n};\n\nexport type Location = {\n  __typename?: 'Location';\n  id: Scalars['ID'];\n  _id: Scalars['ID'];\n  createdAt: Scalars['DateTime'];\n  updatedAt: Scalars['DateTime'];\n  name: Scalars['String'];\n  description?: Maybe<Scalars['String']>;\n  city?: Maybe<City>;\n  coordinate?: Maybe<ComponentCoordinateCoordinate>;\n  locale?: Maybe<Scalars['String']>;\n  published_at?: Maybe<Scalars['DateTime']>;\n  images?: Maybe<Array<Maybe<UploadFile>>>;\n  localizations?: Maybe<Array<Maybe<Location>>>;\n};\n\n\nexport type LocationImagesArgs = {\n  sort?: Maybe<Scalars['String']>;\n  limit?: Maybe<Scalars['Int']>;\n  start?: Maybe<Scalars['Int']>;\n  where?: Maybe<Scalars['JSON']>;\n};\n\n\nexport type LocationLocalizationsArgs = {\n  sort?: Maybe<Scalars['String']>;\n  limit?: Maybe<Scalars['Int']>;\n  start?: Maybe<Scalars['Int']>;\n  where?: Maybe<Scalars['JSON']>;\n};\n\nexport type LocationAggregator = {\n  __typename?: 'LocationAggregator';\n  count?: Maybe<Scalars['Int']>;\n  totalCount?: Maybe<Scalars['Int']>;\n};\n\nexport type LocationConnection = {\n  __typename?: 'LocationConnection';\n  values?: Maybe<Array<Maybe<Location>>>;\n  groupBy?: Maybe<LocationGroupBy>;\n  aggregate?: Maybe<LocationAggregator>;\n};\n\nexport type LocationConnectionCity = {\n  __typename?: 'LocationConnectionCity';\n  key?: Maybe<Scalars['ID']>;\n  connection?: Maybe<LocationConnection>;\n};\n\nexport type LocationConnectionCoordinate = {\n  __typename?: 'LocationConnectionCoordinate';\n  key?: Maybe<Scalars['ID']>;\n  connection?: Maybe<LocationConnection>;\n};\n\nexport type LocationConnectionCreatedAt = {\n  __typename?: 'LocationConnectionCreatedAt';\n  key?: Maybe<Scalars['DateTime']>;\n  connection?: Maybe<LocationConnection>;\n};\n\nexport type LocationConnectionDescription = {\n  __typename?: 'LocationConnectionDescription';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<LocationConnection>;\n};\n\nexport type LocationConnectionId = {\n  __typename?: 'LocationConnectionId';\n  key?: Maybe<Scalars['ID']>;\n  connection?: Maybe<LocationConnection>;\n};\n\nexport type LocationConnectionLocale = {\n  __typename?: 'LocationConnectionLocale';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<LocationConnection>;\n};\n\nexport type LocationConnectionName = {\n  __typename?: 'LocationConnectionName';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<LocationConnection>;\n};\n\nexport type LocationConnectionPublished_At = {\n  __typename?: 'LocationConnectionPublished_at';\n  key?: Maybe<Scalars['DateTime']>;\n  connection?: Maybe<LocationConnection>;\n};\n\nexport type LocationConnectionUpdatedAt = {\n  __typename?: 'LocationConnectionUpdatedAt';\n  key?: Maybe<Scalars['DateTime']>;\n  connection?: Maybe<LocationConnection>;\n};\n\nexport type LocationConnection_Id = {\n  __typename?: 'LocationConnection_id';\n  key?: Maybe<Scalars['ID']>;\n  connection?: Maybe<LocationConnection>;\n};\n\nexport type LocationGroupBy = {\n  __typename?: 'LocationGroupBy';\n  id?: Maybe<Array<Maybe<LocationConnectionId>>>;\n  _id?: Maybe<Array<Maybe<LocationConnection_Id>>>;\n  createdAt?: Maybe<Array<Maybe<LocationConnectionCreatedAt>>>;\n  updatedAt?: Maybe<Array<Maybe<LocationConnectionUpdatedAt>>>;\n  name?: Maybe<Array<Maybe<LocationConnectionName>>>;\n  description?: Maybe<Array<Maybe<LocationConnectionDescription>>>;\n  city?: Maybe<Array<Maybe<LocationConnectionCity>>>;\n  coordinate?: Maybe<Array<Maybe<LocationConnectionCoordinate>>>;\n  locale?: Maybe<Array<Maybe<LocationConnectionLocale>>>;\n  published_at?: Maybe<Array<Maybe<LocationConnectionPublished_At>>>;\n};\n\nexport type LocationInput = {\n  name: Scalars['String'];\n  description?: Maybe<Scalars['String']>;\n  images?: Maybe<Array<Maybe<Scalars['ID']>>>;\n  city?: Maybe<Scalars['ID']>;\n  coordinate?: Maybe<ComponentCoordinateCoordinateInput>;\n  localizations?: Maybe<Array<Maybe<Scalars['ID']>>>;\n  locale?: Maybe<Scalars['String']>;\n  published_at?: Maybe<Scalars['DateTime']>;\n  created_by?: Maybe<Scalars['ID']>;\n  updated_by?: Maybe<Scalars['ID']>;\n};\n\n\nexport type Morph = UsersPermissionsMe | UsersPermissionsMeRole | UsersPermissionsLoginPayload | UserPermissionsPasswordPayload | Booking | BookingConnection | BookingAggregator | BookingAggregatorSum | BookingAggregatorAvg | BookingAggregatorMin | BookingAggregatorMax | BookingGroupBy | BookingConnectionId | BookingConnection_Id | BookingConnectionCreatedAt | BookingConnectionUpdatedAt | BookingConnectionTrip | BookingConnectionApproved | BookingConnectionBasePrice | BookingConnectionCurrency | BookingConnectionBasePeopleCount | BookingConnectionDiscount | BookingConnectionFullName | BookingConnectionPhone | BookingConnectionMessage | BookingConnectionArrivalDate | BookingConnectionLanguage | BookingConnectionUserBookingStatus | BookingConnectionEmail | BookingConnectionAdults | BookingConnectionChildren | BookingConnectionTotalPrice | BookingConnectionPublished_At | CreateBookingPayload | UpdateBookingPayload | DeleteBookingPayload | City | CityConnection | CityAggregator | CityGroupBy | CityConnectionId | CityConnection_Id | CityConnectionCreatedAt | CityConnectionUpdatedAt | CityConnectionName | CityConnectionDescription | CityConnectionImage | CityConnectionLocale | CityConnectionPublished_At | CreateCityPayload | UpdateCityPayload | DeleteCityPayload | Feature | FeatureConnection | FeatureAggregator | FeatureGroupBy | FeatureConnectionId | FeatureConnection_Id | FeatureConnectionCreatedAt | FeatureConnectionUpdatedAt | FeatureConnectionName | FeatureConnectionInfo | FeatureConnectionLocale | FeatureConnectionPublished_At | CreateFeaturePayload | UpdateFeaturePayload | DeleteFeaturePayload | HomeBanner | UpdateHomeBannerPayload | DeleteHomeBannerPayload | Hotels | HotelsConnection | HotelsAggregator | HotelsAggregatorSum | HotelsAggregatorAvg | HotelsAggregatorMin | HotelsAggregatorMax | HotelsGroupBy | HotelsConnectionId | HotelsConnection_Id | HotelsConnectionCreatedAt | HotelsConnectionUpdatedAt | HotelsConnectionName | HotelsConnectionStars | HotelsConnectionUrl | HotelsConnectionPublished_At | CreateHotelPayload | UpdateHotelPayload | DeleteHotelPayload | Location | LocationConnection | LocationAggregator | LocationGroupBy | LocationConnectionId | LocationConnection_Id | LocationConnectionCreatedAt | LocationConnectionUpdatedAt | LocationConnectionName | LocationConnectionDescription | LocationConnectionCity | LocationConnectionCoordinate | LocationConnectionLocale | LocationConnectionPublished_At | CreateLocationPayload | UpdateLocationPayload | DeleteLocationPayload | Partner | PartnerConnection | PartnerAggregator | PartnerAggregatorSum | PartnerAggregatorAvg | PartnerAggregatorMin | PartnerAggregatorMax | PartnerGroupBy | PartnerConnectionId | PartnerConnection_Id | PartnerConnectionCreatedAt | PartnerConnectionUpdatedAt | PartnerConnectionName | PartnerConnectionPhone | PartnerConnectionAddress | PartnerConnectionEmail | PartnerConnectionAgreement | PartnerConnectionCommission | PartnerConnectionRevenueSource | PartnerConnectionAgreementStatus | PartnerConnectionNotes | PartnerConnectionPhone2 | PartnerConnectionPublished_At | CreatePartnerPayload | UpdatePartnerPayload | DeletePartnerPayload | Review | ReviewConnection | ReviewAggregator | ReviewAggregatorSum | ReviewAggregatorAvg | ReviewAggregatorMin | ReviewAggregatorMax | ReviewGroupBy | ReviewConnectionId | ReviewConnection_Id | ReviewConnectionCreatedAt | ReviewConnectionUpdatedAt | ReviewConnectionText | ReviewConnectionRating | ReviewConnectionAuthor | ReviewConnectionActive | ReviewConnectionTrip | ReviewConnectionPublished_At | CreateReviewPayload | UpdateReviewPayload | DeleteReviewPayload | Subscribers | SubscribersConnection | SubscribersAggregator | SubscribersGroupBy | SubscribersConnectionId | SubscribersConnection_Id | SubscribersConnectionCreatedAt | SubscribersConnectionUpdatedAt | SubscribersConnectionEmail | SubscribersConnectionPublished_At | CreateSubscriberPayload | UpdateSubscriberPayload | DeleteSubscriberPayload | Trips | TripsConnection | TripsAggregator | TripsAggregatorSum | TripsAggregatorAvg | TripsAggregatorMin | TripsAggregatorMax | TripsGroupBy | TripsConnectionId | TripsConnection_Id | TripsConnectionCreatedAt | TripsConnectionUpdatedAt | TripsConnectionName | TripsConnectionPreviewImage | TripsConnectionActive | TripsConnectionTrip_Type | TripsConnectionDescription | TripsConnectionDuration | TripsConnectionPartner | TripsConnectionCurrency | TripsConnectionCity | TripsConnectionBasePrice | TripsConnectionBasePeopleCount | TripsConnectionDiscount | TripsConnectionTravelType | TripsConnectionHotel | TripsConnectionLocale | TripsConnectionPublished_At | CreateTripPayload | UpdateTripPayload | DeleteTripPayload | I18NLocale | UploadFile | UploadFileConnection | UploadFileAggregator | UploadFileAggregatorSum | UploadFileAggregatorAvg | UploadFileAggregatorMin | UploadFileAggregatorMax | UploadFileGroupBy | UploadFileConnectionId | UploadFileConnection_Id | UploadFileConnectionCreatedAt | UploadFileConnectionUpdatedAt | UploadFileConnectionName | UploadFileConnectionAlternativeText | UploadFileConnectionCaption | UploadFileConnectionWidth | UploadFileConnectionHeight | UploadFileConnectionFormats | UploadFileConnectionHash | UploadFileConnectionExt | UploadFileConnectionMime | UploadFileConnectionSize | UploadFileConnectionUrl | UploadFileConnectionPreviewUrl | UploadFileConnectionProvider | UploadFileConnectionProvider_Metadata | DeleteFilePayload | UsersPermissionsPermission | UsersPermissionsRole | UsersPermissionsRoleConnection | UsersPermissionsRoleAggregator | UsersPermissionsRoleGroupBy | UsersPermissionsRoleConnectionId | UsersPermissionsRoleConnection_Id | UsersPermissionsRoleConnectionName | UsersPermissionsRoleConnectionDescription | UsersPermissionsRoleConnectionType | CreateRolePayload | UpdateRolePayload | DeleteRolePayload | UsersPermissionsUser | UsersPermissionsUserConnection | UsersPermissionsUserAggregator | UsersPermissionsUserGroupBy | UsersPermissionsUserConnectionId | UsersPermissionsUserConnection_Id | UsersPermissionsUserConnectionCreatedAt | UsersPermissionsUserConnectionUpdatedAt | UsersPermissionsUserConnectionUsername | UsersPermissionsUserConnectionEmail | UsersPermissionsUserConnectionProvider | UsersPermissionsUserConnectionConfirmed | UsersPermissionsUserConnectionBlocked | UsersPermissionsUserConnectionRole | CreateUserPayload | UpdateUserPayload | DeleteUserPayload | ComponentCoordinateCoordinate | ComponentFeatureFeature | ComponentPricePrice | ComponentTimelineTimeline;\n\nexport type Mutation = {\n  __typename?: 'Mutation';\n  createBooking?: Maybe<CreateBookingPayload>;\n  updateBooking?: Maybe<UpdateBookingPayload>;\n  deleteBooking?: Maybe<DeleteBookingPayload>;\n  createCity?: Maybe<CreateCityPayload>;\n  updateCity?: Maybe<UpdateCityPayload>;\n  deleteCity?: Maybe<DeleteCityPayload>;\n  createFeature?: Maybe<CreateFeaturePayload>;\n  updateFeature?: Maybe<UpdateFeaturePayload>;\n  deleteFeature?: Maybe<DeleteFeaturePayload>;\n  updateHomeBanner?: Maybe<UpdateHomeBannerPayload>;\n  deleteHomeBanner?: Maybe<DeleteHomeBannerPayload>;\n  createHotel?: Maybe<CreateHotelPayload>;\n  updateHotel?: Maybe<UpdateHotelPayload>;\n  deleteHotel?: Maybe<DeleteHotelPayload>;\n  createLocation?: Maybe<CreateLocationPayload>;\n  updateLocation?: Maybe<UpdateLocationPayload>;\n  deleteLocation?: Maybe<DeleteLocationPayload>;\n  createPartner?: Maybe<CreatePartnerPayload>;\n  updatePartner?: Maybe<UpdatePartnerPayload>;\n  deletePartner?: Maybe<DeletePartnerPayload>;\n  createReview?: Maybe<CreateReviewPayload>;\n  updateReview?: Maybe<UpdateReviewPayload>;\n  deleteReview?: Maybe<DeleteReviewPayload>;\n  createSubscriber?: Maybe<CreateSubscriberPayload>;\n  updateSubscriber?: Maybe<UpdateSubscriberPayload>;\n  deleteSubscriber?: Maybe<DeleteSubscriberPayload>;\n  createTrip?: Maybe<CreateTripPayload>;\n  updateTrip?: Maybe<UpdateTripPayload>;\n  deleteTrip?: Maybe<DeleteTripPayload>;\n  /** Delete one file */\n  deleteFile?: Maybe<DeleteFilePayload>;\n  /** Create a new role */\n  createRole?: Maybe<CreateRolePayload>;\n  /** Update an existing role */\n  updateRole?: Maybe<UpdateRolePayload>;\n  /** Delete an existing role */\n  deleteRole?: Maybe<DeleteRolePayload>;\n  /** Create a new user */\n  createUser?: Maybe<CreateUserPayload>;\n  /** Update an existing user */\n  updateUser?: Maybe<UpdateUserPayload>;\n  /** Delete an existing user */\n  deleteUser?: Maybe<DeleteUserPayload>;\n  createCityLocalization: City;\n  createFeatureLocalization: Feature;\n  createLocationLocalization: Location;\n  createTripLocalization: Trips;\n  upload: UploadFile;\n  multipleUpload: Array<Maybe<UploadFile>>;\n  updateFileInfo: UploadFile;\n  login: UsersPermissionsLoginPayload;\n  register: UsersPermissionsLoginPayload;\n  forgotPassword?: Maybe<UserPermissionsPasswordPayload>;\n  resetPassword?: Maybe<UsersPermissionsLoginPayload>;\n  emailConfirmation?: Maybe<UsersPermissionsLoginPayload>;\n};\n\n\nexport type MutationCreateBookingArgs = {\n  input?: Maybe<CreateBookingInput>;\n};\n\n\nexport type MutationUpdateBookingArgs = {\n  input?: Maybe<UpdateBookingInput>;\n};\n\n\nexport type MutationDeleteBookingArgs = {\n  input?: Maybe<DeleteBookingInput>;\n};\n\n\nexport type MutationCreateCityArgs = {\n  input?: Maybe<CreateCityInput>;\n};\n\n\nexport type MutationUpdateCityArgs = {\n  input?: Maybe<UpdateCityInput>;\n};\n\n\nexport type MutationDeleteCityArgs = {\n  input?: Maybe<DeleteCityInput>;\n};\n\n\nexport type MutationCreateFeatureArgs = {\n  input?: Maybe<CreateFeatureInput>;\n};\n\n\nexport type MutationUpdateFeatureArgs = {\n  input?: Maybe<UpdateFeatureInput>;\n};\n\n\nexport type MutationDeleteFeatureArgs = {\n  input?: Maybe<DeleteFeatureInput>;\n};\n\n\nexport type MutationUpdateHomeBannerArgs = {\n  input?: Maybe<UpdateHomeBannerInput>;\n};\n\n\nexport type MutationCreateHotelArgs = {\n  input?: Maybe<CreateHotelInput>;\n};\n\n\nexport type MutationUpdateHotelArgs = {\n  input?: Maybe<UpdateHotelInput>;\n};\n\n\nexport type MutationDeleteHotelArgs = {\n  input?: Maybe<DeleteHotelInput>;\n};\n\n\nexport type MutationCreateLocationArgs = {\n  input?: Maybe<CreateLocationInput>;\n};\n\n\nexport type MutationUpdateLocationArgs = {\n  input?: Maybe<UpdateLocationInput>;\n};\n\n\nexport type MutationDeleteLocationArgs = {\n  input?: Maybe<DeleteLocationInput>;\n};\n\n\nexport type MutationCreatePartnerArgs = {\n  input?: Maybe<CreatePartnerInput>;\n};\n\n\nexport type MutationUpdatePartnerArgs = {\n  input?: Maybe<UpdatePartnerInput>;\n};\n\n\nexport type MutationDeletePartnerArgs = {\n  input?: Maybe<DeletePartnerInput>;\n};\n\n\nexport type MutationCreateReviewArgs = {\n  input?: Maybe<CreateReviewInput>;\n};\n\n\nexport type MutationUpdateReviewArgs = {\n  input?: Maybe<UpdateReviewInput>;\n};\n\n\nexport type MutationDeleteReviewArgs = {\n  input?: Maybe<DeleteReviewInput>;\n};\n\n\nexport type MutationCreateSubscriberArgs = {\n  input?: Maybe<CreateSubscriberInput>;\n};\n\n\nexport type MutationUpdateSubscriberArgs = {\n  input?: Maybe<UpdateSubscriberInput>;\n};\n\n\nexport type MutationDeleteSubscriberArgs = {\n  input?: Maybe<DeleteSubscriberInput>;\n};\n\n\nexport type MutationCreateTripArgs = {\n  input?: Maybe<CreateTripInput>;\n};\n\n\nexport type MutationUpdateTripArgs = {\n  input?: Maybe<UpdateTripInput>;\n};\n\n\nexport type MutationDeleteTripArgs = {\n  input?: Maybe<DeleteTripInput>;\n};\n\n\nexport type MutationDeleteFileArgs = {\n  input?: Maybe<DeleteFileInput>;\n};\n\n\nexport type MutationCreateRoleArgs = {\n  input?: Maybe<CreateRoleInput>;\n};\n\n\nexport type MutationUpdateRoleArgs = {\n  input?: Maybe<UpdateRoleInput>;\n};\n\n\nexport type MutationDeleteRoleArgs = {\n  input?: Maybe<DeleteRoleInput>;\n};\n\n\nexport type MutationCreateUserArgs = {\n  input?: Maybe<CreateUserInput>;\n};\n\n\nexport type MutationUpdateUserArgs = {\n  input?: Maybe<UpdateUserInput>;\n};\n\n\nexport type MutationDeleteUserArgs = {\n  input?: Maybe<DeleteUserInput>;\n};\n\n\nexport type MutationCreateCityLocalizationArgs = {\n  input: UpdateCityInput;\n};\n\n\nexport type MutationCreateFeatureLocalizationArgs = {\n  input: UpdateFeatureInput;\n};\n\n\nexport type MutationCreateLocationLocalizationArgs = {\n  input: UpdateLocationInput;\n};\n\n\nexport type MutationCreateTripLocalizationArgs = {\n  input: UpdateTripInput;\n};\n\n\nexport type MutationUploadArgs = {\n  refId?: Maybe<Scalars['ID']>;\n  ref?: Maybe<Scalars['String']>;\n  field?: Maybe<Scalars['String']>;\n  source?: Maybe<Scalars['String']>;\n  info?: Maybe<FileInfoInput>;\n  file: Scalars['Upload'];\n};\n\n\nexport type MutationMultipleUploadArgs = {\n  refId?: Maybe<Scalars['ID']>;\n  ref?: Maybe<Scalars['String']>;\n  field?: Maybe<Scalars['String']>;\n  source?: Maybe<Scalars['String']>;\n  files: Array<Maybe<Scalars['Upload']>>;\n};\n\n\nexport type MutationUpdateFileInfoArgs = {\n  id: Scalars['ID'];\n  info: FileInfoInput;\n};\n\n\nexport type MutationLoginArgs = {\n  input: UsersPermissionsLoginInput;\n};\n\n\nexport type MutationRegisterArgs = {\n  input: UsersPermissionsRegisterInput;\n};\n\n\nexport type MutationForgotPasswordArgs = {\n  email: Scalars['String'];\n};\n\n\nexport type MutationResetPasswordArgs = {\n  password: Scalars['String'];\n  passwordConfirmation: Scalars['String'];\n  code: Scalars['String'];\n};\n\n\nexport type MutationEmailConfirmationArgs = {\n  confirmation: Scalars['String'];\n};\n\nexport type Partner = {\n  __typename?: 'Partner';\n  id: Scalars['ID'];\n  _id: Scalars['ID'];\n  createdAt: Scalars['DateTime'];\n  updatedAt: Scalars['DateTime'];\n  name: Scalars['String'];\n  phone: Scalars['String'];\n  address?: Maybe<Scalars['String']>;\n  email?: Maybe<Scalars['String']>;\n  agreement?: Maybe<Scalars['String']>;\n  commission: Scalars['Float'];\n  revenueSource: Enum_Partner_Revenuesource;\n  agreementStatus: Enum_Partner_Agreementstatus;\n  notes?: Maybe<Scalars['String']>;\n  phone2?: Maybe<Scalars['String']>;\n  published_at?: Maybe<Scalars['DateTime']>;\n  trips?: Maybe<Array<Maybe<Trips>>>;\n};\n\n\nexport type PartnerTripsArgs = {\n  sort?: Maybe<Scalars['String']>;\n  limit?: Maybe<Scalars['Int']>;\n  start?: Maybe<Scalars['Int']>;\n  where?: Maybe<Scalars['JSON']>;\n};\n\nexport type PartnerAggregator = {\n  __typename?: 'PartnerAggregator';\n  count?: Maybe<Scalars['Int']>;\n  totalCount?: Maybe<Scalars['Int']>;\n  sum?: Maybe<PartnerAggregatorSum>;\n  avg?: Maybe<PartnerAggregatorAvg>;\n  min?: Maybe<PartnerAggregatorMin>;\n  max?: Maybe<PartnerAggregatorMax>;\n};\n\nexport type PartnerAggregatorAvg = {\n  __typename?: 'PartnerAggregatorAvg';\n  commission?: Maybe<Scalars['Float']>;\n};\n\nexport type PartnerAggregatorMax = {\n  __typename?: 'PartnerAggregatorMax';\n  commission?: Maybe<Scalars['Float']>;\n};\n\nexport type PartnerAggregatorMin = {\n  __typename?: 'PartnerAggregatorMin';\n  commission?: Maybe<Scalars['Float']>;\n};\n\nexport type PartnerAggregatorSum = {\n  __typename?: 'PartnerAggregatorSum';\n  commission?: Maybe<Scalars['Float']>;\n};\n\nexport type PartnerConnection = {\n  __typename?: 'PartnerConnection';\n  values?: Maybe<Array<Maybe<Partner>>>;\n  groupBy?: Maybe<PartnerGroupBy>;\n  aggregate?: Maybe<PartnerAggregator>;\n};\n\nexport type PartnerConnectionAddress = {\n  __typename?: 'PartnerConnectionAddress';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<PartnerConnection>;\n};\n\nexport type PartnerConnectionAgreement = {\n  __typename?: 'PartnerConnectionAgreement';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<PartnerConnection>;\n};\n\nexport type PartnerConnectionAgreementStatus = {\n  __typename?: 'PartnerConnectionAgreementStatus';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<PartnerConnection>;\n};\n\nexport type PartnerConnectionCommission = {\n  __typename?: 'PartnerConnectionCommission';\n  key?: Maybe<Scalars['Float']>;\n  connection?: Maybe<PartnerConnection>;\n};\n\nexport type PartnerConnectionCreatedAt = {\n  __typename?: 'PartnerConnectionCreatedAt';\n  key?: Maybe<Scalars['DateTime']>;\n  connection?: Maybe<PartnerConnection>;\n};\n\nexport type PartnerConnectionEmail = {\n  __typename?: 'PartnerConnectionEmail';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<PartnerConnection>;\n};\n\nexport type PartnerConnectionId = {\n  __typename?: 'PartnerConnectionId';\n  key?: Maybe<Scalars['ID']>;\n  connection?: Maybe<PartnerConnection>;\n};\n\nexport type PartnerConnectionName = {\n  __typename?: 'PartnerConnectionName';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<PartnerConnection>;\n};\n\nexport type PartnerConnectionNotes = {\n  __typename?: 'PartnerConnectionNotes';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<PartnerConnection>;\n};\n\nexport type PartnerConnectionPhone = {\n  __typename?: 'PartnerConnectionPhone';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<PartnerConnection>;\n};\n\nexport type PartnerConnectionPhone2 = {\n  __typename?: 'PartnerConnectionPhone2';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<PartnerConnection>;\n};\n\nexport type PartnerConnectionPublished_At = {\n  __typename?: 'PartnerConnectionPublished_at';\n  key?: Maybe<Scalars['DateTime']>;\n  connection?: Maybe<PartnerConnection>;\n};\n\nexport type PartnerConnectionRevenueSource = {\n  __typename?: 'PartnerConnectionRevenueSource';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<PartnerConnection>;\n};\n\nexport type PartnerConnectionUpdatedAt = {\n  __typename?: 'PartnerConnectionUpdatedAt';\n  key?: Maybe<Scalars['DateTime']>;\n  connection?: Maybe<PartnerConnection>;\n};\n\nexport type PartnerConnection_Id = {\n  __typename?: 'PartnerConnection_id';\n  key?: Maybe<Scalars['ID']>;\n  connection?: Maybe<PartnerConnection>;\n};\n\nexport type PartnerGroupBy = {\n  __typename?: 'PartnerGroupBy';\n  id?: Maybe<Array<Maybe<PartnerConnectionId>>>;\n  _id?: Maybe<Array<Maybe<PartnerConnection_Id>>>;\n  createdAt?: Maybe<Array<Maybe<PartnerConnectionCreatedAt>>>;\n  updatedAt?: Maybe<Array<Maybe<PartnerConnectionUpdatedAt>>>;\n  name?: Maybe<Array<Maybe<PartnerConnectionName>>>;\n  phone?: Maybe<Array<Maybe<PartnerConnectionPhone>>>;\n  address?: Maybe<Array<Maybe<PartnerConnectionAddress>>>;\n  email?: Maybe<Array<Maybe<PartnerConnectionEmail>>>;\n  agreement?: Maybe<Array<Maybe<PartnerConnectionAgreement>>>;\n  commission?: Maybe<Array<Maybe<PartnerConnectionCommission>>>;\n  revenueSource?: Maybe<Array<Maybe<PartnerConnectionRevenueSource>>>;\n  agreementStatus?: Maybe<Array<Maybe<PartnerConnectionAgreementStatus>>>;\n  notes?: Maybe<Array<Maybe<PartnerConnectionNotes>>>;\n  phone2?: Maybe<Array<Maybe<PartnerConnectionPhone2>>>;\n  published_at?: Maybe<Array<Maybe<PartnerConnectionPublished_At>>>;\n};\n\nexport type PartnerInput = {\n  name: Scalars['String'];\n  phone: Scalars['String'];\n  address?: Maybe<Scalars['String']>;\n  email?: Maybe<Scalars['String']>;\n  trips?: Maybe<Array<Maybe<Scalars['ID']>>>;\n  agreement?: Maybe<Scalars['String']>;\n  commission: Scalars['Float'];\n  revenueSource: Enum_Partner_Revenuesource;\n  agreementStatus: Enum_Partner_Agreementstatus;\n  notes?: Maybe<Scalars['String']>;\n  phone2?: Maybe<Scalars['String']>;\n  published_at?: Maybe<Scalars['DateTime']>;\n  created_by?: Maybe<Scalars['ID']>;\n  updated_by?: Maybe<Scalars['ID']>;\n};\n\nexport enum PublicationState {\n  Live = 'LIVE',\n  Preview = 'PREVIEW'\n}\n\nexport type Query = {\n  __typename?: 'Query';\n  booking?: Maybe<Booking>;\n  bookings?: Maybe<Array<Maybe<Booking>>>;\n  bookingsConnection?: Maybe<BookingConnection>;\n  city?: Maybe<City>;\n  cities?: Maybe<Array<Maybe<City>>>;\n  citiesConnection?: Maybe<CityConnection>;\n  feature?: Maybe<Feature>;\n  features?: Maybe<Array<Maybe<Feature>>>;\n  featuresConnection?: Maybe<FeatureConnection>;\n  homeBanner?: Maybe<HomeBanner>;\n  hotel?: Maybe<Hotels>;\n  hotels?: Maybe<Array<Maybe<Hotels>>>;\n  hotelsConnection?: Maybe<HotelsConnection>;\n  location?: Maybe<Location>;\n  locations?: Maybe<Array<Maybe<Location>>>;\n  locationsConnection?: Maybe<LocationConnection>;\n  partner?: Maybe<Partner>;\n  partners?: Maybe<Array<Maybe<Partner>>>;\n  partnersConnection?: Maybe<PartnerConnection>;\n  review?: Maybe<Review>;\n  reviews?: Maybe<Array<Maybe<Review>>>;\n  reviewsConnection?: Maybe<ReviewConnection>;\n  subscriber?: Maybe<Subscribers>;\n  subscribers?: Maybe<Array<Maybe<Subscribers>>>;\n  subscribersConnection?: Maybe<SubscribersConnection>;\n  trip?: Maybe<Trips>;\n  trips?: Maybe<Array<Maybe<Trips>>>;\n  tripsConnection?: Maybe<TripsConnection>;\n  files?: Maybe<Array<Maybe<UploadFile>>>;\n  filesConnection?: Maybe<UploadFileConnection>;\n  role?: Maybe<UsersPermissionsRole>;\n  /** Retrieve all the existing roles. You can't apply filters on this query. */\n  roles?: Maybe<Array<Maybe<UsersPermissionsRole>>>;\n  rolesConnection?: Maybe<UsersPermissionsRoleConnection>;\n  user?: Maybe<UsersPermissionsUser>;\n  users?: Maybe<Array<Maybe<UsersPermissionsUser>>>;\n  usersConnection?: Maybe<UsersPermissionsUserConnection>;\n  me?: Maybe<UsersPermissionsMe>;\n};\n\n\nexport type QueryBookingArgs = {\n  id: Scalars['ID'];\n  publicationState?: Maybe<PublicationState>;\n};\n\n\nexport type QueryBookingsArgs = {\n  sort?: Maybe<Scalars['String']>;\n  limit?: Maybe<Scalars['Int']>;\n  start?: Maybe<Scalars['Int']>;\n  where?: Maybe<Scalars['JSON']>;\n  publicationState?: Maybe<PublicationState>;\n};\n\n\nexport type QueryBookingsConnectionArgs = {\n  sort?: Maybe<Scalars['String']>;\n  limit?: Maybe<Scalars['Int']>;\n  start?: Maybe<Scalars['Int']>;\n  where?: Maybe<Scalars['JSON']>;\n};\n\n\nexport type QueryCityArgs = {\n  id: Scalars['ID'];\n  publicationState?: Maybe<PublicationState>;\n};\n\n\nexport type QueryCitiesArgs = {\n  sort?: Maybe<Scalars['String']>;\n  limit?: Maybe<Scalars['Int']>;\n  start?: Maybe<Scalars['Int']>;\n  where?: Maybe<Scalars['JSON']>;\n  publicationState?: Maybe<PublicationState>;\n  locale?: Maybe<Scalars['String']>;\n};\n\n\nexport type QueryCitiesConnectionArgs = {\n  sort?: Maybe<Scalars['String']>;\n  limit?: Maybe<Scalars['Int']>;\n  start?: Maybe<Scalars['Int']>;\n  where?: Maybe<Scalars['JSON']>;\n  locale?: Maybe<Scalars['String']>;\n};\n\n\nexport type QueryFeatureArgs = {\n  id: Scalars['ID'];\n  publicationState?: Maybe<PublicationState>;\n};\n\n\nexport type QueryFeaturesArgs = {\n  sort?: Maybe<Scalars['String']>;\n  limit?: Maybe<Scalars['Int']>;\n  start?: Maybe<Scalars['Int']>;\n  where?: Maybe<Scalars['JSON']>;\n  publicationState?: Maybe<PublicationState>;\n  locale?: Maybe<Scalars['String']>;\n};\n\n\nexport type QueryFeaturesConnectionArgs = {\n  sort?: Maybe<Scalars['String']>;\n  limit?: Maybe<Scalars['Int']>;\n  start?: Maybe<Scalars['Int']>;\n  where?: Maybe<Scalars['JSON']>;\n  locale?: Maybe<Scalars['String']>;\n};\n\n\nexport type QueryHomeBannerArgs = {\n  publicationState?: Maybe<PublicationState>;\n};\n\n\nexport type QueryHotelArgs = {\n  id: Scalars['ID'];\n  publicationState?: Maybe<PublicationState>;\n};\n\n\nexport type QueryHotelsArgs = {\n  sort?: Maybe<Scalars['String']>;\n  limit?: Maybe<Scalars['Int']>;\n  start?: Maybe<Scalars['Int']>;\n  where?: Maybe<Scalars['JSON']>;\n  publicationState?: Maybe<PublicationState>;\n};\n\n\nexport type QueryHotelsConnectionArgs = {\n  sort?: Maybe<Scalars['String']>;\n  limit?: Maybe<Scalars['Int']>;\n  start?: Maybe<Scalars['Int']>;\n  where?: Maybe<Scalars['JSON']>;\n};\n\n\nexport type QueryLocationArgs = {\n  id: Scalars['ID'];\n  publicationState?: Maybe<PublicationState>;\n};\n\n\nexport type QueryLocationsArgs = {\n  sort?: Maybe<Scalars['String']>;\n  limit?: Maybe<Scalars['Int']>;\n  start?: Maybe<Scalars['Int']>;\n  where?: Maybe<Scalars['JSON']>;\n  publicationState?: Maybe<PublicationState>;\n  locale?: Maybe<Scalars['String']>;\n};\n\n\nexport type QueryLocationsConnectionArgs = {\n  sort?: Maybe<Scalars['String']>;\n  limit?: Maybe<Scalars['Int']>;\n  start?: Maybe<Scalars['Int']>;\n  where?: Maybe<Scalars['JSON']>;\n  locale?: Maybe<Scalars['String']>;\n};\n\n\nexport type QueryPartnerArgs = {\n  id: Scalars['ID'];\n  publicationState?: Maybe<PublicationState>;\n};\n\n\nexport type QueryPartnersArgs = {\n  sort?: Maybe<Scalars['String']>;\n  limit?: Maybe<Scalars['Int']>;\n  start?: Maybe<Scalars['Int']>;\n  where?: Maybe<Scalars['JSON']>;\n  publicationState?: Maybe<PublicationState>;\n};\n\n\nexport type QueryPartnersConnectionArgs = {\n  sort?: Maybe<Scalars['String']>;\n  limit?: Maybe<Scalars['Int']>;\n  start?: Maybe<Scalars['Int']>;\n  where?: Maybe<Scalars['JSON']>;\n};\n\n\nexport type QueryReviewArgs = {\n  id: Scalars['ID'];\n  publicationState?: Maybe<PublicationState>;\n};\n\n\nexport type QueryReviewsArgs = {\n  sort?: Maybe<Scalars['String']>;\n  limit?: Maybe<Scalars['Int']>;\n  start?: Maybe<Scalars['Int']>;\n  where?: Maybe<Scalars['JSON']>;\n  publicationState?: Maybe<PublicationState>;\n};\n\n\nexport type QueryReviewsConnectionArgs = {\n  sort?: Maybe<Scalars['String']>;\n  limit?: Maybe<Scalars['Int']>;\n  start?: Maybe<Scalars['Int']>;\n  where?: Maybe<Scalars['JSON']>;\n};\n\n\nexport type QuerySubscriberArgs = {\n  id: Scalars['ID'];\n  publicationState?: Maybe<PublicationState>;\n};\n\n\nexport type QuerySubscribersArgs = {\n  sort?: Maybe<Scalars['String']>;\n  limit?: Maybe<Scalars['Int']>;\n  start?: Maybe<Scalars['Int']>;\n  where?: Maybe<Scalars['JSON']>;\n  publicationState?: Maybe<PublicationState>;\n};\n\n\nexport type QuerySubscribersConnectionArgs = {\n  sort?: Maybe<Scalars['String']>;\n  limit?: Maybe<Scalars['Int']>;\n  start?: Maybe<Scalars['Int']>;\n  where?: Maybe<Scalars['JSON']>;\n};\n\n\nexport type QueryTripArgs = {\n  id: Scalars['ID'];\n  publicationState?: Maybe<PublicationState>;\n};\n\n\nexport type QueryTripsArgs = {\n  sort?: Maybe<Scalars['String']>;\n  limit?: Maybe<Scalars['Int']>;\n  start?: Maybe<Scalars['Int']>;\n  where?: Maybe<Scalars['JSON']>;\n  publicationState?: Maybe<PublicationState>;\n  locale?: Maybe<Scalars['String']>;\n};\n\n\nexport type QueryTripsConnectionArgs = {\n  sort?: Maybe<Scalars['String']>;\n  limit?: Maybe<Scalars['Int']>;\n  start?: Maybe<Scalars['Int']>;\n  where?: Maybe<Scalars['JSON']>;\n  locale?: Maybe<Scalars['String']>;\n};\n\n\nexport type QueryFilesArgs = {\n  sort?: Maybe<Scalars['String']>;\n  limit?: Maybe<Scalars['Int']>;\n  start?: Maybe<Scalars['Int']>;\n  where?: Maybe<Scalars['JSON']>;\n  publicationState?: Maybe<PublicationState>;\n};\n\n\nexport type QueryFilesConnectionArgs = {\n  sort?: Maybe<Scalars['String']>;\n  limit?: Maybe<Scalars['Int']>;\n  start?: Maybe<Scalars['Int']>;\n  where?: Maybe<Scalars['JSON']>;\n};\n\n\nexport type QueryRoleArgs = {\n  id: Scalars['ID'];\n  publicationState?: Maybe<PublicationState>;\n};\n\n\nexport type QueryRolesArgs = {\n  sort?: Maybe<Scalars['String']>;\n  limit?: Maybe<Scalars['Int']>;\n  start?: Maybe<Scalars['Int']>;\n  where?: Maybe<Scalars['JSON']>;\n  publicationState?: Maybe<PublicationState>;\n};\n\n\nexport type QueryRolesConnectionArgs = {\n  sort?: Maybe<Scalars['String']>;\n  limit?: Maybe<Scalars['Int']>;\n  start?: Maybe<Scalars['Int']>;\n  where?: Maybe<Scalars['JSON']>;\n};\n\n\nexport type QueryUserArgs = {\n  id: Scalars['ID'];\n  publicationState?: Maybe<PublicationState>;\n};\n\n\nexport type QueryUsersArgs = {\n  sort?: Maybe<Scalars['String']>;\n  limit?: Maybe<Scalars['Int']>;\n  start?: Maybe<Scalars['Int']>;\n  where?: Maybe<Scalars['JSON']>;\n  publicationState?: Maybe<PublicationState>;\n};\n\n\nexport type QueryUsersConnectionArgs = {\n  sort?: Maybe<Scalars['String']>;\n  limit?: Maybe<Scalars['Int']>;\n  start?: Maybe<Scalars['Int']>;\n  where?: Maybe<Scalars['JSON']>;\n};\n\nexport type Review = {\n  __typename?: 'Review';\n  id: Scalars['ID'];\n  _id: Scalars['ID'];\n  createdAt: Scalars['DateTime'];\n  updatedAt: Scalars['DateTime'];\n  text?: Maybe<Scalars['String']>;\n  rating: Scalars['Float'];\n  author?: Maybe<UsersPermissionsUser>;\n  active?: Maybe<Scalars['Boolean']>;\n  trip?: Maybe<Trips>;\n  published_at?: Maybe<Scalars['DateTime']>;\n};\n\nexport type ReviewAggregator = {\n  __typename?: 'ReviewAggregator';\n  count?: Maybe<Scalars['Int']>;\n  totalCount?: Maybe<Scalars['Int']>;\n  sum?: Maybe<ReviewAggregatorSum>;\n  avg?: Maybe<ReviewAggregatorAvg>;\n  min?: Maybe<ReviewAggregatorMin>;\n  max?: Maybe<ReviewAggregatorMax>;\n};\n\nexport type ReviewAggregatorAvg = {\n  __typename?: 'ReviewAggregatorAvg';\n  rating?: Maybe<Scalars['Float']>;\n};\n\nexport type ReviewAggregatorMax = {\n  __typename?: 'ReviewAggregatorMax';\n  rating?: Maybe<Scalars['Float']>;\n};\n\nexport type ReviewAggregatorMin = {\n  __typename?: 'ReviewAggregatorMin';\n  rating?: Maybe<Scalars['Float']>;\n};\n\nexport type ReviewAggregatorSum = {\n  __typename?: 'ReviewAggregatorSum';\n  rating?: Maybe<Scalars['Float']>;\n};\n\nexport type ReviewConnection = {\n  __typename?: 'ReviewConnection';\n  values?: Maybe<Array<Maybe<Review>>>;\n  groupBy?: Maybe<ReviewGroupBy>;\n  aggregate?: Maybe<ReviewAggregator>;\n};\n\nexport type ReviewConnectionActive = {\n  __typename?: 'ReviewConnectionActive';\n  key?: Maybe<Scalars['Boolean']>;\n  connection?: Maybe<ReviewConnection>;\n};\n\nexport type ReviewConnectionAuthor = {\n  __typename?: 'ReviewConnectionAuthor';\n  key?: Maybe<Scalars['ID']>;\n  connection?: Maybe<ReviewConnection>;\n};\n\nexport type ReviewConnectionCreatedAt = {\n  __typename?: 'ReviewConnectionCreatedAt';\n  key?: Maybe<Scalars['DateTime']>;\n  connection?: Maybe<ReviewConnection>;\n};\n\nexport type ReviewConnectionId = {\n  __typename?: 'ReviewConnectionId';\n  key?: Maybe<Scalars['ID']>;\n  connection?: Maybe<ReviewConnection>;\n};\n\nexport type ReviewConnectionPublished_At = {\n  __typename?: 'ReviewConnectionPublished_at';\n  key?: Maybe<Scalars['DateTime']>;\n  connection?: Maybe<ReviewConnection>;\n};\n\nexport type ReviewConnectionRating = {\n  __typename?: 'ReviewConnectionRating';\n  key?: Maybe<Scalars['Float']>;\n  connection?: Maybe<ReviewConnection>;\n};\n\nexport type ReviewConnectionText = {\n  __typename?: 'ReviewConnectionText';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<ReviewConnection>;\n};\n\nexport type ReviewConnectionTrip = {\n  __typename?: 'ReviewConnectionTrip';\n  key?: Maybe<Scalars['ID']>;\n  connection?: Maybe<ReviewConnection>;\n};\n\nexport type ReviewConnectionUpdatedAt = {\n  __typename?: 'ReviewConnectionUpdatedAt';\n  key?: Maybe<Scalars['DateTime']>;\n  connection?: Maybe<ReviewConnection>;\n};\n\nexport type ReviewConnection_Id = {\n  __typename?: 'ReviewConnection_id';\n  key?: Maybe<Scalars['ID']>;\n  connection?: Maybe<ReviewConnection>;\n};\n\nexport type ReviewGroupBy = {\n  __typename?: 'ReviewGroupBy';\n  id?: Maybe<Array<Maybe<ReviewConnectionId>>>;\n  _id?: Maybe<Array<Maybe<ReviewConnection_Id>>>;\n  createdAt?: Maybe<Array<Maybe<ReviewConnectionCreatedAt>>>;\n  updatedAt?: Maybe<Array<Maybe<ReviewConnectionUpdatedAt>>>;\n  text?: Maybe<Array<Maybe<ReviewConnectionText>>>;\n  rating?: Maybe<Array<Maybe<ReviewConnectionRating>>>;\n  author?: Maybe<Array<Maybe<ReviewConnectionAuthor>>>;\n  active?: Maybe<Array<Maybe<ReviewConnectionActive>>>;\n  trip?: Maybe<Array<Maybe<ReviewConnectionTrip>>>;\n  published_at?: Maybe<Array<Maybe<ReviewConnectionPublished_At>>>;\n};\n\nexport type ReviewInput = {\n  text?: Maybe<Scalars['String']>;\n  rating: Scalars['Float'];\n  author?: Maybe<Scalars['ID']>;\n  active?: Maybe<Scalars['Boolean']>;\n  trip?: Maybe<Scalars['ID']>;\n  published_at?: Maybe<Scalars['DateTime']>;\n  created_by?: Maybe<Scalars['ID']>;\n  updated_by?: Maybe<Scalars['ID']>;\n};\n\nexport type RoleInput = {\n  name: Scalars['String'];\n  description?: Maybe<Scalars['String']>;\n  type?: Maybe<Scalars['String']>;\n  permissions?: Maybe<Array<Maybe<Scalars['ID']>>>;\n  users?: Maybe<Array<Maybe<Scalars['ID']>>>;\n  created_by?: Maybe<Scalars['ID']>;\n  updated_by?: Maybe<Scalars['ID']>;\n};\n\nexport type SubscriberInput = {\n  email: Scalars['String'];\n  published_at?: Maybe<Scalars['DateTime']>;\n  created_by?: Maybe<Scalars['ID']>;\n  updated_by?: Maybe<Scalars['ID']>;\n};\n\nexport type Subscribers = {\n  __typename?: 'Subscribers';\n  id: Scalars['ID'];\n  _id: Scalars['ID'];\n  createdAt: Scalars['DateTime'];\n  updatedAt: Scalars['DateTime'];\n  email: Scalars['String'];\n  published_at?: Maybe<Scalars['DateTime']>;\n};\n\nexport type SubscribersAggregator = {\n  __typename?: 'SubscribersAggregator';\n  count?: Maybe<Scalars['Int']>;\n  totalCount?: Maybe<Scalars['Int']>;\n};\n\nexport type SubscribersConnection = {\n  __typename?: 'SubscribersConnection';\n  values?: Maybe<Array<Maybe<Subscribers>>>;\n  groupBy?: Maybe<SubscribersGroupBy>;\n  aggregate?: Maybe<SubscribersAggregator>;\n};\n\nexport type SubscribersConnectionCreatedAt = {\n  __typename?: 'SubscribersConnectionCreatedAt';\n  key?: Maybe<Scalars['DateTime']>;\n  connection?: Maybe<SubscribersConnection>;\n};\n\nexport type SubscribersConnectionEmail = {\n  __typename?: 'SubscribersConnectionEmail';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<SubscribersConnection>;\n};\n\nexport type SubscribersConnectionId = {\n  __typename?: 'SubscribersConnectionId';\n  key?: Maybe<Scalars['ID']>;\n  connection?: Maybe<SubscribersConnection>;\n};\n\nexport type SubscribersConnectionPublished_At = {\n  __typename?: 'SubscribersConnectionPublished_at';\n  key?: Maybe<Scalars['DateTime']>;\n  connection?: Maybe<SubscribersConnection>;\n};\n\nexport type SubscribersConnectionUpdatedAt = {\n  __typename?: 'SubscribersConnectionUpdatedAt';\n  key?: Maybe<Scalars['DateTime']>;\n  connection?: Maybe<SubscribersConnection>;\n};\n\nexport type SubscribersConnection_Id = {\n  __typename?: 'SubscribersConnection_id';\n  key?: Maybe<Scalars['ID']>;\n  connection?: Maybe<SubscribersConnection>;\n};\n\nexport type SubscribersGroupBy = {\n  __typename?: 'SubscribersGroupBy';\n  id?: Maybe<Array<Maybe<SubscribersConnectionId>>>;\n  _id?: Maybe<Array<Maybe<SubscribersConnection_Id>>>;\n  createdAt?: Maybe<Array<Maybe<SubscribersConnectionCreatedAt>>>;\n  updatedAt?: Maybe<Array<Maybe<SubscribersConnectionUpdatedAt>>>;\n  email?: Maybe<Array<Maybe<SubscribersConnectionEmail>>>;\n  published_at?: Maybe<Array<Maybe<SubscribersConnectionPublished_At>>>;\n};\n\n\nexport type TripInput = {\n  name: Scalars['String'];\n  previewImage?: Maybe<Scalars['ID']>;\n  active?: Maybe<Scalars['Boolean']>;\n  trip_type: Enum_Trips_Trip_Type;\n  description?: Maybe<Scalars['String']>;\n  duration: Scalars['Int'];\n  partner?: Maybe<Scalars['ID']>;\n  currency?: Maybe<Enum_Trips_Currency>;\n  city?: Maybe<Scalars['ID']>;\n  features?: Maybe<Array<ComponentFeatureFeatureInput>>;\n  basePrice: Scalars['Int'];\n  basePeopleCount: Scalars['Int'];\n  discount?: Maybe<Scalars['Float']>;\n  travelType: Enum_Trips_Traveltype;\n  hotel?: Maybe<Scalars['ID']>;\n  plan?: Maybe<Array<ComponentTimelineTimelineInput>>;\n  sequence: Scalars['String'];\n  localizations?: Maybe<Array<Maybe<Scalars['ID']>>>;\n  locale?: Maybe<Scalars['String']>;\n  published_at?: Maybe<Scalars['DateTime']>;\n  created_by?: Maybe<Scalars['ID']>;\n  updated_by?: Maybe<Scalars['ID']>;\n};\n\nexport type Trips = {\n  __typename?: 'Trips';\n  id: Scalars['ID'];\n  _id: Scalars['ID'];\n  createdAt: Scalars['DateTime'];\n  updatedAt: Scalars['DateTime'];\n  name: Scalars['String'];\n  previewImage?: Maybe<UploadFile>;\n  active?: Maybe<Scalars['Boolean']>;\n  trip_type: Enum_Trips_Trip_Type;\n  description?: Maybe<Scalars['String']>;\n  duration: Scalars['Int'];\n  partner?: Maybe<Partner>;\n  currency?: Maybe<Enum_Trips_Currency>;\n  city?: Maybe<City>;\n  features?: Maybe<Array<Maybe<ComponentFeatureFeature>>>;\n  basePrice: Scalars['Int'];\n  basePeopleCount: Scalars['Int'];\n  discount?: Maybe<Scalars['Float']>;\n  travelType: Enum_Trips_Traveltype;\n  hotel?: Maybe<Hotels>;\n  plan?: Maybe<Array<Maybe<ComponentTimelineTimeline>>>;\n  locale?: Maybe<Scalars['String']>;\n  published_at?: Maybe<Scalars['DateTime']>;\n  localizations?: Maybe<Array<Maybe<Trips>>>;\n};\n\n\nexport type TripsLocalizationsArgs = {\n  sort?: Maybe<Scalars['String']>;\n  limit?: Maybe<Scalars['Int']>;\n  start?: Maybe<Scalars['Int']>;\n  where?: Maybe<Scalars['JSON']>;\n};\n\nexport type TripsAggregator = {\n  __typename?: 'TripsAggregator';\n  count?: Maybe<Scalars['Int']>;\n  totalCount?: Maybe<Scalars['Int']>;\n  sum?: Maybe<TripsAggregatorSum>;\n  avg?: Maybe<TripsAggregatorAvg>;\n  min?: Maybe<TripsAggregatorMin>;\n  max?: Maybe<TripsAggregatorMax>;\n};\n\nexport type TripsAggregatorAvg = {\n  __typename?: 'TripsAggregatorAvg';\n  duration?: Maybe<Scalars['Float']>;\n  basePrice?: Maybe<Scalars['Float']>;\n  basePeopleCount?: Maybe<Scalars['Float']>;\n  discount?: Maybe<Scalars['Float']>;\n};\n\nexport type TripsAggregatorMax = {\n  __typename?: 'TripsAggregatorMax';\n  duration?: Maybe<Scalars['Float']>;\n  basePrice?: Maybe<Scalars['Float']>;\n  basePeopleCount?: Maybe<Scalars['Float']>;\n  discount?: Maybe<Scalars['Float']>;\n};\n\nexport type TripsAggregatorMin = {\n  __typename?: 'TripsAggregatorMin';\n  duration?: Maybe<Scalars['Float']>;\n  basePrice?: Maybe<Scalars['Float']>;\n  basePeopleCount?: Maybe<Scalars['Float']>;\n  discount?: Maybe<Scalars['Float']>;\n};\n\nexport type TripsAggregatorSum = {\n  __typename?: 'TripsAggregatorSum';\n  duration?: Maybe<Scalars['Float']>;\n  basePrice?: Maybe<Scalars['Float']>;\n  basePeopleCount?: Maybe<Scalars['Float']>;\n  discount?: Maybe<Scalars['Float']>;\n};\n\nexport type TripsConnection = {\n  __typename?: 'TripsConnection';\n  values?: Maybe<Array<Maybe<Trips>>>;\n  groupBy?: Maybe<TripsGroupBy>;\n  aggregate?: Maybe<TripsAggregator>;\n};\n\nexport type TripsConnectionActive = {\n  __typename?: 'TripsConnectionActive';\n  key?: Maybe<Scalars['Boolean']>;\n  connection?: Maybe<TripsConnection>;\n};\n\nexport type TripsConnectionBasePeopleCount = {\n  __typename?: 'TripsConnectionBasePeopleCount';\n  key?: Maybe<Scalars['Int']>;\n  connection?: Maybe<TripsConnection>;\n};\n\nexport type TripsConnectionBasePrice = {\n  __typename?: 'TripsConnectionBasePrice';\n  key?: Maybe<Scalars['Int']>;\n  connection?: Maybe<TripsConnection>;\n};\n\nexport type TripsConnectionCity = {\n  __typename?: 'TripsConnectionCity';\n  key?: Maybe<Scalars['ID']>;\n  connection?: Maybe<TripsConnection>;\n};\n\nexport type TripsConnectionCreatedAt = {\n  __typename?: 'TripsConnectionCreatedAt';\n  key?: Maybe<Scalars['DateTime']>;\n  connection?: Maybe<TripsConnection>;\n};\n\nexport type TripsConnectionCurrency = {\n  __typename?: 'TripsConnectionCurrency';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<TripsConnection>;\n};\n\nexport type TripsConnectionDescription = {\n  __typename?: 'TripsConnectionDescription';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<TripsConnection>;\n};\n\nexport type TripsConnectionDiscount = {\n  __typename?: 'TripsConnectionDiscount';\n  key?: Maybe<Scalars['Float']>;\n  connection?: Maybe<TripsConnection>;\n};\n\nexport type TripsConnectionDuration = {\n  __typename?: 'TripsConnectionDuration';\n  key?: Maybe<Scalars['Int']>;\n  connection?: Maybe<TripsConnection>;\n};\n\nexport type TripsConnectionHotel = {\n  __typename?: 'TripsConnectionHotel';\n  key?: Maybe<Scalars['ID']>;\n  connection?: Maybe<TripsConnection>;\n};\n\nexport type TripsConnectionId = {\n  __typename?: 'TripsConnectionId';\n  key?: Maybe<Scalars['ID']>;\n  connection?: Maybe<TripsConnection>;\n};\n\nexport type TripsConnectionLocale = {\n  __typename?: 'TripsConnectionLocale';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<TripsConnection>;\n};\n\nexport type TripsConnectionName = {\n  __typename?: 'TripsConnectionName';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<TripsConnection>;\n};\n\nexport type TripsConnectionPartner = {\n  __typename?: 'TripsConnectionPartner';\n  key?: Maybe<Scalars['ID']>;\n  connection?: Maybe<TripsConnection>;\n};\n\nexport type TripsConnectionPreviewImage = {\n  __typename?: 'TripsConnectionPreviewImage';\n  key?: Maybe<Scalars['ID']>;\n  connection?: Maybe<TripsConnection>;\n};\n\nexport type TripsConnectionPublished_At = {\n  __typename?: 'TripsConnectionPublished_at';\n  key?: Maybe<Scalars['DateTime']>;\n  connection?: Maybe<TripsConnection>;\n};\n\nexport type TripsConnectionTravelType = {\n  __typename?: 'TripsConnectionTravelType';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<TripsConnection>;\n};\n\nexport type TripsConnectionTrip_Type = {\n  __typename?: 'TripsConnectionTrip_type';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<TripsConnection>;\n};\n\nexport type TripsConnectionUpdatedAt = {\n  __typename?: 'TripsConnectionUpdatedAt';\n  key?: Maybe<Scalars['DateTime']>;\n  connection?: Maybe<TripsConnection>;\n};\n\nexport type TripsConnection_Id = {\n  __typename?: 'TripsConnection_id';\n  key?: Maybe<Scalars['ID']>;\n  connection?: Maybe<TripsConnection>;\n};\n\nexport type TripsGroupBy = {\n  __typename?: 'TripsGroupBy';\n  id?: Maybe<Array<Maybe<TripsConnectionId>>>;\n  _id?: Maybe<Array<Maybe<TripsConnection_Id>>>;\n  createdAt?: Maybe<Array<Maybe<TripsConnectionCreatedAt>>>;\n  updatedAt?: Maybe<Array<Maybe<TripsConnectionUpdatedAt>>>;\n  name?: Maybe<Array<Maybe<TripsConnectionName>>>;\n  previewImage?: Maybe<Array<Maybe<TripsConnectionPreviewImage>>>;\n  active?: Maybe<Array<Maybe<TripsConnectionActive>>>;\n  trip_type?: Maybe<Array<Maybe<TripsConnectionTrip_Type>>>;\n  description?: Maybe<Array<Maybe<TripsConnectionDescription>>>;\n  duration?: Maybe<Array<Maybe<TripsConnectionDuration>>>;\n  partner?: Maybe<Array<Maybe<TripsConnectionPartner>>>;\n  currency?: Maybe<Array<Maybe<TripsConnectionCurrency>>>;\n  city?: Maybe<Array<Maybe<TripsConnectionCity>>>;\n  basePrice?: Maybe<Array<Maybe<TripsConnectionBasePrice>>>;\n  basePeopleCount?: Maybe<Array<Maybe<TripsConnectionBasePeopleCount>>>;\n  discount?: Maybe<Array<Maybe<TripsConnectionDiscount>>>;\n  travelType?: Maybe<Array<Maybe<TripsConnectionTravelType>>>;\n  hotel?: Maybe<Array<Maybe<TripsConnectionHotel>>>;\n  locale?: Maybe<Array<Maybe<TripsConnectionLocale>>>;\n  published_at?: Maybe<Array<Maybe<TripsConnectionPublished_At>>>;\n};\n\n\nexport type UploadFile = {\n  __typename?: 'UploadFile';\n  id: Scalars['ID'];\n  _id: Scalars['ID'];\n  createdAt: Scalars['DateTime'];\n  updatedAt: Scalars['DateTime'];\n  name: Scalars['String'];\n  alternativeText?: Maybe<Scalars['String']>;\n  caption?: Maybe<Scalars['String']>;\n  width?: Maybe<Scalars['Int']>;\n  height?: Maybe<Scalars['Int']>;\n  formats?: Maybe<Scalars['JSON']>;\n  hash: Scalars['String'];\n  ext?: Maybe<Scalars['String']>;\n  mime: Scalars['String'];\n  size: Scalars['Float'];\n  url: Scalars['String'];\n  previewUrl?: Maybe<Scalars['String']>;\n  provider: Scalars['String'];\n  provider_metadata?: Maybe<Scalars['JSON']>;\n  related?: Maybe<Array<Maybe<Morph>>>;\n};\n\n\nexport type UploadFileRelatedArgs = {\n  sort?: Maybe<Scalars['String']>;\n  limit?: Maybe<Scalars['Int']>;\n  start?: Maybe<Scalars['Int']>;\n  where?: Maybe<Scalars['JSON']>;\n};\n\nexport type UploadFileAggregator = {\n  __typename?: 'UploadFileAggregator';\n  count?: Maybe<Scalars['Int']>;\n  totalCount?: Maybe<Scalars['Int']>;\n  sum?: Maybe<UploadFileAggregatorSum>;\n  avg?: Maybe<UploadFileAggregatorAvg>;\n  min?: Maybe<UploadFileAggregatorMin>;\n  max?: Maybe<UploadFileAggregatorMax>;\n};\n\nexport type UploadFileAggregatorAvg = {\n  __typename?: 'UploadFileAggregatorAvg';\n  width?: Maybe<Scalars['Float']>;\n  height?: Maybe<Scalars['Float']>;\n  size?: Maybe<Scalars['Float']>;\n};\n\nexport type UploadFileAggregatorMax = {\n  __typename?: 'UploadFileAggregatorMax';\n  width?: Maybe<Scalars['Float']>;\n  height?: Maybe<Scalars['Float']>;\n  size?: Maybe<Scalars['Float']>;\n};\n\nexport type UploadFileAggregatorMin = {\n  __typename?: 'UploadFileAggregatorMin';\n  width?: Maybe<Scalars['Float']>;\n  height?: Maybe<Scalars['Float']>;\n  size?: Maybe<Scalars['Float']>;\n};\n\nexport type UploadFileAggregatorSum = {\n  __typename?: 'UploadFileAggregatorSum';\n  width?: Maybe<Scalars['Float']>;\n  height?: Maybe<Scalars['Float']>;\n  size?: Maybe<Scalars['Float']>;\n};\n\nexport type UploadFileConnection = {\n  __typename?: 'UploadFileConnection';\n  values?: Maybe<Array<Maybe<UploadFile>>>;\n  groupBy?: Maybe<UploadFileGroupBy>;\n  aggregate?: Maybe<UploadFileAggregator>;\n};\n\nexport type UploadFileConnectionAlternativeText = {\n  __typename?: 'UploadFileConnectionAlternativeText';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<UploadFileConnection>;\n};\n\nexport type UploadFileConnectionCaption = {\n  __typename?: 'UploadFileConnectionCaption';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<UploadFileConnection>;\n};\n\nexport type UploadFileConnectionCreatedAt = {\n  __typename?: 'UploadFileConnectionCreatedAt';\n  key?: Maybe<Scalars['DateTime']>;\n  connection?: Maybe<UploadFileConnection>;\n};\n\nexport type UploadFileConnectionExt = {\n  __typename?: 'UploadFileConnectionExt';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<UploadFileConnection>;\n};\n\nexport type UploadFileConnectionFormats = {\n  __typename?: 'UploadFileConnectionFormats';\n  key?: Maybe<Scalars['JSON']>;\n  connection?: Maybe<UploadFileConnection>;\n};\n\nexport type UploadFileConnectionHash = {\n  __typename?: 'UploadFileConnectionHash';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<UploadFileConnection>;\n};\n\nexport type UploadFileConnectionHeight = {\n  __typename?: 'UploadFileConnectionHeight';\n  key?: Maybe<Scalars['Int']>;\n  connection?: Maybe<UploadFileConnection>;\n};\n\nexport type UploadFileConnectionId = {\n  __typename?: 'UploadFileConnectionId';\n  key?: Maybe<Scalars['ID']>;\n  connection?: Maybe<UploadFileConnection>;\n};\n\nexport type UploadFileConnectionMime = {\n  __typename?: 'UploadFileConnectionMime';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<UploadFileConnection>;\n};\n\nexport type UploadFileConnectionName = {\n  __typename?: 'UploadFileConnectionName';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<UploadFileConnection>;\n};\n\nexport type UploadFileConnectionPreviewUrl = {\n  __typename?: 'UploadFileConnectionPreviewUrl';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<UploadFileConnection>;\n};\n\nexport type UploadFileConnectionProvider = {\n  __typename?: 'UploadFileConnectionProvider';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<UploadFileConnection>;\n};\n\nexport type UploadFileConnectionProvider_Metadata = {\n  __typename?: 'UploadFileConnectionProvider_metadata';\n  key?: Maybe<Scalars['JSON']>;\n  connection?: Maybe<UploadFileConnection>;\n};\n\nexport type UploadFileConnectionSize = {\n  __typename?: 'UploadFileConnectionSize';\n  key?: Maybe<Scalars['Float']>;\n  connection?: Maybe<UploadFileConnection>;\n};\n\nexport type UploadFileConnectionUpdatedAt = {\n  __typename?: 'UploadFileConnectionUpdatedAt';\n  key?: Maybe<Scalars['DateTime']>;\n  connection?: Maybe<UploadFileConnection>;\n};\n\nexport type UploadFileConnectionUrl = {\n  __typename?: 'UploadFileConnectionUrl';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<UploadFileConnection>;\n};\n\nexport type UploadFileConnectionWidth = {\n  __typename?: 'UploadFileConnectionWidth';\n  key?: Maybe<Scalars['Int']>;\n  connection?: Maybe<UploadFileConnection>;\n};\n\nexport type UploadFileConnection_Id = {\n  __typename?: 'UploadFileConnection_id';\n  key?: Maybe<Scalars['ID']>;\n  connection?: Maybe<UploadFileConnection>;\n};\n\nexport type UploadFileGroupBy = {\n  __typename?: 'UploadFileGroupBy';\n  id?: Maybe<Array<Maybe<UploadFileConnectionId>>>;\n  _id?: Maybe<Array<Maybe<UploadFileConnection_Id>>>;\n  createdAt?: Maybe<Array<Maybe<UploadFileConnectionCreatedAt>>>;\n  updatedAt?: Maybe<Array<Maybe<UploadFileConnectionUpdatedAt>>>;\n  name?: Maybe<Array<Maybe<UploadFileConnectionName>>>;\n  alternativeText?: Maybe<Array<Maybe<UploadFileConnectionAlternativeText>>>;\n  caption?: Maybe<Array<Maybe<UploadFileConnectionCaption>>>;\n  width?: Maybe<Array<Maybe<UploadFileConnectionWidth>>>;\n  height?: Maybe<Array<Maybe<UploadFileConnectionHeight>>>;\n  formats?: Maybe<Array<Maybe<UploadFileConnectionFormats>>>;\n  hash?: Maybe<Array<Maybe<UploadFileConnectionHash>>>;\n  ext?: Maybe<Array<Maybe<UploadFileConnectionExt>>>;\n  mime?: Maybe<Array<Maybe<UploadFileConnectionMime>>>;\n  size?: Maybe<Array<Maybe<UploadFileConnectionSize>>>;\n  url?: Maybe<Array<Maybe<UploadFileConnectionUrl>>>;\n  previewUrl?: Maybe<Array<Maybe<UploadFileConnectionPreviewUrl>>>;\n  provider?: Maybe<Array<Maybe<UploadFileConnectionProvider>>>;\n  provider_metadata?: Maybe<Array<Maybe<UploadFileConnectionProvider_Metadata>>>;\n};\n\nexport type UserInput = {\n  username: Scalars['String'];\n  email: Scalars['String'];\n  provider?: Maybe<Scalars['String']>;\n  password?: Maybe<Scalars['String']>;\n  resetPasswordToken?: Maybe<Scalars['String']>;\n  confirmationToken?: Maybe<Scalars['String']>;\n  confirmed?: Maybe<Scalars['Boolean']>;\n  blocked?: Maybe<Scalars['Boolean']>;\n  role?: Maybe<Scalars['ID']>;\n  created_by?: Maybe<Scalars['ID']>;\n  updated_by?: Maybe<Scalars['ID']>;\n};\n\nexport type UserPermissionsPasswordPayload = {\n  __typename?: 'UserPermissionsPasswordPayload';\n  ok: Scalars['Boolean'];\n};\n\nexport type UsersPermissionsLoginInput = {\n  identifier: Scalars['String'];\n  password: Scalars['String'];\n  provider?: Maybe<Scalars['String']>;\n};\n\nexport type UsersPermissionsLoginPayload = {\n  __typename?: 'UsersPermissionsLoginPayload';\n  jwt?: Maybe<Scalars['String']>;\n  user: UsersPermissionsMe;\n};\n\nexport type UsersPermissionsMe = {\n  __typename?: 'UsersPermissionsMe';\n  id: Scalars['ID'];\n  username: Scalars['String'];\n  email: Scalars['String'];\n  confirmed?: Maybe<Scalars['Boolean']>;\n  blocked?: Maybe<Scalars['Boolean']>;\n  role?: Maybe<UsersPermissionsMeRole>;\n};\n\nexport type UsersPermissionsMeRole = {\n  __typename?: 'UsersPermissionsMeRole';\n  id: Scalars['ID'];\n  name: Scalars['String'];\n  description?: Maybe<Scalars['String']>;\n  type?: Maybe<Scalars['String']>;\n};\n\nexport type UsersPermissionsPermission = {\n  __typename?: 'UsersPermissionsPermission';\n  id: Scalars['ID'];\n  _id: Scalars['ID'];\n  type: Scalars['String'];\n  controller: Scalars['String'];\n  action: Scalars['String'];\n  enabled: Scalars['Boolean'];\n  policy?: Maybe<Scalars['String']>;\n  role?: Maybe<UsersPermissionsRole>;\n};\n\nexport type UsersPermissionsRegisterInput = {\n  username: Scalars['String'];\n  email: Scalars['String'];\n  password: Scalars['String'];\n};\n\nexport type UsersPermissionsRole = {\n  __typename?: 'UsersPermissionsRole';\n  id: Scalars['ID'];\n  _id: Scalars['ID'];\n  name: Scalars['String'];\n  description?: Maybe<Scalars['String']>;\n  type?: Maybe<Scalars['String']>;\n  permissions?: Maybe<Array<Maybe<UsersPermissionsPermission>>>;\n  users?: Maybe<Array<Maybe<UsersPermissionsUser>>>;\n};\n\n\nexport type UsersPermissionsRolePermissionsArgs = {\n  sort?: Maybe<Scalars['String']>;\n  limit?: Maybe<Scalars['Int']>;\n  start?: Maybe<Scalars['Int']>;\n  where?: Maybe<Scalars['JSON']>;\n};\n\n\nexport type UsersPermissionsRoleUsersArgs = {\n  sort?: Maybe<Scalars['String']>;\n  limit?: Maybe<Scalars['Int']>;\n  start?: Maybe<Scalars['Int']>;\n  where?: Maybe<Scalars['JSON']>;\n};\n\nexport type UsersPermissionsRoleAggregator = {\n  __typename?: 'UsersPermissionsRoleAggregator';\n  count?: Maybe<Scalars['Int']>;\n  totalCount?: Maybe<Scalars['Int']>;\n};\n\nexport type UsersPermissionsRoleConnection = {\n  __typename?: 'UsersPermissionsRoleConnection';\n  values?: Maybe<Array<Maybe<UsersPermissionsRole>>>;\n  groupBy?: Maybe<UsersPermissionsRoleGroupBy>;\n  aggregate?: Maybe<UsersPermissionsRoleAggregator>;\n};\n\nexport type UsersPermissionsRoleConnectionDescription = {\n  __typename?: 'UsersPermissionsRoleConnectionDescription';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<UsersPermissionsRoleConnection>;\n};\n\nexport type UsersPermissionsRoleConnectionId = {\n  __typename?: 'UsersPermissionsRoleConnectionId';\n  key?: Maybe<Scalars['ID']>;\n  connection?: Maybe<UsersPermissionsRoleConnection>;\n};\n\nexport type UsersPermissionsRoleConnectionName = {\n  __typename?: 'UsersPermissionsRoleConnectionName';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<UsersPermissionsRoleConnection>;\n};\n\nexport type UsersPermissionsRoleConnectionType = {\n  __typename?: 'UsersPermissionsRoleConnectionType';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<UsersPermissionsRoleConnection>;\n};\n\nexport type UsersPermissionsRoleConnection_Id = {\n  __typename?: 'UsersPermissionsRoleConnection_id';\n  key?: Maybe<Scalars['ID']>;\n  connection?: Maybe<UsersPermissionsRoleConnection>;\n};\n\nexport type UsersPermissionsRoleGroupBy = {\n  __typename?: 'UsersPermissionsRoleGroupBy';\n  id?: Maybe<Array<Maybe<UsersPermissionsRoleConnectionId>>>;\n  _id?: Maybe<Array<Maybe<UsersPermissionsRoleConnection_Id>>>;\n  name?: Maybe<Array<Maybe<UsersPermissionsRoleConnectionName>>>;\n  description?: Maybe<Array<Maybe<UsersPermissionsRoleConnectionDescription>>>;\n  type?: Maybe<Array<Maybe<UsersPermissionsRoleConnectionType>>>;\n};\n\nexport type UsersPermissionsUser = {\n  __typename?: 'UsersPermissionsUser';\n  id: Scalars['ID'];\n  _id: Scalars['ID'];\n  createdAt: Scalars['DateTime'];\n  updatedAt: Scalars['DateTime'];\n  username: Scalars['String'];\n  email: Scalars['String'];\n  provider?: Maybe<Scalars['String']>;\n  confirmed?: Maybe<Scalars['Boolean']>;\n  blocked?: Maybe<Scalars['Boolean']>;\n  role?: Maybe<UsersPermissionsRole>;\n};\n\nexport type UsersPermissionsUserAggregator = {\n  __typename?: 'UsersPermissionsUserAggregator';\n  count?: Maybe<Scalars['Int']>;\n  totalCount?: Maybe<Scalars['Int']>;\n};\n\nexport type UsersPermissionsUserConnection = {\n  __typename?: 'UsersPermissionsUserConnection';\n  values?: Maybe<Array<Maybe<UsersPermissionsUser>>>;\n  groupBy?: Maybe<UsersPermissionsUserGroupBy>;\n  aggregate?: Maybe<UsersPermissionsUserAggregator>;\n};\n\nexport type UsersPermissionsUserConnectionBlocked = {\n  __typename?: 'UsersPermissionsUserConnectionBlocked';\n  key?: Maybe<Scalars['Boolean']>;\n  connection?: Maybe<UsersPermissionsUserConnection>;\n};\n\nexport type UsersPermissionsUserConnectionConfirmed = {\n  __typename?: 'UsersPermissionsUserConnectionConfirmed';\n  key?: Maybe<Scalars['Boolean']>;\n  connection?: Maybe<UsersPermissionsUserConnection>;\n};\n\nexport type UsersPermissionsUserConnectionCreatedAt = {\n  __typename?: 'UsersPermissionsUserConnectionCreatedAt';\n  key?: Maybe<Scalars['DateTime']>;\n  connection?: Maybe<UsersPermissionsUserConnection>;\n};\n\nexport type UsersPermissionsUserConnectionEmail = {\n  __typename?: 'UsersPermissionsUserConnectionEmail';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<UsersPermissionsUserConnection>;\n};\n\nexport type UsersPermissionsUserConnectionId = {\n  __typename?: 'UsersPermissionsUserConnectionId';\n  key?: Maybe<Scalars['ID']>;\n  connection?: Maybe<UsersPermissionsUserConnection>;\n};\n\nexport type UsersPermissionsUserConnectionProvider = {\n  __typename?: 'UsersPermissionsUserConnectionProvider';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<UsersPermissionsUserConnection>;\n};\n\nexport type UsersPermissionsUserConnectionRole = {\n  __typename?: 'UsersPermissionsUserConnectionRole';\n  key?: Maybe<Scalars['ID']>;\n  connection?: Maybe<UsersPermissionsUserConnection>;\n};\n\nexport type UsersPermissionsUserConnectionUpdatedAt = {\n  __typename?: 'UsersPermissionsUserConnectionUpdatedAt';\n  key?: Maybe<Scalars['DateTime']>;\n  connection?: Maybe<UsersPermissionsUserConnection>;\n};\n\nexport type UsersPermissionsUserConnectionUsername = {\n  __typename?: 'UsersPermissionsUserConnectionUsername';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<UsersPermissionsUserConnection>;\n};\n\nexport type UsersPermissionsUserConnection_Id = {\n  __typename?: 'UsersPermissionsUserConnection_id';\n  key?: Maybe<Scalars['ID']>;\n  connection?: Maybe<UsersPermissionsUserConnection>;\n};\n\nexport type UsersPermissionsUserGroupBy = {\n  __typename?: 'UsersPermissionsUserGroupBy';\n  id?: Maybe<Array<Maybe<UsersPermissionsUserConnectionId>>>;\n  _id?: Maybe<Array<Maybe<UsersPermissionsUserConnection_Id>>>;\n  createdAt?: Maybe<Array<Maybe<UsersPermissionsUserConnectionCreatedAt>>>;\n  updatedAt?: Maybe<Array<Maybe<UsersPermissionsUserConnectionUpdatedAt>>>;\n  username?: Maybe<Array<Maybe<UsersPermissionsUserConnectionUsername>>>;\n  email?: Maybe<Array<Maybe<UsersPermissionsUserConnectionEmail>>>;\n  provider?: Maybe<Array<Maybe<UsersPermissionsUserConnectionProvider>>>;\n  confirmed?: Maybe<Array<Maybe<UsersPermissionsUserConnectionConfirmed>>>;\n  blocked?: Maybe<Array<Maybe<UsersPermissionsUserConnectionBlocked>>>;\n  role?: Maybe<Array<Maybe<UsersPermissionsUserConnectionRole>>>;\n};\n\nexport type CreateBookingInput = {\n  data?: Maybe<BookingInput>;\n};\n\nexport type CreateBookingPayload = {\n  __typename?: 'createBookingPayload';\n  booking?: Maybe<Booking>;\n};\n\nexport type CreateCityInput = {\n  data?: Maybe<CityInput>;\n};\n\nexport type CreateCityPayload = {\n  __typename?: 'createCityPayload';\n  city?: Maybe<City>;\n};\n\nexport type CreateFeatureInput = {\n  data?: Maybe<FeatureInput>;\n};\n\nexport type CreateFeaturePayload = {\n  __typename?: 'createFeaturePayload';\n  feature?: Maybe<Feature>;\n};\n\nexport type CreateHotelInput = {\n  data?: Maybe<HotelInput>;\n};\n\nexport type CreateHotelPayload = {\n  __typename?: 'createHotelPayload';\n  hotel?: Maybe<Hotels>;\n};\n\nexport type CreateLocationInput = {\n  data?: Maybe<LocationInput>;\n};\n\nexport type CreateLocationPayload = {\n  __typename?: 'createLocationPayload';\n  location?: Maybe<Location>;\n};\n\nexport type CreatePartnerInput = {\n  data?: Maybe<PartnerInput>;\n};\n\nexport type CreatePartnerPayload = {\n  __typename?: 'createPartnerPayload';\n  partner?: Maybe<Partner>;\n};\n\nexport type CreateReviewInput = {\n  data?: Maybe<ReviewInput>;\n};\n\nexport type CreateReviewPayload = {\n  __typename?: 'createReviewPayload';\n  review?: Maybe<Review>;\n};\n\nexport type CreateRoleInput = {\n  data?: Maybe<RoleInput>;\n};\n\nexport type CreateRolePayload = {\n  __typename?: 'createRolePayload';\n  role?: Maybe<UsersPermissionsRole>;\n};\n\nexport type CreateSubscriberInput = {\n  data?: Maybe<SubscriberInput>;\n};\n\nexport type CreateSubscriberPayload = {\n  __typename?: 'createSubscriberPayload';\n  subscriber?: Maybe<Subscribers>;\n};\n\nexport type CreateTripInput = {\n  data?: Maybe<TripInput>;\n};\n\nexport type CreateTripPayload = {\n  __typename?: 'createTripPayload';\n  trip?: Maybe<Trips>;\n};\n\nexport type CreateUserInput = {\n  data?: Maybe<UserInput>;\n};\n\nexport type CreateUserPayload = {\n  __typename?: 'createUserPayload';\n  user?: Maybe<UsersPermissionsUser>;\n};\n\nexport type DeleteBookingInput = {\n  where?: Maybe<InputId>;\n};\n\nexport type DeleteBookingPayload = {\n  __typename?: 'deleteBookingPayload';\n  booking?: Maybe<Booking>;\n};\n\nexport type DeleteCityInput = {\n  where?: Maybe<InputId>;\n};\n\nexport type DeleteCityPayload = {\n  __typename?: 'deleteCityPayload';\n  city?: Maybe<City>;\n};\n\nexport type DeleteFeatureInput = {\n  where?: Maybe<InputId>;\n};\n\nexport type DeleteFeaturePayload = {\n  __typename?: 'deleteFeaturePayload';\n  feature?: Maybe<Feature>;\n};\n\nexport type DeleteFileInput = {\n  where?: Maybe<InputId>;\n};\n\nexport type DeleteFilePayload = {\n  __typename?: 'deleteFilePayload';\n  file?: Maybe<UploadFile>;\n};\n\nexport type DeleteHomeBannerPayload = {\n  __typename?: 'deleteHomeBannerPayload';\n  homeBanner?: Maybe<HomeBanner>;\n};\n\nexport type DeleteHotelInput = {\n  where?: Maybe<InputId>;\n};\n\nexport type DeleteHotelPayload = {\n  __typename?: 'deleteHotelPayload';\n  hotel?: Maybe<Hotels>;\n};\n\nexport type DeleteLocationInput = {\n  where?: Maybe<InputId>;\n};\n\nexport type DeleteLocationPayload = {\n  __typename?: 'deleteLocationPayload';\n  location?: Maybe<Location>;\n};\n\nexport type DeletePartnerInput = {\n  where?: Maybe<InputId>;\n};\n\nexport type DeletePartnerPayload = {\n  __typename?: 'deletePartnerPayload';\n  partner?: Maybe<Partner>;\n};\n\nexport type DeleteReviewInput = {\n  where?: Maybe<InputId>;\n};\n\nexport type DeleteReviewPayload = {\n  __typename?: 'deleteReviewPayload';\n  review?: Maybe<Review>;\n};\n\nexport type DeleteRoleInput = {\n  where?: Maybe<InputId>;\n};\n\nexport type DeleteRolePayload = {\n  __typename?: 'deleteRolePayload';\n  role?: Maybe<UsersPermissionsRole>;\n};\n\nexport type DeleteSubscriberInput = {\n  where?: Maybe<InputId>;\n};\n\nexport type DeleteSubscriberPayload = {\n  __typename?: 'deleteSubscriberPayload';\n  subscriber?: Maybe<Subscribers>;\n};\n\nexport type DeleteTripInput = {\n  where?: Maybe<InputId>;\n};\n\nexport type DeleteTripPayload = {\n  __typename?: 'deleteTripPayload';\n  trip?: Maybe<Trips>;\n};\n\nexport type DeleteUserInput = {\n  where?: Maybe<InputId>;\n};\n\nexport type DeleteUserPayload = {\n  __typename?: 'deleteUserPayload';\n  user?: Maybe<UsersPermissionsUser>;\n};\n\nexport type EditBookingInput = {\n  trip?: Maybe<Scalars['ID']>;\n  approved?: Maybe<Scalars['Boolean']>;\n  basePrice?: Maybe<Scalars['Float']>;\n  currency?: Maybe<Enum_Booking_Currency>;\n  basePeopleCount?: Maybe<Scalars['Int']>;\n  discount?: Maybe<Scalars['Float']>;\n  fullName?: Maybe<Scalars['String']>;\n  phone?: Maybe<Scalars['String']>;\n  message?: Maybe<Scalars['String']>;\n  arrivalDate?: Maybe<Scalars['Date']>;\n  language?: Maybe<Scalars['String']>;\n  userBookingStatus?: Maybe<Enum_Booking_Userbookingstatus>;\n  email?: Maybe<Scalars['String']>;\n  adults?: Maybe<Scalars['Int']>;\n  children?: Maybe<Scalars['Int']>;\n  totalPrice?: Maybe<Scalars['Float']>;\n  published_at?: Maybe<Scalars['DateTime']>;\n  created_by?: Maybe<Scalars['ID']>;\n  updated_by?: Maybe<Scalars['ID']>;\n};\n\nexport type EditCityInput = {\n  name?: Maybe<Scalars['String']>;\n  description?: Maybe<Scalars['String']>;\n  image?: Maybe<Scalars['ID']>;\n  locations?: Maybe<Array<Maybe<Scalars['ID']>>>;\n  localizations?: Maybe<Array<Maybe<Scalars['ID']>>>;\n  locale?: Maybe<Scalars['String']>;\n  published_at?: Maybe<Scalars['DateTime']>;\n  created_by?: Maybe<Scalars['ID']>;\n  updated_by?: Maybe<Scalars['ID']>;\n};\n\nexport type EditComponentCoordinateCoordinateInput = {\n  id?: Maybe<Scalars['ID']>;\n  latitude?: Maybe<Scalars['Float']>;\n  longitude?: Maybe<Scalars['Float']>;\n};\n\nexport type EditComponentFeatureFeatureInput = {\n  id?: Maybe<Scalars['ID']>;\n  feature?: Maybe<Scalars['ID']>;\n  included?: Maybe<Scalars['Boolean']>;\n};\n\nexport type EditComponentPricePriceInput = {\n  id?: Maybe<Scalars['ID']>;\n  basePrice?: Maybe<Scalars['Float']>;\n  currency?: Maybe<Enum_Componentpriceprice_Currency>;\n  basePeopleCount?: Maybe<Scalars['Int']>;\n  extraAdultFee?: Maybe<Scalars['Float']>;\n  discount?: Maybe<Scalars['Float']>;\n};\n\nexport type EditComponentTimelineTimelineInput = {\n  id?: Maybe<Scalars['ID']>;\n  day?: Maybe<Scalars['Int']>;\n  description?: Maybe<Scalars['String']>;\n  locations?: Maybe<Array<Maybe<Scalars['ID']>>>;\n  travelTo?: Maybe<Scalars['ID']>;\n  transportationType?: Maybe<Enum_Componenttimelinetimeline_Transportationtype>;\n  restDay?: Maybe<Scalars['Boolean']>;\n};\n\nexport type EditFeatureInput = {\n  name?: Maybe<Scalars['String']>;\n  info?: Maybe<Scalars['String']>;\n  localizations?: Maybe<Array<Maybe<Scalars['ID']>>>;\n  locale?: Maybe<Scalars['String']>;\n  published_at?: Maybe<Scalars['DateTime']>;\n  created_by?: Maybe<Scalars['ID']>;\n  updated_by?: Maybe<Scalars['ID']>;\n};\n\nexport type EditFileInput = {\n  name?: Maybe<Scalars['String']>;\n  alternativeText?: Maybe<Scalars['String']>;\n  caption?: Maybe<Scalars['String']>;\n  width?: Maybe<Scalars['Int']>;\n  height?: Maybe<Scalars['Int']>;\n  formats?: Maybe<Scalars['JSON']>;\n  hash?: Maybe<Scalars['String']>;\n  ext?: Maybe<Scalars['String']>;\n  mime?: Maybe<Scalars['String']>;\n  size?: Maybe<Scalars['Float']>;\n  url?: Maybe<Scalars['String']>;\n  previewUrl?: Maybe<Scalars['String']>;\n  provider?: Maybe<Scalars['String']>;\n  provider_metadata?: Maybe<Scalars['JSON']>;\n  related?: Maybe<Array<Maybe<Scalars['ID']>>>;\n  created_by?: Maybe<Scalars['ID']>;\n  updated_by?: Maybe<Scalars['ID']>;\n};\n\nexport type EditHomeBannerInput = {\n  images?: Maybe<Array<Maybe<Scalars['ID']>>>;\n  published_at?: Maybe<Scalars['DateTime']>;\n  created_by?: Maybe<Scalars['ID']>;\n  updated_by?: Maybe<Scalars['ID']>;\n};\n\nexport type EditHotelInput = {\n  name?: Maybe<Scalars['String']>;\n  stars?: Maybe<Scalars['Int']>;\n  url?: Maybe<Scalars['String']>;\n  trips?: Maybe<Array<Maybe<Scalars['ID']>>>;\n  published_at?: Maybe<Scalars['DateTime']>;\n  created_by?: Maybe<Scalars['ID']>;\n  updated_by?: Maybe<Scalars['ID']>;\n};\n\nexport type EditLocaleInput = {\n  name?: Maybe<Scalars['String']>;\n  code?: Maybe<Scalars['String']>;\n  created_by?: Maybe<Scalars['ID']>;\n  updated_by?: Maybe<Scalars['ID']>;\n};\n\nexport type EditLocationInput = {\n  name?: Maybe<Scalars['String']>;\n  description?: Maybe<Scalars['String']>;\n  images?: Maybe<Array<Maybe<Scalars['ID']>>>;\n  city?: Maybe<Scalars['ID']>;\n  coordinate?: Maybe<EditComponentCoordinateCoordinateInput>;\n  localizations?: Maybe<Array<Maybe<Scalars['ID']>>>;\n  locale?: Maybe<Scalars['String']>;\n  published_at?: Maybe<Scalars['DateTime']>;\n  created_by?: Maybe<Scalars['ID']>;\n  updated_by?: Maybe<Scalars['ID']>;\n};\n\nexport type EditPartnerInput = {\n  name?: Maybe<Scalars['String']>;\n  phone?: Maybe<Scalars['String']>;\n  address?: Maybe<Scalars['String']>;\n  email?: Maybe<Scalars['String']>;\n  trips?: Maybe<Array<Maybe<Scalars['ID']>>>;\n  agreement?: Maybe<Scalars['String']>;\n  commission?: Maybe<Scalars['Float']>;\n  revenueSource?: Maybe<Enum_Partner_Revenuesource>;\n  agreementStatus?: Maybe<Enum_Partner_Agreementstatus>;\n  notes?: Maybe<Scalars['String']>;\n  phone2?: Maybe<Scalars['String']>;\n  published_at?: Maybe<Scalars['DateTime']>;\n  created_by?: Maybe<Scalars['ID']>;\n  updated_by?: Maybe<Scalars['ID']>;\n};\n\nexport type EditReviewInput = {\n  text?: Maybe<Scalars['String']>;\n  rating?: Maybe<Scalars['Float']>;\n  author?: Maybe<Scalars['ID']>;\n  active?: Maybe<Scalars['Boolean']>;\n  trip?: Maybe<Scalars['ID']>;\n  published_at?: Maybe<Scalars['DateTime']>;\n  created_by?: Maybe<Scalars['ID']>;\n  updated_by?: Maybe<Scalars['ID']>;\n};\n\nexport type EditRoleInput = {\n  name?: Maybe<Scalars['String']>;\n  description?: Maybe<Scalars['String']>;\n  type?: Maybe<Scalars['String']>;\n  permissions?: Maybe<Array<Maybe<Scalars['ID']>>>;\n  users?: Maybe<Array<Maybe<Scalars['ID']>>>;\n  created_by?: Maybe<Scalars['ID']>;\n  updated_by?: Maybe<Scalars['ID']>;\n};\n\nexport type EditSubscriberInput = {\n  email?: Maybe<Scalars['String']>;\n  published_at?: Maybe<Scalars['DateTime']>;\n  created_by?: Maybe<Scalars['ID']>;\n  updated_by?: Maybe<Scalars['ID']>;\n};\n\nexport type EditTripInput = {\n  name?: Maybe<Scalars['String']>;\n  previewImage?: Maybe<Scalars['ID']>;\n  active?: Maybe<Scalars['Boolean']>;\n  trip_type?: Maybe<Enum_Trips_Trip_Type>;\n  description?: Maybe<Scalars['String']>;\n  duration?: Maybe<Scalars['Int']>;\n  partner?: Maybe<Scalars['ID']>;\n  currency?: Maybe<Enum_Trips_Currency>;\n  city?: Maybe<Scalars['ID']>;\n  features?: Maybe<Array<Maybe<EditComponentFeatureFeatureInput>>>;\n  basePrice?: Maybe<Scalars['Int']>;\n  basePeopleCount?: Maybe<Scalars['Int']>;\n  discount?: Maybe<Scalars['Float']>;\n  travelType?: Maybe<Enum_Trips_Traveltype>;\n  hotel?: Maybe<Scalars['ID']>;\n  plan?: Maybe<Array<Maybe<EditComponentTimelineTimelineInput>>>;\n  sequence?: Maybe<Scalars['String']>;\n  localizations?: Maybe<Array<Maybe<Scalars['ID']>>>;\n  locale?: Maybe<Scalars['String']>;\n  published_at?: Maybe<Scalars['DateTime']>;\n  created_by?: Maybe<Scalars['ID']>;\n  updated_by?: Maybe<Scalars['ID']>;\n};\n\nexport type EditUserInput = {\n  username?: Maybe<Scalars['String']>;\n  email?: Maybe<Scalars['String']>;\n  provider?: Maybe<Scalars['String']>;\n  password?: Maybe<Scalars['String']>;\n  resetPasswordToken?: Maybe<Scalars['String']>;\n  confirmationToken?: Maybe<Scalars['String']>;\n  confirmed?: Maybe<Scalars['Boolean']>;\n  blocked?: Maybe<Scalars['Boolean']>;\n  role?: Maybe<Scalars['ID']>;\n  created_by?: Maybe<Scalars['ID']>;\n  updated_by?: Maybe<Scalars['ID']>;\n};\n\nexport type UpdateBookingInput = {\n  where?: Maybe<InputId>;\n  data?: Maybe<EditBookingInput>;\n};\n\nexport type UpdateBookingPayload = {\n  __typename?: 'updateBookingPayload';\n  booking?: Maybe<Booking>;\n};\n\nexport type UpdateCityInput = {\n  where?: Maybe<InputId>;\n  data?: Maybe<EditCityInput>;\n};\n\nexport type UpdateCityPayload = {\n  __typename?: 'updateCityPayload';\n  city?: Maybe<City>;\n};\n\nexport type UpdateFeatureInput = {\n  where?: Maybe<InputId>;\n  data?: Maybe<EditFeatureInput>;\n};\n\nexport type UpdateFeaturePayload = {\n  __typename?: 'updateFeaturePayload';\n  feature?: Maybe<Feature>;\n};\n\nexport type UpdateHomeBannerInput = {\n  data?: Maybe<EditHomeBannerInput>;\n};\n\nexport type UpdateHomeBannerPayload = {\n  __typename?: 'updateHomeBannerPayload';\n  homeBanner?: Maybe<HomeBanner>;\n};\n\nexport type UpdateHotelInput = {\n  where?: Maybe<InputId>;\n  data?: Maybe<EditHotelInput>;\n};\n\nexport type UpdateHotelPayload = {\n  __typename?: 'updateHotelPayload';\n  hotel?: Maybe<Hotels>;\n};\n\nexport type UpdateLocationInput = {\n  where?: Maybe<InputId>;\n  data?: Maybe<EditLocationInput>;\n};\n\nexport type UpdateLocationPayload = {\n  __typename?: 'updateLocationPayload';\n  location?: Maybe<Location>;\n};\n\nexport type UpdatePartnerInput = {\n  where?: Maybe<InputId>;\n  data?: Maybe<EditPartnerInput>;\n};\n\nexport type UpdatePartnerPayload = {\n  __typename?: 'updatePartnerPayload';\n  partner?: Maybe<Partner>;\n};\n\nexport type UpdateReviewInput = {\n  where?: Maybe<InputId>;\n  data?: Maybe<EditReviewInput>;\n};\n\nexport type UpdateReviewPayload = {\n  __typename?: 'updateReviewPayload';\n  review?: Maybe<Review>;\n};\n\nexport type UpdateRoleInput = {\n  where?: Maybe<InputId>;\n  data?: Maybe<EditRoleInput>;\n};\n\nexport type UpdateRolePayload = {\n  __typename?: 'updateRolePayload';\n  role?: Maybe<UsersPermissionsRole>;\n};\n\nexport type UpdateSubscriberInput = {\n  where?: Maybe<InputId>;\n  data?: Maybe<EditSubscriberInput>;\n};\n\nexport type UpdateSubscriberPayload = {\n  __typename?: 'updateSubscriberPayload';\n  subscriber?: Maybe<Subscribers>;\n};\n\nexport type UpdateTripInput = {\n  where?: Maybe<InputId>;\n  data?: Maybe<EditTripInput>;\n};\n\nexport type UpdateTripPayload = {\n  __typename?: 'updateTripPayload';\n  trip?: Maybe<Trips>;\n};\n\nexport type UpdateUserInput = {\n  where?: Maybe<InputId>;\n  data?: Maybe<EditUserInput>;\n};\n\nexport type UpdateUserPayload = {\n  __typename?: 'updateUserPayload';\n  user?: Maybe<UsersPermissionsUser>;\n};\n\nexport type CreateBookingQueryMutationVariables = Exact<{\n  tripId: Scalars['ID'];\n  fullName: Scalars['String'];\n  basePrice: Scalars['Float'];\n  discount?: Maybe<Scalars['Float']>;\n  basePeopleCount: Scalars['Int'];\n  phone: Scalars['String'];\n  arrivalDate: Scalars['Date'];\n  message?: Maybe<Scalars['String']>;\n  currency: Enum_Booking_Currency;\n  email: Scalars['String'];\n  language: Scalars['String'];\n  adults: Scalars['Int'];\n  children: Scalars['Int'];\n}>;\n\n\nexport type CreateBookingQueryMutation = (\n  { __typename?: 'Mutation' }\n  & { createBooking?: Maybe<(\n    { __typename?: 'createBookingPayload' }\n    & { booking?: Maybe<(\n      { __typename?: 'Booking' }\n      & Pick<Booking, 'message'>\n    )> }\n  )> }\n);\n\nexport type CitiesQueryVariables = Exact<{\n  limit?: Maybe<Scalars['Int']>;\n  locale?: Maybe<Scalars['String']>;\n}>;\n\n\nexport type CitiesQuery = (\n  { __typename?: 'Query' }\n  & { cities?: Maybe<Array<Maybe<(\n    { __typename?: 'City' }\n    & CityInfoFragment\n  )>>> }\n);\n\nexport type GetCityQueryVariables = Exact<{\n  id: Scalars['ID'];\n}>;\n\n\nexport type GetCityQuery = (\n  { __typename?: 'Query' }\n  & { city?: Maybe<(\n    { __typename?: 'City' }\n    & CityInfoFragment\n  )> }\n);\n\nexport type GetLocalizedCityQueryVariables = Exact<{\n  id: Scalars['ID'];\n  locale: Scalars['String'];\n}>;\n\n\nexport type GetLocalizedCityQuery = (\n  { __typename?: 'Query' }\n  & { cities?: Maybe<Array<Maybe<(\n    { __typename?: 'City' }\n    & CityInfoFragment\n  )>>> }\n);\n\nexport type CityInfoFragment = (\n  { __typename?: 'City' }\n  & Pick<City, 'id' | 'name' | 'description' | 'locale'>\n  & { localizations?: Maybe<Array<Maybe<(\n    { __typename?: 'City' }\n    & Pick<City, 'id' | 'locale'>\n  )>>>, image?: Maybe<(\n    { __typename?: 'UploadFile' }\n    & Pick<UploadFile, 'id' | 'width' | 'height' | 'url' | 'formats'>\n  )> }\n);\n\nexport type FeaturesQueryVariables = Exact<{\n  locale: Scalars['String'];\n}>;\n\n\nexport type FeaturesQuery = (\n  { __typename?: 'Query' }\n  & { features?: Maybe<Array<Maybe<(\n    { __typename?: 'Feature' }\n    & Pick<Feature, 'name'>\n  )>>> }\n);\n\nexport type HomeCarousellQueryVariables = Exact<{ [key: string]: never; }>;\n\n\nexport type HomeCarousellQuery = (\n  { __typename?: 'Query' }\n  & { homeBanner?: Maybe<(\n    { __typename?: 'HomeBanner' }\n    & { images?: Maybe<Array<Maybe<(\n      { __typename?: 'UploadFile' }\n      & Pick<UploadFile, 'id' | 'width' | 'height' | 'url' | 'formats'>\n    )>>> }\n  )> }\n);\n\nexport type GetLocationsQueryVariables = Exact<{\n  locale: Scalars['String'];\n  ids: Array<Scalars['String']> | Scalars['String'];\n}>;\n\n\nexport type GetLocationsQuery = (\n  { __typename?: 'Query' }\n  & { locations?: Maybe<Array<Maybe<(\n    { __typename?: 'Location' }\n    & Pick<Location, 'id' | 'name' | 'description' | 'locale'>\n    & { coordinate?: Maybe<(\n      { __typename?: 'ComponentCoordinateCoordinate' }\n      & Pick<ComponentCoordinateCoordinate, 'latitude' | 'longitude'>\n    )>, images?: Maybe<Array<Maybe<(\n      { __typename?: 'UploadFile' }\n      & Pick<UploadFile, 'id' | 'width' | 'height' | 'url' | 'formats'>\n    )>>>, city?: Maybe<(\n      { __typename?: 'City' }\n      & Pick<City, 'id' | 'name' | 'description' | 'locale'>\n      & { localizations?: Maybe<Array<Maybe<(\n        { __typename?: 'City' }\n        & Pick<City, 'id' | 'locale'>\n      )>>>, image?: Maybe<(\n        { __typename?: 'UploadFile' }\n        & Pick<UploadFile, 'id' | 'width' | 'height' | 'url' | 'formats'>\n      )> }\n    )> }\n  )>>> }\n);\n\nexport type AddToNewsLetterMutationVariables = Exact<{\n  email: Scalars['String'];\n}>;\n\n\nexport type AddToNewsLetterMutation = (\n  { __typename?: 'Mutation' }\n  & { createSubscriber?: Maybe<(\n    { __typename?: 'createSubscriberPayload' }\n    & { subscriber?: Maybe<(\n      { __typename?: 'Subscribers' }\n      & Pick<Subscribers, 'email'>\n    )> }\n  )> }\n);\n\nexport type TripsQueryVariables = Exact<{\n  limit?: Maybe<Scalars['Int']>;\n  locale?: Maybe<Scalars['String']>;\n  where?: Maybe<Scalars['JSON']>;\n}>;\n\n\nexport type TripsQuery = (\n  { __typename?: 'Query' }\n  & { trips?: Maybe<Array<Maybe<(\n    { __typename?: 'Trips' }\n    & TripInfoFragment\n  )>>> }\n);\n\nexport type GetTripQueryVariables = Exact<{\n  id: Scalars['ID'];\n}>;\n\n\nexport type GetTripQuery = (\n  { __typename?: 'Query' }\n  & { trip?: Maybe<(\n    { __typename?: 'Trips' }\n    & TripInfoFragment\n  )> }\n);\n\nexport type GetLocalizedTripQueryVariables = Exact<{\n  id: Scalars['ID'];\n  locale: Scalars['String'];\n}>;\n\n\nexport type GetLocalizedTripQuery = (\n  { __typename?: 'Query' }\n  & { trips?: Maybe<Array<Maybe<(\n    { __typename?: 'Trips' }\n    & TripInfoFragment\n  )>>> }\n);\n\nexport type TripInfoFragment = (\n  { __typename?: 'Trips' }\n  & Pick<Trips, 'id' | 'name' | 'active' | 'description' | 'locale' | 'trip_type' | 'duration' | 'travelType' | 'basePrice' | 'discount' | 'currency' | 'basePeopleCount'>\n  & { city?: Maybe<(\n    { __typename?: 'City' }\n    & Pick<City, 'id' | 'name'>\n  )>, hotel?: Maybe<(\n    { __typename?: 'Hotels' }\n    & Pick<Hotels, 'id' | 'name' | 'url' | 'stars'>\n  )>, plan?: Maybe<Array<Maybe<(\n    { __typename?: 'ComponentTimelineTimeline' }\n    & Pick<ComponentTimelineTimeline, 'day' | 'transportationType' | 'description' | 'restDay'>\n    & { locations?: Maybe<Array<Maybe<(\n      { __typename?: 'Location' }\n      & Pick<Location, 'id' | 'name'>\n      & { city?: Maybe<(\n        { __typename?: 'City' }\n        & Pick<City, 'id'>\n      )> }\n    )>>>, travelTo?: Maybe<(\n      { __typename?: 'City' }\n      & Pick<City, 'id' | 'name'>\n    )> }\n  )>>>, previewImage?: Maybe<(\n    { __typename?: 'UploadFile' }\n    & Pick<UploadFile, 'id' | 'width' | 'height' | 'url' | 'formats'>\n  )>, localizations?: Maybe<Array<Maybe<(\n    { __typename?: 'Trips' }\n    & Pick<Trips, 'id' | 'locale'>\n  )>>>, features?: Maybe<Array<Maybe<(\n    { __typename?: 'ComponentFeatureFeature' }\n    & Pick<ComponentFeatureFeature, 'included'>\n    & { feature?: Maybe<(\n      { __typename?: 'Feature' }\n      & Pick<Feature, 'name' | 'info'>\n    )> }\n  )>>> }\n);\n\nexport const CityInfoFragmentDoc = gql`\n    fragment CityInfo on City {\n  id\n  name\n  description\n  locale\n  localizations {\n    id\n    locale\n  }\n  image {\n    id\n    width\n    height\n    url\n    formats\n  }\n}\n    `;\nexport const TripInfoFragmentDoc = gql`\n    fragment tripInfo on Trips {\n  id\n  name\n  active\n  description\n  locale\n  trip_type\n  duration\n  travelType\n  city {\n    id\n    name\n  }\n  hotel {\n    id\n    name\n    url\n    stars\n  }\n  plan {\n    day\n    locations {\n      id\n      name\n      city {\n        id\n      }\n    }\n    transportationType\n    travelTo {\n      id\n      name\n    }\n    description\n    restDay\n  }\n  previewImage {\n    id\n    width\n    height\n    url\n    formats\n  }\n  localizations {\n    id\n    locale\n  }\n  basePrice\n  discount\n  currency\n  basePeopleCount\n  features {\n    included\n    feature {\n      name\n      info\n    }\n  }\n}\n    `;\nexport const CreateBookingQueryDocument = gql`\n    mutation createBookingQuery($tripId: ID!, $fullName: String!, $basePrice: Float!, $discount: Float = 0, $basePeopleCount: Int!, $phone: String!, $arrivalDate: Date!, $message: String, $currency: ENUM_BOOKING_CURRENCY!, $email: String!, $language: String!, $adults: Int!, $children: Int!) {\n  createBooking(\n    input: {data: {trip: $tripId, basePrice: $basePrice, discount: $discount, message: $message, fullName: $fullName, basePeopleCount: $basePeopleCount, phone: $phone, arrivalDate: $arrivalDate, currency: $currency, email: $email, language: $language, adults: $adults, children: $children}}\n  ) {\n    booking {\n      message\n    }\n  }\n}\n    `;\n\n  @Injectable({\n    providedIn: 'root'\n  })\n  export class CreateBookingQueryGQL extends Apollo.Mutation<CreateBookingQueryMutation, CreateBookingQueryMutationVariables> {\n    document = CreateBookingQueryDocument;\n    \n    constructor(apollo: Apollo.Apollo) {\n      super(apollo);\n    }\n  }\nexport const CitiesDocument = gql`\n    query cities($limit: Int, $locale: String) {\n  cities(limit: $limit, locale: $locale) {\n    ...CityInfo\n  }\n}\n    ${CityInfoFragmentDoc}`;\n\n  @Injectable({\n    providedIn: 'root'\n  })\n  export class CitiesGQL extends Apollo.Query<CitiesQuery, CitiesQueryVariables> {\n    document = CitiesDocument;\n    \n    constructor(apollo: Apollo.Apollo) {\n      super(apollo);\n    }\n  }\nexport const GetCityDocument = gql`\n    query getCity($id: ID!) {\n  city(id: $id) {\n    ...CityInfo\n  }\n}\n    ${CityInfoFragmentDoc}`;\n\n  @Injectable({\n    providedIn: 'root'\n  })\n  export class GetCityGQL extends Apollo.Query<GetCityQuery, GetCityQueryVariables> {\n    document = GetCityDocument;\n    \n    constructor(apollo: Apollo.Apollo) {\n      super(apollo);\n    }\n  }\nexport const GetLocalizedCityDocument = gql`\n    query getLocalizedCity($id: ID!, $locale: String!) {\n  cities(locale: $locale, where: {_or: [{localizations: {id: $id}}, {id: $id}]}) {\n    ...CityInfo\n  }\n}\n    ${CityInfoFragmentDoc}`;\n\n  @Injectable({\n    providedIn: 'root'\n  })\n  export class GetLocalizedCityGQL extends Apollo.Query<GetLocalizedCityQuery, GetLocalizedCityQueryVariables> {\n    document = GetLocalizedCityDocument;\n    \n    constructor(apollo: Apollo.Apollo) {\n      super(apollo);\n    }\n  }\nexport const FeaturesDocument = gql`\n    query features($locale: String!) {\n  features(locale: $locale) {\n    name\n  }\n}\n    `;\n\n  @Injectable({\n    providedIn: 'root'\n  })\n  export class FeaturesGQL extends Apollo.Query<FeaturesQuery, FeaturesQueryVariables> {\n    document = FeaturesDocument;\n    \n    constructor(apollo: Apollo.Apollo) {\n      super(apollo);\n    }\n  }\nexport const HomeCarousellDocument = gql`\n    query homeCarousell {\n  homeBanner {\n    images {\n      id\n      width\n      height\n      url\n      formats\n    }\n  }\n}\n    `;\n\n  @Injectable({\n    providedIn: 'root'\n  })\n  export class HomeCarousellGQL extends Apollo.Query<HomeCarousellQuery, HomeCarousellQueryVariables> {\n    document = HomeCarousellDocument;\n    \n    constructor(apollo: Apollo.Apollo) {\n      super(apollo);\n    }\n  }\nexport const GetLocationsDocument = gql`\n    query getLocations($locale: String!, $ids: [String!]!) {\n  locations(locale: $locale, where: {id_in: $ids}) {\n    id\n    name\n    description\n    coordinate {\n      latitude\n      longitude\n    }\n    locale\n    images {\n      id\n      width\n      height\n      url\n      formats\n    }\n    city {\n      id\n      name\n      description\n      locale\n      localizations {\n        id\n        locale\n      }\n      image {\n        id\n        width\n        height\n        url\n        formats\n      }\n    }\n  }\n}\n    `;\n\n  @Injectable({\n    providedIn: 'root'\n  })\n  export class GetLocationsGQL extends Apollo.Query<GetLocationsQuery, GetLocationsQueryVariables> {\n    document = GetLocationsDocument;\n    \n    constructor(apollo: Apollo.Apollo) {\n      super(apollo);\n    }\n  }\nexport const AddToNewsLetterDocument = gql`\n    mutation addToNewsLetter($email: String!) {\n  createSubscriber(input: {data: {email: $email}}) {\n    subscriber {\n      email\n    }\n  }\n}\n    `;\n\n  @Injectable({\n    providedIn: 'root'\n  })\n  export class AddToNewsLetterGQL extends Apollo.Mutation<AddToNewsLetterMutation, AddToNewsLetterMutationVariables> {\n    document = AddToNewsLetterDocument;\n    \n    constructor(apollo: Apollo.Apollo) {\n      super(apollo);\n    }\n  }\nexport const TripsDocument = gql`\n    query trips($limit: Int = 10, $locale: String = \"en\", $where: JSON) {\n  trips(limit: $limit, locale: $locale, where: $where) {\n    ...tripInfo\n  }\n}\n    ${TripInfoFragmentDoc}`;\n\n  @Injectable({\n    providedIn: 'root'\n  })\n  export class TripsGQL extends Apollo.Query<TripsQuery, TripsQueryVariables> {\n    document = TripsDocument;\n    \n    constructor(apollo: Apollo.Apollo) {\n      super(apollo);\n    }\n  }\nexport const GetTripDocument = gql`\n    query getTrip($id: ID!) {\n  trip(id: $id) {\n    ...tripInfo\n  }\n}\n    ${TripInfoFragmentDoc}`;\n\n  @Injectable({\n    providedIn: 'root'\n  })\n  export class GetTripGQL extends Apollo.Query<GetTripQuery, GetTripQueryVariables> {\n    document = GetTripDocument;\n    \n    constructor(apollo: Apollo.Apollo) {\n      super(apollo);\n    }\n  }\nexport const GetLocalizedTripDocument = gql`\n    query getLocalizedTrip($id: ID!, $locale: String!) {\n  trips(locale: $locale, where: {_or: [{localizations: {id: $id}}, {id: $id}]}) {\n    ...tripInfo\n  }\n}\n    ${TripInfoFragmentDoc}`;\n\n  @Injectable({\n    providedIn: 'root'\n  })\n  export class GetLocalizedTripGQL extends Apollo.Query<GetLocalizedTripQuery, GetLocalizedTripQueryVariables> {\n    document = GetLocalizedTripDocument;\n    \n    constructor(apollo: Apollo.Apollo) {\n      super(apollo);\n    }\n  }",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "apollo",
                        "type": "Apollo.Apollo"
                    }
                ],
                "line": 3619,
                "jsdoctags": [
                    {
                        "name": "apollo",
                        "type": "Apollo.Apollo",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "type": "injectable"
        },
        {
            "name": "ErrorService",
            "id": "injectable-ErrorService-0c79e246f3b9b397f4cab77dcf27ccb0",
            "file": "src/app/data/services/error.service.ts",
            "properties": [],
            "methods": [
                {
                    "name": "observeError$",
                    "args": [
                        {
                            "name": "st$",
                            "type": "BehaviorSubject<LoadingState>"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 14,
                    "jsdoctags": [
                        {
                            "name": "st$",
                            "type": "BehaviorSubject<LoadingState>",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "showError",
                    "args": [
                        {
                            "name": "st",
                            "type": "LoadingState"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 27,
                    "jsdoctags": [
                        {
                            "name": "st",
                            "type": "LoadingState",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "showErrorByException",
                    "args": [
                        {
                            "name": "err",
                            "type": "Error"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 35,
                    "jsdoctags": [
                        {
                            "name": "err",
                            "type": "Error",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "description": "",
            "sourceCode": "import { Injectable } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { BehaviorSubject } from 'rxjs';\nimport { ErrorDlgComponent } from 'src/app/common/widgets/error-dlg/error-dlg.component';\nimport { LoadingState } from '../static/main-info';\nimport { isDevMode } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ErrorService {\n  constructor(private dlg: MatDialog) {}\n\n  observeError$(st$: BehaviorSubject<LoadingState>) {\n    st$.subscribe((state) => {\n      if (isDevMode()) return;\n\n      if (state.hasError) {\n        this.dlg.open(ErrorDlgComponent, {\n          data: state,\n          disableClose: false,\n        });\n      }\n    });\n  }\n\n  showError(st: LoadingState) {\n    if (st.hasError) {\n      this.dlg.open(ErrorDlgComponent, {\n        data: st,\n        disableClose: true,\n      });\n    }\n  }\n  showErrorByException(err: Error) {\n    const st: LoadingState = {\n      hasError: true,\n      isLoading: false,\n      msg: err,\n    };\n    this.dlg.open(ErrorDlgComponent, {\n      data: st,\n      disableClose: true,\n      height: '35vh',\n    });\n  }\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "dlg",
                        "type": "MatDialog"
                    }
                ],
                "line": 11,
                "jsdoctags": [
                    {
                        "name": "dlg",
                        "type": "MatDialog",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "type": "injectable"
        },
        {
            "name": "FeaturesGQL",
            "id": "injectable-FeaturesGQL-54bb7cbcdd682e4d53ca5e8a5c5399f6",
            "file": "src/app/data/services/saferniGraphql.service.ts",
            "properties": [
                {
                    "name": "document",
                    "defaultValue": "FeaturesDocument",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 3691
                }
            ],
            "methods": [],
            "description": "",
            "sourceCode": "import { gql } from 'apollo-angular';\nimport { Injectable } from '@angular/core';\nimport * as Apollo from 'apollo-angular';\nexport type Maybe<T> = T | null;\nexport type Exact<T extends { [key: string]: unknown }> = { [K in keyof T]: T[K] };\nexport type MakeOptional<T, K extends keyof T> = Omit<T, K> & { [SubKey in K]?: Maybe<T[SubKey]> };\nexport type MakeMaybe<T, K extends keyof T> = Omit<T, K> & { [SubKey in K]: Maybe<T[SubKey]> };\n/** All built-in and custom scalars, mapped to their actual values */\nexport type Scalars = {\n  ID: string;\n  String: string;\n  Boolean: boolean;\n  Int: number;\n  Float: number;\n  /** A date string, such as 2007-12-03, compliant with the `full-date` format outlined in section 5.6 of the RFC 3339 profile of the ISO 8601 standard for representation of dates and times using the Gregorian calendar. */\n  Date: any;\n  /** A date-time string at UTC, such as 2007-12-03T10:15:30Z, compliant with the `date-time` format outlined in section 5.6 of the RFC 3339 profile of the ISO 8601 standard for representation of dates and times using the Gregorian calendar. */\n  DateTime: any;\n  /** The `JSON` scalar type represents JSON values as specified by [ECMA-404](http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf). */\n  JSON: any;\n  /** The `Long` scalar type represents 52-bit integers */\n  Long: any;\n  /** A time string with format: HH:mm:ss.SSS */\n  Time: any;\n  /** The `Upload` scalar type represents a file upload. */\n  Upload: any;\n};\n\n\n\nexport type AdminUser = {\n  __typename?: 'AdminUser';\n  id: Scalars['ID'];\n  username?: Maybe<Scalars['String']>;\n  firstname: Scalars['String'];\n  lastname: Scalars['String'];\n};\n\nexport type Booking = {\n  __typename?: 'Booking';\n  id: Scalars['ID'];\n  _id: Scalars['ID'];\n  createdAt: Scalars['DateTime'];\n  updatedAt: Scalars['DateTime'];\n  trip?: Maybe<Trips>;\n  approved?: Maybe<Scalars['Boolean']>;\n  basePrice: Scalars['Float'];\n  currency: Enum_Booking_Currency;\n  basePeopleCount: Scalars['Int'];\n  discount?: Maybe<Scalars['Float']>;\n  fullName: Scalars['String'];\n  phone: Scalars['String'];\n  message?: Maybe<Scalars['String']>;\n  arrivalDate: Scalars['Date'];\n  language?: Maybe<Scalars['String']>;\n  userBookingStatus?: Maybe<Enum_Booking_Userbookingstatus>;\n  email: Scalars['String'];\n  adults: Scalars['Int'];\n  children?: Maybe<Scalars['Int']>;\n  totalPrice?: Maybe<Scalars['Float']>;\n  published_at?: Maybe<Scalars['DateTime']>;\n};\n\nexport type BookingAggregator = {\n  __typename?: 'BookingAggregator';\n  count?: Maybe<Scalars['Int']>;\n  totalCount?: Maybe<Scalars['Int']>;\n  sum?: Maybe<BookingAggregatorSum>;\n  avg?: Maybe<BookingAggregatorAvg>;\n  min?: Maybe<BookingAggregatorMin>;\n  max?: Maybe<BookingAggregatorMax>;\n};\n\nexport type BookingAggregatorAvg = {\n  __typename?: 'BookingAggregatorAvg';\n  basePrice?: Maybe<Scalars['Float']>;\n  basePeopleCount?: Maybe<Scalars['Float']>;\n  discount?: Maybe<Scalars['Float']>;\n  adults?: Maybe<Scalars['Float']>;\n  children?: Maybe<Scalars['Float']>;\n  totalPrice?: Maybe<Scalars['Float']>;\n};\n\nexport type BookingAggregatorMax = {\n  __typename?: 'BookingAggregatorMax';\n  basePrice?: Maybe<Scalars['Float']>;\n  basePeopleCount?: Maybe<Scalars['Float']>;\n  discount?: Maybe<Scalars['Float']>;\n  adults?: Maybe<Scalars['Float']>;\n  children?: Maybe<Scalars['Float']>;\n  totalPrice?: Maybe<Scalars['Float']>;\n};\n\nexport type BookingAggregatorMin = {\n  __typename?: 'BookingAggregatorMin';\n  basePrice?: Maybe<Scalars['Float']>;\n  basePeopleCount?: Maybe<Scalars['Float']>;\n  discount?: Maybe<Scalars['Float']>;\n  adults?: Maybe<Scalars['Float']>;\n  children?: Maybe<Scalars['Float']>;\n  totalPrice?: Maybe<Scalars['Float']>;\n};\n\nexport type BookingAggregatorSum = {\n  __typename?: 'BookingAggregatorSum';\n  basePrice?: Maybe<Scalars['Float']>;\n  basePeopleCount?: Maybe<Scalars['Float']>;\n  discount?: Maybe<Scalars['Float']>;\n  adults?: Maybe<Scalars['Float']>;\n  children?: Maybe<Scalars['Float']>;\n  totalPrice?: Maybe<Scalars['Float']>;\n};\n\nexport type BookingConnection = {\n  __typename?: 'BookingConnection';\n  values?: Maybe<Array<Maybe<Booking>>>;\n  groupBy?: Maybe<BookingGroupBy>;\n  aggregate?: Maybe<BookingAggregator>;\n};\n\nexport type BookingConnectionAdults = {\n  __typename?: 'BookingConnectionAdults';\n  key?: Maybe<Scalars['Int']>;\n  connection?: Maybe<BookingConnection>;\n};\n\nexport type BookingConnectionApproved = {\n  __typename?: 'BookingConnectionApproved';\n  key?: Maybe<Scalars['Boolean']>;\n  connection?: Maybe<BookingConnection>;\n};\n\nexport type BookingConnectionArrivalDate = {\n  __typename?: 'BookingConnectionArrivalDate';\n  key?: Maybe<Scalars['ID']>;\n  connection?: Maybe<BookingConnection>;\n};\n\nexport type BookingConnectionBasePeopleCount = {\n  __typename?: 'BookingConnectionBasePeopleCount';\n  key?: Maybe<Scalars['Int']>;\n  connection?: Maybe<BookingConnection>;\n};\n\nexport type BookingConnectionBasePrice = {\n  __typename?: 'BookingConnectionBasePrice';\n  key?: Maybe<Scalars['Float']>;\n  connection?: Maybe<BookingConnection>;\n};\n\nexport type BookingConnectionChildren = {\n  __typename?: 'BookingConnectionChildren';\n  key?: Maybe<Scalars['Int']>;\n  connection?: Maybe<BookingConnection>;\n};\n\nexport type BookingConnectionCreatedAt = {\n  __typename?: 'BookingConnectionCreatedAt';\n  key?: Maybe<Scalars['DateTime']>;\n  connection?: Maybe<BookingConnection>;\n};\n\nexport type BookingConnectionCurrency = {\n  __typename?: 'BookingConnectionCurrency';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<BookingConnection>;\n};\n\nexport type BookingConnectionDiscount = {\n  __typename?: 'BookingConnectionDiscount';\n  key?: Maybe<Scalars['Float']>;\n  connection?: Maybe<BookingConnection>;\n};\n\nexport type BookingConnectionEmail = {\n  __typename?: 'BookingConnectionEmail';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<BookingConnection>;\n};\n\nexport type BookingConnectionFullName = {\n  __typename?: 'BookingConnectionFullName';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<BookingConnection>;\n};\n\nexport type BookingConnectionId = {\n  __typename?: 'BookingConnectionId';\n  key?: Maybe<Scalars['ID']>;\n  connection?: Maybe<BookingConnection>;\n};\n\nexport type BookingConnectionLanguage = {\n  __typename?: 'BookingConnectionLanguage';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<BookingConnection>;\n};\n\nexport type BookingConnectionMessage = {\n  __typename?: 'BookingConnectionMessage';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<BookingConnection>;\n};\n\nexport type BookingConnectionPhone = {\n  __typename?: 'BookingConnectionPhone';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<BookingConnection>;\n};\n\nexport type BookingConnectionPublished_At = {\n  __typename?: 'BookingConnectionPublished_at';\n  key?: Maybe<Scalars['DateTime']>;\n  connection?: Maybe<BookingConnection>;\n};\n\nexport type BookingConnectionTotalPrice = {\n  __typename?: 'BookingConnectionTotalPrice';\n  key?: Maybe<Scalars['Float']>;\n  connection?: Maybe<BookingConnection>;\n};\n\nexport type BookingConnectionTrip = {\n  __typename?: 'BookingConnectionTrip';\n  key?: Maybe<Scalars['ID']>;\n  connection?: Maybe<BookingConnection>;\n};\n\nexport type BookingConnectionUpdatedAt = {\n  __typename?: 'BookingConnectionUpdatedAt';\n  key?: Maybe<Scalars['DateTime']>;\n  connection?: Maybe<BookingConnection>;\n};\n\nexport type BookingConnectionUserBookingStatus = {\n  __typename?: 'BookingConnectionUserBookingStatus';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<BookingConnection>;\n};\n\nexport type BookingConnection_Id = {\n  __typename?: 'BookingConnection_id';\n  key?: Maybe<Scalars['ID']>;\n  connection?: Maybe<BookingConnection>;\n};\n\nexport type BookingGroupBy = {\n  __typename?: 'BookingGroupBy';\n  id?: Maybe<Array<Maybe<BookingConnectionId>>>;\n  _id?: Maybe<Array<Maybe<BookingConnection_Id>>>;\n  createdAt?: Maybe<Array<Maybe<BookingConnectionCreatedAt>>>;\n  updatedAt?: Maybe<Array<Maybe<BookingConnectionUpdatedAt>>>;\n  trip?: Maybe<Array<Maybe<BookingConnectionTrip>>>;\n  approved?: Maybe<Array<Maybe<BookingConnectionApproved>>>;\n  basePrice?: Maybe<Array<Maybe<BookingConnectionBasePrice>>>;\n  currency?: Maybe<Array<Maybe<BookingConnectionCurrency>>>;\n  basePeopleCount?: Maybe<Array<Maybe<BookingConnectionBasePeopleCount>>>;\n  discount?: Maybe<Array<Maybe<BookingConnectionDiscount>>>;\n  fullName?: Maybe<Array<Maybe<BookingConnectionFullName>>>;\n  phone?: Maybe<Array<Maybe<BookingConnectionPhone>>>;\n  message?: Maybe<Array<Maybe<BookingConnectionMessage>>>;\n  arrivalDate?: Maybe<Array<Maybe<BookingConnectionArrivalDate>>>;\n  language?: Maybe<Array<Maybe<BookingConnectionLanguage>>>;\n  userBookingStatus?: Maybe<Array<Maybe<BookingConnectionUserBookingStatus>>>;\n  email?: Maybe<Array<Maybe<BookingConnectionEmail>>>;\n  adults?: Maybe<Array<Maybe<BookingConnectionAdults>>>;\n  children?: Maybe<Array<Maybe<BookingConnectionChildren>>>;\n  totalPrice?: Maybe<Array<Maybe<BookingConnectionTotalPrice>>>;\n  published_at?: Maybe<Array<Maybe<BookingConnectionPublished_At>>>;\n};\n\nexport type BookingInput = {\n  trip?: Maybe<Scalars['ID']>;\n  approved?: Maybe<Scalars['Boolean']>;\n  basePrice: Scalars['Float'];\n  currency: Enum_Booking_Currency;\n  basePeopleCount: Scalars['Int'];\n  discount?: Maybe<Scalars['Float']>;\n  fullName: Scalars['String'];\n  phone: Scalars['String'];\n  message?: Maybe<Scalars['String']>;\n  arrivalDate: Scalars['Date'];\n  language?: Maybe<Scalars['String']>;\n  userBookingStatus?: Maybe<Enum_Booking_Userbookingstatus>;\n  email: Scalars['String'];\n  adults: Scalars['Int'];\n  children?: Maybe<Scalars['Int']>;\n  totalPrice?: Maybe<Scalars['Float']>;\n  published_at?: Maybe<Scalars['DateTime']>;\n  created_by?: Maybe<Scalars['ID']>;\n  updated_by?: Maybe<Scalars['ID']>;\n};\n\nexport type City = {\n  __typename?: 'City';\n  id: Scalars['ID'];\n  _id: Scalars['ID'];\n  createdAt: Scalars['DateTime'];\n  updatedAt: Scalars['DateTime'];\n  name: Scalars['String'];\n  description?: Maybe<Scalars['String']>;\n  image?: Maybe<UploadFile>;\n  locale?: Maybe<Scalars['String']>;\n  published_at?: Maybe<Scalars['DateTime']>;\n  locations?: Maybe<Array<Maybe<Location>>>;\n  localizations?: Maybe<Array<Maybe<City>>>;\n};\n\n\nexport type CityLocationsArgs = {\n  sort?: Maybe<Scalars['String']>;\n  limit?: Maybe<Scalars['Int']>;\n  start?: Maybe<Scalars['Int']>;\n  where?: Maybe<Scalars['JSON']>;\n};\n\n\nexport type CityLocalizationsArgs = {\n  sort?: Maybe<Scalars['String']>;\n  limit?: Maybe<Scalars['Int']>;\n  start?: Maybe<Scalars['Int']>;\n  where?: Maybe<Scalars['JSON']>;\n};\n\nexport type CityAggregator = {\n  __typename?: 'CityAggregator';\n  count?: Maybe<Scalars['Int']>;\n  totalCount?: Maybe<Scalars['Int']>;\n};\n\nexport type CityConnection = {\n  __typename?: 'CityConnection';\n  values?: Maybe<Array<Maybe<City>>>;\n  groupBy?: Maybe<CityGroupBy>;\n  aggregate?: Maybe<CityAggregator>;\n};\n\nexport type CityConnectionCreatedAt = {\n  __typename?: 'CityConnectionCreatedAt';\n  key?: Maybe<Scalars['DateTime']>;\n  connection?: Maybe<CityConnection>;\n};\n\nexport type CityConnectionDescription = {\n  __typename?: 'CityConnectionDescription';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<CityConnection>;\n};\n\nexport type CityConnectionId = {\n  __typename?: 'CityConnectionId';\n  key?: Maybe<Scalars['ID']>;\n  connection?: Maybe<CityConnection>;\n};\n\nexport type CityConnectionImage = {\n  __typename?: 'CityConnectionImage';\n  key?: Maybe<Scalars['ID']>;\n  connection?: Maybe<CityConnection>;\n};\n\nexport type CityConnectionLocale = {\n  __typename?: 'CityConnectionLocale';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<CityConnection>;\n};\n\nexport type CityConnectionName = {\n  __typename?: 'CityConnectionName';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<CityConnection>;\n};\n\nexport type CityConnectionPublished_At = {\n  __typename?: 'CityConnectionPublished_at';\n  key?: Maybe<Scalars['DateTime']>;\n  connection?: Maybe<CityConnection>;\n};\n\nexport type CityConnectionUpdatedAt = {\n  __typename?: 'CityConnectionUpdatedAt';\n  key?: Maybe<Scalars['DateTime']>;\n  connection?: Maybe<CityConnection>;\n};\n\nexport type CityConnection_Id = {\n  __typename?: 'CityConnection_id';\n  key?: Maybe<Scalars['ID']>;\n  connection?: Maybe<CityConnection>;\n};\n\nexport type CityGroupBy = {\n  __typename?: 'CityGroupBy';\n  id?: Maybe<Array<Maybe<CityConnectionId>>>;\n  _id?: Maybe<Array<Maybe<CityConnection_Id>>>;\n  createdAt?: Maybe<Array<Maybe<CityConnectionCreatedAt>>>;\n  updatedAt?: Maybe<Array<Maybe<CityConnectionUpdatedAt>>>;\n  name?: Maybe<Array<Maybe<CityConnectionName>>>;\n  description?: Maybe<Array<Maybe<CityConnectionDescription>>>;\n  image?: Maybe<Array<Maybe<CityConnectionImage>>>;\n  locale?: Maybe<Array<Maybe<CityConnectionLocale>>>;\n  published_at?: Maybe<Array<Maybe<CityConnectionPublished_At>>>;\n};\n\nexport type CityInput = {\n  name: Scalars['String'];\n  description?: Maybe<Scalars['String']>;\n  image?: Maybe<Scalars['ID']>;\n  locations?: Maybe<Array<Maybe<Scalars['ID']>>>;\n  localizations?: Maybe<Array<Maybe<Scalars['ID']>>>;\n  locale?: Maybe<Scalars['String']>;\n  published_at?: Maybe<Scalars['DateTime']>;\n  created_by?: Maybe<Scalars['ID']>;\n  updated_by?: Maybe<Scalars['ID']>;\n};\n\nexport type ComponentCoordinateCoordinate = {\n  __typename?: 'ComponentCoordinateCoordinate';\n  id: Scalars['ID'];\n  _id: Scalars['ID'];\n  latitude: Scalars['Float'];\n  longitude: Scalars['Float'];\n};\n\nexport type ComponentCoordinateCoordinateInput = {\n  latitude: Scalars['Float'];\n  longitude: Scalars['Float'];\n};\n\nexport type ComponentFeatureFeature = {\n  __typename?: 'ComponentFeatureFeature';\n  id: Scalars['ID'];\n  _id: Scalars['ID'];\n  feature?: Maybe<Feature>;\n  included?: Maybe<Scalars['Boolean']>;\n};\n\nexport type ComponentFeatureFeatureInput = {\n  feature?: Maybe<Scalars['ID']>;\n  included?: Maybe<Scalars['Boolean']>;\n};\n\nexport type ComponentPricePrice = {\n  __typename?: 'ComponentPricePrice';\n  id: Scalars['ID'];\n  _id: Scalars['ID'];\n  basePrice: Scalars['Float'];\n  currency: Enum_Componentpriceprice_Currency;\n  basePeopleCount: Scalars['Int'];\n  extraAdultFee?: Maybe<Scalars['Float']>;\n  discount?: Maybe<Scalars['Float']>;\n};\n\nexport type ComponentPricePriceInput = {\n  basePrice: Scalars['Float'];\n  currency?: Maybe<Enum_Componentpriceprice_Currency>;\n  basePeopleCount: Scalars['Int'];\n  extraAdultFee?: Maybe<Scalars['Float']>;\n  discount?: Maybe<Scalars['Float']>;\n};\n\nexport type ComponentTimelineTimeline = {\n  __typename?: 'ComponentTimelineTimeline';\n  id: Scalars['ID'];\n  _id: Scalars['ID'];\n  day: Scalars['Int'];\n  description?: Maybe<Scalars['String']>;\n  travelTo?: Maybe<City>;\n  transportationType?: Maybe<Enum_Componenttimelinetimeline_Transportationtype>;\n  restDay?: Maybe<Scalars['Boolean']>;\n  locations?: Maybe<Array<Maybe<Location>>>;\n};\n\n\nexport type ComponentTimelineTimelineLocationsArgs = {\n  sort?: Maybe<Scalars['String']>;\n  limit?: Maybe<Scalars['Int']>;\n  start?: Maybe<Scalars['Int']>;\n  where?: Maybe<Scalars['JSON']>;\n};\n\nexport type ComponentTimelineTimelineInput = {\n  day: Scalars['Int'];\n  description?: Maybe<Scalars['String']>;\n  locations?: Maybe<Array<Maybe<Scalars['ID']>>>;\n  travelTo?: Maybe<Scalars['ID']>;\n  transportationType?: Maybe<Enum_Componenttimelinetimeline_Transportationtype>;\n  restDay?: Maybe<Scalars['Boolean']>;\n};\n\n\n\nexport enum Enum_Booking_Currency {\n  Dollar = 'dollar',\n  Lira = 'lira'\n}\n\nexport enum Enum_Booking_Userbookingstatus {\n  Initial = 'initial',\n  Confirmed = 'confirmed',\n  Canceled = 'canceled'\n}\n\nexport enum Enum_Componentpriceprice_Currency {\n  Dollar = 'dollar',\n  Lira = 'lira'\n}\n\nexport enum Enum_Componenttimelinetimeline_Transportationtype {\n  Arrival = 'arrival',\n  Departure = 'departure',\n  BetweenCities = 'betweenCities',\n  WithinCity = 'withinCity'\n}\n\nexport enum Enum_Partner_Agreementstatus {\n  Agreed = 'Agreed',\n  Discussing = 'discussing',\n  Termination = 'termination'\n}\n\nexport enum Enum_Partner_Revenuesource {\n  PricePercentage = 'pricePercentage',\n  InflatedPrice = 'inflatedPrice'\n}\n\nexport enum Enum_Trips_Currency {\n  Dollar = 'dollar',\n  Lira = 'lira'\n}\n\nexport enum Enum_Trips_Traveltype {\n  Private = 'private',\n  Public = 'public',\n  Both = 'both'\n}\n\nexport enum Enum_Trips_Trip_Type {\n  Touristic = 'touristic',\n  Medical = 'medical'\n}\n\nexport type Feature = {\n  __typename?: 'Feature';\n  id: Scalars['ID'];\n  _id: Scalars['ID'];\n  createdAt: Scalars['DateTime'];\n  updatedAt: Scalars['DateTime'];\n  name: Scalars['String'];\n  info?: Maybe<Scalars['String']>;\n  locale?: Maybe<Scalars['String']>;\n  published_at?: Maybe<Scalars['DateTime']>;\n  localizations?: Maybe<Array<Maybe<Feature>>>;\n};\n\n\nexport type FeatureLocalizationsArgs = {\n  sort?: Maybe<Scalars['String']>;\n  limit?: Maybe<Scalars['Int']>;\n  start?: Maybe<Scalars['Int']>;\n  where?: Maybe<Scalars['JSON']>;\n};\n\nexport type FeatureAggregator = {\n  __typename?: 'FeatureAggregator';\n  count?: Maybe<Scalars['Int']>;\n  totalCount?: Maybe<Scalars['Int']>;\n};\n\nexport type FeatureConnection = {\n  __typename?: 'FeatureConnection';\n  values?: Maybe<Array<Maybe<Feature>>>;\n  groupBy?: Maybe<FeatureGroupBy>;\n  aggregate?: Maybe<FeatureAggregator>;\n};\n\nexport type FeatureConnectionCreatedAt = {\n  __typename?: 'FeatureConnectionCreatedAt';\n  key?: Maybe<Scalars['DateTime']>;\n  connection?: Maybe<FeatureConnection>;\n};\n\nexport type FeatureConnectionId = {\n  __typename?: 'FeatureConnectionId';\n  key?: Maybe<Scalars['ID']>;\n  connection?: Maybe<FeatureConnection>;\n};\n\nexport type FeatureConnectionInfo = {\n  __typename?: 'FeatureConnectionInfo';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<FeatureConnection>;\n};\n\nexport type FeatureConnectionLocale = {\n  __typename?: 'FeatureConnectionLocale';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<FeatureConnection>;\n};\n\nexport type FeatureConnectionName = {\n  __typename?: 'FeatureConnectionName';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<FeatureConnection>;\n};\n\nexport type FeatureConnectionPublished_At = {\n  __typename?: 'FeatureConnectionPublished_at';\n  key?: Maybe<Scalars['DateTime']>;\n  connection?: Maybe<FeatureConnection>;\n};\n\nexport type FeatureConnectionUpdatedAt = {\n  __typename?: 'FeatureConnectionUpdatedAt';\n  key?: Maybe<Scalars['DateTime']>;\n  connection?: Maybe<FeatureConnection>;\n};\n\nexport type FeatureConnection_Id = {\n  __typename?: 'FeatureConnection_id';\n  key?: Maybe<Scalars['ID']>;\n  connection?: Maybe<FeatureConnection>;\n};\n\nexport type FeatureGroupBy = {\n  __typename?: 'FeatureGroupBy';\n  id?: Maybe<Array<Maybe<FeatureConnectionId>>>;\n  _id?: Maybe<Array<Maybe<FeatureConnection_Id>>>;\n  createdAt?: Maybe<Array<Maybe<FeatureConnectionCreatedAt>>>;\n  updatedAt?: Maybe<Array<Maybe<FeatureConnectionUpdatedAt>>>;\n  name?: Maybe<Array<Maybe<FeatureConnectionName>>>;\n  info?: Maybe<Array<Maybe<FeatureConnectionInfo>>>;\n  locale?: Maybe<Array<Maybe<FeatureConnectionLocale>>>;\n  published_at?: Maybe<Array<Maybe<FeatureConnectionPublished_At>>>;\n};\n\nexport type FeatureInput = {\n  name: Scalars['String'];\n  info?: Maybe<Scalars['String']>;\n  localizations?: Maybe<Array<Maybe<Scalars['ID']>>>;\n  locale?: Maybe<Scalars['String']>;\n  published_at?: Maybe<Scalars['DateTime']>;\n  created_by?: Maybe<Scalars['ID']>;\n  updated_by?: Maybe<Scalars['ID']>;\n};\n\nexport type FileInfoInput = {\n  name?: Maybe<Scalars['String']>;\n  alternativeText?: Maybe<Scalars['String']>;\n  caption?: Maybe<Scalars['String']>;\n};\n\nexport type FileInput = {\n  name: Scalars['String'];\n  alternativeText?: Maybe<Scalars['String']>;\n  caption?: Maybe<Scalars['String']>;\n  width?: Maybe<Scalars['Int']>;\n  height?: Maybe<Scalars['Int']>;\n  formats?: Maybe<Scalars['JSON']>;\n  hash: Scalars['String'];\n  ext?: Maybe<Scalars['String']>;\n  mime: Scalars['String'];\n  size: Scalars['Float'];\n  url: Scalars['String'];\n  previewUrl?: Maybe<Scalars['String']>;\n  provider: Scalars['String'];\n  provider_metadata?: Maybe<Scalars['JSON']>;\n  related?: Maybe<Array<Maybe<Scalars['ID']>>>;\n  created_by?: Maybe<Scalars['ID']>;\n  updated_by?: Maybe<Scalars['ID']>;\n};\n\nexport type HomeBanner = {\n  __typename?: 'HomeBanner';\n  id: Scalars['ID'];\n  _id: Scalars['ID'];\n  createdAt: Scalars['DateTime'];\n  updatedAt: Scalars['DateTime'];\n  published_at?: Maybe<Scalars['DateTime']>;\n  images?: Maybe<Array<Maybe<UploadFile>>>;\n};\n\n\nexport type HomeBannerImagesArgs = {\n  sort?: Maybe<Scalars['String']>;\n  limit?: Maybe<Scalars['Int']>;\n  start?: Maybe<Scalars['Int']>;\n  where?: Maybe<Scalars['JSON']>;\n};\n\nexport type HomeBannerInput = {\n  images?: Maybe<Array<Maybe<Scalars['ID']>>>;\n  published_at?: Maybe<Scalars['DateTime']>;\n  created_by?: Maybe<Scalars['ID']>;\n  updated_by?: Maybe<Scalars['ID']>;\n};\n\nexport type HotelInput = {\n  name: Scalars['String'];\n  stars: Scalars['Int'];\n  url?: Maybe<Scalars['String']>;\n  trips?: Maybe<Array<Maybe<Scalars['ID']>>>;\n  published_at?: Maybe<Scalars['DateTime']>;\n  created_by?: Maybe<Scalars['ID']>;\n  updated_by?: Maybe<Scalars['ID']>;\n};\n\nexport type Hotels = {\n  __typename?: 'Hotels';\n  id: Scalars['ID'];\n  _id: Scalars['ID'];\n  createdAt: Scalars['DateTime'];\n  updatedAt: Scalars['DateTime'];\n  name: Scalars['String'];\n  stars: Scalars['Int'];\n  url?: Maybe<Scalars['String']>;\n  published_at?: Maybe<Scalars['DateTime']>;\n  trips?: Maybe<Array<Maybe<Trips>>>;\n};\n\n\nexport type HotelsTripsArgs = {\n  sort?: Maybe<Scalars['String']>;\n  limit?: Maybe<Scalars['Int']>;\n  start?: Maybe<Scalars['Int']>;\n  where?: Maybe<Scalars['JSON']>;\n};\n\nexport type HotelsAggregator = {\n  __typename?: 'HotelsAggregator';\n  count?: Maybe<Scalars['Int']>;\n  totalCount?: Maybe<Scalars['Int']>;\n  sum?: Maybe<HotelsAggregatorSum>;\n  avg?: Maybe<HotelsAggregatorAvg>;\n  min?: Maybe<HotelsAggregatorMin>;\n  max?: Maybe<HotelsAggregatorMax>;\n};\n\nexport type HotelsAggregatorAvg = {\n  __typename?: 'HotelsAggregatorAvg';\n  stars?: Maybe<Scalars['Float']>;\n};\n\nexport type HotelsAggregatorMax = {\n  __typename?: 'HotelsAggregatorMax';\n  stars?: Maybe<Scalars['Float']>;\n};\n\nexport type HotelsAggregatorMin = {\n  __typename?: 'HotelsAggregatorMin';\n  stars?: Maybe<Scalars['Float']>;\n};\n\nexport type HotelsAggregatorSum = {\n  __typename?: 'HotelsAggregatorSum';\n  stars?: Maybe<Scalars['Float']>;\n};\n\nexport type HotelsConnection = {\n  __typename?: 'HotelsConnection';\n  values?: Maybe<Array<Maybe<Hotels>>>;\n  groupBy?: Maybe<HotelsGroupBy>;\n  aggregate?: Maybe<HotelsAggregator>;\n};\n\nexport type HotelsConnectionCreatedAt = {\n  __typename?: 'HotelsConnectionCreatedAt';\n  key?: Maybe<Scalars['DateTime']>;\n  connection?: Maybe<HotelsConnection>;\n};\n\nexport type HotelsConnectionId = {\n  __typename?: 'HotelsConnectionId';\n  key?: Maybe<Scalars['ID']>;\n  connection?: Maybe<HotelsConnection>;\n};\n\nexport type HotelsConnectionName = {\n  __typename?: 'HotelsConnectionName';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<HotelsConnection>;\n};\n\nexport type HotelsConnectionPublished_At = {\n  __typename?: 'HotelsConnectionPublished_at';\n  key?: Maybe<Scalars['DateTime']>;\n  connection?: Maybe<HotelsConnection>;\n};\n\nexport type HotelsConnectionStars = {\n  __typename?: 'HotelsConnectionStars';\n  key?: Maybe<Scalars['Int']>;\n  connection?: Maybe<HotelsConnection>;\n};\n\nexport type HotelsConnectionUpdatedAt = {\n  __typename?: 'HotelsConnectionUpdatedAt';\n  key?: Maybe<Scalars['DateTime']>;\n  connection?: Maybe<HotelsConnection>;\n};\n\nexport type HotelsConnectionUrl = {\n  __typename?: 'HotelsConnectionUrl';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<HotelsConnection>;\n};\n\nexport type HotelsConnection_Id = {\n  __typename?: 'HotelsConnection_id';\n  key?: Maybe<Scalars['ID']>;\n  connection?: Maybe<HotelsConnection>;\n};\n\nexport type HotelsGroupBy = {\n  __typename?: 'HotelsGroupBy';\n  id?: Maybe<Array<Maybe<HotelsConnectionId>>>;\n  _id?: Maybe<Array<Maybe<HotelsConnection_Id>>>;\n  createdAt?: Maybe<Array<Maybe<HotelsConnectionCreatedAt>>>;\n  updatedAt?: Maybe<Array<Maybe<HotelsConnectionUpdatedAt>>>;\n  name?: Maybe<Array<Maybe<HotelsConnectionName>>>;\n  stars?: Maybe<Array<Maybe<HotelsConnectionStars>>>;\n  url?: Maybe<Array<Maybe<HotelsConnectionUrl>>>;\n  published_at?: Maybe<Array<Maybe<HotelsConnectionPublished_At>>>;\n};\n\nexport type I18NLocale = {\n  __typename?: 'I18NLocale';\n  id: Scalars['ID'];\n  _id: Scalars['ID'];\n  createdAt: Scalars['DateTime'];\n  updatedAt: Scalars['DateTime'];\n  name?: Maybe<Scalars['String']>;\n  code?: Maybe<Scalars['String']>;\n};\n\nexport type InputId = {\n  id: Scalars['ID'];\n};\n\n\nexport type LocaleInput = {\n  name?: Maybe<Scalars['String']>;\n  code?: Maybe<Scalars['String']>;\n  created_by?: Maybe<Scalars['ID']>;\n  updated_by?: Maybe<Scalars['ID']>;\n};\n\nexport type Location = {\n  __typename?: 'Location';\n  id: Scalars['ID'];\n  _id: Scalars['ID'];\n  createdAt: Scalars['DateTime'];\n  updatedAt: Scalars['DateTime'];\n  name: Scalars['String'];\n  description?: Maybe<Scalars['String']>;\n  city?: Maybe<City>;\n  coordinate?: Maybe<ComponentCoordinateCoordinate>;\n  locale?: Maybe<Scalars['String']>;\n  published_at?: Maybe<Scalars['DateTime']>;\n  images?: Maybe<Array<Maybe<UploadFile>>>;\n  localizations?: Maybe<Array<Maybe<Location>>>;\n};\n\n\nexport type LocationImagesArgs = {\n  sort?: Maybe<Scalars['String']>;\n  limit?: Maybe<Scalars['Int']>;\n  start?: Maybe<Scalars['Int']>;\n  where?: Maybe<Scalars['JSON']>;\n};\n\n\nexport type LocationLocalizationsArgs = {\n  sort?: Maybe<Scalars['String']>;\n  limit?: Maybe<Scalars['Int']>;\n  start?: Maybe<Scalars['Int']>;\n  where?: Maybe<Scalars['JSON']>;\n};\n\nexport type LocationAggregator = {\n  __typename?: 'LocationAggregator';\n  count?: Maybe<Scalars['Int']>;\n  totalCount?: Maybe<Scalars['Int']>;\n};\n\nexport type LocationConnection = {\n  __typename?: 'LocationConnection';\n  values?: Maybe<Array<Maybe<Location>>>;\n  groupBy?: Maybe<LocationGroupBy>;\n  aggregate?: Maybe<LocationAggregator>;\n};\n\nexport type LocationConnectionCity = {\n  __typename?: 'LocationConnectionCity';\n  key?: Maybe<Scalars['ID']>;\n  connection?: Maybe<LocationConnection>;\n};\n\nexport type LocationConnectionCoordinate = {\n  __typename?: 'LocationConnectionCoordinate';\n  key?: Maybe<Scalars['ID']>;\n  connection?: Maybe<LocationConnection>;\n};\n\nexport type LocationConnectionCreatedAt = {\n  __typename?: 'LocationConnectionCreatedAt';\n  key?: Maybe<Scalars['DateTime']>;\n  connection?: Maybe<LocationConnection>;\n};\n\nexport type LocationConnectionDescription = {\n  __typename?: 'LocationConnectionDescription';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<LocationConnection>;\n};\n\nexport type LocationConnectionId = {\n  __typename?: 'LocationConnectionId';\n  key?: Maybe<Scalars['ID']>;\n  connection?: Maybe<LocationConnection>;\n};\n\nexport type LocationConnectionLocale = {\n  __typename?: 'LocationConnectionLocale';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<LocationConnection>;\n};\n\nexport type LocationConnectionName = {\n  __typename?: 'LocationConnectionName';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<LocationConnection>;\n};\n\nexport type LocationConnectionPublished_At = {\n  __typename?: 'LocationConnectionPublished_at';\n  key?: Maybe<Scalars['DateTime']>;\n  connection?: Maybe<LocationConnection>;\n};\n\nexport type LocationConnectionUpdatedAt = {\n  __typename?: 'LocationConnectionUpdatedAt';\n  key?: Maybe<Scalars['DateTime']>;\n  connection?: Maybe<LocationConnection>;\n};\n\nexport type LocationConnection_Id = {\n  __typename?: 'LocationConnection_id';\n  key?: Maybe<Scalars['ID']>;\n  connection?: Maybe<LocationConnection>;\n};\n\nexport type LocationGroupBy = {\n  __typename?: 'LocationGroupBy';\n  id?: Maybe<Array<Maybe<LocationConnectionId>>>;\n  _id?: Maybe<Array<Maybe<LocationConnection_Id>>>;\n  createdAt?: Maybe<Array<Maybe<LocationConnectionCreatedAt>>>;\n  updatedAt?: Maybe<Array<Maybe<LocationConnectionUpdatedAt>>>;\n  name?: Maybe<Array<Maybe<LocationConnectionName>>>;\n  description?: Maybe<Array<Maybe<LocationConnectionDescription>>>;\n  city?: Maybe<Array<Maybe<LocationConnectionCity>>>;\n  coordinate?: Maybe<Array<Maybe<LocationConnectionCoordinate>>>;\n  locale?: Maybe<Array<Maybe<LocationConnectionLocale>>>;\n  published_at?: Maybe<Array<Maybe<LocationConnectionPublished_At>>>;\n};\n\nexport type LocationInput = {\n  name: Scalars['String'];\n  description?: Maybe<Scalars['String']>;\n  images?: Maybe<Array<Maybe<Scalars['ID']>>>;\n  city?: Maybe<Scalars['ID']>;\n  coordinate?: Maybe<ComponentCoordinateCoordinateInput>;\n  localizations?: Maybe<Array<Maybe<Scalars['ID']>>>;\n  locale?: Maybe<Scalars['String']>;\n  published_at?: Maybe<Scalars['DateTime']>;\n  created_by?: Maybe<Scalars['ID']>;\n  updated_by?: Maybe<Scalars['ID']>;\n};\n\n\nexport type Morph = UsersPermissionsMe | UsersPermissionsMeRole | UsersPermissionsLoginPayload | UserPermissionsPasswordPayload | Booking | BookingConnection | BookingAggregator | BookingAggregatorSum | BookingAggregatorAvg | BookingAggregatorMin | BookingAggregatorMax | BookingGroupBy | BookingConnectionId | BookingConnection_Id | BookingConnectionCreatedAt | BookingConnectionUpdatedAt | BookingConnectionTrip | BookingConnectionApproved | BookingConnectionBasePrice | BookingConnectionCurrency | BookingConnectionBasePeopleCount | BookingConnectionDiscount | BookingConnectionFullName | BookingConnectionPhone | BookingConnectionMessage | BookingConnectionArrivalDate | BookingConnectionLanguage | BookingConnectionUserBookingStatus | BookingConnectionEmail | BookingConnectionAdults | BookingConnectionChildren | BookingConnectionTotalPrice | BookingConnectionPublished_At | CreateBookingPayload | UpdateBookingPayload | DeleteBookingPayload | City | CityConnection | CityAggregator | CityGroupBy | CityConnectionId | CityConnection_Id | CityConnectionCreatedAt | CityConnectionUpdatedAt | CityConnectionName | CityConnectionDescription | CityConnectionImage | CityConnectionLocale | CityConnectionPublished_At | CreateCityPayload | UpdateCityPayload | DeleteCityPayload | Feature | FeatureConnection | FeatureAggregator | FeatureGroupBy | FeatureConnectionId | FeatureConnection_Id | FeatureConnectionCreatedAt | FeatureConnectionUpdatedAt | FeatureConnectionName | FeatureConnectionInfo | FeatureConnectionLocale | FeatureConnectionPublished_At | CreateFeaturePayload | UpdateFeaturePayload | DeleteFeaturePayload | HomeBanner | UpdateHomeBannerPayload | DeleteHomeBannerPayload | Hotels | HotelsConnection | HotelsAggregator | HotelsAggregatorSum | HotelsAggregatorAvg | HotelsAggregatorMin | HotelsAggregatorMax | HotelsGroupBy | HotelsConnectionId | HotelsConnection_Id | HotelsConnectionCreatedAt | HotelsConnectionUpdatedAt | HotelsConnectionName | HotelsConnectionStars | HotelsConnectionUrl | HotelsConnectionPublished_At | CreateHotelPayload | UpdateHotelPayload | DeleteHotelPayload | Location | LocationConnection | LocationAggregator | LocationGroupBy | LocationConnectionId | LocationConnection_Id | LocationConnectionCreatedAt | LocationConnectionUpdatedAt | LocationConnectionName | LocationConnectionDescription | LocationConnectionCity | LocationConnectionCoordinate | LocationConnectionLocale | LocationConnectionPublished_At | CreateLocationPayload | UpdateLocationPayload | DeleteLocationPayload | Partner | PartnerConnection | PartnerAggregator | PartnerAggregatorSum | PartnerAggregatorAvg | PartnerAggregatorMin | PartnerAggregatorMax | PartnerGroupBy | PartnerConnectionId | PartnerConnection_Id | PartnerConnectionCreatedAt | PartnerConnectionUpdatedAt | PartnerConnectionName | PartnerConnectionPhone | PartnerConnectionAddress | PartnerConnectionEmail | PartnerConnectionAgreement | PartnerConnectionCommission | PartnerConnectionRevenueSource | PartnerConnectionAgreementStatus | PartnerConnectionNotes | PartnerConnectionPhone2 | PartnerConnectionPublished_At | CreatePartnerPayload | UpdatePartnerPayload | DeletePartnerPayload | Review | ReviewConnection | ReviewAggregator | ReviewAggregatorSum | ReviewAggregatorAvg | ReviewAggregatorMin | ReviewAggregatorMax | ReviewGroupBy | ReviewConnectionId | ReviewConnection_Id | ReviewConnectionCreatedAt | ReviewConnectionUpdatedAt | ReviewConnectionText | ReviewConnectionRating | ReviewConnectionAuthor | ReviewConnectionActive | ReviewConnectionTrip | ReviewConnectionPublished_At | CreateReviewPayload | UpdateReviewPayload | DeleteReviewPayload | Subscribers | SubscribersConnection | SubscribersAggregator | SubscribersGroupBy | SubscribersConnectionId | SubscribersConnection_Id | SubscribersConnectionCreatedAt | SubscribersConnectionUpdatedAt | SubscribersConnectionEmail | SubscribersConnectionPublished_At | CreateSubscriberPayload | UpdateSubscriberPayload | DeleteSubscriberPayload | Trips | TripsConnection | TripsAggregator | TripsAggregatorSum | TripsAggregatorAvg | TripsAggregatorMin | TripsAggregatorMax | TripsGroupBy | TripsConnectionId | TripsConnection_Id | TripsConnectionCreatedAt | TripsConnectionUpdatedAt | TripsConnectionName | TripsConnectionPreviewImage | TripsConnectionActive | TripsConnectionTrip_Type | TripsConnectionDescription | TripsConnectionDuration | TripsConnectionPartner | TripsConnectionCurrency | TripsConnectionCity | TripsConnectionBasePrice | TripsConnectionBasePeopleCount | TripsConnectionDiscount | TripsConnectionTravelType | TripsConnectionHotel | TripsConnectionLocale | TripsConnectionPublished_At | CreateTripPayload | UpdateTripPayload | DeleteTripPayload | I18NLocale | UploadFile | UploadFileConnection | UploadFileAggregator | UploadFileAggregatorSum | UploadFileAggregatorAvg | UploadFileAggregatorMin | UploadFileAggregatorMax | UploadFileGroupBy | UploadFileConnectionId | UploadFileConnection_Id | UploadFileConnectionCreatedAt | UploadFileConnectionUpdatedAt | UploadFileConnectionName | UploadFileConnectionAlternativeText | UploadFileConnectionCaption | UploadFileConnectionWidth | UploadFileConnectionHeight | UploadFileConnectionFormats | UploadFileConnectionHash | UploadFileConnectionExt | UploadFileConnectionMime | UploadFileConnectionSize | UploadFileConnectionUrl | UploadFileConnectionPreviewUrl | UploadFileConnectionProvider | UploadFileConnectionProvider_Metadata | DeleteFilePayload | UsersPermissionsPermission | UsersPermissionsRole | UsersPermissionsRoleConnection | UsersPermissionsRoleAggregator | UsersPermissionsRoleGroupBy | UsersPermissionsRoleConnectionId | UsersPermissionsRoleConnection_Id | UsersPermissionsRoleConnectionName | UsersPermissionsRoleConnectionDescription | UsersPermissionsRoleConnectionType | CreateRolePayload | UpdateRolePayload | DeleteRolePayload | UsersPermissionsUser | UsersPermissionsUserConnection | UsersPermissionsUserAggregator | UsersPermissionsUserGroupBy | UsersPermissionsUserConnectionId | UsersPermissionsUserConnection_Id | UsersPermissionsUserConnectionCreatedAt | UsersPermissionsUserConnectionUpdatedAt | UsersPermissionsUserConnectionUsername | UsersPermissionsUserConnectionEmail | UsersPermissionsUserConnectionProvider | UsersPermissionsUserConnectionConfirmed | UsersPermissionsUserConnectionBlocked | UsersPermissionsUserConnectionRole | CreateUserPayload | UpdateUserPayload | DeleteUserPayload | ComponentCoordinateCoordinate | ComponentFeatureFeature | ComponentPricePrice | ComponentTimelineTimeline;\n\nexport type Mutation = {\n  __typename?: 'Mutation';\n  createBooking?: Maybe<CreateBookingPayload>;\n  updateBooking?: Maybe<UpdateBookingPayload>;\n  deleteBooking?: Maybe<DeleteBookingPayload>;\n  createCity?: Maybe<CreateCityPayload>;\n  updateCity?: Maybe<UpdateCityPayload>;\n  deleteCity?: Maybe<DeleteCityPayload>;\n  createFeature?: Maybe<CreateFeaturePayload>;\n  updateFeature?: Maybe<UpdateFeaturePayload>;\n  deleteFeature?: Maybe<DeleteFeaturePayload>;\n  updateHomeBanner?: Maybe<UpdateHomeBannerPayload>;\n  deleteHomeBanner?: Maybe<DeleteHomeBannerPayload>;\n  createHotel?: Maybe<CreateHotelPayload>;\n  updateHotel?: Maybe<UpdateHotelPayload>;\n  deleteHotel?: Maybe<DeleteHotelPayload>;\n  createLocation?: Maybe<CreateLocationPayload>;\n  updateLocation?: Maybe<UpdateLocationPayload>;\n  deleteLocation?: Maybe<DeleteLocationPayload>;\n  createPartner?: Maybe<CreatePartnerPayload>;\n  updatePartner?: Maybe<UpdatePartnerPayload>;\n  deletePartner?: Maybe<DeletePartnerPayload>;\n  createReview?: Maybe<CreateReviewPayload>;\n  updateReview?: Maybe<UpdateReviewPayload>;\n  deleteReview?: Maybe<DeleteReviewPayload>;\n  createSubscriber?: Maybe<CreateSubscriberPayload>;\n  updateSubscriber?: Maybe<UpdateSubscriberPayload>;\n  deleteSubscriber?: Maybe<DeleteSubscriberPayload>;\n  createTrip?: Maybe<CreateTripPayload>;\n  updateTrip?: Maybe<UpdateTripPayload>;\n  deleteTrip?: Maybe<DeleteTripPayload>;\n  /** Delete one file */\n  deleteFile?: Maybe<DeleteFilePayload>;\n  /** Create a new role */\n  createRole?: Maybe<CreateRolePayload>;\n  /** Update an existing role */\n  updateRole?: Maybe<UpdateRolePayload>;\n  /** Delete an existing role */\n  deleteRole?: Maybe<DeleteRolePayload>;\n  /** Create a new user */\n  createUser?: Maybe<CreateUserPayload>;\n  /** Update an existing user */\n  updateUser?: Maybe<UpdateUserPayload>;\n  /** Delete an existing user */\n  deleteUser?: Maybe<DeleteUserPayload>;\n  createCityLocalization: City;\n  createFeatureLocalization: Feature;\n  createLocationLocalization: Location;\n  createTripLocalization: Trips;\n  upload: UploadFile;\n  multipleUpload: Array<Maybe<UploadFile>>;\n  updateFileInfo: UploadFile;\n  login: UsersPermissionsLoginPayload;\n  register: UsersPermissionsLoginPayload;\n  forgotPassword?: Maybe<UserPermissionsPasswordPayload>;\n  resetPassword?: Maybe<UsersPermissionsLoginPayload>;\n  emailConfirmation?: Maybe<UsersPermissionsLoginPayload>;\n};\n\n\nexport type MutationCreateBookingArgs = {\n  input?: Maybe<CreateBookingInput>;\n};\n\n\nexport type MutationUpdateBookingArgs = {\n  input?: Maybe<UpdateBookingInput>;\n};\n\n\nexport type MutationDeleteBookingArgs = {\n  input?: Maybe<DeleteBookingInput>;\n};\n\n\nexport type MutationCreateCityArgs = {\n  input?: Maybe<CreateCityInput>;\n};\n\n\nexport type MutationUpdateCityArgs = {\n  input?: Maybe<UpdateCityInput>;\n};\n\n\nexport type MutationDeleteCityArgs = {\n  input?: Maybe<DeleteCityInput>;\n};\n\n\nexport type MutationCreateFeatureArgs = {\n  input?: Maybe<CreateFeatureInput>;\n};\n\n\nexport type MutationUpdateFeatureArgs = {\n  input?: Maybe<UpdateFeatureInput>;\n};\n\n\nexport type MutationDeleteFeatureArgs = {\n  input?: Maybe<DeleteFeatureInput>;\n};\n\n\nexport type MutationUpdateHomeBannerArgs = {\n  input?: Maybe<UpdateHomeBannerInput>;\n};\n\n\nexport type MutationCreateHotelArgs = {\n  input?: Maybe<CreateHotelInput>;\n};\n\n\nexport type MutationUpdateHotelArgs = {\n  input?: Maybe<UpdateHotelInput>;\n};\n\n\nexport type MutationDeleteHotelArgs = {\n  input?: Maybe<DeleteHotelInput>;\n};\n\n\nexport type MutationCreateLocationArgs = {\n  input?: Maybe<CreateLocationInput>;\n};\n\n\nexport type MutationUpdateLocationArgs = {\n  input?: Maybe<UpdateLocationInput>;\n};\n\n\nexport type MutationDeleteLocationArgs = {\n  input?: Maybe<DeleteLocationInput>;\n};\n\n\nexport type MutationCreatePartnerArgs = {\n  input?: Maybe<CreatePartnerInput>;\n};\n\n\nexport type MutationUpdatePartnerArgs = {\n  input?: Maybe<UpdatePartnerInput>;\n};\n\n\nexport type MutationDeletePartnerArgs = {\n  input?: Maybe<DeletePartnerInput>;\n};\n\n\nexport type MutationCreateReviewArgs = {\n  input?: Maybe<CreateReviewInput>;\n};\n\n\nexport type MutationUpdateReviewArgs = {\n  input?: Maybe<UpdateReviewInput>;\n};\n\n\nexport type MutationDeleteReviewArgs = {\n  input?: Maybe<DeleteReviewInput>;\n};\n\n\nexport type MutationCreateSubscriberArgs = {\n  input?: Maybe<CreateSubscriberInput>;\n};\n\n\nexport type MutationUpdateSubscriberArgs = {\n  input?: Maybe<UpdateSubscriberInput>;\n};\n\n\nexport type MutationDeleteSubscriberArgs = {\n  input?: Maybe<DeleteSubscriberInput>;\n};\n\n\nexport type MutationCreateTripArgs = {\n  input?: Maybe<CreateTripInput>;\n};\n\n\nexport type MutationUpdateTripArgs = {\n  input?: Maybe<UpdateTripInput>;\n};\n\n\nexport type MutationDeleteTripArgs = {\n  input?: Maybe<DeleteTripInput>;\n};\n\n\nexport type MutationDeleteFileArgs = {\n  input?: Maybe<DeleteFileInput>;\n};\n\n\nexport type MutationCreateRoleArgs = {\n  input?: Maybe<CreateRoleInput>;\n};\n\n\nexport type MutationUpdateRoleArgs = {\n  input?: Maybe<UpdateRoleInput>;\n};\n\n\nexport type MutationDeleteRoleArgs = {\n  input?: Maybe<DeleteRoleInput>;\n};\n\n\nexport type MutationCreateUserArgs = {\n  input?: Maybe<CreateUserInput>;\n};\n\n\nexport type MutationUpdateUserArgs = {\n  input?: Maybe<UpdateUserInput>;\n};\n\n\nexport type MutationDeleteUserArgs = {\n  input?: Maybe<DeleteUserInput>;\n};\n\n\nexport type MutationCreateCityLocalizationArgs = {\n  input: UpdateCityInput;\n};\n\n\nexport type MutationCreateFeatureLocalizationArgs = {\n  input: UpdateFeatureInput;\n};\n\n\nexport type MutationCreateLocationLocalizationArgs = {\n  input: UpdateLocationInput;\n};\n\n\nexport type MutationCreateTripLocalizationArgs = {\n  input: UpdateTripInput;\n};\n\n\nexport type MutationUploadArgs = {\n  refId?: Maybe<Scalars['ID']>;\n  ref?: Maybe<Scalars['String']>;\n  field?: Maybe<Scalars['String']>;\n  source?: Maybe<Scalars['String']>;\n  info?: Maybe<FileInfoInput>;\n  file: Scalars['Upload'];\n};\n\n\nexport type MutationMultipleUploadArgs = {\n  refId?: Maybe<Scalars['ID']>;\n  ref?: Maybe<Scalars['String']>;\n  field?: Maybe<Scalars['String']>;\n  source?: Maybe<Scalars['String']>;\n  files: Array<Maybe<Scalars['Upload']>>;\n};\n\n\nexport type MutationUpdateFileInfoArgs = {\n  id: Scalars['ID'];\n  info: FileInfoInput;\n};\n\n\nexport type MutationLoginArgs = {\n  input: UsersPermissionsLoginInput;\n};\n\n\nexport type MutationRegisterArgs = {\n  input: UsersPermissionsRegisterInput;\n};\n\n\nexport type MutationForgotPasswordArgs = {\n  email: Scalars['String'];\n};\n\n\nexport type MutationResetPasswordArgs = {\n  password: Scalars['String'];\n  passwordConfirmation: Scalars['String'];\n  code: Scalars['String'];\n};\n\n\nexport type MutationEmailConfirmationArgs = {\n  confirmation: Scalars['String'];\n};\n\nexport type Partner = {\n  __typename?: 'Partner';\n  id: Scalars['ID'];\n  _id: Scalars['ID'];\n  createdAt: Scalars['DateTime'];\n  updatedAt: Scalars['DateTime'];\n  name: Scalars['String'];\n  phone: Scalars['String'];\n  address?: Maybe<Scalars['String']>;\n  email?: Maybe<Scalars['String']>;\n  agreement?: Maybe<Scalars['String']>;\n  commission: Scalars['Float'];\n  revenueSource: Enum_Partner_Revenuesource;\n  agreementStatus: Enum_Partner_Agreementstatus;\n  notes?: Maybe<Scalars['String']>;\n  phone2?: Maybe<Scalars['String']>;\n  published_at?: Maybe<Scalars['DateTime']>;\n  trips?: Maybe<Array<Maybe<Trips>>>;\n};\n\n\nexport type PartnerTripsArgs = {\n  sort?: Maybe<Scalars['String']>;\n  limit?: Maybe<Scalars['Int']>;\n  start?: Maybe<Scalars['Int']>;\n  where?: Maybe<Scalars['JSON']>;\n};\n\nexport type PartnerAggregator = {\n  __typename?: 'PartnerAggregator';\n  count?: Maybe<Scalars['Int']>;\n  totalCount?: Maybe<Scalars['Int']>;\n  sum?: Maybe<PartnerAggregatorSum>;\n  avg?: Maybe<PartnerAggregatorAvg>;\n  min?: Maybe<PartnerAggregatorMin>;\n  max?: Maybe<PartnerAggregatorMax>;\n};\n\nexport type PartnerAggregatorAvg = {\n  __typename?: 'PartnerAggregatorAvg';\n  commission?: Maybe<Scalars['Float']>;\n};\n\nexport type PartnerAggregatorMax = {\n  __typename?: 'PartnerAggregatorMax';\n  commission?: Maybe<Scalars['Float']>;\n};\n\nexport type PartnerAggregatorMin = {\n  __typename?: 'PartnerAggregatorMin';\n  commission?: Maybe<Scalars['Float']>;\n};\n\nexport type PartnerAggregatorSum = {\n  __typename?: 'PartnerAggregatorSum';\n  commission?: Maybe<Scalars['Float']>;\n};\n\nexport type PartnerConnection = {\n  __typename?: 'PartnerConnection';\n  values?: Maybe<Array<Maybe<Partner>>>;\n  groupBy?: Maybe<PartnerGroupBy>;\n  aggregate?: Maybe<PartnerAggregator>;\n};\n\nexport type PartnerConnectionAddress = {\n  __typename?: 'PartnerConnectionAddress';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<PartnerConnection>;\n};\n\nexport type PartnerConnectionAgreement = {\n  __typename?: 'PartnerConnectionAgreement';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<PartnerConnection>;\n};\n\nexport type PartnerConnectionAgreementStatus = {\n  __typename?: 'PartnerConnectionAgreementStatus';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<PartnerConnection>;\n};\n\nexport type PartnerConnectionCommission = {\n  __typename?: 'PartnerConnectionCommission';\n  key?: Maybe<Scalars['Float']>;\n  connection?: Maybe<PartnerConnection>;\n};\n\nexport type PartnerConnectionCreatedAt = {\n  __typename?: 'PartnerConnectionCreatedAt';\n  key?: Maybe<Scalars['DateTime']>;\n  connection?: Maybe<PartnerConnection>;\n};\n\nexport type PartnerConnectionEmail = {\n  __typename?: 'PartnerConnectionEmail';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<PartnerConnection>;\n};\n\nexport type PartnerConnectionId = {\n  __typename?: 'PartnerConnectionId';\n  key?: Maybe<Scalars['ID']>;\n  connection?: Maybe<PartnerConnection>;\n};\n\nexport type PartnerConnectionName = {\n  __typename?: 'PartnerConnectionName';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<PartnerConnection>;\n};\n\nexport type PartnerConnectionNotes = {\n  __typename?: 'PartnerConnectionNotes';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<PartnerConnection>;\n};\n\nexport type PartnerConnectionPhone = {\n  __typename?: 'PartnerConnectionPhone';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<PartnerConnection>;\n};\n\nexport type PartnerConnectionPhone2 = {\n  __typename?: 'PartnerConnectionPhone2';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<PartnerConnection>;\n};\n\nexport type PartnerConnectionPublished_At = {\n  __typename?: 'PartnerConnectionPublished_at';\n  key?: Maybe<Scalars['DateTime']>;\n  connection?: Maybe<PartnerConnection>;\n};\n\nexport type PartnerConnectionRevenueSource = {\n  __typename?: 'PartnerConnectionRevenueSource';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<PartnerConnection>;\n};\n\nexport type PartnerConnectionUpdatedAt = {\n  __typename?: 'PartnerConnectionUpdatedAt';\n  key?: Maybe<Scalars['DateTime']>;\n  connection?: Maybe<PartnerConnection>;\n};\n\nexport type PartnerConnection_Id = {\n  __typename?: 'PartnerConnection_id';\n  key?: Maybe<Scalars['ID']>;\n  connection?: Maybe<PartnerConnection>;\n};\n\nexport type PartnerGroupBy = {\n  __typename?: 'PartnerGroupBy';\n  id?: Maybe<Array<Maybe<PartnerConnectionId>>>;\n  _id?: Maybe<Array<Maybe<PartnerConnection_Id>>>;\n  createdAt?: Maybe<Array<Maybe<PartnerConnectionCreatedAt>>>;\n  updatedAt?: Maybe<Array<Maybe<PartnerConnectionUpdatedAt>>>;\n  name?: Maybe<Array<Maybe<PartnerConnectionName>>>;\n  phone?: Maybe<Array<Maybe<PartnerConnectionPhone>>>;\n  address?: Maybe<Array<Maybe<PartnerConnectionAddress>>>;\n  email?: Maybe<Array<Maybe<PartnerConnectionEmail>>>;\n  agreement?: Maybe<Array<Maybe<PartnerConnectionAgreement>>>;\n  commission?: Maybe<Array<Maybe<PartnerConnectionCommission>>>;\n  revenueSource?: Maybe<Array<Maybe<PartnerConnectionRevenueSource>>>;\n  agreementStatus?: Maybe<Array<Maybe<PartnerConnectionAgreementStatus>>>;\n  notes?: Maybe<Array<Maybe<PartnerConnectionNotes>>>;\n  phone2?: Maybe<Array<Maybe<PartnerConnectionPhone2>>>;\n  published_at?: Maybe<Array<Maybe<PartnerConnectionPublished_At>>>;\n};\n\nexport type PartnerInput = {\n  name: Scalars['String'];\n  phone: Scalars['String'];\n  address?: Maybe<Scalars['String']>;\n  email?: Maybe<Scalars['String']>;\n  trips?: Maybe<Array<Maybe<Scalars['ID']>>>;\n  agreement?: Maybe<Scalars['String']>;\n  commission: Scalars['Float'];\n  revenueSource: Enum_Partner_Revenuesource;\n  agreementStatus: Enum_Partner_Agreementstatus;\n  notes?: Maybe<Scalars['String']>;\n  phone2?: Maybe<Scalars['String']>;\n  published_at?: Maybe<Scalars['DateTime']>;\n  created_by?: Maybe<Scalars['ID']>;\n  updated_by?: Maybe<Scalars['ID']>;\n};\n\nexport enum PublicationState {\n  Live = 'LIVE',\n  Preview = 'PREVIEW'\n}\n\nexport type Query = {\n  __typename?: 'Query';\n  booking?: Maybe<Booking>;\n  bookings?: Maybe<Array<Maybe<Booking>>>;\n  bookingsConnection?: Maybe<BookingConnection>;\n  city?: Maybe<City>;\n  cities?: Maybe<Array<Maybe<City>>>;\n  citiesConnection?: Maybe<CityConnection>;\n  feature?: Maybe<Feature>;\n  features?: Maybe<Array<Maybe<Feature>>>;\n  featuresConnection?: Maybe<FeatureConnection>;\n  homeBanner?: Maybe<HomeBanner>;\n  hotel?: Maybe<Hotels>;\n  hotels?: Maybe<Array<Maybe<Hotels>>>;\n  hotelsConnection?: Maybe<HotelsConnection>;\n  location?: Maybe<Location>;\n  locations?: Maybe<Array<Maybe<Location>>>;\n  locationsConnection?: Maybe<LocationConnection>;\n  partner?: Maybe<Partner>;\n  partners?: Maybe<Array<Maybe<Partner>>>;\n  partnersConnection?: Maybe<PartnerConnection>;\n  review?: Maybe<Review>;\n  reviews?: Maybe<Array<Maybe<Review>>>;\n  reviewsConnection?: Maybe<ReviewConnection>;\n  subscriber?: Maybe<Subscribers>;\n  subscribers?: Maybe<Array<Maybe<Subscribers>>>;\n  subscribersConnection?: Maybe<SubscribersConnection>;\n  trip?: Maybe<Trips>;\n  trips?: Maybe<Array<Maybe<Trips>>>;\n  tripsConnection?: Maybe<TripsConnection>;\n  files?: Maybe<Array<Maybe<UploadFile>>>;\n  filesConnection?: Maybe<UploadFileConnection>;\n  role?: Maybe<UsersPermissionsRole>;\n  /** Retrieve all the existing roles. You can't apply filters on this query. */\n  roles?: Maybe<Array<Maybe<UsersPermissionsRole>>>;\n  rolesConnection?: Maybe<UsersPermissionsRoleConnection>;\n  user?: Maybe<UsersPermissionsUser>;\n  users?: Maybe<Array<Maybe<UsersPermissionsUser>>>;\n  usersConnection?: Maybe<UsersPermissionsUserConnection>;\n  me?: Maybe<UsersPermissionsMe>;\n};\n\n\nexport type QueryBookingArgs = {\n  id: Scalars['ID'];\n  publicationState?: Maybe<PublicationState>;\n};\n\n\nexport type QueryBookingsArgs = {\n  sort?: Maybe<Scalars['String']>;\n  limit?: Maybe<Scalars['Int']>;\n  start?: Maybe<Scalars['Int']>;\n  where?: Maybe<Scalars['JSON']>;\n  publicationState?: Maybe<PublicationState>;\n};\n\n\nexport type QueryBookingsConnectionArgs = {\n  sort?: Maybe<Scalars['String']>;\n  limit?: Maybe<Scalars['Int']>;\n  start?: Maybe<Scalars['Int']>;\n  where?: Maybe<Scalars['JSON']>;\n};\n\n\nexport type QueryCityArgs = {\n  id: Scalars['ID'];\n  publicationState?: Maybe<PublicationState>;\n};\n\n\nexport type QueryCitiesArgs = {\n  sort?: Maybe<Scalars['String']>;\n  limit?: Maybe<Scalars['Int']>;\n  start?: Maybe<Scalars['Int']>;\n  where?: Maybe<Scalars['JSON']>;\n  publicationState?: Maybe<PublicationState>;\n  locale?: Maybe<Scalars['String']>;\n};\n\n\nexport type QueryCitiesConnectionArgs = {\n  sort?: Maybe<Scalars['String']>;\n  limit?: Maybe<Scalars['Int']>;\n  start?: Maybe<Scalars['Int']>;\n  where?: Maybe<Scalars['JSON']>;\n  locale?: Maybe<Scalars['String']>;\n};\n\n\nexport type QueryFeatureArgs = {\n  id: Scalars['ID'];\n  publicationState?: Maybe<PublicationState>;\n};\n\n\nexport type QueryFeaturesArgs = {\n  sort?: Maybe<Scalars['String']>;\n  limit?: Maybe<Scalars['Int']>;\n  start?: Maybe<Scalars['Int']>;\n  where?: Maybe<Scalars['JSON']>;\n  publicationState?: Maybe<PublicationState>;\n  locale?: Maybe<Scalars['String']>;\n};\n\n\nexport type QueryFeaturesConnectionArgs = {\n  sort?: Maybe<Scalars['String']>;\n  limit?: Maybe<Scalars['Int']>;\n  start?: Maybe<Scalars['Int']>;\n  where?: Maybe<Scalars['JSON']>;\n  locale?: Maybe<Scalars['String']>;\n};\n\n\nexport type QueryHomeBannerArgs = {\n  publicationState?: Maybe<PublicationState>;\n};\n\n\nexport type QueryHotelArgs = {\n  id: Scalars['ID'];\n  publicationState?: Maybe<PublicationState>;\n};\n\n\nexport type QueryHotelsArgs = {\n  sort?: Maybe<Scalars['String']>;\n  limit?: Maybe<Scalars['Int']>;\n  start?: Maybe<Scalars['Int']>;\n  where?: Maybe<Scalars['JSON']>;\n  publicationState?: Maybe<PublicationState>;\n};\n\n\nexport type QueryHotelsConnectionArgs = {\n  sort?: Maybe<Scalars['String']>;\n  limit?: Maybe<Scalars['Int']>;\n  start?: Maybe<Scalars['Int']>;\n  where?: Maybe<Scalars['JSON']>;\n};\n\n\nexport type QueryLocationArgs = {\n  id: Scalars['ID'];\n  publicationState?: Maybe<PublicationState>;\n};\n\n\nexport type QueryLocationsArgs = {\n  sort?: Maybe<Scalars['String']>;\n  limit?: Maybe<Scalars['Int']>;\n  start?: Maybe<Scalars['Int']>;\n  where?: Maybe<Scalars['JSON']>;\n  publicationState?: Maybe<PublicationState>;\n  locale?: Maybe<Scalars['String']>;\n};\n\n\nexport type QueryLocationsConnectionArgs = {\n  sort?: Maybe<Scalars['String']>;\n  limit?: Maybe<Scalars['Int']>;\n  start?: Maybe<Scalars['Int']>;\n  where?: Maybe<Scalars['JSON']>;\n  locale?: Maybe<Scalars['String']>;\n};\n\n\nexport type QueryPartnerArgs = {\n  id: Scalars['ID'];\n  publicationState?: Maybe<PublicationState>;\n};\n\n\nexport type QueryPartnersArgs = {\n  sort?: Maybe<Scalars['String']>;\n  limit?: Maybe<Scalars['Int']>;\n  start?: Maybe<Scalars['Int']>;\n  where?: Maybe<Scalars['JSON']>;\n  publicationState?: Maybe<PublicationState>;\n};\n\n\nexport type QueryPartnersConnectionArgs = {\n  sort?: Maybe<Scalars['String']>;\n  limit?: Maybe<Scalars['Int']>;\n  start?: Maybe<Scalars['Int']>;\n  where?: Maybe<Scalars['JSON']>;\n};\n\n\nexport type QueryReviewArgs = {\n  id: Scalars['ID'];\n  publicationState?: Maybe<PublicationState>;\n};\n\n\nexport type QueryReviewsArgs = {\n  sort?: Maybe<Scalars['String']>;\n  limit?: Maybe<Scalars['Int']>;\n  start?: Maybe<Scalars['Int']>;\n  where?: Maybe<Scalars['JSON']>;\n  publicationState?: Maybe<PublicationState>;\n};\n\n\nexport type QueryReviewsConnectionArgs = {\n  sort?: Maybe<Scalars['String']>;\n  limit?: Maybe<Scalars['Int']>;\n  start?: Maybe<Scalars['Int']>;\n  where?: Maybe<Scalars['JSON']>;\n};\n\n\nexport type QuerySubscriberArgs = {\n  id: Scalars['ID'];\n  publicationState?: Maybe<PublicationState>;\n};\n\n\nexport type QuerySubscribersArgs = {\n  sort?: Maybe<Scalars['String']>;\n  limit?: Maybe<Scalars['Int']>;\n  start?: Maybe<Scalars['Int']>;\n  where?: Maybe<Scalars['JSON']>;\n  publicationState?: Maybe<PublicationState>;\n};\n\n\nexport type QuerySubscribersConnectionArgs = {\n  sort?: Maybe<Scalars['String']>;\n  limit?: Maybe<Scalars['Int']>;\n  start?: Maybe<Scalars['Int']>;\n  where?: Maybe<Scalars['JSON']>;\n};\n\n\nexport type QueryTripArgs = {\n  id: Scalars['ID'];\n  publicationState?: Maybe<PublicationState>;\n};\n\n\nexport type QueryTripsArgs = {\n  sort?: Maybe<Scalars['String']>;\n  limit?: Maybe<Scalars['Int']>;\n  start?: Maybe<Scalars['Int']>;\n  where?: Maybe<Scalars['JSON']>;\n  publicationState?: Maybe<PublicationState>;\n  locale?: Maybe<Scalars['String']>;\n};\n\n\nexport type QueryTripsConnectionArgs = {\n  sort?: Maybe<Scalars['String']>;\n  limit?: Maybe<Scalars['Int']>;\n  start?: Maybe<Scalars['Int']>;\n  where?: Maybe<Scalars['JSON']>;\n  locale?: Maybe<Scalars['String']>;\n};\n\n\nexport type QueryFilesArgs = {\n  sort?: Maybe<Scalars['String']>;\n  limit?: Maybe<Scalars['Int']>;\n  start?: Maybe<Scalars['Int']>;\n  where?: Maybe<Scalars['JSON']>;\n  publicationState?: Maybe<PublicationState>;\n};\n\n\nexport type QueryFilesConnectionArgs = {\n  sort?: Maybe<Scalars['String']>;\n  limit?: Maybe<Scalars['Int']>;\n  start?: Maybe<Scalars['Int']>;\n  where?: Maybe<Scalars['JSON']>;\n};\n\n\nexport type QueryRoleArgs = {\n  id: Scalars['ID'];\n  publicationState?: Maybe<PublicationState>;\n};\n\n\nexport type QueryRolesArgs = {\n  sort?: Maybe<Scalars['String']>;\n  limit?: Maybe<Scalars['Int']>;\n  start?: Maybe<Scalars['Int']>;\n  where?: Maybe<Scalars['JSON']>;\n  publicationState?: Maybe<PublicationState>;\n};\n\n\nexport type QueryRolesConnectionArgs = {\n  sort?: Maybe<Scalars['String']>;\n  limit?: Maybe<Scalars['Int']>;\n  start?: Maybe<Scalars['Int']>;\n  where?: Maybe<Scalars['JSON']>;\n};\n\n\nexport type QueryUserArgs = {\n  id: Scalars['ID'];\n  publicationState?: Maybe<PublicationState>;\n};\n\n\nexport type QueryUsersArgs = {\n  sort?: Maybe<Scalars['String']>;\n  limit?: Maybe<Scalars['Int']>;\n  start?: Maybe<Scalars['Int']>;\n  where?: Maybe<Scalars['JSON']>;\n  publicationState?: Maybe<PublicationState>;\n};\n\n\nexport type QueryUsersConnectionArgs = {\n  sort?: Maybe<Scalars['String']>;\n  limit?: Maybe<Scalars['Int']>;\n  start?: Maybe<Scalars['Int']>;\n  where?: Maybe<Scalars['JSON']>;\n};\n\nexport type Review = {\n  __typename?: 'Review';\n  id: Scalars['ID'];\n  _id: Scalars['ID'];\n  createdAt: Scalars['DateTime'];\n  updatedAt: Scalars['DateTime'];\n  text?: Maybe<Scalars['String']>;\n  rating: Scalars['Float'];\n  author?: Maybe<UsersPermissionsUser>;\n  active?: Maybe<Scalars['Boolean']>;\n  trip?: Maybe<Trips>;\n  published_at?: Maybe<Scalars['DateTime']>;\n};\n\nexport type ReviewAggregator = {\n  __typename?: 'ReviewAggregator';\n  count?: Maybe<Scalars['Int']>;\n  totalCount?: Maybe<Scalars['Int']>;\n  sum?: Maybe<ReviewAggregatorSum>;\n  avg?: Maybe<ReviewAggregatorAvg>;\n  min?: Maybe<ReviewAggregatorMin>;\n  max?: Maybe<ReviewAggregatorMax>;\n};\n\nexport type ReviewAggregatorAvg = {\n  __typename?: 'ReviewAggregatorAvg';\n  rating?: Maybe<Scalars['Float']>;\n};\n\nexport type ReviewAggregatorMax = {\n  __typename?: 'ReviewAggregatorMax';\n  rating?: Maybe<Scalars['Float']>;\n};\n\nexport type ReviewAggregatorMin = {\n  __typename?: 'ReviewAggregatorMin';\n  rating?: Maybe<Scalars['Float']>;\n};\n\nexport type ReviewAggregatorSum = {\n  __typename?: 'ReviewAggregatorSum';\n  rating?: Maybe<Scalars['Float']>;\n};\n\nexport type ReviewConnection = {\n  __typename?: 'ReviewConnection';\n  values?: Maybe<Array<Maybe<Review>>>;\n  groupBy?: Maybe<ReviewGroupBy>;\n  aggregate?: Maybe<ReviewAggregator>;\n};\n\nexport type ReviewConnectionActive = {\n  __typename?: 'ReviewConnectionActive';\n  key?: Maybe<Scalars['Boolean']>;\n  connection?: Maybe<ReviewConnection>;\n};\n\nexport type ReviewConnectionAuthor = {\n  __typename?: 'ReviewConnectionAuthor';\n  key?: Maybe<Scalars['ID']>;\n  connection?: Maybe<ReviewConnection>;\n};\n\nexport type ReviewConnectionCreatedAt = {\n  __typename?: 'ReviewConnectionCreatedAt';\n  key?: Maybe<Scalars['DateTime']>;\n  connection?: Maybe<ReviewConnection>;\n};\n\nexport type ReviewConnectionId = {\n  __typename?: 'ReviewConnectionId';\n  key?: Maybe<Scalars['ID']>;\n  connection?: Maybe<ReviewConnection>;\n};\n\nexport type ReviewConnectionPublished_At = {\n  __typename?: 'ReviewConnectionPublished_at';\n  key?: Maybe<Scalars['DateTime']>;\n  connection?: Maybe<ReviewConnection>;\n};\n\nexport type ReviewConnectionRating = {\n  __typename?: 'ReviewConnectionRating';\n  key?: Maybe<Scalars['Float']>;\n  connection?: Maybe<ReviewConnection>;\n};\n\nexport type ReviewConnectionText = {\n  __typename?: 'ReviewConnectionText';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<ReviewConnection>;\n};\n\nexport type ReviewConnectionTrip = {\n  __typename?: 'ReviewConnectionTrip';\n  key?: Maybe<Scalars['ID']>;\n  connection?: Maybe<ReviewConnection>;\n};\n\nexport type ReviewConnectionUpdatedAt = {\n  __typename?: 'ReviewConnectionUpdatedAt';\n  key?: Maybe<Scalars['DateTime']>;\n  connection?: Maybe<ReviewConnection>;\n};\n\nexport type ReviewConnection_Id = {\n  __typename?: 'ReviewConnection_id';\n  key?: Maybe<Scalars['ID']>;\n  connection?: Maybe<ReviewConnection>;\n};\n\nexport type ReviewGroupBy = {\n  __typename?: 'ReviewGroupBy';\n  id?: Maybe<Array<Maybe<ReviewConnectionId>>>;\n  _id?: Maybe<Array<Maybe<ReviewConnection_Id>>>;\n  createdAt?: Maybe<Array<Maybe<ReviewConnectionCreatedAt>>>;\n  updatedAt?: Maybe<Array<Maybe<ReviewConnectionUpdatedAt>>>;\n  text?: Maybe<Array<Maybe<ReviewConnectionText>>>;\n  rating?: Maybe<Array<Maybe<ReviewConnectionRating>>>;\n  author?: Maybe<Array<Maybe<ReviewConnectionAuthor>>>;\n  active?: Maybe<Array<Maybe<ReviewConnectionActive>>>;\n  trip?: Maybe<Array<Maybe<ReviewConnectionTrip>>>;\n  published_at?: Maybe<Array<Maybe<ReviewConnectionPublished_At>>>;\n};\n\nexport type ReviewInput = {\n  text?: Maybe<Scalars['String']>;\n  rating: Scalars['Float'];\n  author?: Maybe<Scalars['ID']>;\n  active?: Maybe<Scalars['Boolean']>;\n  trip?: Maybe<Scalars['ID']>;\n  published_at?: Maybe<Scalars['DateTime']>;\n  created_by?: Maybe<Scalars['ID']>;\n  updated_by?: Maybe<Scalars['ID']>;\n};\n\nexport type RoleInput = {\n  name: Scalars['String'];\n  description?: Maybe<Scalars['String']>;\n  type?: Maybe<Scalars['String']>;\n  permissions?: Maybe<Array<Maybe<Scalars['ID']>>>;\n  users?: Maybe<Array<Maybe<Scalars['ID']>>>;\n  created_by?: Maybe<Scalars['ID']>;\n  updated_by?: Maybe<Scalars['ID']>;\n};\n\nexport type SubscriberInput = {\n  email: Scalars['String'];\n  published_at?: Maybe<Scalars['DateTime']>;\n  created_by?: Maybe<Scalars['ID']>;\n  updated_by?: Maybe<Scalars['ID']>;\n};\n\nexport type Subscribers = {\n  __typename?: 'Subscribers';\n  id: Scalars['ID'];\n  _id: Scalars['ID'];\n  createdAt: Scalars['DateTime'];\n  updatedAt: Scalars['DateTime'];\n  email: Scalars['String'];\n  published_at?: Maybe<Scalars['DateTime']>;\n};\n\nexport type SubscribersAggregator = {\n  __typename?: 'SubscribersAggregator';\n  count?: Maybe<Scalars['Int']>;\n  totalCount?: Maybe<Scalars['Int']>;\n};\n\nexport type SubscribersConnection = {\n  __typename?: 'SubscribersConnection';\n  values?: Maybe<Array<Maybe<Subscribers>>>;\n  groupBy?: Maybe<SubscribersGroupBy>;\n  aggregate?: Maybe<SubscribersAggregator>;\n};\n\nexport type SubscribersConnectionCreatedAt = {\n  __typename?: 'SubscribersConnectionCreatedAt';\n  key?: Maybe<Scalars['DateTime']>;\n  connection?: Maybe<SubscribersConnection>;\n};\n\nexport type SubscribersConnectionEmail = {\n  __typename?: 'SubscribersConnectionEmail';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<SubscribersConnection>;\n};\n\nexport type SubscribersConnectionId = {\n  __typename?: 'SubscribersConnectionId';\n  key?: Maybe<Scalars['ID']>;\n  connection?: Maybe<SubscribersConnection>;\n};\n\nexport type SubscribersConnectionPublished_At = {\n  __typename?: 'SubscribersConnectionPublished_at';\n  key?: Maybe<Scalars['DateTime']>;\n  connection?: Maybe<SubscribersConnection>;\n};\n\nexport type SubscribersConnectionUpdatedAt = {\n  __typename?: 'SubscribersConnectionUpdatedAt';\n  key?: Maybe<Scalars['DateTime']>;\n  connection?: Maybe<SubscribersConnection>;\n};\n\nexport type SubscribersConnection_Id = {\n  __typename?: 'SubscribersConnection_id';\n  key?: Maybe<Scalars['ID']>;\n  connection?: Maybe<SubscribersConnection>;\n};\n\nexport type SubscribersGroupBy = {\n  __typename?: 'SubscribersGroupBy';\n  id?: Maybe<Array<Maybe<SubscribersConnectionId>>>;\n  _id?: Maybe<Array<Maybe<SubscribersConnection_Id>>>;\n  createdAt?: Maybe<Array<Maybe<SubscribersConnectionCreatedAt>>>;\n  updatedAt?: Maybe<Array<Maybe<SubscribersConnectionUpdatedAt>>>;\n  email?: Maybe<Array<Maybe<SubscribersConnectionEmail>>>;\n  published_at?: Maybe<Array<Maybe<SubscribersConnectionPublished_At>>>;\n};\n\n\nexport type TripInput = {\n  name: Scalars['String'];\n  previewImage?: Maybe<Scalars['ID']>;\n  active?: Maybe<Scalars['Boolean']>;\n  trip_type: Enum_Trips_Trip_Type;\n  description?: Maybe<Scalars['String']>;\n  duration: Scalars['Int'];\n  partner?: Maybe<Scalars['ID']>;\n  currency?: Maybe<Enum_Trips_Currency>;\n  city?: Maybe<Scalars['ID']>;\n  features?: Maybe<Array<ComponentFeatureFeatureInput>>;\n  basePrice: Scalars['Int'];\n  basePeopleCount: Scalars['Int'];\n  discount?: Maybe<Scalars['Float']>;\n  travelType: Enum_Trips_Traveltype;\n  hotel?: Maybe<Scalars['ID']>;\n  plan?: Maybe<Array<ComponentTimelineTimelineInput>>;\n  sequence: Scalars['String'];\n  localizations?: Maybe<Array<Maybe<Scalars['ID']>>>;\n  locale?: Maybe<Scalars['String']>;\n  published_at?: Maybe<Scalars['DateTime']>;\n  created_by?: Maybe<Scalars['ID']>;\n  updated_by?: Maybe<Scalars['ID']>;\n};\n\nexport type Trips = {\n  __typename?: 'Trips';\n  id: Scalars['ID'];\n  _id: Scalars['ID'];\n  createdAt: Scalars['DateTime'];\n  updatedAt: Scalars['DateTime'];\n  name: Scalars['String'];\n  previewImage?: Maybe<UploadFile>;\n  active?: Maybe<Scalars['Boolean']>;\n  trip_type: Enum_Trips_Trip_Type;\n  description?: Maybe<Scalars['String']>;\n  duration: Scalars['Int'];\n  partner?: Maybe<Partner>;\n  currency?: Maybe<Enum_Trips_Currency>;\n  city?: Maybe<City>;\n  features?: Maybe<Array<Maybe<ComponentFeatureFeature>>>;\n  basePrice: Scalars['Int'];\n  basePeopleCount: Scalars['Int'];\n  discount?: Maybe<Scalars['Float']>;\n  travelType: Enum_Trips_Traveltype;\n  hotel?: Maybe<Hotels>;\n  plan?: Maybe<Array<Maybe<ComponentTimelineTimeline>>>;\n  locale?: Maybe<Scalars['String']>;\n  published_at?: Maybe<Scalars['DateTime']>;\n  localizations?: Maybe<Array<Maybe<Trips>>>;\n};\n\n\nexport type TripsLocalizationsArgs = {\n  sort?: Maybe<Scalars['String']>;\n  limit?: Maybe<Scalars['Int']>;\n  start?: Maybe<Scalars['Int']>;\n  where?: Maybe<Scalars['JSON']>;\n};\n\nexport type TripsAggregator = {\n  __typename?: 'TripsAggregator';\n  count?: Maybe<Scalars['Int']>;\n  totalCount?: Maybe<Scalars['Int']>;\n  sum?: Maybe<TripsAggregatorSum>;\n  avg?: Maybe<TripsAggregatorAvg>;\n  min?: Maybe<TripsAggregatorMin>;\n  max?: Maybe<TripsAggregatorMax>;\n};\n\nexport type TripsAggregatorAvg = {\n  __typename?: 'TripsAggregatorAvg';\n  duration?: Maybe<Scalars['Float']>;\n  basePrice?: Maybe<Scalars['Float']>;\n  basePeopleCount?: Maybe<Scalars['Float']>;\n  discount?: Maybe<Scalars['Float']>;\n};\n\nexport type TripsAggregatorMax = {\n  __typename?: 'TripsAggregatorMax';\n  duration?: Maybe<Scalars['Float']>;\n  basePrice?: Maybe<Scalars['Float']>;\n  basePeopleCount?: Maybe<Scalars['Float']>;\n  discount?: Maybe<Scalars['Float']>;\n};\n\nexport type TripsAggregatorMin = {\n  __typename?: 'TripsAggregatorMin';\n  duration?: Maybe<Scalars['Float']>;\n  basePrice?: Maybe<Scalars['Float']>;\n  basePeopleCount?: Maybe<Scalars['Float']>;\n  discount?: Maybe<Scalars['Float']>;\n};\n\nexport type TripsAggregatorSum = {\n  __typename?: 'TripsAggregatorSum';\n  duration?: Maybe<Scalars['Float']>;\n  basePrice?: Maybe<Scalars['Float']>;\n  basePeopleCount?: Maybe<Scalars['Float']>;\n  discount?: Maybe<Scalars['Float']>;\n};\n\nexport type TripsConnection = {\n  __typename?: 'TripsConnection';\n  values?: Maybe<Array<Maybe<Trips>>>;\n  groupBy?: Maybe<TripsGroupBy>;\n  aggregate?: Maybe<TripsAggregator>;\n};\n\nexport type TripsConnectionActive = {\n  __typename?: 'TripsConnectionActive';\n  key?: Maybe<Scalars['Boolean']>;\n  connection?: Maybe<TripsConnection>;\n};\n\nexport type TripsConnectionBasePeopleCount = {\n  __typename?: 'TripsConnectionBasePeopleCount';\n  key?: Maybe<Scalars['Int']>;\n  connection?: Maybe<TripsConnection>;\n};\n\nexport type TripsConnectionBasePrice = {\n  __typename?: 'TripsConnectionBasePrice';\n  key?: Maybe<Scalars['Int']>;\n  connection?: Maybe<TripsConnection>;\n};\n\nexport type TripsConnectionCity = {\n  __typename?: 'TripsConnectionCity';\n  key?: Maybe<Scalars['ID']>;\n  connection?: Maybe<TripsConnection>;\n};\n\nexport type TripsConnectionCreatedAt = {\n  __typename?: 'TripsConnectionCreatedAt';\n  key?: Maybe<Scalars['DateTime']>;\n  connection?: Maybe<TripsConnection>;\n};\n\nexport type TripsConnectionCurrency = {\n  __typename?: 'TripsConnectionCurrency';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<TripsConnection>;\n};\n\nexport type TripsConnectionDescription = {\n  __typename?: 'TripsConnectionDescription';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<TripsConnection>;\n};\n\nexport type TripsConnectionDiscount = {\n  __typename?: 'TripsConnectionDiscount';\n  key?: Maybe<Scalars['Float']>;\n  connection?: Maybe<TripsConnection>;\n};\n\nexport type TripsConnectionDuration = {\n  __typename?: 'TripsConnectionDuration';\n  key?: Maybe<Scalars['Int']>;\n  connection?: Maybe<TripsConnection>;\n};\n\nexport type TripsConnectionHotel = {\n  __typename?: 'TripsConnectionHotel';\n  key?: Maybe<Scalars['ID']>;\n  connection?: Maybe<TripsConnection>;\n};\n\nexport type TripsConnectionId = {\n  __typename?: 'TripsConnectionId';\n  key?: Maybe<Scalars['ID']>;\n  connection?: Maybe<TripsConnection>;\n};\n\nexport type TripsConnectionLocale = {\n  __typename?: 'TripsConnectionLocale';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<TripsConnection>;\n};\n\nexport type TripsConnectionName = {\n  __typename?: 'TripsConnectionName';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<TripsConnection>;\n};\n\nexport type TripsConnectionPartner = {\n  __typename?: 'TripsConnectionPartner';\n  key?: Maybe<Scalars['ID']>;\n  connection?: Maybe<TripsConnection>;\n};\n\nexport type TripsConnectionPreviewImage = {\n  __typename?: 'TripsConnectionPreviewImage';\n  key?: Maybe<Scalars['ID']>;\n  connection?: Maybe<TripsConnection>;\n};\n\nexport type TripsConnectionPublished_At = {\n  __typename?: 'TripsConnectionPublished_at';\n  key?: Maybe<Scalars['DateTime']>;\n  connection?: Maybe<TripsConnection>;\n};\n\nexport type TripsConnectionTravelType = {\n  __typename?: 'TripsConnectionTravelType';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<TripsConnection>;\n};\n\nexport type TripsConnectionTrip_Type = {\n  __typename?: 'TripsConnectionTrip_type';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<TripsConnection>;\n};\n\nexport type TripsConnectionUpdatedAt = {\n  __typename?: 'TripsConnectionUpdatedAt';\n  key?: Maybe<Scalars['DateTime']>;\n  connection?: Maybe<TripsConnection>;\n};\n\nexport type TripsConnection_Id = {\n  __typename?: 'TripsConnection_id';\n  key?: Maybe<Scalars['ID']>;\n  connection?: Maybe<TripsConnection>;\n};\n\nexport type TripsGroupBy = {\n  __typename?: 'TripsGroupBy';\n  id?: Maybe<Array<Maybe<TripsConnectionId>>>;\n  _id?: Maybe<Array<Maybe<TripsConnection_Id>>>;\n  createdAt?: Maybe<Array<Maybe<TripsConnectionCreatedAt>>>;\n  updatedAt?: Maybe<Array<Maybe<TripsConnectionUpdatedAt>>>;\n  name?: Maybe<Array<Maybe<TripsConnectionName>>>;\n  previewImage?: Maybe<Array<Maybe<TripsConnectionPreviewImage>>>;\n  active?: Maybe<Array<Maybe<TripsConnectionActive>>>;\n  trip_type?: Maybe<Array<Maybe<TripsConnectionTrip_Type>>>;\n  description?: Maybe<Array<Maybe<TripsConnectionDescription>>>;\n  duration?: Maybe<Array<Maybe<TripsConnectionDuration>>>;\n  partner?: Maybe<Array<Maybe<TripsConnectionPartner>>>;\n  currency?: Maybe<Array<Maybe<TripsConnectionCurrency>>>;\n  city?: Maybe<Array<Maybe<TripsConnectionCity>>>;\n  basePrice?: Maybe<Array<Maybe<TripsConnectionBasePrice>>>;\n  basePeopleCount?: Maybe<Array<Maybe<TripsConnectionBasePeopleCount>>>;\n  discount?: Maybe<Array<Maybe<TripsConnectionDiscount>>>;\n  travelType?: Maybe<Array<Maybe<TripsConnectionTravelType>>>;\n  hotel?: Maybe<Array<Maybe<TripsConnectionHotel>>>;\n  locale?: Maybe<Array<Maybe<TripsConnectionLocale>>>;\n  published_at?: Maybe<Array<Maybe<TripsConnectionPublished_At>>>;\n};\n\n\nexport type UploadFile = {\n  __typename?: 'UploadFile';\n  id: Scalars['ID'];\n  _id: Scalars['ID'];\n  createdAt: Scalars['DateTime'];\n  updatedAt: Scalars['DateTime'];\n  name: Scalars['String'];\n  alternativeText?: Maybe<Scalars['String']>;\n  caption?: Maybe<Scalars['String']>;\n  width?: Maybe<Scalars['Int']>;\n  height?: Maybe<Scalars['Int']>;\n  formats?: Maybe<Scalars['JSON']>;\n  hash: Scalars['String'];\n  ext?: Maybe<Scalars['String']>;\n  mime: Scalars['String'];\n  size: Scalars['Float'];\n  url: Scalars['String'];\n  previewUrl?: Maybe<Scalars['String']>;\n  provider: Scalars['String'];\n  provider_metadata?: Maybe<Scalars['JSON']>;\n  related?: Maybe<Array<Maybe<Morph>>>;\n};\n\n\nexport type UploadFileRelatedArgs = {\n  sort?: Maybe<Scalars['String']>;\n  limit?: Maybe<Scalars['Int']>;\n  start?: Maybe<Scalars['Int']>;\n  where?: Maybe<Scalars['JSON']>;\n};\n\nexport type UploadFileAggregator = {\n  __typename?: 'UploadFileAggregator';\n  count?: Maybe<Scalars['Int']>;\n  totalCount?: Maybe<Scalars['Int']>;\n  sum?: Maybe<UploadFileAggregatorSum>;\n  avg?: Maybe<UploadFileAggregatorAvg>;\n  min?: Maybe<UploadFileAggregatorMin>;\n  max?: Maybe<UploadFileAggregatorMax>;\n};\n\nexport type UploadFileAggregatorAvg = {\n  __typename?: 'UploadFileAggregatorAvg';\n  width?: Maybe<Scalars['Float']>;\n  height?: Maybe<Scalars['Float']>;\n  size?: Maybe<Scalars['Float']>;\n};\n\nexport type UploadFileAggregatorMax = {\n  __typename?: 'UploadFileAggregatorMax';\n  width?: Maybe<Scalars['Float']>;\n  height?: Maybe<Scalars['Float']>;\n  size?: Maybe<Scalars['Float']>;\n};\n\nexport type UploadFileAggregatorMin = {\n  __typename?: 'UploadFileAggregatorMin';\n  width?: Maybe<Scalars['Float']>;\n  height?: Maybe<Scalars['Float']>;\n  size?: Maybe<Scalars['Float']>;\n};\n\nexport type UploadFileAggregatorSum = {\n  __typename?: 'UploadFileAggregatorSum';\n  width?: Maybe<Scalars['Float']>;\n  height?: Maybe<Scalars['Float']>;\n  size?: Maybe<Scalars['Float']>;\n};\n\nexport type UploadFileConnection = {\n  __typename?: 'UploadFileConnection';\n  values?: Maybe<Array<Maybe<UploadFile>>>;\n  groupBy?: Maybe<UploadFileGroupBy>;\n  aggregate?: Maybe<UploadFileAggregator>;\n};\n\nexport type UploadFileConnectionAlternativeText = {\n  __typename?: 'UploadFileConnectionAlternativeText';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<UploadFileConnection>;\n};\n\nexport type UploadFileConnectionCaption = {\n  __typename?: 'UploadFileConnectionCaption';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<UploadFileConnection>;\n};\n\nexport type UploadFileConnectionCreatedAt = {\n  __typename?: 'UploadFileConnectionCreatedAt';\n  key?: Maybe<Scalars['DateTime']>;\n  connection?: Maybe<UploadFileConnection>;\n};\n\nexport type UploadFileConnectionExt = {\n  __typename?: 'UploadFileConnectionExt';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<UploadFileConnection>;\n};\n\nexport type UploadFileConnectionFormats = {\n  __typename?: 'UploadFileConnectionFormats';\n  key?: Maybe<Scalars['JSON']>;\n  connection?: Maybe<UploadFileConnection>;\n};\n\nexport type UploadFileConnectionHash = {\n  __typename?: 'UploadFileConnectionHash';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<UploadFileConnection>;\n};\n\nexport type UploadFileConnectionHeight = {\n  __typename?: 'UploadFileConnectionHeight';\n  key?: Maybe<Scalars['Int']>;\n  connection?: Maybe<UploadFileConnection>;\n};\n\nexport type UploadFileConnectionId = {\n  __typename?: 'UploadFileConnectionId';\n  key?: Maybe<Scalars['ID']>;\n  connection?: Maybe<UploadFileConnection>;\n};\n\nexport type UploadFileConnectionMime = {\n  __typename?: 'UploadFileConnectionMime';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<UploadFileConnection>;\n};\n\nexport type UploadFileConnectionName = {\n  __typename?: 'UploadFileConnectionName';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<UploadFileConnection>;\n};\n\nexport type UploadFileConnectionPreviewUrl = {\n  __typename?: 'UploadFileConnectionPreviewUrl';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<UploadFileConnection>;\n};\n\nexport type UploadFileConnectionProvider = {\n  __typename?: 'UploadFileConnectionProvider';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<UploadFileConnection>;\n};\n\nexport type UploadFileConnectionProvider_Metadata = {\n  __typename?: 'UploadFileConnectionProvider_metadata';\n  key?: Maybe<Scalars['JSON']>;\n  connection?: Maybe<UploadFileConnection>;\n};\n\nexport type UploadFileConnectionSize = {\n  __typename?: 'UploadFileConnectionSize';\n  key?: Maybe<Scalars['Float']>;\n  connection?: Maybe<UploadFileConnection>;\n};\n\nexport type UploadFileConnectionUpdatedAt = {\n  __typename?: 'UploadFileConnectionUpdatedAt';\n  key?: Maybe<Scalars['DateTime']>;\n  connection?: Maybe<UploadFileConnection>;\n};\n\nexport type UploadFileConnectionUrl = {\n  __typename?: 'UploadFileConnectionUrl';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<UploadFileConnection>;\n};\n\nexport type UploadFileConnectionWidth = {\n  __typename?: 'UploadFileConnectionWidth';\n  key?: Maybe<Scalars['Int']>;\n  connection?: Maybe<UploadFileConnection>;\n};\n\nexport type UploadFileConnection_Id = {\n  __typename?: 'UploadFileConnection_id';\n  key?: Maybe<Scalars['ID']>;\n  connection?: Maybe<UploadFileConnection>;\n};\n\nexport type UploadFileGroupBy = {\n  __typename?: 'UploadFileGroupBy';\n  id?: Maybe<Array<Maybe<UploadFileConnectionId>>>;\n  _id?: Maybe<Array<Maybe<UploadFileConnection_Id>>>;\n  createdAt?: Maybe<Array<Maybe<UploadFileConnectionCreatedAt>>>;\n  updatedAt?: Maybe<Array<Maybe<UploadFileConnectionUpdatedAt>>>;\n  name?: Maybe<Array<Maybe<UploadFileConnectionName>>>;\n  alternativeText?: Maybe<Array<Maybe<UploadFileConnectionAlternativeText>>>;\n  caption?: Maybe<Array<Maybe<UploadFileConnectionCaption>>>;\n  width?: Maybe<Array<Maybe<UploadFileConnectionWidth>>>;\n  height?: Maybe<Array<Maybe<UploadFileConnectionHeight>>>;\n  formats?: Maybe<Array<Maybe<UploadFileConnectionFormats>>>;\n  hash?: Maybe<Array<Maybe<UploadFileConnectionHash>>>;\n  ext?: Maybe<Array<Maybe<UploadFileConnectionExt>>>;\n  mime?: Maybe<Array<Maybe<UploadFileConnectionMime>>>;\n  size?: Maybe<Array<Maybe<UploadFileConnectionSize>>>;\n  url?: Maybe<Array<Maybe<UploadFileConnectionUrl>>>;\n  previewUrl?: Maybe<Array<Maybe<UploadFileConnectionPreviewUrl>>>;\n  provider?: Maybe<Array<Maybe<UploadFileConnectionProvider>>>;\n  provider_metadata?: Maybe<Array<Maybe<UploadFileConnectionProvider_Metadata>>>;\n};\n\nexport type UserInput = {\n  username: Scalars['String'];\n  email: Scalars['String'];\n  provider?: Maybe<Scalars['String']>;\n  password?: Maybe<Scalars['String']>;\n  resetPasswordToken?: Maybe<Scalars['String']>;\n  confirmationToken?: Maybe<Scalars['String']>;\n  confirmed?: Maybe<Scalars['Boolean']>;\n  blocked?: Maybe<Scalars['Boolean']>;\n  role?: Maybe<Scalars['ID']>;\n  created_by?: Maybe<Scalars['ID']>;\n  updated_by?: Maybe<Scalars['ID']>;\n};\n\nexport type UserPermissionsPasswordPayload = {\n  __typename?: 'UserPermissionsPasswordPayload';\n  ok: Scalars['Boolean'];\n};\n\nexport type UsersPermissionsLoginInput = {\n  identifier: Scalars['String'];\n  password: Scalars['String'];\n  provider?: Maybe<Scalars['String']>;\n};\n\nexport type UsersPermissionsLoginPayload = {\n  __typename?: 'UsersPermissionsLoginPayload';\n  jwt?: Maybe<Scalars['String']>;\n  user: UsersPermissionsMe;\n};\n\nexport type UsersPermissionsMe = {\n  __typename?: 'UsersPermissionsMe';\n  id: Scalars['ID'];\n  username: Scalars['String'];\n  email: Scalars['String'];\n  confirmed?: Maybe<Scalars['Boolean']>;\n  blocked?: Maybe<Scalars['Boolean']>;\n  role?: Maybe<UsersPermissionsMeRole>;\n};\n\nexport type UsersPermissionsMeRole = {\n  __typename?: 'UsersPermissionsMeRole';\n  id: Scalars['ID'];\n  name: Scalars['String'];\n  description?: Maybe<Scalars['String']>;\n  type?: Maybe<Scalars['String']>;\n};\n\nexport type UsersPermissionsPermission = {\n  __typename?: 'UsersPermissionsPermission';\n  id: Scalars['ID'];\n  _id: Scalars['ID'];\n  type: Scalars['String'];\n  controller: Scalars['String'];\n  action: Scalars['String'];\n  enabled: Scalars['Boolean'];\n  policy?: Maybe<Scalars['String']>;\n  role?: Maybe<UsersPermissionsRole>;\n};\n\nexport type UsersPermissionsRegisterInput = {\n  username: Scalars['String'];\n  email: Scalars['String'];\n  password: Scalars['String'];\n};\n\nexport type UsersPermissionsRole = {\n  __typename?: 'UsersPermissionsRole';\n  id: Scalars['ID'];\n  _id: Scalars['ID'];\n  name: Scalars['String'];\n  description?: Maybe<Scalars['String']>;\n  type?: Maybe<Scalars['String']>;\n  permissions?: Maybe<Array<Maybe<UsersPermissionsPermission>>>;\n  users?: Maybe<Array<Maybe<UsersPermissionsUser>>>;\n};\n\n\nexport type UsersPermissionsRolePermissionsArgs = {\n  sort?: Maybe<Scalars['String']>;\n  limit?: Maybe<Scalars['Int']>;\n  start?: Maybe<Scalars['Int']>;\n  where?: Maybe<Scalars['JSON']>;\n};\n\n\nexport type UsersPermissionsRoleUsersArgs = {\n  sort?: Maybe<Scalars['String']>;\n  limit?: Maybe<Scalars['Int']>;\n  start?: Maybe<Scalars['Int']>;\n  where?: Maybe<Scalars['JSON']>;\n};\n\nexport type UsersPermissionsRoleAggregator = {\n  __typename?: 'UsersPermissionsRoleAggregator';\n  count?: Maybe<Scalars['Int']>;\n  totalCount?: Maybe<Scalars['Int']>;\n};\n\nexport type UsersPermissionsRoleConnection = {\n  __typename?: 'UsersPermissionsRoleConnection';\n  values?: Maybe<Array<Maybe<UsersPermissionsRole>>>;\n  groupBy?: Maybe<UsersPermissionsRoleGroupBy>;\n  aggregate?: Maybe<UsersPermissionsRoleAggregator>;\n};\n\nexport type UsersPermissionsRoleConnectionDescription = {\n  __typename?: 'UsersPermissionsRoleConnectionDescription';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<UsersPermissionsRoleConnection>;\n};\n\nexport type UsersPermissionsRoleConnectionId = {\n  __typename?: 'UsersPermissionsRoleConnectionId';\n  key?: Maybe<Scalars['ID']>;\n  connection?: Maybe<UsersPermissionsRoleConnection>;\n};\n\nexport type UsersPermissionsRoleConnectionName = {\n  __typename?: 'UsersPermissionsRoleConnectionName';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<UsersPermissionsRoleConnection>;\n};\n\nexport type UsersPermissionsRoleConnectionType = {\n  __typename?: 'UsersPermissionsRoleConnectionType';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<UsersPermissionsRoleConnection>;\n};\n\nexport type UsersPermissionsRoleConnection_Id = {\n  __typename?: 'UsersPermissionsRoleConnection_id';\n  key?: Maybe<Scalars['ID']>;\n  connection?: Maybe<UsersPermissionsRoleConnection>;\n};\n\nexport type UsersPermissionsRoleGroupBy = {\n  __typename?: 'UsersPermissionsRoleGroupBy';\n  id?: Maybe<Array<Maybe<UsersPermissionsRoleConnectionId>>>;\n  _id?: Maybe<Array<Maybe<UsersPermissionsRoleConnection_Id>>>;\n  name?: Maybe<Array<Maybe<UsersPermissionsRoleConnectionName>>>;\n  description?: Maybe<Array<Maybe<UsersPermissionsRoleConnectionDescription>>>;\n  type?: Maybe<Array<Maybe<UsersPermissionsRoleConnectionType>>>;\n};\n\nexport type UsersPermissionsUser = {\n  __typename?: 'UsersPermissionsUser';\n  id: Scalars['ID'];\n  _id: Scalars['ID'];\n  createdAt: Scalars['DateTime'];\n  updatedAt: Scalars['DateTime'];\n  username: Scalars['String'];\n  email: Scalars['String'];\n  provider?: Maybe<Scalars['String']>;\n  confirmed?: Maybe<Scalars['Boolean']>;\n  blocked?: Maybe<Scalars['Boolean']>;\n  role?: Maybe<UsersPermissionsRole>;\n};\n\nexport type UsersPermissionsUserAggregator = {\n  __typename?: 'UsersPermissionsUserAggregator';\n  count?: Maybe<Scalars['Int']>;\n  totalCount?: Maybe<Scalars['Int']>;\n};\n\nexport type UsersPermissionsUserConnection = {\n  __typename?: 'UsersPermissionsUserConnection';\n  values?: Maybe<Array<Maybe<UsersPermissionsUser>>>;\n  groupBy?: Maybe<UsersPermissionsUserGroupBy>;\n  aggregate?: Maybe<UsersPermissionsUserAggregator>;\n};\n\nexport type UsersPermissionsUserConnectionBlocked = {\n  __typename?: 'UsersPermissionsUserConnectionBlocked';\n  key?: Maybe<Scalars['Boolean']>;\n  connection?: Maybe<UsersPermissionsUserConnection>;\n};\n\nexport type UsersPermissionsUserConnectionConfirmed = {\n  __typename?: 'UsersPermissionsUserConnectionConfirmed';\n  key?: Maybe<Scalars['Boolean']>;\n  connection?: Maybe<UsersPermissionsUserConnection>;\n};\n\nexport type UsersPermissionsUserConnectionCreatedAt = {\n  __typename?: 'UsersPermissionsUserConnectionCreatedAt';\n  key?: Maybe<Scalars['DateTime']>;\n  connection?: Maybe<UsersPermissionsUserConnection>;\n};\n\nexport type UsersPermissionsUserConnectionEmail = {\n  __typename?: 'UsersPermissionsUserConnectionEmail';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<UsersPermissionsUserConnection>;\n};\n\nexport type UsersPermissionsUserConnectionId = {\n  __typename?: 'UsersPermissionsUserConnectionId';\n  key?: Maybe<Scalars['ID']>;\n  connection?: Maybe<UsersPermissionsUserConnection>;\n};\n\nexport type UsersPermissionsUserConnectionProvider = {\n  __typename?: 'UsersPermissionsUserConnectionProvider';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<UsersPermissionsUserConnection>;\n};\n\nexport type UsersPermissionsUserConnectionRole = {\n  __typename?: 'UsersPermissionsUserConnectionRole';\n  key?: Maybe<Scalars['ID']>;\n  connection?: Maybe<UsersPermissionsUserConnection>;\n};\n\nexport type UsersPermissionsUserConnectionUpdatedAt = {\n  __typename?: 'UsersPermissionsUserConnectionUpdatedAt';\n  key?: Maybe<Scalars['DateTime']>;\n  connection?: Maybe<UsersPermissionsUserConnection>;\n};\n\nexport type UsersPermissionsUserConnectionUsername = {\n  __typename?: 'UsersPermissionsUserConnectionUsername';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<UsersPermissionsUserConnection>;\n};\n\nexport type UsersPermissionsUserConnection_Id = {\n  __typename?: 'UsersPermissionsUserConnection_id';\n  key?: Maybe<Scalars['ID']>;\n  connection?: Maybe<UsersPermissionsUserConnection>;\n};\n\nexport type UsersPermissionsUserGroupBy = {\n  __typename?: 'UsersPermissionsUserGroupBy';\n  id?: Maybe<Array<Maybe<UsersPermissionsUserConnectionId>>>;\n  _id?: Maybe<Array<Maybe<UsersPermissionsUserConnection_Id>>>;\n  createdAt?: Maybe<Array<Maybe<UsersPermissionsUserConnectionCreatedAt>>>;\n  updatedAt?: Maybe<Array<Maybe<UsersPermissionsUserConnectionUpdatedAt>>>;\n  username?: Maybe<Array<Maybe<UsersPermissionsUserConnectionUsername>>>;\n  email?: Maybe<Array<Maybe<UsersPermissionsUserConnectionEmail>>>;\n  provider?: Maybe<Array<Maybe<UsersPermissionsUserConnectionProvider>>>;\n  confirmed?: Maybe<Array<Maybe<UsersPermissionsUserConnectionConfirmed>>>;\n  blocked?: Maybe<Array<Maybe<UsersPermissionsUserConnectionBlocked>>>;\n  role?: Maybe<Array<Maybe<UsersPermissionsUserConnectionRole>>>;\n};\n\nexport type CreateBookingInput = {\n  data?: Maybe<BookingInput>;\n};\n\nexport type CreateBookingPayload = {\n  __typename?: 'createBookingPayload';\n  booking?: Maybe<Booking>;\n};\n\nexport type CreateCityInput = {\n  data?: Maybe<CityInput>;\n};\n\nexport type CreateCityPayload = {\n  __typename?: 'createCityPayload';\n  city?: Maybe<City>;\n};\n\nexport type CreateFeatureInput = {\n  data?: Maybe<FeatureInput>;\n};\n\nexport type CreateFeaturePayload = {\n  __typename?: 'createFeaturePayload';\n  feature?: Maybe<Feature>;\n};\n\nexport type CreateHotelInput = {\n  data?: Maybe<HotelInput>;\n};\n\nexport type CreateHotelPayload = {\n  __typename?: 'createHotelPayload';\n  hotel?: Maybe<Hotels>;\n};\n\nexport type CreateLocationInput = {\n  data?: Maybe<LocationInput>;\n};\n\nexport type CreateLocationPayload = {\n  __typename?: 'createLocationPayload';\n  location?: Maybe<Location>;\n};\n\nexport type CreatePartnerInput = {\n  data?: Maybe<PartnerInput>;\n};\n\nexport type CreatePartnerPayload = {\n  __typename?: 'createPartnerPayload';\n  partner?: Maybe<Partner>;\n};\n\nexport type CreateReviewInput = {\n  data?: Maybe<ReviewInput>;\n};\n\nexport type CreateReviewPayload = {\n  __typename?: 'createReviewPayload';\n  review?: Maybe<Review>;\n};\n\nexport type CreateRoleInput = {\n  data?: Maybe<RoleInput>;\n};\n\nexport type CreateRolePayload = {\n  __typename?: 'createRolePayload';\n  role?: Maybe<UsersPermissionsRole>;\n};\n\nexport type CreateSubscriberInput = {\n  data?: Maybe<SubscriberInput>;\n};\n\nexport type CreateSubscriberPayload = {\n  __typename?: 'createSubscriberPayload';\n  subscriber?: Maybe<Subscribers>;\n};\n\nexport type CreateTripInput = {\n  data?: Maybe<TripInput>;\n};\n\nexport type CreateTripPayload = {\n  __typename?: 'createTripPayload';\n  trip?: Maybe<Trips>;\n};\n\nexport type CreateUserInput = {\n  data?: Maybe<UserInput>;\n};\n\nexport type CreateUserPayload = {\n  __typename?: 'createUserPayload';\n  user?: Maybe<UsersPermissionsUser>;\n};\n\nexport type DeleteBookingInput = {\n  where?: Maybe<InputId>;\n};\n\nexport type DeleteBookingPayload = {\n  __typename?: 'deleteBookingPayload';\n  booking?: Maybe<Booking>;\n};\n\nexport type DeleteCityInput = {\n  where?: Maybe<InputId>;\n};\n\nexport type DeleteCityPayload = {\n  __typename?: 'deleteCityPayload';\n  city?: Maybe<City>;\n};\n\nexport type DeleteFeatureInput = {\n  where?: Maybe<InputId>;\n};\n\nexport type DeleteFeaturePayload = {\n  __typename?: 'deleteFeaturePayload';\n  feature?: Maybe<Feature>;\n};\n\nexport type DeleteFileInput = {\n  where?: Maybe<InputId>;\n};\n\nexport type DeleteFilePayload = {\n  __typename?: 'deleteFilePayload';\n  file?: Maybe<UploadFile>;\n};\n\nexport type DeleteHomeBannerPayload = {\n  __typename?: 'deleteHomeBannerPayload';\n  homeBanner?: Maybe<HomeBanner>;\n};\n\nexport type DeleteHotelInput = {\n  where?: Maybe<InputId>;\n};\n\nexport type DeleteHotelPayload = {\n  __typename?: 'deleteHotelPayload';\n  hotel?: Maybe<Hotels>;\n};\n\nexport type DeleteLocationInput = {\n  where?: Maybe<InputId>;\n};\n\nexport type DeleteLocationPayload = {\n  __typename?: 'deleteLocationPayload';\n  location?: Maybe<Location>;\n};\n\nexport type DeletePartnerInput = {\n  where?: Maybe<InputId>;\n};\n\nexport type DeletePartnerPayload = {\n  __typename?: 'deletePartnerPayload';\n  partner?: Maybe<Partner>;\n};\n\nexport type DeleteReviewInput = {\n  where?: Maybe<InputId>;\n};\n\nexport type DeleteReviewPayload = {\n  __typename?: 'deleteReviewPayload';\n  review?: Maybe<Review>;\n};\n\nexport type DeleteRoleInput = {\n  where?: Maybe<InputId>;\n};\n\nexport type DeleteRolePayload = {\n  __typename?: 'deleteRolePayload';\n  role?: Maybe<UsersPermissionsRole>;\n};\n\nexport type DeleteSubscriberInput = {\n  where?: Maybe<InputId>;\n};\n\nexport type DeleteSubscriberPayload = {\n  __typename?: 'deleteSubscriberPayload';\n  subscriber?: Maybe<Subscribers>;\n};\n\nexport type DeleteTripInput = {\n  where?: Maybe<InputId>;\n};\n\nexport type DeleteTripPayload = {\n  __typename?: 'deleteTripPayload';\n  trip?: Maybe<Trips>;\n};\n\nexport type DeleteUserInput = {\n  where?: Maybe<InputId>;\n};\n\nexport type DeleteUserPayload = {\n  __typename?: 'deleteUserPayload';\n  user?: Maybe<UsersPermissionsUser>;\n};\n\nexport type EditBookingInput = {\n  trip?: Maybe<Scalars['ID']>;\n  approved?: Maybe<Scalars['Boolean']>;\n  basePrice?: Maybe<Scalars['Float']>;\n  currency?: Maybe<Enum_Booking_Currency>;\n  basePeopleCount?: Maybe<Scalars['Int']>;\n  discount?: Maybe<Scalars['Float']>;\n  fullName?: Maybe<Scalars['String']>;\n  phone?: Maybe<Scalars['String']>;\n  message?: Maybe<Scalars['String']>;\n  arrivalDate?: Maybe<Scalars['Date']>;\n  language?: Maybe<Scalars['String']>;\n  userBookingStatus?: Maybe<Enum_Booking_Userbookingstatus>;\n  email?: Maybe<Scalars['String']>;\n  adults?: Maybe<Scalars['Int']>;\n  children?: Maybe<Scalars['Int']>;\n  totalPrice?: Maybe<Scalars['Float']>;\n  published_at?: Maybe<Scalars['DateTime']>;\n  created_by?: Maybe<Scalars['ID']>;\n  updated_by?: Maybe<Scalars['ID']>;\n};\n\nexport type EditCityInput = {\n  name?: Maybe<Scalars['String']>;\n  description?: Maybe<Scalars['String']>;\n  image?: Maybe<Scalars['ID']>;\n  locations?: Maybe<Array<Maybe<Scalars['ID']>>>;\n  localizations?: Maybe<Array<Maybe<Scalars['ID']>>>;\n  locale?: Maybe<Scalars['String']>;\n  published_at?: Maybe<Scalars['DateTime']>;\n  created_by?: Maybe<Scalars['ID']>;\n  updated_by?: Maybe<Scalars['ID']>;\n};\n\nexport type EditComponentCoordinateCoordinateInput = {\n  id?: Maybe<Scalars['ID']>;\n  latitude?: Maybe<Scalars['Float']>;\n  longitude?: Maybe<Scalars['Float']>;\n};\n\nexport type EditComponentFeatureFeatureInput = {\n  id?: Maybe<Scalars['ID']>;\n  feature?: Maybe<Scalars['ID']>;\n  included?: Maybe<Scalars['Boolean']>;\n};\n\nexport type EditComponentPricePriceInput = {\n  id?: Maybe<Scalars['ID']>;\n  basePrice?: Maybe<Scalars['Float']>;\n  currency?: Maybe<Enum_Componentpriceprice_Currency>;\n  basePeopleCount?: Maybe<Scalars['Int']>;\n  extraAdultFee?: Maybe<Scalars['Float']>;\n  discount?: Maybe<Scalars['Float']>;\n};\n\nexport type EditComponentTimelineTimelineInput = {\n  id?: Maybe<Scalars['ID']>;\n  day?: Maybe<Scalars['Int']>;\n  description?: Maybe<Scalars['String']>;\n  locations?: Maybe<Array<Maybe<Scalars['ID']>>>;\n  travelTo?: Maybe<Scalars['ID']>;\n  transportationType?: Maybe<Enum_Componenttimelinetimeline_Transportationtype>;\n  restDay?: Maybe<Scalars['Boolean']>;\n};\n\nexport type EditFeatureInput = {\n  name?: Maybe<Scalars['String']>;\n  info?: Maybe<Scalars['String']>;\n  localizations?: Maybe<Array<Maybe<Scalars['ID']>>>;\n  locale?: Maybe<Scalars['String']>;\n  published_at?: Maybe<Scalars['DateTime']>;\n  created_by?: Maybe<Scalars['ID']>;\n  updated_by?: Maybe<Scalars['ID']>;\n};\n\nexport type EditFileInput = {\n  name?: Maybe<Scalars['String']>;\n  alternativeText?: Maybe<Scalars['String']>;\n  caption?: Maybe<Scalars['String']>;\n  width?: Maybe<Scalars['Int']>;\n  height?: Maybe<Scalars['Int']>;\n  formats?: Maybe<Scalars['JSON']>;\n  hash?: Maybe<Scalars['String']>;\n  ext?: Maybe<Scalars['String']>;\n  mime?: Maybe<Scalars['String']>;\n  size?: Maybe<Scalars['Float']>;\n  url?: Maybe<Scalars['String']>;\n  previewUrl?: Maybe<Scalars['String']>;\n  provider?: Maybe<Scalars['String']>;\n  provider_metadata?: Maybe<Scalars['JSON']>;\n  related?: Maybe<Array<Maybe<Scalars['ID']>>>;\n  created_by?: Maybe<Scalars['ID']>;\n  updated_by?: Maybe<Scalars['ID']>;\n};\n\nexport type EditHomeBannerInput = {\n  images?: Maybe<Array<Maybe<Scalars['ID']>>>;\n  published_at?: Maybe<Scalars['DateTime']>;\n  created_by?: Maybe<Scalars['ID']>;\n  updated_by?: Maybe<Scalars['ID']>;\n};\n\nexport type EditHotelInput = {\n  name?: Maybe<Scalars['String']>;\n  stars?: Maybe<Scalars['Int']>;\n  url?: Maybe<Scalars['String']>;\n  trips?: Maybe<Array<Maybe<Scalars['ID']>>>;\n  published_at?: Maybe<Scalars['DateTime']>;\n  created_by?: Maybe<Scalars['ID']>;\n  updated_by?: Maybe<Scalars['ID']>;\n};\n\nexport type EditLocaleInput = {\n  name?: Maybe<Scalars['String']>;\n  code?: Maybe<Scalars['String']>;\n  created_by?: Maybe<Scalars['ID']>;\n  updated_by?: Maybe<Scalars['ID']>;\n};\n\nexport type EditLocationInput = {\n  name?: Maybe<Scalars['String']>;\n  description?: Maybe<Scalars['String']>;\n  images?: Maybe<Array<Maybe<Scalars['ID']>>>;\n  city?: Maybe<Scalars['ID']>;\n  coordinate?: Maybe<EditComponentCoordinateCoordinateInput>;\n  localizations?: Maybe<Array<Maybe<Scalars['ID']>>>;\n  locale?: Maybe<Scalars['String']>;\n  published_at?: Maybe<Scalars['DateTime']>;\n  created_by?: Maybe<Scalars['ID']>;\n  updated_by?: Maybe<Scalars['ID']>;\n};\n\nexport type EditPartnerInput = {\n  name?: Maybe<Scalars['String']>;\n  phone?: Maybe<Scalars['String']>;\n  address?: Maybe<Scalars['String']>;\n  email?: Maybe<Scalars['String']>;\n  trips?: Maybe<Array<Maybe<Scalars['ID']>>>;\n  agreement?: Maybe<Scalars['String']>;\n  commission?: Maybe<Scalars['Float']>;\n  revenueSource?: Maybe<Enum_Partner_Revenuesource>;\n  agreementStatus?: Maybe<Enum_Partner_Agreementstatus>;\n  notes?: Maybe<Scalars['String']>;\n  phone2?: Maybe<Scalars['String']>;\n  published_at?: Maybe<Scalars['DateTime']>;\n  created_by?: Maybe<Scalars['ID']>;\n  updated_by?: Maybe<Scalars['ID']>;\n};\n\nexport type EditReviewInput = {\n  text?: Maybe<Scalars['String']>;\n  rating?: Maybe<Scalars['Float']>;\n  author?: Maybe<Scalars['ID']>;\n  active?: Maybe<Scalars['Boolean']>;\n  trip?: Maybe<Scalars['ID']>;\n  published_at?: Maybe<Scalars['DateTime']>;\n  created_by?: Maybe<Scalars['ID']>;\n  updated_by?: Maybe<Scalars['ID']>;\n};\n\nexport type EditRoleInput = {\n  name?: Maybe<Scalars['String']>;\n  description?: Maybe<Scalars['String']>;\n  type?: Maybe<Scalars['String']>;\n  permissions?: Maybe<Array<Maybe<Scalars['ID']>>>;\n  users?: Maybe<Array<Maybe<Scalars['ID']>>>;\n  created_by?: Maybe<Scalars['ID']>;\n  updated_by?: Maybe<Scalars['ID']>;\n};\n\nexport type EditSubscriberInput = {\n  email?: Maybe<Scalars['String']>;\n  published_at?: Maybe<Scalars['DateTime']>;\n  created_by?: Maybe<Scalars['ID']>;\n  updated_by?: Maybe<Scalars['ID']>;\n};\n\nexport type EditTripInput = {\n  name?: Maybe<Scalars['String']>;\n  previewImage?: Maybe<Scalars['ID']>;\n  active?: Maybe<Scalars['Boolean']>;\n  trip_type?: Maybe<Enum_Trips_Trip_Type>;\n  description?: Maybe<Scalars['String']>;\n  duration?: Maybe<Scalars['Int']>;\n  partner?: Maybe<Scalars['ID']>;\n  currency?: Maybe<Enum_Trips_Currency>;\n  city?: Maybe<Scalars['ID']>;\n  features?: Maybe<Array<Maybe<EditComponentFeatureFeatureInput>>>;\n  basePrice?: Maybe<Scalars['Int']>;\n  basePeopleCount?: Maybe<Scalars['Int']>;\n  discount?: Maybe<Scalars['Float']>;\n  travelType?: Maybe<Enum_Trips_Traveltype>;\n  hotel?: Maybe<Scalars['ID']>;\n  plan?: Maybe<Array<Maybe<EditComponentTimelineTimelineInput>>>;\n  sequence?: Maybe<Scalars['String']>;\n  localizations?: Maybe<Array<Maybe<Scalars['ID']>>>;\n  locale?: Maybe<Scalars['String']>;\n  published_at?: Maybe<Scalars['DateTime']>;\n  created_by?: Maybe<Scalars['ID']>;\n  updated_by?: Maybe<Scalars['ID']>;\n};\n\nexport type EditUserInput = {\n  username?: Maybe<Scalars['String']>;\n  email?: Maybe<Scalars['String']>;\n  provider?: Maybe<Scalars['String']>;\n  password?: Maybe<Scalars['String']>;\n  resetPasswordToken?: Maybe<Scalars['String']>;\n  confirmationToken?: Maybe<Scalars['String']>;\n  confirmed?: Maybe<Scalars['Boolean']>;\n  blocked?: Maybe<Scalars['Boolean']>;\n  role?: Maybe<Scalars['ID']>;\n  created_by?: Maybe<Scalars['ID']>;\n  updated_by?: Maybe<Scalars['ID']>;\n};\n\nexport type UpdateBookingInput = {\n  where?: Maybe<InputId>;\n  data?: Maybe<EditBookingInput>;\n};\n\nexport type UpdateBookingPayload = {\n  __typename?: 'updateBookingPayload';\n  booking?: Maybe<Booking>;\n};\n\nexport type UpdateCityInput = {\n  where?: Maybe<InputId>;\n  data?: Maybe<EditCityInput>;\n};\n\nexport type UpdateCityPayload = {\n  __typename?: 'updateCityPayload';\n  city?: Maybe<City>;\n};\n\nexport type UpdateFeatureInput = {\n  where?: Maybe<InputId>;\n  data?: Maybe<EditFeatureInput>;\n};\n\nexport type UpdateFeaturePayload = {\n  __typename?: 'updateFeaturePayload';\n  feature?: Maybe<Feature>;\n};\n\nexport type UpdateHomeBannerInput = {\n  data?: Maybe<EditHomeBannerInput>;\n};\n\nexport type UpdateHomeBannerPayload = {\n  __typename?: 'updateHomeBannerPayload';\n  homeBanner?: Maybe<HomeBanner>;\n};\n\nexport type UpdateHotelInput = {\n  where?: Maybe<InputId>;\n  data?: Maybe<EditHotelInput>;\n};\n\nexport type UpdateHotelPayload = {\n  __typename?: 'updateHotelPayload';\n  hotel?: Maybe<Hotels>;\n};\n\nexport type UpdateLocationInput = {\n  where?: Maybe<InputId>;\n  data?: Maybe<EditLocationInput>;\n};\n\nexport type UpdateLocationPayload = {\n  __typename?: 'updateLocationPayload';\n  location?: Maybe<Location>;\n};\n\nexport type UpdatePartnerInput = {\n  where?: Maybe<InputId>;\n  data?: Maybe<EditPartnerInput>;\n};\n\nexport type UpdatePartnerPayload = {\n  __typename?: 'updatePartnerPayload';\n  partner?: Maybe<Partner>;\n};\n\nexport type UpdateReviewInput = {\n  where?: Maybe<InputId>;\n  data?: Maybe<EditReviewInput>;\n};\n\nexport type UpdateReviewPayload = {\n  __typename?: 'updateReviewPayload';\n  review?: Maybe<Review>;\n};\n\nexport type UpdateRoleInput = {\n  where?: Maybe<InputId>;\n  data?: Maybe<EditRoleInput>;\n};\n\nexport type UpdateRolePayload = {\n  __typename?: 'updateRolePayload';\n  role?: Maybe<UsersPermissionsRole>;\n};\n\nexport type UpdateSubscriberInput = {\n  where?: Maybe<InputId>;\n  data?: Maybe<EditSubscriberInput>;\n};\n\nexport type UpdateSubscriberPayload = {\n  __typename?: 'updateSubscriberPayload';\n  subscriber?: Maybe<Subscribers>;\n};\n\nexport type UpdateTripInput = {\n  where?: Maybe<InputId>;\n  data?: Maybe<EditTripInput>;\n};\n\nexport type UpdateTripPayload = {\n  __typename?: 'updateTripPayload';\n  trip?: Maybe<Trips>;\n};\n\nexport type UpdateUserInput = {\n  where?: Maybe<InputId>;\n  data?: Maybe<EditUserInput>;\n};\n\nexport type UpdateUserPayload = {\n  __typename?: 'updateUserPayload';\n  user?: Maybe<UsersPermissionsUser>;\n};\n\nexport type CreateBookingQueryMutationVariables = Exact<{\n  tripId: Scalars['ID'];\n  fullName: Scalars['String'];\n  basePrice: Scalars['Float'];\n  discount?: Maybe<Scalars['Float']>;\n  basePeopleCount: Scalars['Int'];\n  phone: Scalars['String'];\n  arrivalDate: Scalars['Date'];\n  message?: Maybe<Scalars['String']>;\n  currency: Enum_Booking_Currency;\n  email: Scalars['String'];\n  language: Scalars['String'];\n  adults: Scalars['Int'];\n  children: Scalars['Int'];\n}>;\n\n\nexport type CreateBookingQueryMutation = (\n  { __typename?: 'Mutation' }\n  & { createBooking?: Maybe<(\n    { __typename?: 'createBookingPayload' }\n    & { booking?: Maybe<(\n      { __typename?: 'Booking' }\n      & Pick<Booking, 'message'>\n    )> }\n  )> }\n);\n\nexport type CitiesQueryVariables = Exact<{\n  limit?: Maybe<Scalars['Int']>;\n  locale?: Maybe<Scalars['String']>;\n}>;\n\n\nexport type CitiesQuery = (\n  { __typename?: 'Query' }\n  & { cities?: Maybe<Array<Maybe<(\n    { __typename?: 'City' }\n    & CityInfoFragment\n  )>>> }\n);\n\nexport type GetCityQueryVariables = Exact<{\n  id: Scalars['ID'];\n}>;\n\n\nexport type GetCityQuery = (\n  { __typename?: 'Query' }\n  & { city?: Maybe<(\n    { __typename?: 'City' }\n    & CityInfoFragment\n  )> }\n);\n\nexport type GetLocalizedCityQueryVariables = Exact<{\n  id: Scalars['ID'];\n  locale: Scalars['String'];\n}>;\n\n\nexport type GetLocalizedCityQuery = (\n  { __typename?: 'Query' }\n  & { cities?: Maybe<Array<Maybe<(\n    { __typename?: 'City' }\n    & CityInfoFragment\n  )>>> }\n);\n\nexport type CityInfoFragment = (\n  { __typename?: 'City' }\n  & Pick<City, 'id' | 'name' | 'description' | 'locale'>\n  & { localizations?: Maybe<Array<Maybe<(\n    { __typename?: 'City' }\n    & Pick<City, 'id' | 'locale'>\n  )>>>, image?: Maybe<(\n    { __typename?: 'UploadFile' }\n    & Pick<UploadFile, 'id' | 'width' | 'height' | 'url' | 'formats'>\n  )> }\n);\n\nexport type FeaturesQueryVariables = Exact<{\n  locale: Scalars['String'];\n}>;\n\n\nexport type FeaturesQuery = (\n  { __typename?: 'Query' }\n  & { features?: Maybe<Array<Maybe<(\n    { __typename?: 'Feature' }\n    & Pick<Feature, 'name'>\n  )>>> }\n);\n\nexport type HomeCarousellQueryVariables = Exact<{ [key: string]: never; }>;\n\n\nexport type HomeCarousellQuery = (\n  { __typename?: 'Query' }\n  & { homeBanner?: Maybe<(\n    { __typename?: 'HomeBanner' }\n    & { images?: Maybe<Array<Maybe<(\n      { __typename?: 'UploadFile' }\n      & Pick<UploadFile, 'id' | 'width' | 'height' | 'url' | 'formats'>\n    )>>> }\n  )> }\n);\n\nexport type GetLocationsQueryVariables = Exact<{\n  locale: Scalars['String'];\n  ids: Array<Scalars['String']> | Scalars['String'];\n}>;\n\n\nexport type GetLocationsQuery = (\n  { __typename?: 'Query' }\n  & { locations?: Maybe<Array<Maybe<(\n    { __typename?: 'Location' }\n    & Pick<Location, 'id' | 'name' | 'description' | 'locale'>\n    & { coordinate?: Maybe<(\n      { __typename?: 'ComponentCoordinateCoordinate' }\n      & Pick<ComponentCoordinateCoordinate, 'latitude' | 'longitude'>\n    )>, images?: Maybe<Array<Maybe<(\n      { __typename?: 'UploadFile' }\n      & Pick<UploadFile, 'id' | 'width' | 'height' | 'url' | 'formats'>\n    )>>>, city?: Maybe<(\n      { __typename?: 'City' }\n      & Pick<City, 'id' | 'name' | 'description' | 'locale'>\n      & { localizations?: Maybe<Array<Maybe<(\n        { __typename?: 'City' }\n        & Pick<City, 'id' | 'locale'>\n      )>>>, image?: Maybe<(\n        { __typename?: 'UploadFile' }\n        & Pick<UploadFile, 'id' | 'width' | 'height' | 'url' | 'formats'>\n      )> }\n    )> }\n  )>>> }\n);\n\nexport type AddToNewsLetterMutationVariables = Exact<{\n  email: Scalars['String'];\n}>;\n\n\nexport type AddToNewsLetterMutation = (\n  { __typename?: 'Mutation' }\n  & { createSubscriber?: Maybe<(\n    { __typename?: 'createSubscriberPayload' }\n    & { subscriber?: Maybe<(\n      { __typename?: 'Subscribers' }\n      & Pick<Subscribers, 'email'>\n    )> }\n  )> }\n);\n\nexport type TripsQueryVariables = Exact<{\n  limit?: Maybe<Scalars['Int']>;\n  locale?: Maybe<Scalars['String']>;\n  where?: Maybe<Scalars['JSON']>;\n}>;\n\n\nexport type TripsQuery = (\n  { __typename?: 'Query' }\n  & { trips?: Maybe<Array<Maybe<(\n    { __typename?: 'Trips' }\n    & TripInfoFragment\n  )>>> }\n);\n\nexport type GetTripQueryVariables = Exact<{\n  id: Scalars['ID'];\n}>;\n\n\nexport type GetTripQuery = (\n  { __typename?: 'Query' }\n  & { trip?: Maybe<(\n    { __typename?: 'Trips' }\n    & TripInfoFragment\n  )> }\n);\n\nexport type GetLocalizedTripQueryVariables = Exact<{\n  id: Scalars['ID'];\n  locale: Scalars['String'];\n}>;\n\n\nexport type GetLocalizedTripQuery = (\n  { __typename?: 'Query' }\n  & { trips?: Maybe<Array<Maybe<(\n    { __typename?: 'Trips' }\n    & TripInfoFragment\n  )>>> }\n);\n\nexport type TripInfoFragment = (\n  { __typename?: 'Trips' }\n  & Pick<Trips, 'id' | 'name' | 'active' | 'description' | 'locale' | 'trip_type' | 'duration' | 'travelType' | 'basePrice' | 'discount' | 'currency' | 'basePeopleCount'>\n  & { city?: Maybe<(\n    { __typename?: 'City' }\n    & Pick<City, 'id' | 'name'>\n  )>, hotel?: Maybe<(\n    { __typename?: 'Hotels' }\n    & Pick<Hotels, 'id' | 'name' | 'url' | 'stars'>\n  )>, plan?: Maybe<Array<Maybe<(\n    { __typename?: 'ComponentTimelineTimeline' }\n    & Pick<ComponentTimelineTimeline, 'day' | 'transportationType' | 'description' | 'restDay'>\n    & { locations?: Maybe<Array<Maybe<(\n      { __typename?: 'Location' }\n      & Pick<Location, 'id' | 'name'>\n      & { city?: Maybe<(\n        { __typename?: 'City' }\n        & Pick<City, 'id'>\n      )> }\n    )>>>, travelTo?: Maybe<(\n      { __typename?: 'City' }\n      & Pick<City, 'id' | 'name'>\n    )> }\n  )>>>, previewImage?: Maybe<(\n    { __typename?: 'UploadFile' }\n    & Pick<UploadFile, 'id' | 'width' | 'height' | 'url' | 'formats'>\n  )>, localizations?: Maybe<Array<Maybe<(\n    { __typename?: 'Trips' }\n    & Pick<Trips, 'id' | 'locale'>\n  )>>>, features?: Maybe<Array<Maybe<(\n    { __typename?: 'ComponentFeatureFeature' }\n    & Pick<ComponentFeatureFeature, 'included'>\n    & { feature?: Maybe<(\n      { __typename?: 'Feature' }\n      & Pick<Feature, 'name' | 'info'>\n    )> }\n  )>>> }\n);\n\nexport const CityInfoFragmentDoc = gql`\n    fragment CityInfo on City {\n  id\n  name\n  description\n  locale\n  localizations {\n    id\n    locale\n  }\n  image {\n    id\n    width\n    height\n    url\n    formats\n  }\n}\n    `;\nexport const TripInfoFragmentDoc = gql`\n    fragment tripInfo on Trips {\n  id\n  name\n  active\n  description\n  locale\n  trip_type\n  duration\n  travelType\n  city {\n    id\n    name\n  }\n  hotel {\n    id\n    name\n    url\n    stars\n  }\n  plan {\n    day\n    locations {\n      id\n      name\n      city {\n        id\n      }\n    }\n    transportationType\n    travelTo {\n      id\n      name\n    }\n    description\n    restDay\n  }\n  previewImage {\n    id\n    width\n    height\n    url\n    formats\n  }\n  localizations {\n    id\n    locale\n  }\n  basePrice\n  discount\n  currency\n  basePeopleCount\n  features {\n    included\n    feature {\n      name\n      info\n    }\n  }\n}\n    `;\nexport const CreateBookingQueryDocument = gql`\n    mutation createBookingQuery($tripId: ID!, $fullName: String!, $basePrice: Float!, $discount: Float = 0, $basePeopleCount: Int!, $phone: String!, $arrivalDate: Date!, $message: String, $currency: ENUM_BOOKING_CURRENCY!, $email: String!, $language: String!, $adults: Int!, $children: Int!) {\n  createBooking(\n    input: {data: {trip: $tripId, basePrice: $basePrice, discount: $discount, message: $message, fullName: $fullName, basePeopleCount: $basePeopleCount, phone: $phone, arrivalDate: $arrivalDate, currency: $currency, email: $email, language: $language, adults: $adults, children: $children}}\n  ) {\n    booking {\n      message\n    }\n  }\n}\n    `;\n\n  @Injectable({\n    providedIn: 'root'\n  })\n  export class CreateBookingQueryGQL extends Apollo.Mutation<CreateBookingQueryMutation, CreateBookingQueryMutationVariables> {\n    document = CreateBookingQueryDocument;\n    \n    constructor(apollo: Apollo.Apollo) {\n      super(apollo);\n    }\n  }\nexport const CitiesDocument = gql`\n    query cities($limit: Int, $locale: String) {\n  cities(limit: $limit, locale: $locale) {\n    ...CityInfo\n  }\n}\n    ${CityInfoFragmentDoc}`;\n\n  @Injectable({\n    providedIn: 'root'\n  })\n  export class CitiesGQL extends Apollo.Query<CitiesQuery, CitiesQueryVariables> {\n    document = CitiesDocument;\n    \n    constructor(apollo: Apollo.Apollo) {\n      super(apollo);\n    }\n  }\nexport const GetCityDocument = gql`\n    query getCity($id: ID!) {\n  city(id: $id) {\n    ...CityInfo\n  }\n}\n    ${CityInfoFragmentDoc}`;\n\n  @Injectable({\n    providedIn: 'root'\n  })\n  export class GetCityGQL extends Apollo.Query<GetCityQuery, GetCityQueryVariables> {\n    document = GetCityDocument;\n    \n    constructor(apollo: Apollo.Apollo) {\n      super(apollo);\n    }\n  }\nexport const GetLocalizedCityDocument = gql`\n    query getLocalizedCity($id: ID!, $locale: String!) {\n  cities(locale: $locale, where: {_or: [{localizations: {id: $id}}, {id: $id}]}) {\n    ...CityInfo\n  }\n}\n    ${CityInfoFragmentDoc}`;\n\n  @Injectable({\n    providedIn: 'root'\n  })\n  export class GetLocalizedCityGQL extends Apollo.Query<GetLocalizedCityQuery, GetLocalizedCityQueryVariables> {\n    document = GetLocalizedCityDocument;\n    \n    constructor(apollo: Apollo.Apollo) {\n      super(apollo);\n    }\n  }\nexport const FeaturesDocument = gql`\n    query features($locale: String!) {\n  features(locale: $locale) {\n    name\n  }\n}\n    `;\n\n  @Injectable({\n    providedIn: 'root'\n  })\n  export class FeaturesGQL extends Apollo.Query<FeaturesQuery, FeaturesQueryVariables> {\n    document = FeaturesDocument;\n    \n    constructor(apollo: Apollo.Apollo) {\n      super(apollo);\n    }\n  }\nexport const HomeCarousellDocument = gql`\n    query homeCarousell {\n  homeBanner {\n    images {\n      id\n      width\n      height\n      url\n      formats\n    }\n  }\n}\n    `;\n\n  @Injectable({\n    providedIn: 'root'\n  })\n  export class HomeCarousellGQL extends Apollo.Query<HomeCarousellQuery, HomeCarousellQueryVariables> {\n    document = HomeCarousellDocument;\n    \n    constructor(apollo: Apollo.Apollo) {\n      super(apollo);\n    }\n  }\nexport const GetLocationsDocument = gql`\n    query getLocations($locale: String!, $ids: [String!]!) {\n  locations(locale: $locale, where: {id_in: $ids}) {\n    id\n    name\n    description\n    coordinate {\n      latitude\n      longitude\n    }\n    locale\n    images {\n      id\n      width\n      height\n      url\n      formats\n    }\n    city {\n      id\n      name\n      description\n      locale\n      localizations {\n        id\n        locale\n      }\n      image {\n        id\n        width\n        height\n        url\n        formats\n      }\n    }\n  }\n}\n    `;\n\n  @Injectable({\n    providedIn: 'root'\n  })\n  export class GetLocationsGQL extends Apollo.Query<GetLocationsQuery, GetLocationsQueryVariables> {\n    document = GetLocationsDocument;\n    \n    constructor(apollo: Apollo.Apollo) {\n      super(apollo);\n    }\n  }\nexport const AddToNewsLetterDocument = gql`\n    mutation addToNewsLetter($email: String!) {\n  createSubscriber(input: {data: {email: $email}}) {\n    subscriber {\n      email\n    }\n  }\n}\n    `;\n\n  @Injectable({\n    providedIn: 'root'\n  })\n  export class AddToNewsLetterGQL extends Apollo.Mutation<AddToNewsLetterMutation, AddToNewsLetterMutationVariables> {\n    document = AddToNewsLetterDocument;\n    \n    constructor(apollo: Apollo.Apollo) {\n      super(apollo);\n    }\n  }\nexport const TripsDocument = gql`\n    query trips($limit: Int = 10, $locale: String = \"en\", $where: JSON) {\n  trips(limit: $limit, locale: $locale, where: $where) {\n    ...tripInfo\n  }\n}\n    ${TripInfoFragmentDoc}`;\n\n  @Injectable({\n    providedIn: 'root'\n  })\n  export class TripsGQL extends Apollo.Query<TripsQuery, TripsQueryVariables> {\n    document = TripsDocument;\n    \n    constructor(apollo: Apollo.Apollo) {\n      super(apollo);\n    }\n  }\nexport const GetTripDocument = gql`\n    query getTrip($id: ID!) {\n  trip(id: $id) {\n    ...tripInfo\n  }\n}\n    ${TripInfoFragmentDoc}`;\n\n  @Injectable({\n    providedIn: 'root'\n  })\n  export class GetTripGQL extends Apollo.Query<GetTripQuery, GetTripQueryVariables> {\n    document = GetTripDocument;\n    \n    constructor(apollo: Apollo.Apollo) {\n      super(apollo);\n    }\n  }\nexport const GetLocalizedTripDocument = gql`\n    query getLocalizedTrip($id: ID!, $locale: String!) {\n  trips(locale: $locale, where: {_or: [{localizations: {id: $id}}, {id: $id}]}) {\n    ...tripInfo\n  }\n}\n    ${TripInfoFragmentDoc}`;\n\n  @Injectable({\n    providedIn: 'root'\n  })\n  export class GetLocalizedTripGQL extends Apollo.Query<GetLocalizedTripQuery, GetLocalizedTripQueryVariables> {\n    document = GetLocalizedTripDocument;\n    \n    constructor(apollo: Apollo.Apollo) {\n      super(apollo);\n    }\n  }",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "apollo",
                        "type": "Apollo.Apollo"
                    }
                ],
                "line": 3691,
                "jsdoctags": [
                    {
                        "name": "apollo",
                        "type": "Apollo.Apollo",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "type": "injectable"
        },
        {
            "name": "GetCityGQL",
            "id": "injectable-GetCityGQL-54bb7cbcdd682e4d53ca5e8a5c5399f6",
            "file": "src/app/data/services/saferniGraphql.service.ts",
            "properties": [
                {
                    "name": "document",
                    "defaultValue": "GetCityDocument",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 3655
                }
            ],
            "methods": [],
            "description": "",
            "sourceCode": "import { gql } from 'apollo-angular';\nimport { Injectable } from '@angular/core';\nimport * as Apollo from 'apollo-angular';\nexport type Maybe<T> = T | null;\nexport type Exact<T extends { [key: string]: unknown }> = { [K in keyof T]: T[K] };\nexport type MakeOptional<T, K extends keyof T> = Omit<T, K> & { [SubKey in K]?: Maybe<T[SubKey]> };\nexport type MakeMaybe<T, K extends keyof T> = Omit<T, K> & { [SubKey in K]: Maybe<T[SubKey]> };\n/** All built-in and custom scalars, mapped to their actual values */\nexport type Scalars = {\n  ID: string;\n  String: string;\n  Boolean: boolean;\n  Int: number;\n  Float: number;\n  /** A date string, such as 2007-12-03, compliant with the `full-date` format outlined in section 5.6 of the RFC 3339 profile of the ISO 8601 standard for representation of dates and times using the Gregorian calendar. */\n  Date: any;\n  /** A date-time string at UTC, such as 2007-12-03T10:15:30Z, compliant with the `date-time` format outlined in section 5.6 of the RFC 3339 profile of the ISO 8601 standard for representation of dates and times using the Gregorian calendar. */\n  DateTime: any;\n  /** The `JSON` scalar type represents JSON values as specified by [ECMA-404](http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf). */\n  JSON: any;\n  /** The `Long` scalar type represents 52-bit integers */\n  Long: any;\n  /** A time string with format: HH:mm:ss.SSS */\n  Time: any;\n  /** The `Upload` scalar type represents a file upload. */\n  Upload: any;\n};\n\n\n\nexport type AdminUser = {\n  __typename?: 'AdminUser';\n  id: Scalars['ID'];\n  username?: Maybe<Scalars['String']>;\n  firstname: Scalars['String'];\n  lastname: Scalars['String'];\n};\n\nexport type Booking = {\n  __typename?: 'Booking';\n  id: Scalars['ID'];\n  _id: Scalars['ID'];\n  createdAt: Scalars['DateTime'];\n  updatedAt: Scalars['DateTime'];\n  trip?: Maybe<Trips>;\n  approved?: Maybe<Scalars['Boolean']>;\n  basePrice: Scalars['Float'];\n  currency: Enum_Booking_Currency;\n  basePeopleCount: Scalars['Int'];\n  discount?: Maybe<Scalars['Float']>;\n  fullName: Scalars['String'];\n  phone: Scalars['String'];\n  message?: Maybe<Scalars['String']>;\n  arrivalDate: Scalars['Date'];\n  language?: Maybe<Scalars['String']>;\n  userBookingStatus?: Maybe<Enum_Booking_Userbookingstatus>;\n  email: Scalars['String'];\n  adults: Scalars['Int'];\n  children?: Maybe<Scalars['Int']>;\n  totalPrice?: Maybe<Scalars['Float']>;\n  published_at?: Maybe<Scalars['DateTime']>;\n};\n\nexport type BookingAggregator = {\n  __typename?: 'BookingAggregator';\n  count?: Maybe<Scalars['Int']>;\n  totalCount?: Maybe<Scalars['Int']>;\n  sum?: Maybe<BookingAggregatorSum>;\n  avg?: Maybe<BookingAggregatorAvg>;\n  min?: Maybe<BookingAggregatorMin>;\n  max?: Maybe<BookingAggregatorMax>;\n};\n\nexport type BookingAggregatorAvg = {\n  __typename?: 'BookingAggregatorAvg';\n  basePrice?: Maybe<Scalars['Float']>;\n  basePeopleCount?: Maybe<Scalars['Float']>;\n  discount?: Maybe<Scalars['Float']>;\n  adults?: Maybe<Scalars['Float']>;\n  children?: Maybe<Scalars['Float']>;\n  totalPrice?: Maybe<Scalars['Float']>;\n};\n\nexport type BookingAggregatorMax = {\n  __typename?: 'BookingAggregatorMax';\n  basePrice?: Maybe<Scalars['Float']>;\n  basePeopleCount?: Maybe<Scalars['Float']>;\n  discount?: Maybe<Scalars['Float']>;\n  adults?: Maybe<Scalars['Float']>;\n  children?: Maybe<Scalars['Float']>;\n  totalPrice?: Maybe<Scalars['Float']>;\n};\n\nexport type BookingAggregatorMin = {\n  __typename?: 'BookingAggregatorMin';\n  basePrice?: Maybe<Scalars['Float']>;\n  basePeopleCount?: Maybe<Scalars['Float']>;\n  discount?: Maybe<Scalars['Float']>;\n  adults?: Maybe<Scalars['Float']>;\n  children?: Maybe<Scalars['Float']>;\n  totalPrice?: Maybe<Scalars['Float']>;\n};\n\nexport type BookingAggregatorSum = {\n  __typename?: 'BookingAggregatorSum';\n  basePrice?: Maybe<Scalars['Float']>;\n  basePeopleCount?: Maybe<Scalars['Float']>;\n  discount?: Maybe<Scalars['Float']>;\n  adults?: Maybe<Scalars['Float']>;\n  children?: Maybe<Scalars['Float']>;\n  totalPrice?: Maybe<Scalars['Float']>;\n};\n\nexport type BookingConnection = {\n  __typename?: 'BookingConnection';\n  values?: Maybe<Array<Maybe<Booking>>>;\n  groupBy?: Maybe<BookingGroupBy>;\n  aggregate?: Maybe<BookingAggregator>;\n};\n\nexport type BookingConnectionAdults = {\n  __typename?: 'BookingConnectionAdults';\n  key?: Maybe<Scalars['Int']>;\n  connection?: Maybe<BookingConnection>;\n};\n\nexport type BookingConnectionApproved = {\n  __typename?: 'BookingConnectionApproved';\n  key?: Maybe<Scalars['Boolean']>;\n  connection?: Maybe<BookingConnection>;\n};\n\nexport type BookingConnectionArrivalDate = {\n  __typename?: 'BookingConnectionArrivalDate';\n  key?: Maybe<Scalars['ID']>;\n  connection?: Maybe<BookingConnection>;\n};\n\nexport type BookingConnectionBasePeopleCount = {\n  __typename?: 'BookingConnectionBasePeopleCount';\n  key?: Maybe<Scalars['Int']>;\n  connection?: Maybe<BookingConnection>;\n};\n\nexport type BookingConnectionBasePrice = {\n  __typename?: 'BookingConnectionBasePrice';\n  key?: Maybe<Scalars['Float']>;\n  connection?: Maybe<BookingConnection>;\n};\n\nexport type BookingConnectionChildren = {\n  __typename?: 'BookingConnectionChildren';\n  key?: Maybe<Scalars['Int']>;\n  connection?: Maybe<BookingConnection>;\n};\n\nexport type BookingConnectionCreatedAt = {\n  __typename?: 'BookingConnectionCreatedAt';\n  key?: Maybe<Scalars['DateTime']>;\n  connection?: Maybe<BookingConnection>;\n};\n\nexport type BookingConnectionCurrency = {\n  __typename?: 'BookingConnectionCurrency';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<BookingConnection>;\n};\n\nexport type BookingConnectionDiscount = {\n  __typename?: 'BookingConnectionDiscount';\n  key?: Maybe<Scalars['Float']>;\n  connection?: Maybe<BookingConnection>;\n};\n\nexport type BookingConnectionEmail = {\n  __typename?: 'BookingConnectionEmail';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<BookingConnection>;\n};\n\nexport type BookingConnectionFullName = {\n  __typename?: 'BookingConnectionFullName';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<BookingConnection>;\n};\n\nexport type BookingConnectionId = {\n  __typename?: 'BookingConnectionId';\n  key?: Maybe<Scalars['ID']>;\n  connection?: Maybe<BookingConnection>;\n};\n\nexport type BookingConnectionLanguage = {\n  __typename?: 'BookingConnectionLanguage';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<BookingConnection>;\n};\n\nexport type BookingConnectionMessage = {\n  __typename?: 'BookingConnectionMessage';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<BookingConnection>;\n};\n\nexport type BookingConnectionPhone = {\n  __typename?: 'BookingConnectionPhone';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<BookingConnection>;\n};\n\nexport type BookingConnectionPublished_At = {\n  __typename?: 'BookingConnectionPublished_at';\n  key?: Maybe<Scalars['DateTime']>;\n  connection?: Maybe<BookingConnection>;\n};\n\nexport type BookingConnectionTotalPrice = {\n  __typename?: 'BookingConnectionTotalPrice';\n  key?: Maybe<Scalars['Float']>;\n  connection?: Maybe<BookingConnection>;\n};\n\nexport type BookingConnectionTrip = {\n  __typename?: 'BookingConnectionTrip';\n  key?: Maybe<Scalars['ID']>;\n  connection?: Maybe<BookingConnection>;\n};\n\nexport type BookingConnectionUpdatedAt = {\n  __typename?: 'BookingConnectionUpdatedAt';\n  key?: Maybe<Scalars['DateTime']>;\n  connection?: Maybe<BookingConnection>;\n};\n\nexport type BookingConnectionUserBookingStatus = {\n  __typename?: 'BookingConnectionUserBookingStatus';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<BookingConnection>;\n};\n\nexport type BookingConnection_Id = {\n  __typename?: 'BookingConnection_id';\n  key?: Maybe<Scalars['ID']>;\n  connection?: Maybe<BookingConnection>;\n};\n\nexport type BookingGroupBy = {\n  __typename?: 'BookingGroupBy';\n  id?: Maybe<Array<Maybe<BookingConnectionId>>>;\n  _id?: Maybe<Array<Maybe<BookingConnection_Id>>>;\n  createdAt?: Maybe<Array<Maybe<BookingConnectionCreatedAt>>>;\n  updatedAt?: Maybe<Array<Maybe<BookingConnectionUpdatedAt>>>;\n  trip?: Maybe<Array<Maybe<BookingConnectionTrip>>>;\n  approved?: Maybe<Array<Maybe<BookingConnectionApproved>>>;\n  basePrice?: Maybe<Array<Maybe<BookingConnectionBasePrice>>>;\n  currency?: Maybe<Array<Maybe<BookingConnectionCurrency>>>;\n  basePeopleCount?: Maybe<Array<Maybe<BookingConnectionBasePeopleCount>>>;\n  discount?: Maybe<Array<Maybe<BookingConnectionDiscount>>>;\n  fullName?: Maybe<Array<Maybe<BookingConnectionFullName>>>;\n  phone?: Maybe<Array<Maybe<BookingConnectionPhone>>>;\n  message?: Maybe<Array<Maybe<BookingConnectionMessage>>>;\n  arrivalDate?: Maybe<Array<Maybe<BookingConnectionArrivalDate>>>;\n  language?: Maybe<Array<Maybe<BookingConnectionLanguage>>>;\n  userBookingStatus?: Maybe<Array<Maybe<BookingConnectionUserBookingStatus>>>;\n  email?: Maybe<Array<Maybe<BookingConnectionEmail>>>;\n  adults?: Maybe<Array<Maybe<BookingConnectionAdults>>>;\n  children?: Maybe<Array<Maybe<BookingConnectionChildren>>>;\n  totalPrice?: Maybe<Array<Maybe<BookingConnectionTotalPrice>>>;\n  published_at?: Maybe<Array<Maybe<BookingConnectionPublished_At>>>;\n};\n\nexport type BookingInput = {\n  trip?: Maybe<Scalars['ID']>;\n  approved?: Maybe<Scalars['Boolean']>;\n  basePrice: Scalars['Float'];\n  currency: Enum_Booking_Currency;\n  basePeopleCount: Scalars['Int'];\n  discount?: Maybe<Scalars['Float']>;\n  fullName: Scalars['String'];\n  phone: Scalars['String'];\n  message?: Maybe<Scalars['String']>;\n  arrivalDate: Scalars['Date'];\n  language?: Maybe<Scalars['String']>;\n  userBookingStatus?: Maybe<Enum_Booking_Userbookingstatus>;\n  email: Scalars['String'];\n  adults: Scalars['Int'];\n  children?: Maybe<Scalars['Int']>;\n  totalPrice?: Maybe<Scalars['Float']>;\n  published_at?: Maybe<Scalars['DateTime']>;\n  created_by?: Maybe<Scalars['ID']>;\n  updated_by?: Maybe<Scalars['ID']>;\n};\n\nexport type City = {\n  __typename?: 'City';\n  id: Scalars['ID'];\n  _id: Scalars['ID'];\n  createdAt: Scalars['DateTime'];\n  updatedAt: Scalars['DateTime'];\n  name: Scalars['String'];\n  description?: Maybe<Scalars['String']>;\n  image?: Maybe<UploadFile>;\n  locale?: Maybe<Scalars['String']>;\n  published_at?: Maybe<Scalars['DateTime']>;\n  locations?: Maybe<Array<Maybe<Location>>>;\n  localizations?: Maybe<Array<Maybe<City>>>;\n};\n\n\nexport type CityLocationsArgs = {\n  sort?: Maybe<Scalars['String']>;\n  limit?: Maybe<Scalars['Int']>;\n  start?: Maybe<Scalars['Int']>;\n  where?: Maybe<Scalars['JSON']>;\n};\n\n\nexport type CityLocalizationsArgs = {\n  sort?: Maybe<Scalars['String']>;\n  limit?: Maybe<Scalars['Int']>;\n  start?: Maybe<Scalars['Int']>;\n  where?: Maybe<Scalars['JSON']>;\n};\n\nexport type CityAggregator = {\n  __typename?: 'CityAggregator';\n  count?: Maybe<Scalars['Int']>;\n  totalCount?: Maybe<Scalars['Int']>;\n};\n\nexport type CityConnection = {\n  __typename?: 'CityConnection';\n  values?: Maybe<Array<Maybe<City>>>;\n  groupBy?: Maybe<CityGroupBy>;\n  aggregate?: Maybe<CityAggregator>;\n};\n\nexport type CityConnectionCreatedAt = {\n  __typename?: 'CityConnectionCreatedAt';\n  key?: Maybe<Scalars['DateTime']>;\n  connection?: Maybe<CityConnection>;\n};\n\nexport type CityConnectionDescription = {\n  __typename?: 'CityConnectionDescription';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<CityConnection>;\n};\n\nexport type CityConnectionId = {\n  __typename?: 'CityConnectionId';\n  key?: Maybe<Scalars['ID']>;\n  connection?: Maybe<CityConnection>;\n};\n\nexport type CityConnectionImage = {\n  __typename?: 'CityConnectionImage';\n  key?: Maybe<Scalars['ID']>;\n  connection?: Maybe<CityConnection>;\n};\n\nexport type CityConnectionLocale = {\n  __typename?: 'CityConnectionLocale';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<CityConnection>;\n};\n\nexport type CityConnectionName = {\n  __typename?: 'CityConnectionName';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<CityConnection>;\n};\n\nexport type CityConnectionPublished_At = {\n  __typename?: 'CityConnectionPublished_at';\n  key?: Maybe<Scalars['DateTime']>;\n  connection?: Maybe<CityConnection>;\n};\n\nexport type CityConnectionUpdatedAt = {\n  __typename?: 'CityConnectionUpdatedAt';\n  key?: Maybe<Scalars['DateTime']>;\n  connection?: Maybe<CityConnection>;\n};\n\nexport type CityConnection_Id = {\n  __typename?: 'CityConnection_id';\n  key?: Maybe<Scalars['ID']>;\n  connection?: Maybe<CityConnection>;\n};\n\nexport type CityGroupBy = {\n  __typename?: 'CityGroupBy';\n  id?: Maybe<Array<Maybe<CityConnectionId>>>;\n  _id?: Maybe<Array<Maybe<CityConnection_Id>>>;\n  createdAt?: Maybe<Array<Maybe<CityConnectionCreatedAt>>>;\n  updatedAt?: Maybe<Array<Maybe<CityConnectionUpdatedAt>>>;\n  name?: Maybe<Array<Maybe<CityConnectionName>>>;\n  description?: Maybe<Array<Maybe<CityConnectionDescription>>>;\n  image?: Maybe<Array<Maybe<CityConnectionImage>>>;\n  locale?: Maybe<Array<Maybe<CityConnectionLocale>>>;\n  published_at?: Maybe<Array<Maybe<CityConnectionPublished_At>>>;\n};\n\nexport type CityInput = {\n  name: Scalars['String'];\n  description?: Maybe<Scalars['String']>;\n  image?: Maybe<Scalars['ID']>;\n  locations?: Maybe<Array<Maybe<Scalars['ID']>>>;\n  localizations?: Maybe<Array<Maybe<Scalars['ID']>>>;\n  locale?: Maybe<Scalars['String']>;\n  published_at?: Maybe<Scalars['DateTime']>;\n  created_by?: Maybe<Scalars['ID']>;\n  updated_by?: Maybe<Scalars['ID']>;\n};\n\nexport type ComponentCoordinateCoordinate = {\n  __typename?: 'ComponentCoordinateCoordinate';\n  id: Scalars['ID'];\n  _id: Scalars['ID'];\n  latitude: Scalars['Float'];\n  longitude: Scalars['Float'];\n};\n\nexport type ComponentCoordinateCoordinateInput = {\n  latitude: Scalars['Float'];\n  longitude: Scalars['Float'];\n};\n\nexport type ComponentFeatureFeature = {\n  __typename?: 'ComponentFeatureFeature';\n  id: Scalars['ID'];\n  _id: Scalars['ID'];\n  feature?: Maybe<Feature>;\n  included?: Maybe<Scalars['Boolean']>;\n};\n\nexport type ComponentFeatureFeatureInput = {\n  feature?: Maybe<Scalars['ID']>;\n  included?: Maybe<Scalars['Boolean']>;\n};\n\nexport type ComponentPricePrice = {\n  __typename?: 'ComponentPricePrice';\n  id: Scalars['ID'];\n  _id: Scalars['ID'];\n  basePrice: Scalars['Float'];\n  currency: Enum_Componentpriceprice_Currency;\n  basePeopleCount: Scalars['Int'];\n  extraAdultFee?: Maybe<Scalars['Float']>;\n  discount?: Maybe<Scalars['Float']>;\n};\n\nexport type ComponentPricePriceInput = {\n  basePrice: Scalars['Float'];\n  currency?: Maybe<Enum_Componentpriceprice_Currency>;\n  basePeopleCount: Scalars['Int'];\n  extraAdultFee?: Maybe<Scalars['Float']>;\n  discount?: Maybe<Scalars['Float']>;\n};\n\nexport type ComponentTimelineTimeline = {\n  __typename?: 'ComponentTimelineTimeline';\n  id: Scalars['ID'];\n  _id: Scalars['ID'];\n  day: Scalars['Int'];\n  description?: Maybe<Scalars['String']>;\n  travelTo?: Maybe<City>;\n  transportationType?: Maybe<Enum_Componenttimelinetimeline_Transportationtype>;\n  restDay?: Maybe<Scalars['Boolean']>;\n  locations?: Maybe<Array<Maybe<Location>>>;\n};\n\n\nexport type ComponentTimelineTimelineLocationsArgs = {\n  sort?: Maybe<Scalars['String']>;\n  limit?: Maybe<Scalars['Int']>;\n  start?: Maybe<Scalars['Int']>;\n  where?: Maybe<Scalars['JSON']>;\n};\n\nexport type ComponentTimelineTimelineInput = {\n  day: Scalars['Int'];\n  description?: Maybe<Scalars['String']>;\n  locations?: Maybe<Array<Maybe<Scalars['ID']>>>;\n  travelTo?: Maybe<Scalars['ID']>;\n  transportationType?: Maybe<Enum_Componenttimelinetimeline_Transportationtype>;\n  restDay?: Maybe<Scalars['Boolean']>;\n};\n\n\n\nexport enum Enum_Booking_Currency {\n  Dollar = 'dollar',\n  Lira = 'lira'\n}\n\nexport enum Enum_Booking_Userbookingstatus {\n  Initial = 'initial',\n  Confirmed = 'confirmed',\n  Canceled = 'canceled'\n}\n\nexport enum Enum_Componentpriceprice_Currency {\n  Dollar = 'dollar',\n  Lira = 'lira'\n}\n\nexport enum Enum_Componenttimelinetimeline_Transportationtype {\n  Arrival = 'arrival',\n  Departure = 'departure',\n  BetweenCities = 'betweenCities',\n  WithinCity = 'withinCity'\n}\n\nexport enum Enum_Partner_Agreementstatus {\n  Agreed = 'Agreed',\n  Discussing = 'discussing',\n  Termination = 'termination'\n}\n\nexport enum Enum_Partner_Revenuesource {\n  PricePercentage = 'pricePercentage',\n  InflatedPrice = 'inflatedPrice'\n}\n\nexport enum Enum_Trips_Currency {\n  Dollar = 'dollar',\n  Lira = 'lira'\n}\n\nexport enum Enum_Trips_Traveltype {\n  Private = 'private',\n  Public = 'public',\n  Both = 'both'\n}\n\nexport enum Enum_Trips_Trip_Type {\n  Touristic = 'touristic',\n  Medical = 'medical'\n}\n\nexport type Feature = {\n  __typename?: 'Feature';\n  id: Scalars['ID'];\n  _id: Scalars['ID'];\n  createdAt: Scalars['DateTime'];\n  updatedAt: Scalars['DateTime'];\n  name: Scalars['String'];\n  info?: Maybe<Scalars['String']>;\n  locale?: Maybe<Scalars['String']>;\n  published_at?: Maybe<Scalars['DateTime']>;\n  localizations?: Maybe<Array<Maybe<Feature>>>;\n};\n\n\nexport type FeatureLocalizationsArgs = {\n  sort?: Maybe<Scalars['String']>;\n  limit?: Maybe<Scalars['Int']>;\n  start?: Maybe<Scalars['Int']>;\n  where?: Maybe<Scalars['JSON']>;\n};\n\nexport type FeatureAggregator = {\n  __typename?: 'FeatureAggregator';\n  count?: Maybe<Scalars['Int']>;\n  totalCount?: Maybe<Scalars['Int']>;\n};\n\nexport type FeatureConnection = {\n  __typename?: 'FeatureConnection';\n  values?: Maybe<Array<Maybe<Feature>>>;\n  groupBy?: Maybe<FeatureGroupBy>;\n  aggregate?: Maybe<FeatureAggregator>;\n};\n\nexport type FeatureConnectionCreatedAt = {\n  __typename?: 'FeatureConnectionCreatedAt';\n  key?: Maybe<Scalars['DateTime']>;\n  connection?: Maybe<FeatureConnection>;\n};\n\nexport type FeatureConnectionId = {\n  __typename?: 'FeatureConnectionId';\n  key?: Maybe<Scalars['ID']>;\n  connection?: Maybe<FeatureConnection>;\n};\n\nexport type FeatureConnectionInfo = {\n  __typename?: 'FeatureConnectionInfo';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<FeatureConnection>;\n};\n\nexport type FeatureConnectionLocale = {\n  __typename?: 'FeatureConnectionLocale';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<FeatureConnection>;\n};\n\nexport type FeatureConnectionName = {\n  __typename?: 'FeatureConnectionName';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<FeatureConnection>;\n};\n\nexport type FeatureConnectionPublished_At = {\n  __typename?: 'FeatureConnectionPublished_at';\n  key?: Maybe<Scalars['DateTime']>;\n  connection?: Maybe<FeatureConnection>;\n};\n\nexport type FeatureConnectionUpdatedAt = {\n  __typename?: 'FeatureConnectionUpdatedAt';\n  key?: Maybe<Scalars['DateTime']>;\n  connection?: Maybe<FeatureConnection>;\n};\n\nexport type FeatureConnection_Id = {\n  __typename?: 'FeatureConnection_id';\n  key?: Maybe<Scalars['ID']>;\n  connection?: Maybe<FeatureConnection>;\n};\n\nexport type FeatureGroupBy = {\n  __typename?: 'FeatureGroupBy';\n  id?: Maybe<Array<Maybe<FeatureConnectionId>>>;\n  _id?: Maybe<Array<Maybe<FeatureConnection_Id>>>;\n  createdAt?: Maybe<Array<Maybe<FeatureConnectionCreatedAt>>>;\n  updatedAt?: Maybe<Array<Maybe<FeatureConnectionUpdatedAt>>>;\n  name?: Maybe<Array<Maybe<FeatureConnectionName>>>;\n  info?: Maybe<Array<Maybe<FeatureConnectionInfo>>>;\n  locale?: Maybe<Array<Maybe<FeatureConnectionLocale>>>;\n  published_at?: Maybe<Array<Maybe<FeatureConnectionPublished_At>>>;\n};\n\nexport type FeatureInput = {\n  name: Scalars['String'];\n  info?: Maybe<Scalars['String']>;\n  localizations?: Maybe<Array<Maybe<Scalars['ID']>>>;\n  locale?: Maybe<Scalars['String']>;\n  published_at?: Maybe<Scalars['DateTime']>;\n  created_by?: Maybe<Scalars['ID']>;\n  updated_by?: Maybe<Scalars['ID']>;\n};\n\nexport type FileInfoInput = {\n  name?: Maybe<Scalars['String']>;\n  alternativeText?: Maybe<Scalars['String']>;\n  caption?: Maybe<Scalars['String']>;\n};\n\nexport type FileInput = {\n  name: Scalars['String'];\n  alternativeText?: Maybe<Scalars['String']>;\n  caption?: Maybe<Scalars['String']>;\n  width?: Maybe<Scalars['Int']>;\n  height?: Maybe<Scalars['Int']>;\n  formats?: Maybe<Scalars['JSON']>;\n  hash: Scalars['String'];\n  ext?: Maybe<Scalars['String']>;\n  mime: Scalars['String'];\n  size: Scalars['Float'];\n  url: Scalars['String'];\n  previewUrl?: Maybe<Scalars['String']>;\n  provider: Scalars['String'];\n  provider_metadata?: Maybe<Scalars['JSON']>;\n  related?: Maybe<Array<Maybe<Scalars['ID']>>>;\n  created_by?: Maybe<Scalars['ID']>;\n  updated_by?: Maybe<Scalars['ID']>;\n};\n\nexport type HomeBanner = {\n  __typename?: 'HomeBanner';\n  id: Scalars['ID'];\n  _id: Scalars['ID'];\n  createdAt: Scalars['DateTime'];\n  updatedAt: Scalars['DateTime'];\n  published_at?: Maybe<Scalars['DateTime']>;\n  images?: Maybe<Array<Maybe<UploadFile>>>;\n};\n\n\nexport type HomeBannerImagesArgs = {\n  sort?: Maybe<Scalars['String']>;\n  limit?: Maybe<Scalars['Int']>;\n  start?: Maybe<Scalars['Int']>;\n  where?: Maybe<Scalars['JSON']>;\n};\n\nexport type HomeBannerInput = {\n  images?: Maybe<Array<Maybe<Scalars['ID']>>>;\n  published_at?: Maybe<Scalars['DateTime']>;\n  created_by?: Maybe<Scalars['ID']>;\n  updated_by?: Maybe<Scalars['ID']>;\n};\n\nexport type HotelInput = {\n  name: Scalars['String'];\n  stars: Scalars['Int'];\n  url?: Maybe<Scalars['String']>;\n  trips?: Maybe<Array<Maybe<Scalars['ID']>>>;\n  published_at?: Maybe<Scalars['DateTime']>;\n  created_by?: Maybe<Scalars['ID']>;\n  updated_by?: Maybe<Scalars['ID']>;\n};\n\nexport type Hotels = {\n  __typename?: 'Hotels';\n  id: Scalars['ID'];\n  _id: Scalars['ID'];\n  createdAt: Scalars['DateTime'];\n  updatedAt: Scalars['DateTime'];\n  name: Scalars['String'];\n  stars: Scalars['Int'];\n  url?: Maybe<Scalars['String']>;\n  published_at?: Maybe<Scalars['DateTime']>;\n  trips?: Maybe<Array<Maybe<Trips>>>;\n};\n\n\nexport type HotelsTripsArgs = {\n  sort?: Maybe<Scalars['String']>;\n  limit?: Maybe<Scalars['Int']>;\n  start?: Maybe<Scalars['Int']>;\n  where?: Maybe<Scalars['JSON']>;\n};\n\nexport type HotelsAggregator = {\n  __typename?: 'HotelsAggregator';\n  count?: Maybe<Scalars['Int']>;\n  totalCount?: Maybe<Scalars['Int']>;\n  sum?: Maybe<HotelsAggregatorSum>;\n  avg?: Maybe<HotelsAggregatorAvg>;\n  min?: Maybe<HotelsAggregatorMin>;\n  max?: Maybe<HotelsAggregatorMax>;\n};\n\nexport type HotelsAggregatorAvg = {\n  __typename?: 'HotelsAggregatorAvg';\n  stars?: Maybe<Scalars['Float']>;\n};\n\nexport type HotelsAggregatorMax = {\n  __typename?: 'HotelsAggregatorMax';\n  stars?: Maybe<Scalars['Float']>;\n};\n\nexport type HotelsAggregatorMin = {\n  __typename?: 'HotelsAggregatorMin';\n  stars?: Maybe<Scalars['Float']>;\n};\n\nexport type HotelsAggregatorSum = {\n  __typename?: 'HotelsAggregatorSum';\n  stars?: Maybe<Scalars['Float']>;\n};\n\nexport type HotelsConnection = {\n  __typename?: 'HotelsConnection';\n  values?: Maybe<Array<Maybe<Hotels>>>;\n  groupBy?: Maybe<HotelsGroupBy>;\n  aggregate?: Maybe<HotelsAggregator>;\n};\n\nexport type HotelsConnectionCreatedAt = {\n  __typename?: 'HotelsConnectionCreatedAt';\n  key?: Maybe<Scalars['DateTime']>;\n  connection?: Maybe<HotelsConnection>;\n};\n\nexport type HotelsConnectionId = {\n  __typename?: 'HotelsConnectionId';\n  key?: Maybe<Scalars['ID']>;\n  connection?: Maybe<HotelsConnection>;\n};\n\nexport type HotelsConnectionName = {\n  __typename?: 'HotelsConnectionName';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<HotelsConnection>;\n};\n\nexport type HotelsConnectionPublished_At = {\n  __typename?: 'HotelsConnectionPublished_at';\n  key?: Maybe<Scalars['DateTime']>;\n  connection?: Maybe<HotelsConnection>;\n};\n\nexport type HotelsConnectionStars = {\n  __typename?: 'HotelsConnectionStars';\n  key?: Maybe<Scalars['Int']>;\n  connection?: Maybe<HotelsConnection>;\n};\n\nexport type HotelsConnectionUpdatedAt = {\n  __typename?: 'HotelsConnectionUpdatedAt';\n  key?: Maybe<Scalars['DateTime']>;\n  connection?: Maybe<HotelsConnection>;\n};\n\nexport type HotelsConnectionUrl = {\n  __typename?: 'HotelsConnectionUrl';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<HotelsConnection>;\n};\n\nexport type HotelsConnection_Id = {\n  __typename?: 'HotelsConnection_id';\n  key?: Maybe<Scalars['ID']>;\n  connection?: Maybe<HotelsConnection>;\n};\n\nexport type HotelsGroupBy = {\n  __typename?: 'HotelsGroupBy';\n  id?: Maybe<Array<Maybe<HotelsConnectionId>>>;\n  _id?: Maybe<Array<Maybe<HotelsConnection_Id>>>;\n  createdAt?: Maybe<Array<Maybe<HotelsConnectionCreatedAt>>>;\n  updatedAt?: Maybe<Array<Maybe<HotelsConnectionUpdatedAt>>>;\n  name?: Maybe<Array<Maybe<HotelsConnectionName>>>;\n  stars?: Maybe<Array<Maybe<HotelsConnectionStars>>>;\n  url?: Maybe<Array<Maybe<HotelsConnectionUrl>>>;\n  published_at?: Maybe<Array<Maybe<HotelsConnectionPublished_At>>>;\n};\n\nexport type I18NLocale = {\n  __typename?: 'I18NLocale';\n  id: Scalars['ID'];\n  _id: Scalars['ID'];\n  createdAt: Scalars['DateTime'];\n  updatedAt: Scalars['DateTime'];\n  name?: Maybe<Scalars['String']>;\n  code?: Maybe<Scalars['String']>;\n};\n\nexport type InputId = {\n  id: Scalars['ID'];\n};\n\n\nexport type LocaleInput = {\n  name?: Maybe<Scalars['String']>;\n  code?: Maybe<Scalars['String']>;\n  created_by?: Maybe<Scalars['ID']>;\n  updated_by?: Maybe<Scalars['ID']>;\n};\n\nexport type Location = {\n  __typename?: 'Location';\n  id: Scalars['ID'];\n  _id: Scalars['ID'];\n  createdAt: Scalars['DateTime'];\n  updatedAt: Scalars['DateTime'];\n  name: Scalars['String'];\n  description?: Maybe<Scalars['String']>;\n  city?: Maybe<City>;\n  coordinate?: Maybe<ComponentCoordinateCoordinate>;\n  locale?: Maybe<Scalars['String']>;\n  published_at?: Maybe<Scalars['DateTime']>;\n  images?: Maybe<Array<Maybe<UploadFile>>>;\n  localizations?: Maybe<Array<Maybe<Location>>>;\n};\n\n\nexport type LocationImagesArgs = {\n  sort?: Maybe<Scalars['String']>;\n  limit?: Maybe<Scalars['Int']>;\n  start?: Maybe<Scalars['Int']>;\n  where?: Maybe<Scalars['JSON']>;\n};\n\n\nexport type LocationLocalizationsArgs = {\n  sort?: Maybe<Scalars['String']>;\n  limit?: Maybe<Scalars['Int']>;\n  start?: Maybe<Scalars['Int']>;\n  where?: Maybe<Scalars['JSON']>;\n};\n\nexport type LocationAggregator = {\n  __typename?: 'LocationAggregator';\n  count?: Maybe<Scalars['Int']>;\n  totalCount?: Maybe<Scalars['Int']>;\n};\n\nexport type LocationConnection = {\n  __typename?: 'LocationConnection';\n  values?: Maybe<Array<Maybe<Location>>>;\n  groupBy?: Maybe<LocationGroupBy>;\n  aggregate?: Maybe<LocationAggregator>;\n};\n\nexport type LocationConnectionCity = {\n  __typename?: 'LocationConnectionCity';\n  key?: Maybe<Scalars['ID']>;\n  connection?: Maybe<LocationConnection>;\n};\n\nexport type LocationConnectionCoordinate = {\n  __typename?: 'LocationConnectionCoordinate';\n  key?: Maybe<Scalars['ID']>;\n  connection?: Maybe<LocationConnection>;\n};\n\nexport type LocationConnectionCreatedAt = {\n  __typename?: 'LocationConnectionCreatedAt';\n  key?: Maybe<Scalars['DateTime']>;\n  connection?: Maybe<LocationConnection>;\n};\n\nexport type LocationConnectionDescription = {\n  __typename?: 'LocationConnectionDescription';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<LocationConnection>;\n};\n\nexport type LocationConnectionId = {\n  __typename?: 'LocationConnectionId';\n  key?: Maybe<Scalars['ID']>;\n  connection?: Maybe<LocationConnection>;\n};\n\nexport type LocationConnectionLocale = {\n  __typename?: 'LocationConnectionLocale';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<LocationConnection>;\n};\n\nexport type LocationConnectionName = {\n  __typename?: 'LocationConnectionName';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<LocationConnection>;\n};\n\nexport type LocationConnectionPublished_At = {\n  __typename?: 'LocationConnectionPublished_at';\n  key?: Maybe<Scalars['DateTime']>;\n  connection?: Maybe<LocationConnection>;\n};\n\nexport type LocationConnectionUpdatedAt = {\n  __typename?: 'LocationConnectionUpdatedAt';\n  key?: Maybe<Scalars['DateTime']>;\n  connection?: Maybe<LocationConnection>;\n};\n\nexport type LocationConnection_Id = {\n  __typename?: 'LocationConnection_id';\n  key?: Maybe<Scalars['ID']>;\n  connection?: Maybe<LocationConnection>;\n};\n\nexport type LocationGroupBy = {\n  __typename?: 'LocationGroupBy';\n  id?: Maybe<Array<Maybe<LocationConnectionId>>>;\n  _id?: Maybe<Array<Maybe<LocationConnection_Id>>>;\n  createdAt?: Maybe<Array<Maybe<LocationConnectionCreatedAt>>>;\n  updatedAt?: Maybe<Array<Maybe<LocationConnectionUpdatedAt>>>;\n  name?: Maybe<Array<Maybe<LocationConnectionName>>>;\n  description?: Maybe<Array<Maybe<LocationConnectionDescription>>>;\n  city?: Maybe<Array<Maybe<LocationConnectionCity>>>;\n  coordinate?: Maybe<Array<Maybe<LocationConnectionCoordinate>>>;\n  locale?: Maybe<Array<Maybe<LocationConnectionLocale>>>;\n  published_at?: Maybe<Array<Maybe<LocationConnectionPublished_At>>>;\n};\n\nexport type LocationInput = {\n  name: Scalars['String'];\n  description?: Maybe<Scalars['String']>;\n  images?: Maybe<Array<Maybe<Scalars['ID']>>>;\n  city?: Maybe<Scalars['ID']>;\n  coordinate?: Maybe<ComponentCoordinateCoordinateInput>;\n  localizations?: Maybe<Array<Maybe<Scalars['ID']>>>;\n  locale?: Maybe<Scalars['String']>;\n  published_at?: Maybe<Scalars['DateTime']>;\n  created_by?: Maybe<Scalars['ID']>;\n  updated_by?: Maybe<Scalars['ID']>;\n};\n\n\nexport type Morph = UsersPermissionsMe | UsersPermissionsMeRole | UsersPermissionsLoginPayload | UserPermissionsPasswordPayload | Booking | BookingConnection | BookingAggregator | BookingAggregatorSum | BookingAggregatorAvg | BookingAggregatorMin | BookingAggregatorMax | BookingGroupBy | BookingConnectionId | BookingConnection_Id | BookingConnectionCreatedAt | BookingConnectionUpdatedAt | BookingConnectionTrip | BookingConnectionApproved | BookingConnectionBasePrice | BookingConnectionCurrency | BookingConnectionBasePeopleCount | BookingConnectionDiscount | BookingConnectionFullName | BookingConnectionPhone | BookingConnectionMessage | BookingConnectionArrivalDate | BookingConnectionLanguage | BookingConnectionUserBookingStatus | BookingConnectionEmail | BookingConnectionAdults | BookingConnectionChildren | BookingConnectionTotalPrice | BookingConnectionPublished_At | CreateBookingPayload | UpdateBookingPayload | DeleteBookingPayload | City | CityConnection | CityAggregator | CityGroupBy | CityConnectionId | CityConnection_Id | CityConnectionCreatedAt | CityConnectionUpdatedAt | CityConnectionName | CityConnectionDescription | CityConnectionImage | CityConnectionLocale | CityConnectionPublished_At | CreateCityPayload | UpdateCityPayload | DeleteCityPayload | Feature | FeatureConnection | FeatureAggregator | FeatureGroupBy | FeatureConnectionId | FeatureConnection_Id | FeatureConnectionCreatedAt | FeatureConnectionUpdatedAt | FeatureConnectionName | FeatureConnectionInfo | FeatureConnectionLocale | FeatureConnectionPublished_At | CreateFeaturePayload | UpdateFeaturePayload | DeleteFeaturePayload | HomeBanner | UpdateHomeBannerPayload | DeleteHomeBannerPayload | Hotels | HotelsConnection | HotelsAggregator | HotelsAggregatorSum | HotelsAggregatorAvg | HotelsAggregatorMin | HotelsAggregatorMax | HotelsGroupBy | HotelsConnectionId | HotelsConnection_Id | HotelsConnectionCreatedAt | HotelsConnectionUpdatedAt | HotelsConnectionName | HotelsConnectionStars | HotelsConnectionUrl | HotelsConnectionPublished_At | CreateHotelPayload | UpdateHotelPayload | DeleteHotelPayload | Location | LocationConnection | LocationAggregator | LocationGroupBy | LocationConnectionId | LocationConnection_Id | LocationConnectionCreatedAt | LocationConnectionUpdatedAt | LocationConnectionName | LocationConnectionDescription | LocationConnectionCity | LocationConnectionCoordinate | LocationConnectionLocale | LocationConnectionPublished_At | CreateLocationPayload | UpdateLocationPayload | DeleteLocationPayload | Partner | PartnerConnection | PartnerAggregator | PartnerAggregatorSum | PartnerAggregatorAvg | PartnerAggregatorMin | PartnerAggregatorMax | PartnerGroupBy | PartnerConnectionId | PartnerConnection_Id | PartnerConnectionCreatedAt | PartnerConnectionUpdatedAt | PartnerConnectionName | PartnerConnectionPhone | PartnerConnectionAddress | PartnerConnectionEmail | PartnerConnectionAgreement | PartnerConnectionCommission | PartnerConnectionRevenueSource | PartnerConnectionAgreementStatus | PartnerConnectionNotes | PartnerConnectionPhone2 | PartnerConnectionPublished_At | CreatePartnerPayload | UpdatePartnerPayload | DeletePartnerPayload | Review | ReviewConnection | ReviewAggregator | ReviewAggregatorSum | ReviewAggregatorAvg | ReviewAggregatorMin | ReviewAggregatorMax | ReviewGroupBy | ReviewConnectionId | ReviewConnection_Id | ReviewConnectionCreatedAt | ReviewConnectionUpdatedAt | ReviewConnectionText | ReviewConnectionRating | ReviewConnectionAuthor | ReviewConnectionActive | ReviewConnectionTrip | ReviewConnectionPublished_At | CreateReviewPayload | UpdateReviewPayload | DeleteReviewPayload | Subscribers | SubscribersConnection | SubscribersAggregator | SubscribersGroupBy | SubscribersConnectionId | SubscribersConnection_Id | SubscribersConnectionCreatedAt | SubscribersConnectionUpdatedAt | SubscribersConnectionEmail | SubscribersConnectionPublished_At | CreateSubscriberPayload | UpdateSubscriberPayload | DeleteSubscriberPayload | Trips | TripsConnection | TripsAggregator | TripsAggregatorSum | TripsAggregatorAvg | TripsAggregatorMin | TripsAggregatorMax | TripsGroupBy | TripsConnectionId | TripsConnection_Id | TripsConnectionCreatedAt | TripsConnectionUpdatedAt | TripsConnectionName | TripsConnectionPreviewImage | TripsConnectionActive | TripsConnectionTrip_Type | TripsConnectionDescription | TripsConnectionDuration | TripsConnectionPartner | TripsConnectionCurrency | TripsConnectionCity | TripsConnectionBasePrice | TripsConnectionBasePeopleCount | TripsConnectionDiscount | TripsConnectionTravelType | TripsConnectionHotel | TripsConnectionLocale | TripsConnectionPublished_At | CreateTripPayload | UpdateTripPayload | DeleteTripPayload | I18NLocale | UploadFile | UploadFileConnection | UploadFileAggregator | UploadFileAggregatorSum | UploadFileAggregatorAvg | UploadFileAggregatorMin | UploadFileAggregatorMax | UploadFileGroupBy | UploadFileConnectionId | UploadFileConnection_Id | UploadFileConnectionCreatedAt | UploadFileConnectionUpdatedAt | UploadFileConnectionName | UploadFileConnectionAlternativeText | UploadFileConnectionCaption | UploadFileConnectionWidth | UploadFileConnectionHeight | UploadFileConnectionFormats | UploadFileConnectionHash | UploadFileConnectionExt | UploadFileConnectionMime | UploadFileConnectionSize | UploadFileConnectionUrl | UploadFileConnectionPreviewUrl | UploadFileConnectionProvider | UploadFileConnectionProvider_Metadata | DeleteFilePayload | UsersPermissionsPermission | UsersPermissionsRole | UsersPermissionsRoleConnection | UsersPermissionsRoleAggregator | UsersPermissionsRoleGroupBy | UsersPermissionsRoleConnectionId | UsersPermissionsRoleConnection_Id | UsersPermissionsRoleConnectionName | UsersPermissionsRoleConnectionDescription | UsersPermissionsRoleConnectionType | CreateRolePayload | UpdateRolePayload | DeleteRolePayload | UsersPermissionsUser | UsersPermissionsUserConnection | UsersPermissionsUserAggregator | UsersPermissionsUserGroupBy | UsersPermissionsUserConnectionId | UsersPermissionsUserConnection_Id | UsersPermissionsUserConnectionCreatedAt | UsersPermissionsUserConnectionUpdatedAt | UsersPermissionsUserConnectionUsername | UsersPermissionsUserConnectionEmail | UsersPermissionsUserConnectionProvider | UsersPermissionsUserConnectionConfirmed | UsersPermissionsUserConnectionBlocked | UsersPermissionsUserConnectionRole | CreateUserPayload | UpdateUserPayload | DeleteUserPayload | ComponentCoordinateCoordinate | ComponentFeatureFeature | ComponentPricePrice | ComponentTimelineTimeline;\n\nexport type Mutation = {\n  __typename?: 'Mutation';\n  createBooking?: Maybe<CreateBookingPayload>;\n  updateBooking?: Maybe<UpdateBookingPayload>;\n  deleteBooking?: Maybe<DeleteBookingPayload>;\n  createCity?: Maybe<CreateCityPayload>;\n  updateCity?: Maybe<UpdateCityPayload>;\n  deleteCity?: Maybe<DeleteCityPayload>;\n  createFeature?: Maybe<CreateFeaturePayload>;\n  updateFeature?: Maybe<UpdateFeaturePayload>;\n  deleteFeature?: Maybe<DeleteFeaturePayload>;\n  updateHomeBanner?: Maybe<UpdateHomeBannerPayload>;\n  deleteHomeBanner?: Maybe<DeleteHomeBannerPayload>;\n  createHotel?: Maybe<CreateHotelPayload>;\n  updateHotel?: Maybe<UpdateHotelPayload>;\n  deleteHotel?: Maybe<DeleteHotelPayload>;\n  createLocation?: Maybe<CreateLocationPayload>;\n  updateLocation?: Maybe<UpdateLocationPayload>;\n  deleteLocation?: Maybe<DeleteLocationPayload>;\n  createPartner?: Maybe<CreatePartnerPayload>;\n  updatePartner?: Maybe<UpdatePartnerPayload>;\n  deletePartner?: Maybe<DeletePartnerPayload>;\n  createReview?: Maybe<CreateReviewPayload>;\n  updateReview?: Maybe<UpdateReviewPayload>;\n  deleteReview?: Maybe<DeleteReviewPayload>;\n  createSubscriber?: Maybe<CreateSubscriberPayload>;\n  updateSubscriber?: Maybe<UpdateSubscriberPayload>;\n  deleteSubscriber?: Maybe<DeleteSubscriberPayload>;\n  createTrip?: Maybe<CreateTripPayload>;\n  updateTrip?: Maybe<UpdateTripPayload>;\n  deleteTrip?: Maybe<DeleteTripPayload>;\n  /** Delete one file */\n  deleteFile?: Maybe<DeleteFilePayload>;\n  /** Create a new role */\n  createRole?: Maybe<CreateRolePayload>;\n  /** Update an existing role */\n  updateRole?: Maybe<UpdateRolePayload>;\n  /** Delete an existing role */\n  deleteRole?: Maybe<DeleteRolePayload>;\n  /** Create a new user */\n  createUser?: Maybe<CreateUserPayload>;\n  /** Update an existing user */\n  updateUser?: Maybe<UpdateUserPayload>;\n  /** Delete an existing user */\n  deleteUser?: Maybe<DeleteUserPayload>;\n  createCityLocalization: City;\n  createFeatureLocalization: Feature;\n  createLocationLocalization: Location;\n  createTripLocalization: Trips;\n  upload: UploadFile;\n  multipleUpload: Array<Maybe<UploadFile>>;\n  updateFileInfo: UploadFile;\n  login: UsersPermissionsLoginPayload;\n  register: UsersPermissionsLoginPayload;\n  forgotPassword?: Maybe<UserPermissionsPasswordPayload>;\n  resetPassword?: Maybe<UsersPermissionsLoginPayload>;\n  emailConfirmation?: Maybe<UsersPermissionsLoginPayload>;\n};\n\n\nexport type MutationCreateBookingArgs = {\n  input?: Maybe<CreateBookingInput>;\n};\n\n\nexport type MutationUpdateBookingArgs = {\n  input?: Maybe<UpdateBookingInput>;\n};\n\n\nexport type MutationDeleteBookingArgs = {\n  input?: Maybe<DeleteBookingInput>;\n};\n\n\nexport type MutationCreateCityArgs = {\n  input?: Maybe<CreateCityInput>;\n};\n\n\nexport type MutationUpdateCityArgs = {\n  input?: Maybe<UpdateCityInput>;\n};\n\n\nexport type MutationDeleteCityArgs = {\n  input?: Maybe<DeleteCityInput>;\n};\n\n\nexport type MutationCreateFeatureArgs = {\n  input?: Maybe<CreateFeatureInput>;\n};\n\n\nexport type MutationUpdateFeatureArgs = {\n  input?: Maybe<UpdateFeatureInput>;\n};\n\n\nexport type MutationDeleteFeatureArgs = {\n  input?: Maybe<DeleteFeatureInput>;\n};\n\n\nexport type MutationUpdateHomeBannerArgs = {\n  input?: Maybe<UpdateHomeBannerInput>;\n};\n\n\nexport type MutationCreateHotelArgs = {\n  input?: Maybe<CreateHotelInput>;\n};\n\n\nexport type MutationUpdateHotelArgs = {\n  input?: Maybe<UpdateHotelInput>;\n};\n\n\nexport type MutationDeleteHotelArgs = {\n  input?: Maybe<DeleteHotelInput>;\n};\n\n\nexport type MutationCreateLocationArgs = {\n  input?: Maybe<CreateLocationInput>;\n};\n\n\nexport type MutationUpdateLocationArgs = {\n  input?: Maybe<UpdateLocationInput>;\n};\n\n\nexport type MutationDeleteLocationArgs = {\n  input?: Maybe<DeleteLocationInput>;\n};\n\n\nexport type MutationCreatePartnerArgs = {\n  input?: Maybe<CreatePartnerInput>;\n};\n\n\nexport type MutationUpdatePartnerArgs = {\n  input?: Maybe<UpdatePartnerInput>;\n};\n\n\nexport type MutationDeletePartnerArgs = {\n  input?: Maybe<DeletePartnerInput>;\n};\n\n\nexport type MutationCreateReviewArgs = {\n  input?: Maybe<CreateReviewInput>;\n};\n\n\nexport type MutationUpdateReviewArgs = {\n  input?: Maybe<UpdateReviewInput>;\n};\n\n\nexport type MutationDeleteReviewArgs = {\n  input?: Maybe<DeleteReviewInput>;\n};\n\n\nexport type MutationCreateSubscriberArgs = {\n  input?: Maybe<CreateSubscriberInput>;\n};\n\n\nexport type MutationUpdateSubscriberArgs = {\n  input?: Maybe<UpdateSubscriberInput>;\n};\n\n\nexport type MutationDeleteSubscriberArgs = {\n  input?: Maybe<DeleteSubscriberInput>;\n};\n\n\nexport type MutationCreateTripArgs = {\n  input?: Maybe<CreateTripInput>;\n};\n\n\nexport type MutationUpdateTripArgs = {\n  input?: Maybe<UpdateTripInput>;\n};\n\n\nexport type MutationDeleteTripArgs = {\n  input?: Maybe<DeleteTripInput>;\n};\n\n\nexport type MutationDeleteFileArgs = {\n  input?: Maybe<DeleteFileInput>;\n};\n\n\nexport type MutationCreateRoleArgs = {\n  input?: Maybe<CreateRoleInput>;\n};\n\n\nexport type MutationUpdateRoleArgs = {\n  input?: Maybe<UpdateRoleInput>;\n};\n\n\nexport type MutationDeleteRoleArgs = {\n  input?: Maybe<DeleteRoleInput>;\n};\n\n\nexport type MutationCreateUserArgs = {\n  input?: Maybe<CreateUserInput>;\n};\n\n\nexport type MutationUpdateUserArgs = {\n  input?: Maybe<UpdateUserInput>;\n};\n\n\nexport type MutationDeleteUserArgs = {\n  input?: Maybe<DeleteUserInput>;\n};\n\n\nexport type MutationCreateCityLocalizationArgs = {\n  input: UpdateCityInput;\n};\n\n\nexport type MutationCreateFeatureLocalizationArgs = {\n  input: UpdateFeatureInput;\n};\n\n\nexport type MutationCreateLocationLocalizationArgs = {\n  input: UpdateLocationInput;\n};\n\n\nexport type MutationCreateTripLocalizationArgs = {\n  input: UpdateTripInput;\n};\n\n\nexport type MutationUploadArgs = {\n  refId?: Maybe<Scalars['ID']>;\n  ref?: Maybe<Scalars['String']>;\n  field?: Maybe<Scalars['String']>;\n  source?: Maybe<Scalars['String']>;\n  info?: Maybe<FileInfoInput>;\n  file: Scalars['Upload'];\n};\n\n\nexport type MutationMultipleUploadArgs = {\n  refId?: Maybe<Scalars['ID']>;\n  ref?: Maybe<Scalars['String']>;\n  field?: Maybe<Scalars['String']>;\n  source?: Maybe<Scalars['String']>;\n  files: Array<Maybe<Scalars['Upload']>>;\n};\n\n\nexport type MutationUpdateFileInfoArgs = {\n  id: Scalars['ID'];\n  info: FileInfoInput;\n};\n\n\nexport type MutationLoginArgs = {\n  input: UsersPermissionsLoginInput;\n};\n\n\nexport type MutationRegisterArgs = {\n  input: UsersPermissionsRegisterInput;\n};\n\n\nexport type MutationForgotPasswordArgs = {\n  email: Scalars['String'];\n};\n\n\nexport type MutationResetPasswordArgs = {\n  password: Scalars['String'];\n  passwordConfirmation: Scalars['String'];\n  code: Scalars['String'];\n};\n\n\nexport type MutationEmailConfirmationArgs = {\n  confirmation: Scalars['String'];\n};\n\nexport type Partner = {\n  __typename?: 'Partner';\n  id: Scalars['ID'];\n  _id: Scalars['ID'];\n  createdAt: Scalars['DateTime'];\n  updatedAt: Scalars['DateTime'];\n  name: Scalars['String'];\n  phone: Scalars['String'];\n  address?: Maybe<Scalars['String']>;\n  email?: Maybe<Scalars['String']>;\n  agreement?: Maybe<Scalars['String']>;\n  commission: Scalars['Float'];\n  revenueSource: Enum_Partner_Revenuesource;\n  agreementStatus: Enum_Partner_Agreementstatus;\n  notes?: Maybe<Scalars['String']>;\n  phone2?: Maybe<Scalars['String']>;\n  published_at?: Maybe<Scalars['DateTime']>;\n  trips?: Maybe<Array<Maybe<Trips>>>;\n};\n\n\nexport type PartnerTripsArgs = {\n  sort?: Maybe<Scalars['String']>;\n  limit?: Maybe<Scalars['Int']>;\n  start?: Maybe<Scalars['Int']>;\n  where?: Maybe<Scalars['JSON']>;\n};\n\nexport type PartnerAggregator = {\n  __typename?: 'PartnerAggregator';\n  count?: Maybe<Scalars['Int']>;\n  totalCount?: Maybe<Scalars['Int']>;\n  sum?: Maybe<PartnerAggregatorSum>;\n  avg?: Maybe<PartnerAggregatorAvg>;\n  min?: Maybe<PartnerAggregatorMin>;\n  max?: Maybe<PartnerAggregatorMax>;\n};\n\nexport type PartnerAggregatorAvg = {\n  __typename?: 'PartnerAggregatorAvg';\n  commission?: Maybe<Scalars['Float']>;\n};\n\nexport type PartnerAggregatorMax = {\n  __typename?: 'PartnerAggregatorMax';\n  commission?: Maybe<Scalars['Float']>;\n};\n\nexport type PartnerAggregatorMin = {\n  __typename?: 'PartnerAggregatorMin';\n  commission?: Maybe<Scalars['Float']>;\n};\n\nexport type PartnerAggregatorSum = {\n  __typename?: 'PartnerAggregatorSum';\n  commission?: Maybe<Scalars['Float']>;\n};\n\nexport type PartnerConnection = {\n  __typename?: 'PartnerConnection';\n  values?: Maybe<Array<Maybe<Partner>>>;\n  groupBy?: Maybe<PartnerGroupBy>;\n  aggregate?: Maybe<PartnerAggregator>;\n};\n\nexport type PartnerConnectionAddress = {\n  __typename?: 'PartnerConnectionAddress';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<PartnerConnection>;\n};\n\nexport type PartnerConnectionAgreement = {\n  __typename?: 'PartnerConnectionAgreement';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<PartnerConnection>;\n};\n\nexport type PartnerConnectionAgreementStatus = {\n  __typename?: 'PartnerConnectionAgreementStatus';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<PartnerConnection>;\n};\n\nexport type PartnerConnectionCommission = {\n  __typename?: 'PartnerConnectionCommission';\n  key?: Maybe<Scalars['Float']>;\n  connection?: Maybe<PartnerConnection>;\n};\n\nexport type PartnerConnectionCreatedAt = {\n  __typename?: 'PartnerConnectionCreatedAt';\n  key?: Maybe<Scalars['DateTime']>;\n  connection?: Maybe<PartnerConnection>;\n};\n\nexport type PartnerConnectionEmail = {\n  __typename?: 'PartnerConnectionEmail';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<PartnerConnection>;\n};\n\nexport type PartnerConnectionId = {\n  __typename?: 'PartnerConnectionId';\n  key?: Maybe<Scalars['ID']>;\n  connection?: Maybe<PartnerConnection>;\n};\n\nexport type PartnerConnectionName = {\n  __typename?: 'PartnerConnectionName';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<PartnerConnection>;\n};\n\nexport type PartnerConnectionNotes = {\n  __typename?: 'PartnerConnectionNotes';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<PartnerConnection>;\n};\n\nexport type PartnerConnectionPhone = {\n  __typename?: 'PartnerConnectionPhone';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<PartnerConnection>;\n};\n\nexport type PartnerConnectionPhone2 = {\n  __typename?: 'PartnerConnectionPhone2';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<PartnerConnection>;\n};\n\nexport type PartnerConnectionPublished_At = {\n  __typename?: 'PartnerConnectionPublished_at';\n  key?: Maybe<Scalars['DateTime']>;\n  connection?: Maybe<PartnerConnection>;\n};\n\nexport type PartnerConnectionRevenueSource = {\n  __typename?: 'PartnerConnectionRevenueSource';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<PartnerConnection>;\n};\n\nexport type PartnerConnectionUpdatedAt = {\n  __typename?: 'PartnerConnectionUpdatedAt';\n  key?: Maybe<Scalars['DateTime']>;\n  connection?: Maybe<PartnerConnection>;\n};\n\nexport type PartnerConnection_Id = {\n  __typename?: 'PartnerConnection_id';\n  key?: Maybe<Scalars['ID']>;\n  connection?: Maybe<PartnerConnection>;\n};\n\nexport type PartnerGroupBy = {\n  __typename?: 'PartnerGroupBy';\n  id?: Maybe<Array<Maybe<PartnerConnectionId>>>;\n  _id?: Maybe<Array<Maybe<PartnerConnection_Id>>>;\n  createdAt?: Maybe<Array<Maybe<PartnerConnectionCreatedAt>>>;\n  updatedAt?: Maybe<Array<Maybe<PartnerConnectionUpdatedAt>>>;\n  name?: Maybe<Array<Maybe<PartnerConnectionName>>>;\n  phone?: Maybe<Array<Maybe<PartnerConnectionPhone>>>;\n  address?: Maybe<Array<Maybe<PartnerConnectionAddress>>>;\n  email?: Maybe<Array<Maybe<PartnerConnectionEmail>>>;\n  agreement?: Maybe<Array<Maybe<PartnerConnectionAgreement>>>;\n  commission?: Maybe<Array<Maybe<PartnerConnectionCommission>>>;\n  revenueSource?: Maybe<Array<Maybe<PartnerConnectionRevenueSource>>>;\n  agreementStatus?: Maybe<Array<Maybe<PartnerConnectionAgreementStatus>>>;\n  notes?: Maybe<Array<Maybe<PartnerConnectionNotes>>>;\n  phone2?: Maybe<Array<Maybe<PartnerConnectionPhone2>>>;\n  published_at?: Maybe<Array<Maybe<PartnerConnectionPublished_At>>>;\n};\n\nexport type PartnerInput = {\n  name: Scalars['String'];\n  phone: Scalars['String'];\n  address?: Maybe<Scalars['String']>;\n  email?: Maybe<Scalars['String']>;\n  trips?: Maybe<Array<Maybe<Scalars['ID']>>>;\n  agreement?: Maybe<Scalars['String']>;\n  commission: Scalars['Float'];\n  revenueSource: Enum_Partner_Revenuesource;\n  agreementStatus: Enum_Partner_Agreementstatus;\n  notes?: Maybe<Scalars['String']>;\n  phone2?: Maybe<Scalars['String']>;\n  published_at?: Maybe<Scalars['DateTime']>;\n  created_by?: Maybe<Scalars['ID']>;\n  updated_by?: Maybe<Scalars['ID']>;\n};\n\nexport enum PublicationState {\n  Live = 'LIVE',\n  Preview = 'PREVIEW'\n}\n\nexport type Query = {\n  __typename?: 'Query';\n  booking?: Maybe<Booking>;\n  bookings?: Maybe<Array<Maybe<Booking>>>;\n  bookingsConnection?: Maybe<BookingConnection>;\n  city?: Maybe<City>;\n  cities?: Maybe<Array<Maybe<City>>>;\n  citiesConnection?: Maybe<CityConnection>;\n  feature?: Maybe<Feature>;\n  features?: Maybe<Array<Maybe<Feature>>>;\n  featuresConnection?: Maybe<FeatureConnection>;\n  homeBanner?: Maybe<HomeBanner>;\n  hotel?: Maybe<Hotels>;\n  hotels?: Maybe<Array<Maybe<Hotels>>>;\n  hotelsConnection?: Maybe<HotelsConnection>;\n  location?: Maybe<Location>;\n  locations?: Maybe<Array<Maybe<Location>>>;\n  locationsConnection?: Maybe<LocationConnection>;\n  partner?: Maybe<Partner>;\n  partners?: Maybe<Array<Maybe<Partner>>>;\n  partnersConnection?: Maybe<PartnerConnection>;\n  review?: Maybe<Review>;\n  reviews?: Maybe<Array<Maybe<Review>>>;\n  reviewsConnection?: Maybe<ReviewConnection>;\n  subscriber?: Maybe<Subscribers>;\n  subscribers?: Maybe<Array<Maybe<Subscribers>>>;\n  subscribersConnection?: Maybe<SubscribersConnection>;\n  trip?: Maybe<Trips>;\n  trips?: Maybe<Array<Maybe<Trips>>>;\n  tripsConnection?: Maybe<TripsConnection>;\n  files?: Maybe<Array<Maybe<UploadFile>>>;\n  filesConnection?: Maybe<UploadFileConnection>;\n  role?: Maybe<UsersPermissionsRole>;\n  /** Retrieve all the existing roles. You can't apply filters on this query. */\n  roles?: Maybe<Array<Maybe<UsersPermissionsRole>>>;\n  rolesConnection?: Maybe<UsersPermissionsRoleConnection>;\n  user?: Maybe<UsersPermissionsUser>;\n  users?: Maybe<Array<Maybe<UsersPermissionsUser>>>;\n  usersConnection?: Maybe<UsersPermissionsUserConnection>;\n  me?: Maybe<UsersPermissionsMe>;\n};\n\n\nexport type QueryBookingArgs = {\n  id: Scalars['ID'];\n  publicationState?: Maybe<PublicationState>;\n};\n\n\nexport type QueryBookingsArgs = {\n  sort?: Maybe<Scalars['String']>;\n  limit?: Maybe<Scalars['Int']>;\n  start?: Maybe<Scalars['Int']>;\n  where?: Maybe<Scalars['JSON']>;\n  publicationState?: Maybe<PublicationState>;\n};\n\n\nexport type QueryBookingsConnectionArgs = {\n  sort?: Maybe<Scalars['String']>;\n  limit?: Maybe<Scalars['Int']>;\n  start?: Maybe<Scalars['Int']>;\n  where?: Maybe<Scalars['JSON']>;\n};\n\n\nexport type QueryCityArgs = {\n  id: Scalars['ID'];\n  publicationState?: Maybe<PublicationState>;\n};\n\n\nexport type QueryCitiesArgs = {\n  sort?: Maybe<Scalars['String']>;\n  limit?: Maybe<Scalars['Int']>;\n  start?: Maybe<Scalars['Int']>;\n  where?: Maybe<Scalars['JSON']>;\n  publicationState?: Maybe<PublicationState>;\n  locale?: Maybe<Scalars['String']>;\n};\n\n\nexport type QueryCitiesConnectionArgs = {\n  sort?: Maybe<Scalars['String']>;\n  limit?: Maybe<Scalars['Int']>;\n  start?: Maybe<Scalars['Int']>;\n  where?: Maybe<Scalars['JSON']>;\n  locale?: Maybe<Scalars['String']>;\n};\n\n\nexport type QueryFeatureArgs = {\n  id: Scalars['ID'];\n  publicationState?: Maybe<PublicationState>;\n};\n\n\nexport type QueryFeaturesArgs = {\n  sort?: Maybe<Scalars['String']>;\n  limit?: Maybe<Scalars['Int']>;\n  start?: Maybe<Scalars['Int']>;\n  where?: Maybe<Scalars['JSON']>;\n  publicationState?: Maybe<PublicationState>;\n  locale?: Maybe<Scalars['String']>;\n};\n\n\nexport type QueryFeaturesConnectionArgs = {\n  sort?: Maybe<Scalars['String']>;\n  limit?: Maybe<Scalars['Int']>;\n  start?: Maybe<Scalars['Int']>;\n  where?: Maybe<Scalars['JSON']>;\n  locale?: Maybe<Scalars['String']>;\n};\n\n\nexport type QueryHomeBannerArgs = {\n  publicationState?: Maybe<PublicationState>;\n};\n\n\nexport type QueryHotelArgs = {\n  id: Scalars['ID'];\n  publicationState?: Maybe<PublicationState>;\n};\n\n\nexport type QueryHotelsArgs = {\n  sort?: Maybe<Scalars['String']>;\n  limit?: Maybe<Scalars['Int']>;\n  start?: Maybe<Scalars['Int']>;\n  where?: Maybe<Scalars['JSON']>;\n  publicationState?: Maybe<PublicationState>;\n};\n\n\nexport type QueryHotelsConnectionArgs = {\n  sort?: Maybe<Scalars['String']>;\n  limit?: Maybe<Scalars['Int']>;\n  start?: Maybe<Scalars['Int']>;\n  where?: Maybe<Scalars['JSON']>;\n};\n\n\nexport type QueryLocationArgs = {\n  id: Scalars['ID'];\n  publicationState?: Maybe<PublicationState>;\n};\n\n\nexport type QueryLocationsArgs = {\n  sort?: Maybe<Scalars['String']>;\n  limit?: Maybe<Scalars['Int']>;\n  start?: Maybe<Scalars['Int']>;\n  where?: Maybe<Scalars['JSON']>;\n  publicationState?: Maybe<PublicationState>;\n  locale?: Maybe<Scalars['String']>;\n};\n\n\nexport type QueryLocationsConnectionArgs = {\n  sort?: Maybe<Scalars['String']>;\n  limit?: Maybe<Scalars['Int']>;\n  start?: Maybe<Scalars['Int']>;\n  where?: Maybe<Scalars['JSON']>;\n  locale?: Maybe<Scalars['String']>;\n};\n\n\nexport type QueryPartnerArgs = {\n  id: Scalars['ID'];\n  publicationState?: Maybe<PublicationState>;\n};\n\n\nexport type QueryPartnersArgs = {\n  sort?: Maybe<Scalars['String']>;\n  limit?: Maybe<Scalars['Int']>;\n  start?: Maybe<Scalars['Int']>;\n  where?: Maybe<Scalars['JSON']>;\n  publicationState?: Maybe<PublicationState>;\n};\n\n\nexport type QueryPartnersConnectionArgs = {\n  sort?: Maybe<Scalars['String']>;\n  limit?: Maybe<Scalars['Int']>;\n  start?: Maybe<Scalars['Int']>;\n  where?: Maybe<Scalars['JSON']>;\n};\n\n\nexport type QueryReviewArgs = {\n  id: Scalars['ID'];\n  publicationState?: Maybe<PublicationState>;\n};\n\n\nexport type QueryReviewsArgs = {\n  sort?: Maybe<Scalars['String']>;\n  limit?: Maybe<Scalars['Int']>;\n  start?: Maybe<Scalars['Int']>;\n  where?: Maybe<Scalars['JSON']>;\n  publicationState?: Maybe<PublicationState>;\n};\n\n\nexport type QueryReviewsConnectionArgs = {\n  sort?: Maybe<Scalars['String']>;\n  limit?: Maybe<Scalars['Int']>;\n  start?: Maybe<Scalars['Int']>;\n  where?: Maybe<Scalars['JSON']>;\n};\n\n\nexport type QuerySubscriberArgs = {\n  id: Scalars['ID'];\n  publicationState?: Maybe<PublicationState>;\n};\n\n\nexport type QuerySubscribersArgs = {\n  sort?: Maybe<Scalars['String']>;\n  limit?: Maybe<Scalars['Int']>;\n  start?: Maybe<Scalars['Int']>;\n  where?: Maybe<Scalars['JSON']>;\n  publicationState?: Maybe<PublicationState>;\n};\n\n\nexport type QuerySubscribersConnectionArgs = {\n  sort?: Maybe<Scalars['String']>;\n  limit?: Maybe<Scalars['Int']>;\n  start?: Maybe<Scalars['Int']>;\n  where?: Maybe<Scalars['JSON']>;\n};\n\n\nexport type QueryTripArgs = {\n  id: Scalars['ID'];\n  publicationState?: Maybe<PublicationState>;\n};\n\n\nexport type QueryTripsArgs = {\n  sort?: Maybe<Scalars['String']>;\n  limit?: Maybe<Scalars['Int']>;\n  start?: Maybe<Scalars['Int']>;\n  where?: Maybe<Scalars['JSON']>;\n  publicationState?: Maybe<PublicationState>;\n  locale?: Maybe<Scalars['String']>;\n};\n\n\nexport type QueryTripsConnectionArgs = {\n  sort?: Maybe<Scalars['String']>;\n  limit?: Maybe<Scalars['Int']>;\n  start?: Maybe<Scalars['Int']>;\n  where?: Maybe<Scalars['JSON']>;\n  locale?: Maybe<Scalars['String']>;\n};\n\n\nexport type QueryFilesArgs = {\n  sort?: Maybe<Scalars['String']>;\n  limit?: Maybe<Scalars['Int']>;\n  start?: Maybe<Scalars['Int']>;\n  where?: Maybe<Scalars['JSON']>;\n  publicationState?: Maybe<PublicationState>;\n};\n\n\nexport type QueryFilesConnectionArgs = {\n  sort?: Maybe<Scalars['String']>;\n  limit?: Maybe<Scalars['Int']>;\n  start?: Maybe<Scalars['Int']>;\n  where?: Maybe<Scalars['JSON']>;\n};\n\n\nexport type QueryRoleArgs = {\n  id: Scalars['ID'];\n  publicationState?: Maybe<PublicationState>;\n};\n\n\nexport type QueryRolesArgs = {\n  sort?: Maybe<Scalars['String']>;\n  limit?: Maybe<Scalars['Int']>;\n  start?: Maybe<Scalars['Int']>;\n  where?: Maybe<Scalars['JSON']>;\n  publicationState?: Maybe<PublicationState>;\n};\n\n\nexport type QueryRolesConnectionArgs = {\n  sort?: Maybe<Scalars['String']>;\n  limit?: Maybe<Scalars['Int']>;\n  start?: Maybe<Scalars['Int']>;\n  where?: Maybe<Scalars['JSON']>;\n};\n\n\nexport type QueryUserArgs = {\n  id: Scalars['ID'];\n  publicationState?: Maybe<PublicationState>;\n};\n\n\nexport type QueryUsersArgs = {\n  sort?: Maybe<Scalars['String']>;\n  limit?: Maybe<Scalars['Int']>;\n  start?: Maybe<Scalars['Int']>;\n  where?: Maybe<Scalars['JSON']>;\n  publicationState?: Maybe<PublicationState>;\n};\n\n\nexport type QueryUsersConnectionArgs = {\n  sort?: Maybe<Scalars['String']>;\n  limit?: Maybe<Scalars['Int']>;\n  start?: Maybe<Scalars['Int']>;\n  where?: Maybe<Scalars['JSON']>;\n};\n\nexport type Review = {\n  __typename?: 'Review';\n  id: Scalars['ID'];\n  _id: Scalars['ID'];\n  createdAt: Scalars['DateTime'];\n  updatedAt: Scalars['DateTime'];\n  text?: Maybe<Scalars['String']>;\n  rating: Scalars['Float'];\n  author?: Maybe<UsersPermissionsUser>;\n  active?: Maybe<Scalars['Boolean']>;\n  trip?: Maybe<Trips>;\n  published_at?: Maybe<Scalars['DateTime']>;\n};\n\nexport type ReviewAggregator = {\n  __typename?: 'ReviewAggregator';\n  count?: Maybe<Scalars['Int']>;\n  totalCount?: Maybe<Scalars['Int']>;\n  sum?: Maybe<ReviewAggregatorSum>;\n  avg?: Maybe<ReviewAggregatorAvg>;\n  min?: Maybe<ReviewAggregatorMin>;\n  max?: Maybe<ReviewAggregatorMax>;\n};\n\nexport type ReviewAggregatorAvg = {\n  __typename?: 'ReviewAggregatorAvg';\n  rating?: Maybe<Scalars['Float']>;\n};\n\nexport type ReviewAggregatorMax = {\n  __typename?: 'ReviewAggregatorMax';\n  rating?: Maybe<Scalars['Float']>;\n};\n\nexport type ReviewAggregatorMin = {\n  __typename?: 'ReviewAggregatorMin';\n  rating?: Maybe<Scalars['Float']>;\n};\n\nexport type ReviewAggregatorSum = {\n  __typename?: 'ReviewAggregatorSum';\n  rating?: Maybe<Scalars['Float']>;\n};\n\nexport type ReviewConnection = {\n  __typename?: 'ReviewConnection';\n  values?: Maybe<Array<Maybe<Review>>>;\n  groupBy?: Maybe<ReviewGroupBy>;\n  aggregate?: Maybe<ReviewAggregator>;\n};\n\nexport type ReviewConnectionActive = {\n  __typename?: 'ReviewConnectionActive';\n  key?: Maybe<Scalars['Boolean']>;\n  connection?: Maybe<ReviewConnection>;\n};\n\nexport type ReviewConnectionAuthor = {\n  __typename?: 'ReviewConnectionAuthor';\n  key?: Maybe<Scalars['ID']>;\n  connection?: Maybe<ReviewConnection>;\n};\n\nexport type ReviewConnectionCreatedAt = {\n  __typename?: 'ReviewConnectionCreatedAt';\n  key?: Maybe<Scalars['DateTime']>;\n  connection?: Maybe<ReviewConnection>;\n};\n\nexport type ReviewConnectionId = {\n  __typename?: 'ReviewConnectionId';\n  key?: Maybe<Scalars['ID']>;\n  connection?: Maybe<ReviewConnection>;\n};\n\nexport type ReviewConnectionPublished_At = {\n  __typename?: 'ReviewConnectionPublished_at';\n  key?: Maybe<Scalars['DateTime']>;\n  connection?: Maybe<ReviewConnection>;\n};\n\nexport type ReviewConnectionRating = {\n  __typename?: 'ReviewConnectionRating';\n  key?: Maybe<Scalars['Float']>;\n  connection?: Maybe<ReviewConnection>;\n};\n\nexport type ReviewConnectionText = {\n  __typename?: 'ReviewConnectionText';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<ReviewConnection>;\n};\n\nexport type ReviewConnectionTrip = {\n  __typename?: 'ReviewConnectionTrip';\n  key?: Maybe<Scalars['ID']>;\n  connection?: Maybe<ReviewConnection>;\n};\n\nexport type ReviewConnectionUpdatedAt = {\n  __typename?: 'ReviewConnectionUpdatedAt';\n  key?: Maybe<Scalars['DateTime']>;\n  connection?: Maybe<ReviewConnection>;\n};\n\nexport type ReviewConnection_Id = {\n  __typename?: 'ReviewConnection_id';\n  key?: Maybe<Scalars['ID']>;\n  connection?: Maybe<ReviewConnection>;\n};\n\nexport type ReviewGroupBy = {\n  __typename?: 'ReviewGroupBy';\n  id?: Maybe<Array<Maybe<ReviewConnectionId>>>;\n  _id?: Maybe<Array<Maybe<ReviewConnection_Id>>>;\n  createdAt?: Maybe<Array<Maybe<ReviewConnectionCreatedAt>>>;\n  updatedAt?: Maybe<Array<Maybe<ReviewConnectionUpdatedAt>>>;\n  text?: Maybe<Array<Maybe<ReviewConnectionText>>>;\n  rating?: Maybe<Array<Maybe<ReviewConnectionRating>>>;\n  author?: Maybe<Array<Maybe<ReviewConnectionAuthor>>>;\n  active?: Maybe<Array<Maybe<ReviewConnectionActive>>>;\n  trip?: Maybe<Array<Maybe<ReviewConnectionTrip>>>;\n  published_at?: Maybe<Array<Maybe<ReviewConnectionPublished_At>>>;\n};\n\nexport type ReviewInput = {\n  text?: Maybe<Scalars['String']>;\n  rating: Scalars['Float'];\n  author?: Maybe<Scalars['ID']>;\n  active?: Maybe<Scalars['Boolean']>;\n  trip?: Maybe<Scalars['ID']>;\n  published_at?: Maybe<Scalars['DateTime']>;\n  created_by?: Maybe<Scalars['ID']>;\n  updated_by?: Maybe<Scalars['ID']>;\n};\n\nexport type RoleInput = {\n  name: Scalars['String'];\n  description?: Maybe<Scalars['String']>;\n  type?: Maybe<Scalars['String']>;\n  permissions?: Maybe<Array<Maybe<Scalars['ID']>>>;\n  users?: Maybe<Array<Maybe<Scalars['ID']>>>;\n  created_by?: Maybe<Scalars['ID']>;\n  updated_by?: Maybe<Scalars['ID']>;\n};\n\nexport type SubscriberInput = {\n  email: Scalars['String'];\n  published_at?: Maybe<Scalars['DateTime']>;\n  created_by?: Maybe<Scalars['ID']>;\n  updated_by?: Maybe<Scalars['ID']>;\n};\n\nexport type Subscribers = {\n  __typename?: 'Subscribers';\n  id: Scalars['ID'];\n  _id: Scalars['ID'];\n  createdAt: Scalars['DateTime'];\n  updatedAt: Scalars['DateTime'];\n  email: Scalars['String'];\n  published_at?: Maybe<Scalars['DateTime']>;\n};\n\nexport type SubscribersAggregator = {\n  __typename?: 'SubscribersAggregator';\n  count?: Maybe<Scalars['Int']>;\n  totalCount?: Maybe<Scalars['Int']>;\n};\n\nexport type SubscribersConnection = {\n  __typename?: 'SubscribersConnection';\n  values?: Maybe<Array<Maybe<Subscribers>>>;\n  groupBy?: Maybe<SubscribersGroupBy>;\n  aggregate?: Maybe<SubscribersAggregator>;\n};\n\nexport type SubscribersConnectionCreatedAt = {\n  __typename?: 'SubscribersConnectionCreatedAt';\n  key?: Maybe<Scalars['DateTime']>;\n  connection?: Maybe<SubscribersConnection>;\n};\n\nexport type SubscribersConnectionEmail = {\n  __typename?: 'SubscribersConnectionEmail';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<SubscribersConnection>;\n};\n\nexport type SubscribersConnectionId = {\n  __typename?: 'SubscribersConnectionId';\n  key?: Maybe<Scalars['ID']>;\n  connection?: Maybe<SubscribersConnection>;\n};\n\nexport type SubscribersConnectionPublished_At = {\n  __typename?: 'SubscribersConnectionPublished_at';\n  key?: Maybe<Scalars['DateTime']>;\n  connection?: Maybe<SubscribersConnection>;\n};\n\nexport type SubscribersConnectionUpdatedAt = {\n  __typename?: 'SubscribersConnectionUpdatedAt';\n  key?: Maybe<Scalars['DateTime']>;\n  connection?: Maybe<SubscribersConnection>;\n};\n\nexport type SubscribersConnection_Id = {\n  __typename?: 'SubscribersConnection_id';\n  key?: Maybe<Scalars['ID']>;\n  connection?: Maybe<SubscribersConnection>;\n};\n\nexport type SubscribersGroupBy = {\n  __typename?: 'SubscribersGroupBy';\n  id?: Maybe<Array<Maybe<SubscribersConnectionId>>>;\n  _id?: Maybe<Array<Maybe<SubscribersConnection_Id>>>;\n  createdAt?: Maybe<Array<Maybe<SubscribersConnectionCreatedAt>>>;\n  updatedAt?: Maybe<Array<Maybe<SubscribersConnectionUpdatedAt>>>;\n  email?: Maybe<Array<Maybe<SubscribersConnectionEmail>>>;\n  published_at?: Maybe<Array<Maybe<SubscribersConnectionPublished_At>>>;\n};\n\n\nexport type TripInput = {\n  name: Scalars['String'];\n  previewImage?: Maybe<Scalars['ID']>;\n  active?: Maybe<Scalars['Boolean']>;\n  trip_type: Enum_Trips_Trip_Type;\n  description?: Maybe<Scalars['String']>;\n  duration: Scalars['Int'];\n  partner?: Maybe<Scalars['ID']>;\n  currency?: Maybe<Enum_Trips_Currency>;\n  city?: Maybe<Scalars['ID']>;\n  features?: Maybe<Array<ComponentFeatureFeatureInput>>;\n  basePrice: Scalars['Int'];\n  basePeopleCount: Scalars['Int'];\n  discount?: Maybe<Scalars['Float']>;\n  travelType: Enum_Trips_Traveltype;\n  hotel?: Maybe<Scalars['ID']>;\n  plan?: Maybe<Array<ComponentTimelineTimelineInput>>;\n  sequence: Scalars['String'];\n  localizations?: Maybe<Array<Maybe<Scalars['ID']>>>;\n  locale?: Maybe<Scalars['String']>;\n  published_at?: Maybe<Scalars['DateTime']>;\n  created_by?: Maybe<Scalars['ID']>;\n  updated_by?: Maybe<Scalars['ID']>;\n};\n\nexport type Trips = {\n  __typename?: 'Trips';\n  id: Scalars['ID'];\n  _id: Scalars['ID'];\n  createdAt: Scalars['DateTime'];\n  updatedAt: Scalars['DateTime'];\n  name: Scalars['String'];\n  previewImage?: Maybe<UploadFile>;\n  active?: Maybe<Scalars['Boolean']>;\n  trip_type: Enum_Trips_Trip_Type;\n  description?: Maybe<Scalars['String']>;\n  duration: Scalars['Int'];\n  partner?: Maybe<Partner>;\n  currency?: Maybe<Enum_Trips_Currency>;\n  city?: Maybe<City>;\n  features?: Maybe<Array<Maybe<ComponentFeatureFeature>>>;\n  basePrice: Scalars['Int'];\n  basePeopleCount: Scalars['Int'];\n  discount?: Maybe<Scalars['Float']>;\n  travelType: Enum_Trips_Traveltype;\n  hotel?: Maybe<Hotels>;\n  plan?: Maybe<Array<Maybe<ComponentTimelineTimeline>>>;\n  locale?: Maybe<Scalars['String']>;\n  published_at?: Maybe<Scalars['DateTime']>;\n  localizations?: Maybe<Array<Maybe<Trips>>>;\n};\n\n\nexport type TripsLocalizationsArgs = {\n  sort?: Maybe<Scalars['String']>;\n  limit?: Maybe<Scalars['Int']>;\n  start?: Maybe<Scalars['Int']>;\n  where?: Maybe<Scalars['JSON']>;\n};\n\nexport type TripsAggregator = {\n  __typename?: 'TripsAggregator';\n  count?: Maybe<Scalars['Int']>;\n  totalCount?: Maybe<Scalars['Int']>;\n  sum?: Maybe<TripsAggregatorSum>;\n  avg?: Maybe<TripsAggregatorAvg>;\n  min?: Maybe<TripsAggregatorMin>;\n  max?: Maybe<TripsAggregatorMax>;\n};\n\nexport type TripsAggregatorAvg = {\n  __typename?: 'TripsAggregatorAvg';\n  duration?: Maybe<Scalars['Float']>;\n  basePrice?: Maybe<Scalars['Float']>;\n  basePeopleCount?: Maybe<Scalars['Float']>;\n  discount?: Maybe<Scalars['Float']>;\n};\n\nexport type TripsAggregatorMax = {\n  __typename?: 'TripsAggregatorMax';\n  duration?: Maybe<Scalars['Float']>;\n  basePrice?: Maybe<Scalars['Float']>;\n  basePeopleCount?: Maybe<Scalars['Float']>;\n  discount?: Maybe<Scalars['Float']>;\n};\n\nexport type TripsAggregatorMin = {\n  __typename?: 'TripsAggregatorMin';\n  duration?: Maybe<Scalars['Float']>;\n  basePrice?: Maybe<Scalars['Float']>;\n  basePeopleCount?: Maybe<Scalars['Float']>;\n  discount?: Maybe<Scalars['Float']>;\n};\n\nexport type TripsAggregatorSum = {\n  __typename?: 'TripsAggregatorSum';\n  duration?: Maybe<Scalars['Float']>;\n  basePrice?: Maybe<Scalars['Float']>;\n  basePeopleCount?: Maybe<Scalars['Float']>;\n  discount?: Maybe<Scalars['Float']>;\n};\n\nexport type TripsConnection = {\n  __typename?: 'TripsConnection';\n  values?: Maybe<Array<Maybe<Trips>>>;\n  groupBy?: Maybe<TripsGroupBy>;\n  aggregate?: Maybe<TripsAggregator>;\n};\n\nexport type TripsConnectionActive = {\n  __typename?: 'TripsConnectionActive';\n  key?: Maybe<Scalars['Boolean']>;\n  connection?: Maybe<TripsConnection>;\n};\n\nexport type TripsConnectionBasePeopleCount = {\n  __typename?: 'TripsConnectionBasePeopleCount';\n  key?: Maybe<Scalars['Int']>;\n  connection?: Maybe<TripsConnection>;\n};\n\nexport type TripsConnectionBasePrice = {\n  __typename?: 'TripsConnectionBasePrice';\n  key?: Maybe<Scalars['Int']>;\n  connection?: Maybe<TripsConnection>;\n};\n\nexport type TripsConnectionCity = {\n  __typename?: 'TripsConnectionCity';\n  key?: Maybe<Scalars['ID']>;\n  connection?: Maybe<TripsConnection>;\n};\n\nexport type TripsConnectionCreatedAt = {\n  __typename?: 'TripsConnectionCreatedAt';\n  key?: Maybe<Scalars['DateTime']>;\n  connection?: Maybe<TripsConnection>;\n};\n\nexport type TripsConnectionCurrency = {\n  __typename?: 'TripsConnectionCurrency';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<TripsConnection>;\n};\n\nexport type TripsConnectionDescription = {\n  __typename?: 'TripsConnectionDescription';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<TripsConnection>;\n};\n\nexport type TripsConnectionDiscount = {\n  __typename?: 'TripsConnectionDiscount';\n  key?: Maybe<Scalars['Float']>;\n  connection?: Maybe<TripsConnection>;\n};\n\nexport type TripsConnectionDuration = {\n  __typename?: 'TripsConnectionDuration';\n  key?: Maybe<Scalars['Int']>;\n  connection?: Maybe<TripsConnection>;\n};\n\nexport type TripsConnectionHotel = {\n  __typename?: 'TripsConnectionHotel';\n  key?: Maybe<Scalars['ID']>;\n  connection?: Maybe<TripsConnection>;\n};\n\nexport type TripsConnectionId = {\n  __typename?: 'TripsConnectionId';\n  key?: Maybe<Scalars['ID']>;\n  connection?: Maybe<TripsConnection>;\n};\n\nexport type TripsConnectionLocale = {\n  __typename?: 'TripsConnectionLocale';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<TripsConnection>;\n};\n\nexport type TripsConnectionName = {\n  __typename?: 'TripsConnectionName';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<TripsConnection>;\n};\n\nexport type TripsConnectionPartner = {\n  __typename?: 'TripsConnectionPartner';\n  key?: Maybe<Scalars['ID']>;\n  connection?: Maybe<TripsConnection>;\n};\n\nexport type TripsConnectionPreviewImage = {\n  __typename?: 'TripsConnectionPreviewImage';\n  key?: Maybe<Scalars['ID']>;\n  connection?: Maybe<TripsConnection>;\n};\n\nexport type TripsConnectionPublished_At = {\n  __typename?: 'TripsConnectionPublished_at';\n  key?: Maybe<Scalars['DateTime']>;\n  connection?: Maybe<TripsConnection>;\n};\n\nexport type TripsConnectionTravelType = {\n  __typename?: 'TripsConnectionTravelType';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<TripsConnection>;\n};\n\nexport type TripsConnectionTrip_Type = {\n  __typename?: 'TripsConnectionTrip_type';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<TripsConnection>;\n};\n\nexport type TripsConnectionUpdatedAt = {\n  __typename?: 'TripsConnectionUpdatedAt';\n  key?: Maybe<Scalars['DateTime']>;\n  connection?: Maybe<TripsConnection>;\n};\n\nexport type TripsConnection_Id = {\n  __typename?: 'TripsConnection_id';\n  key?: Maybe<Scalars['ID']>;\n  connection?: Maybe<TripsConnection>;\n};\n\nexport type TripsGroupBy = {\n  __typename?: 'TripsGroupBy';\n  id?: Maybe<Array<Maybe<TripsConnectionId>>>;\n  _id?: Maybe<Array<Maybe<TripsConnection_Id>>>;\n  createdAt?: Maybe<Array<Maybe<TripsConnectionCreatedAt>>>;\n  updatedAt?: Maybe<Array<Maybe<TripsConnectionUpdatedAt>>>;\n  name?: Maybe<Array<Maybe<TripsConnectionName>>>;\n  previewImage?: Maybe<Array<Maybe<TripsConnectionPreviewImage>>>;\n  active?: Maybe<Array<Maybe<TripsConnectionActive>>>;\n  trip_type?: Maybe<Array<Maybe<TripsConnectionTrip_Type>>>;\n  description?: Maybe<Array<Maybe<TripsConnectionDescription>>>;\n  duration?: Maybe<Array<Maybe<TripsConnectionDuration>>>;\n  partner?: Maybe<Array<Maybe<TripsConnectionPartner>>>;\n  currency?: Maybe<Array<Maybe<TripsConnectionCurrency>>>;\n  city?: Maybe<Array<Maybe<TripsConnectionCity>>>;\n  basePrice?: Maybe<Array<Maybe<TripsConnectionBasePrice>>>;\n  basePeopleCount?: Maybe<Array<Maybe<TripsConnectionBasePeopleCount>>>;\n  discount?: Maybe<Array<Maybe<TripsConnectionDiscount>>>;\n  travelType?: Maybe<Array<Maybe<TripsConnectionTravelType>>>;\n  hotel?: Maybe<Array<Maybe<TripsConnectionHotel>>>;\n  locale?: Maybe<Array<Maybe<TripsConnectionLocale>>>;\n  published_at?: Maybe<Array<Maybe<TripsConnectionPublished_At>>>;\n};\n\n\nexport type UploadFile = {\n  __typename?: 'UploadFile';\n  id: Scalars['ID'];\n  _id: Scalars['ID'];\n  createdAt: Scalars['DateTime'];\n  updatedAt: Scalars['DateTime'];\n  name: Scalars['String'];\n  alternativeText?: Maybe<Scalars['String']>;\n  caption?: Maybe<Scalars['String']>;\n  width?: Maybe<Scalars['Int']>;\n  height?: Maybe<Scalars['Int']>;\n  formats?: Maybe<Scalars['JSON']>;\n  hash: Scalars['String'];\n  ext?: Maybe<Scalars['String']>;\n  mime: Scalars['String'];\n  size: Scalars['Float'];\n  url: Scalars['String'];\n  previewUrl?: Maybe<Scalars['String']>;\n  provider: Scalars['String'];\n  provider_metadata?: Maybe<Scalars['JSON']>;\n  related?: Maybe<Array<Maybe<Morph>>>;\n};\n\n\nexport type UploadFileRelatedArgs = {\n  sort?: Maybe<Scalars['String']>;\n  limit?: Maybe<Scalars['Int']>;\n  start?: Maybe<Scalars['Int']>;\n  where?: Maybe<Scalars['JSON']>;\n};\n\nexport type UploadFileAggregator = {\n  __typename?: 'UploadFileAggregator';\n  count?: Maybe<Scalars['Int']>;\n  totalCount?: Maybe<Scalars['Int']>;\n  sum?: Maybe<UploadFileAggregatorSum>;\n  avg?: Maybe<UploadFileAggregatorAvg>;\n  min?: Maybe<UploadFileAggregatorMin>;\n  max?: Maybe<UploadFileAggregatorMax>;\n};\n\nexport type UploadFileAggregatorAvg = {\n  __typename?: 'UploadFileAggregatorAvg';\n  width?: Maybe<Scalars['Float']>;\n  height?: Maybe<Scalars['Float']>;\n  size?: Maybe<Scalars['Float']>;\n};\n\nexport type UploadFileAggregatorMax = {\n  __typename?: 'UploadFileAggregatorMax';\n  width?: Maybe<Scalars['Float']>;\n  height?: Maybe<Scalars['Float']>;\n  size?: Maybe<Scalars['Float']>;\n};\n\nexport type UploadFileAggregatorMin = {\n  __typename?: 'UploadFileAggregatorMin';\n  width?: Maybe<Scalars['Float']>;\n  height?: Maybe<Scalars['Float']>;\n  size?: Maybe<Scalars['Float']>;\n};\n\nexport type UploadFileAggregatorSum = {\n  __typename?: 'UploadFileAggregatorSum';\n  width?: Maybe<Scalars['Float']>;\n  height?: Maybe<Scalars['Float']>;\n  size?: Maybe<Scalars['Float']>;\n};\n\nexport type UploadFileConnection = {\n  __typename?: 'UploadFileConnection';\n  values?: Maybe<Array<Maybe<UploadFile>>>;\n  groupBy?: Maybe<UploadFileGroupBy>;\n  aggregate?: Maybe<UploadFileAggregator>;\n};\n\nexport type UploadFileConnectionAlternativeText = {\n  __typename?: 'UploadFileConnectionAlternativeText';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<UploadFileConnection>;\n};\n\nexport type UploadFileConnectionCaption = {\n  __typename?: 'UploadFileConnectionCaption';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<UploadFileConnection>;\n};\n\nexport type UploadFileConnectionCreatedAt = {\n  __typename?: 'UploadFileConnectionCreatedAt';\n  key?: Maybe<Scalars['DateTime']>;\n  connection?: Maybe<UploadFileConnection>;\n};\n\nexport type UploadFileConnectionExt = {\n  __typename?: 'UploadFileConnectionExt';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<UploadFileConnection>;\n};\n\nexport type UploadFileConnectionFormats = {\n  __typename?: 'UploadFileConnectionFormats';\n  key?: Maybe<Scalars['JSON']>;\n  connection?: Maybe<UploadFileConnection>;\n};\n\nexport type UploadFileConnectionHash = {\n  __typename?: 'UploadFileConnectionHash';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<UploadFileConnection>;\n};\n\nexport type UploadFileConnectionHeight = {\n  __typename?: 'UploadFileConnectionHeight';\n  key?: Maybe<Scalars['Int']>;\n  connection?: Maybe<UploadFileConnection>;\n};\n\nexport type UploadFileConnectionId = {\n  __typename?: 'UploadFileConnectionId';\n  key?: Maybe<Scalars['ID']>;\n  connection?: Maybe<UploadFileConnection>;\n};\n\nexport type UploadFileConnectionMime = {\n  __typename?: 'UploadFileConnectionMime';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<UploadFileConnection>;\n};\n\nexport type UploadFileConnectionName = {\n  __typename?: 'UploadFileConnectionName';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<UploadFileConnection>;\n};\n\nexport type UploadFileConnectionPreviewUrl = {\n  __typename?: 'UploadFileConnectionPreviewUrl';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<UploadFileConnection>;\n};\n\nexport type UploadFileConnectionProvider = {\n  __typename?: 'UploadFileConnectionProvider';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<UploadFileConnection>;\n};\n\nexport type UploadFileConnectionProvider_Metadata = {\n  __typename?: 'UploadFileConnectionProvider_metadata';\n  key?: Maybe<Scalars['JSON']>;\n  connection?: Maybe<UploadFileConnection>;\n};\n\nexport type UploadFileConnectionSize = {\n  __typename?: 'UploadFileConnectionSize';\n  key?: Maybe<Scalars['Float']>;\n  connection?: Maybe<UploadFileConnection>;\n};\n\nexport type UploadFileConnectionUpdatedAt = {\n  __typename?: 'UploadFileConnectionUpdatedAt';\n  key?: Maybe<Scalars['DateTime']>;\n  connection?: Maybe<UploadFileConnection>;\n};\n\nexport type UploadFileConnectionUrl = {\n  __typename?: 'UploadFileConnectionUrl';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<UploadFileConnection>;\n};\n\nexport type UploadFileConnectionWidth = {\n  __typename?: 'UploadFileConnectionWidth';\n  key?: Maybe<Scalars['Int']>;\n  connection?: Maybe<UploadFileConnection>;\n};\n\nexport type UploadFileConnection_Id = {\n  __typename?: 'UploadFileConnection_id';\n  key?: Maybe<Scalars['ID']>;\n  connection?: Maybe<UploadFileConnection>;\n};\n\nexport type UploadFileGroupBy = {\n  __typename?: 'UploadFileGroupBy';\n  id?: Maybe<Array<Maybe<UploadFileConnectionId>>>;\n  _id?: Maybe<Array<Maybe<UploadFileConnection_Id>>>;\n  createdAt?: Maybe<Array<Maybe<UploadFileConnectionCreatedAt>>>;\n  updatedAt?: Maybe<Array<Maybe<UploadFileConnectionUpdatedAt>>>;\n  name?: Maybe<Array<Maybe<UploadFileConnectionName>>>;\n  alternativeText?: Maybe<Array<Maybe<UploadFileConnectionAlternativeText>>>;\n  caption?: Maybe<Array<Maybe<UploadFileConnectionCaption>>>;\n  width?: Maybe<Array<Maybe<UploadFileConnectionWidth>>>;\n  height?: Maybe<Array<Maybe<UploadFileConnectionHeight>>>;\n  formats?: Maybe<Array<Maybe<UploadFileConnectionFormats>>>;\n  hash?: Maybe<Array<Maybe<UploadFileConnectionHash>>>;\n  ext?: Maybe<Array<Maybe<UploadFileConnectionExt>>>;\n  mime?: Maybe<Array<Maybe<UploadFileConnectionMime>>>;\n  size?: Maybe<Array<Maybe<UploadFileConnectionSize>>>;\n  url?: Maybe<Array<Maybe<UploadFileConnectionUrl>>>;\n  previewUrl?: Maybe<Array<Maybe<UploadFileConnectionPreviewUrl>>>;\n  provider?: Maybe<Array<Maybe<UploadFileConnectionProvider>>>;\n  provider_metadata?: Maybe<Array<Maybe<UploadFileConnectionProvider_Metadata>>>;\n};\n\nexport type UserInput = {\n  username: Scalars['String'];\n  email: Scalars['String'];\n  provider?: Maybe<Scalars['String']>;\n  password?: Maybe<Scalars['String']>;\n  resetPasswordToken?: Maybe<Scalars['String']>;\n  confirmationToken?: Maybe<Scalars['String']>;\n  confirmed?: Maybe<Scalars['Boolean']>;\n  blocked?: Maybe<Scalars['Boolean']>;\n  role?: Maybe<Scalars['ID']>;\n  created_by?: Maybe<Scalars['ID']>;\n  updated_by?: Maybe<Scalars['ID']>;\n};\n\nexport type UserPermissionsPasswordPayload = {\n  __typename?: 'UserPermissionsPasswordPayload';\n  ok: Scalars['Boolean'];\n};\n\nexport type UsersPermissionsLoginInput = {\n  identifier: Scalars['String'];\n  password: Scalars['String'];\n  provider?: Maybe<Scalars['String']>;\n};\n\nexport type UsersPermissionsLoginPayload = {\n  __typename?: 'UsersPermissionsLoginPayload';\n  jwt?: Maybe<Scalars['String']>;\n  user: UsersPermissionsMe;\n};\n\nexport type UsersPermissionsMe = {\n  __typename?: 'UsersPermissionsMe';\n  id: Scalars['ID'];\n  username: Scalars['String'];\n  email: Scalars['String'];\n  confirmed?: Maybe<Scalars['Boolean']>;\n  blocked?: Maybe<Scalars['Boolean']>;\n  role?: Maybe<UsersPermissionsMeRole>;\n};\n\nexport type UsersPermissionsMeRole = {\n  __typename?: 'UsersPermissionsMeRole';\n  id: Scalars['ID'];\n  name: Scalars['String'];\n  description?: Maybe<Scalars['String']>;\n  type?: Maybe<Scalars['String']>;\n};\n\nexport type UsersPermissionsPermission = {\n  __typename?: 'UsersPermissionsPermission';\n  id: Scalars['ID'];\n  _id: Scalars['ID'];\n  type: Scalars['String'];\n  controller: Scalars['String'];\n  action: Scalars['String'];\n  enabled: Scalars['Boolean'];\n  policy?: Maybe<Scalars['String']>;\n  role?: Maybe<UsersPermissionsRole>;\n};\n\nexport type UsersPermissionsRegisterInput = {\n  username: Scalars['String'];\n  email: Scalars['String'];\n  password: Scalars['String'];\n};\n\nexport type UsersPermissionsRole = {\n  __typename?: 'UsersPermissionsRole';\n  id: Scalars['ID'];\n  _id: Scalars['ID'];\n  name: Scalars['String'];\n  description?: Maybe<Scalars['String']>;\n  type?: Maybe<Scalars['String']>;\n  permissions?: Maybe<Array<Maybe<UsersPermissionsPermission>>>;\n  users?: Maybe<Array<Maybe<UsersPermissionsUser>>>;\n};\n\n\nexport type UsersPermissionsRolePermissionsArgs = {\n  sort?: Maybe<Scalars['String']>;\n  limit?: Maybe<Scalars['Int']>;\n  start?: Maybe<Scalars['Int']>;\n  where?: Maybe<Scalars['JSON']>;\n};\n\n\nexport type UsersPermissionsRoleUsersArgs = {\n  sort?: Maybe<Scalars['String']>;\n  limit?: Maybe<Scalars['Int']>;\n  start?: Maybe<Scalars['Int']>;\n  where?: Maybe<Scalars['JSON']>;\n};\n\nexport type UsersPermissionsRoleAggregator = {\n  __typename?: 'UsersPermissionsRoleAggregator';\n  count?: Maybe<Scalars['Int']>;\n  totalCount?: Maybe<Scalars['Int']>;\n};\n\nexport type UsersPermissionsRoleConnection = {\n  __typename?: 'UsersPermissionsRoleConnection';\n  values?: Maybe<Array<Maybe<UsersPermissionsRole>>>;\n  groupBy?: Maybe<UsersPermissionsRoleGroupBy>;\n  aggregate?: Maybe<UsersPermissionsRoleAggregator>;\n};\n\nexport type UsersPermissionsRoleConnectionDescription = {\n  __typename?: 'UsersPermissionsRoleConnectionDescription';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<UsersPermissionsRoleConnection>;\n};\n\nexport type UsersPermissionsRoleConnectionId = {\n  __typename?: 'UsersPermissionsRoleConnectionId';\n  key?: Maybe<Scalars['ID']>;\n  connection?: Maybe<UsersPermissionsRoleConnection>;\n};\n\nexport type UsersPermissionsRoleConnectionName = {\n  __typename?: 'UsersPermissionsRoleConnectionName';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<UsersPermissionsRoleConnection>;\n};\n\nexport type UsersPermissionsRoleConnectionType = {\n  __typename?: 'UsersPermissionsRoleConnectionType';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<UsersPermissionsRoleConnection>;\n};\n\nexport type UsersPermissionsRoleConnection_Id = {\n  __typename?: 'UsersPermissionsRoleConnection_id';\n  key?: Maybe<Scalars['ID']>;\n  connection?: Maybe<UsersPermissionsRoleConnection>;\n};\n\nexport type UsersPermissionsRoleGroupBy = {\n  __typename?: 'UsersPermissionsRoleGroupBy';\n  id?: Maybe<Array<Maybe<UsersPermissionsRoleConnectionId>>>;\n  _id?: Maybe<Array<Maybe<UsersPermissionsRoleConnection_Id>>>;\n  name?: Maybe<Array<Maybe<UsersPermissionsRoleConnectionName>>>;\n  description?: Maybe<Array<Maybe<UsersPermissionsRoleConnectionDescription>>>;\n  type?: Maybe<Array<Maybe<UsersPermissionsRoleConnectionType>>>;\n};\n\nexport type UsersPermissionsUser = {\n  __typename?: 'UsersPermissionsUser';\n  id: Scalars['ID'];\n  _id: Scalars['ID'];\n  createdAt: Scalars['DateTime'];\n  updatedAt: Scalars['DateTime'];\n  username: Scalars['String'];\n  email: Scalars['String'];\n  provider?: Maybe<Scalars['String']>;\n  confirmed?: Maybe<Scalars['Boolean']>;\n  blocked?: Maybe<Scalars['Boolean']>;\n  role?: Maybe<UsersPermissionsRole>;\n};\n\nexport type UsersPermissionsUserAggregator = {\n  __typename?: 'UsersPermissionsUserAggregator';\n  count?: Maybe<Scalars['Int']>;\n  totalCount?: Maybe<Scalars['Int']>;\n};\n\nexport type UsersPermissionsUserConnection = {\n  __typename?: 'UsersPermissionsUserConnection';\n  values?: Maybe<Array<Maybe<UsersPermissionsUser>>>;\n  groupBy?: Maybe<UsersPermissionsUserGroupBy>;\n  aggregate?: Maybe<UsersPermissionsUserAggregator>;\n};\n\nexport type UsersPermissionsUserConnectionBlocked = {\n  __typename?: 'UsersPermissionsUserConnectionBlocked';\n  key?: Maybe<Scalars['Boolean']>;\n  connection?: Maybe<UsersPermissionsUserConnection>;\n};\n\nexport type UsersPermissionsUserConnectionConfirmed = {\n  __typename?: 'UsersPermissionsUserConnectionConfirmed';\n  key?: Maybe<Scalars['Boolean']>;\n  connection?: Maybe<UsersPermissionsUserConnection>;\n};\n\nexport type UsersPermissionsUserConnectionCreatedAt = {\n  __typename?: 'UsersPermissionsUserConnectionCreatedAt';\n  key?: Maybe<Scalars['DateTime']>;\n  connection?: Maybe<UsersPermissionsUserConnection>;\n};\n\nexport type UsersPermissionsUserConnectionEmail = {\n  __typename?: 'UsersPermissionsUserConnectionEmail';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<UsersPermissionsUserConnection>;\n};\n\nexport type UsersPermissionsUserConnectionId = {\n  __typename?: 'UsersPermissionsUserConnectionId';\n  key?: Maybe<Scalars['ID']>;\n  connection?: Maybe<UsersPermissionsUserConnection>;\n};\n\nexport type UsersPermissionsUserConnectionProvider = {\n  __typename?: 'UsersPermissionsUserConnectionProvider';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<UsersPermissionsUserConnection>;\n};\n\nexport type UsersPermissionsUserConnectionRole = {\n  __typename?: 'UsersPermissionsUserConnectionRole';\n  key?: Maybe<Scalars['ID']>;\n  connection?: Maybe<UsersPermissionsUserConnection>;\n};\n\nexport type UsersPermissionsUserConnectionUpdatedAt = {\n  __typename?: 'UsersPermissionsUserConnectionUpdatedAt';\n  key?: Maybe<Scalars['DateTime']>;\n  connection?: Maybe<UsersPermissionsUserConnection>;\n};\n\nexport type UsersPermissionsUserConnectionUsername = {\n  __typename?: 'UsersPermissionsUserConnectionUsername';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<UsersPermissionsUserConnection>;\n};\n\nexport type UsersPermissionsUserConnection_Id = {\n  __typename?: 'UsersPermissionsUserConnection_id';\n  key?: Maybe<Scalars['ID']>;\n  connection?: Maybe<UsersPermissionsUserConnection>;\n};\n\nexport type UsersPermissionsUserGroupBy = {\n  __typename?: 'UsersPermissionsUserGroupBy';\n  id?: Maybe<Array<Maybe<UsersPermissionsUserConnectionId>>>;\n  _id?: Maybe<Array<Maybe<UsersPermissionsUserConnection_Id>>>;\n  createdAt?: Maybe<Array<Maybe<UsersPermissionsUserConnectionCreatedAt>>>;\n  updatedAt?: Maybe<Array<Maybe<UsersPermissionsUserConnectionUpdatedAt>>>;\n  username?: Maybe<Array<Maybe<UsersPermissionsUserConnectionUsername>>>;\n  email?: Maybe<Array<Maybe<UsersPermissionsUserConnectionEmail>>>;\n  provider?: Maybe<Array<Maybe<UsersPermissionsUserConnectionProvider>>>;\n  confirmed?: Maybe<Array<Maybe<UsersPermissionsUserConnectionConfirmed>>>;\n  blocked?: Maybe<Array<Maybe<UsersPermissionsUserConnectionBlocked>>>;\n  role?: Maybe<Array<Maybe<UsersPermissionsUserConnectionRole>>>;\n};\n\nexport type CreateBookingInput = {\n  data?: Maybe<BookingInput>;\n};\n\nexport type CreateBookingPayload = {\n  __typename?: 'createBookingPayload';\n  booking?: Maybe<Booking>;\n};\n\nexport type CreateCityInput = {\n  data?: Maybe<CityInput>;\n};\n\nexport type CreateCityPayload = {\n  __typename?: 'createCityPayload';\n  city?: Maybe<City>;\n};\n\nexport type CreateFeatureInput = {\n  data?: Maybe<FeatureInput>;\n};\n\nexport type CreateFeaturePayload = {\n  __typename?: 'createFeaturePayload';\n  feature?: Maybe<Feature>;\n};\n\nexport type CreateHotelInput = {\n  data?: Maybe<HotelInput>;\n};\n\nexport type CreateHotelPayload = {\n  __typename?: 'createHotelPayload';\n  hotel?: Maybe<Hotels>;\n};\n\nexport type CreateLocationInput = {\n  data?: Maybe<LocationInput>;\n};\n\nexport type CreateLocationPayload = {\n  __typename?: 'createLocationPayload';\n  location?: Maybe<Location>;\n};\n\nexport type CreatePartnerInput = {\n  data?: Maybe<PartnerInput>;\n};\n\nexport type CreatePartnerPayload = {\n  __typename?: 'createPartnerPayload';\n  partner?: Maybe<Partner>;\n};\n\nexport type CreateReviewInput = {\n  data?: Maybe<ReviewInput>;\n};\n\nexport type CreateReviewPayload = {\n  __typename?: 'createReviewPayload';\n  review?: Maybe<Review>;\n};\n\nexport type CreateRoleInput = {\n  data?: Maybe<RoleInput>;\n};\n\nexport type CreateRolePayload = {\n  __typename?: 'createRolePayload';\n  role?: Maybe<UsersPermissionsRole>;\n};\n\nexport type CreateSubscriberInput = {\n  data?: Maybe<SubscriberInput>;\n};\n\nexport type CreateSubscriberPayload = {\n  __typename?: 'createSubscriberPayload';\n  subscriber?: Maybe<Subscribers>;\n};\n\nexport type CreateTripInput = {\n  data?: Maybe<TripInput>;\n};\n\nexport type CreateTripPayload = {\n  __typename?: 'createTripPayload';\n  trip?: Maybe<Trips>;\n};\n\nexport type CreateUserInput = {\n  data?: Maybe<UserInput>;\n};\n\nexport type CreateUserPayload = {\n  __typename?: 'createUserPayload';\n  user?: Maybe<UsersPermissionsUser>;\n};\n\nexport type DeleteBookingInput = {\n  where?: Maybe<InputId>;\n};\n\nexport type DeleteBookingPayload = {\n  __typename?: 'deleteBookingPayload';\n  booking?: Maybe<Booking>;\n};\n\nexport type DeleteCityInput = {\n  where?: Maybe<InputId>;\n};\n\nexport type DeleteCityPayload = {\n  __typename?: 'deleteCityPayload';\n  city?: Maybe<City>;\n};\n\nexport type DeleteFeatureInput = {\n  where?: Maybe<InputId>;\n};\n\nexport type DeleteFeaturePayload = {\n  __typename?: 'deleteFeaturePayload';\n  feature?: Maybe<Feature>;\n};\n\nexport type DeleteFileInput = {\n  where?: Maybe<InputId>;\n};\n\nexport type DeleteFilePayload = {\n  __typename?: 'deleteFilePayload';\n  file?: Maybe<UploadFile>;\n};\n\nexport type DeleteHomeBannerPayload = {\n  __typename?: 'deleteHomeBannerPayload';\n  homeBanner?: Maybe<HomeBanner>;\n};\n\nexport type DeleteHotelInput = {\n  where?: Maybe<InputId>;\n};\n\nexport type DeleteHotelPayload = {\n  __typename?: 'deleteHotelPayload';\n  hotel?: Maybe<Hotels>;\n};\n\nexport type DeleteLocationInput = {\n  where?: Maybe<InputId>;\n};\n\nexport type DeleteLocationPayload = {\n  __typename?: 'deleteLocationPayload';\n  location?: Maybe<Location>;\n};\n\nexport type DeletePartnerInput = {\n  where?: Maybe<InputId>;\n};\n\nexport type DeletePartnerPayload = {\n  __typename?: 'deletePartnerPayload';\n  partner?: Maybe<Partner>;\n};\n\nexport type DeleteReviewInput = {\n  where?: Maybe<InputId>;\n};\n\nexport type DeleteReviewPayload = {\n  __typename?: 'deleteReviewPayload';\n  review?: Maybe<Review>;\n};\n\nexport type DeleteRoleInput = {\n  where?: Maybe<InputId>;\n};\n\nexport type DeleteRolePayload = {\n  __typename?: 'deleteRolePayload';\n  role?: Maybe<UsersPermissionsRole>;\n};\n\nexport type DeleteSubscriberInput = {\n  where?: Maybe<InputId>;\n};\n\nexport type DeleteSubscriberPayload = {\n  __typename?: 'deleteSubscriberPayload';\n  subscriber?: Maybe<Subscribers>;\n};\n\nexport type DeleteTripInput = {\n  where?: Maybe<InputId>;\n};\n\nexport type DeleteTripPayload = {\n  __typename?: 'deleteTripPayload';\n  trip?: Maybe<Trips>;\n};\n\nexport type DeleteUserInput = {\n  where?: Maybe<InputId>;\n};\n\nexport type DeleteUserPayload = {\n  __typename?: 'deleteUserPayload';\n  user?: Maybe<UsersPermissionsUser>;\n};\n\nexport type EditBookingInput = {\n  trip?: Maybe<Scalars['ID']>;\n  approved?: Maybe<Scalars['Boolean']>;\n  basePrice?: Maybe<Scalars['Float']>;\n  currency?: Maybe<Enum_Booking_Currency>;\n  basePeopleCount?: Maybe<Scalars['Int']>;\n  discount?: Maybe<Scalars['Float']>;\n  fullName?: Maybe<Scalars['String']>;\n  phone?: Maybe<Scalars['String']>;\n  message?: Maybe<Scalars['String']>;\n  arrivalDate?: Maybe<Scalars['Date']>;\n  language?: Maybe<Scalars['String']>;\n  userBookingStatus?: Maybe<Enum_Booking_Userbookingstatus>;\n  email?: Maybe<Scalars['String']>;\n  adults?: Maybe<Scalars['Int']>;\n  children?: Maybe<Scalars['Int']>;\n  totalPrice?: Maybe<Scalars['Float']>;\n  published_at?: Maybe<Scalars['DateTime']>;\n  created_by?: Maybe<Scalars['ID']>;\n  updated_by?: Maybe<Scalars['ID']>;\n};\n\nexport type EditCityInput = {\n  name?: Maybe<Scalars['String']>;\n  description?: Maybe<Scalars['String']>;\n  image?: Maybe<Scalars['ID']>;\n  locations?: Maybe<Array<Maybe<Scalars['ID']>>>;\n  localizations?: Maybe<Array<Maybe<Scalars['ID']>>>;\n  locale?: Maybe<Scalars['String']>;\n  published_at?: Maybe<Scalars['DateTime']>;\n  created_by?: Maybe<Scalars['ID']>;\n  updated_by?: Maybe<Scalars['ID']>;\n};\n\nexport type EditComponentCoordinateCoordinateInput = {\n  id?: Maybe<Scalars['ID']>;\n  latitude?: Maybe<Scalars['Float']>;\n  longitude?: Maybe<Scalars['Float']>;\n};\n\nexport type EditComponentFeatureFeatureInput = {\n  id?: Maybe<Scalars['ID']>;\n  feature?: Maybe<Scalars['ID']>;\n  included?: Maybe<Scalars['Boolean']>;\n};\n\nexport type EditComponentPricePriceInput = {\n  id?: Maybe<Scalars['ID']>;\n  basePrice?: Maybe<Scalars['Float']>;\n  currency?: Maybe<Enum_Componentpriceprice_Currency>;\n  basePeopleCount?: Maybe<Scalars['Int']>;\n  extraAdultFee?: Maybe<Scalars['Float']>;\n  discount?: Maybe<Scalars['Float']>;\n};\n\nexport type EditComponentTimelineTimelineInput = {\n  id?: Maybe<Scalars['ID']>;\n  day?: Maybe<Scalars['Int']>;\n  description?: Maybe<Scalars['String']>;\n  locations?: Maybe<Array<Maybe<Scalars['ID']>>>;\n  travelTo?: Maybe<Scalars['ID']>;\n  transportationType?: Maybe<Enum_Componenttimelinetimeline_Transportationtype>;\n  restDay?: Maybe<Scalars['Boolean']>;\n};\n\nexport type EditFeatureInput = {\n  name?: Maybe<Scalars['String']>;\n  info?: Maybe<Scalars['String']>;\n  localizations?: Maybe<Array<Maybe<Scalars['ID']>>>;\n  locale?: Maybe<Scalars['String']>;\n  published_at?: Maybe<Scalars['DateTime']>;\n  created_by?: Maybe<Scalars['ID']>;\n  updated_by?: Maybe<Scalars['ID']>;\n};\n\nexport type EditFileInput = {\n  name?: Maybe<Scalars['String']>;\n  alternativeText?: Maybe<Scalars['String']>;\n  caption?: Maybe<Scalars['String']>;\n  width?: Maybe<Scalars['Int']>;\n  height?: Maybe<Scalars['Int']>;\n  formats?: Maybe<Scalars['JSON']>;\n  hash?: Maybe<Scalars['String']>;\n  ext?: Maybe<Scalars['String']>;\n  mime?: Maybe<Scalars['String']>;\n  size?: Maybe<Scalars['Float']>;\n  url?: Maybe<Scalars['String']>;\n  previewUrl?: Maybe<Scalars['String']>;\n  provider?: Maybe<Scalars['String']>;\n  provider_metadata?: Maybe<Scalars['JSON']>;\n  related?: Maybe<Array<Maybe<Scalars['ID']>>>;\n  created_by?: Maybe<Scalars['ID']>;\n  updated_by?: Maybe<Scalars['ID']>;\n};\n\nexport type EditHomeBannerInput = {\n  images?: Maybe<Array<Maybe<Scalars['ID']>>>;\n  published_at?: Maybe<Scalars['DateTime']>;\n  created_by?: Maybe<Scalars['ID']>;\n  updated_by?: Maybe<Scalars['ID']>;\n};\n\nexport type EditHotelInput = {\n  name?: Maybe<Scalars['String']>;\n  stars?: Maybe<Scalars['Int']>;\n  url?: Maybe<Scalars['String']>;\n  trips?: Maybe<Array<Maybe<Scalars['ID']>>>;\n  published_at?: Maybe<Scalars['DateTime']>;\n  created_by?: Maybe<Scalars['ID']>;\n  updated_by?: Maybe<Scalars['ID']>;\n};\n\nexport type EditLocaleInput = {\n  name?: Maybe<Scalars['String']>;\n  code?: Maybe<Scalars['String']>;\n  created_by?: Maybe<Scalars['ID']>;\n  updated_by?: Maybe<Scalars['ID']>;\n};\n\nexport type EditLocationInput = {\n  name?: Maybe<Scalars['String']>;\n  description?: Maybe<Scalars['String']>;\n  images?: Maybe<Array<Maybe<Scalars['ID']>>>;\n  city?: Maybe<Scalars['ID']>;\n  coordinate?: Maybe<EditComponentCoordinateCoordinateInput>;\n  localizations?: Maybe<Array<Maybe<Scalars['ID']>>>;\n  locale?: Maybe<Scalars['String']>;\n  published_at?: Maybe<Scalars['DateTime']>;\n  created_by?: Maybe<Scalars['ID']>;\n  updated_by?: Maybe<Scalars['ID']>;\n};\n\nexport type EditPartnerInput = {\n  name?: Maybe<Scalars['String']>;\n  phone?: Maybe<Scalars['String']>;\n  address?: Maybe<Scalars['String']>;\n  email?: Maybe<Scalars['String']>;\n  trips?: Maybe<Array<Maybe<Scalars['ID']>>>;\n  agreement?: Maybe<Scalars['String']>;\n  commission?: Maybe<Scalars['Float']>;\n  revenueSource?: Maybe<Enum_Partner_Revenuesource>;\n  agreementStatus?: Maybe<Enum_Partner_Agreementstatus>;\n  notes?: Maybe<Scalars['String']>;\n  phone2?: Maybe<Scalars['String']>;\n  published_at?: Maybe<Scalars['DateTime']>;\n  created_by?: Maybe<Scalars['ID']>;\n  updated_by?: Maybe<Scalars['ID']>;\n};\n\nexport type EditReviewInput = {\n  text?: Maybe<Scalars['String']>;\n  rating?: Maybe<Scalars['Float']>;\n  author?: Maybe<Scalars['ID']>;\n  active?: Maybe<Scalars['Boolean']>;\n  trip?: Maybe<Scalars['ID']>;\n  published_at?: Maybe<Scalars['DateTime']>;\n  created_by?: Maybe<Scalars['ID']>;\n  updated_by?: Maybe<Scalars['ID']>;\n};\n\nexport type EditRoleInput = {\n  name?: Maybe<Scalars['String']>;\n  description?: Maybe<Scalars['String']>;\n  type?: Maybe<Scalars['String']>;\n  permissions?: Maybe<Array<Maybe<Scalars['ID']>>>;\n  users?: Maybe<Array<Maybe<Scalars['ID']>>>;\n  created_by?: Maybe<Scalars['ID']>;\n  updated_by?: Maybe<Scalars['ID']>;\n};\n\nexport type EditSubscriberInput = {\n  email?: Maybe<Scalars['String']>;\n  published_at?: Maybe<Scalars['DateTime']>;\n  created_by?: Maybe<Scalars['ID']>;\n  updated_by?: Maybe<Scalars['ID']>;\n};\n\nexport type EditTripInput = {\n  name?: Maybe<Scalars['String']>;\n  previewImage?: Maybe<Scalars['ID']>;\n  active?: Maybe<Scalars['Boolean']>;\n  trip_type?: Maybe<Enum_Trips_Trip_Type>;\n  description?: Maybe<Scalars['String']>;\n  duration?: Maybe<Scalars['Int']>;\n  partner?: Maybe<Scalars['ID']>;\n  currency?: Maybe<Enum_Trips_Currency>;\n  city?: Maybe<Scalars['ID']>;\n  features?: Maybe<Array<Maybe<EditComponentFeatureFeatureInput>>>;\n  basePrice?: Maybe<Scalars['Int']>;\n  basePeopleCount?: Maybe<Scalars['Int']>;\n  discount?: Maybe<Scalars['Float']>;\n  travelType?: Maybe<Enum_Trips_Traveltype>;\n  hotel?: Maybe<Scalars['ID']>;\n  plan?: Maybe<Array<Maybe<EditComponentTimelineTimelineInput>>>;\n  sequence?: Maybe<Scalars['String']>;\n  localizations?: Maybe<Array<Maybe<Scalars['ID']>>>;\n  locale?: Maybe<Scalars['String']>;\n  published_at?: Maybe<Scalars['DateTime']>;\n  created_by?: Maybe<Scalars['ID']>;\n  updated_by?: Maybe<Scalars['ID']>;\n};\n\nexport type EditUserInput = {\n  username?: Maybe<Scalars['String']>;\n  email?: Maybe<Scalars['String']>;\n  provider?: Maybe<Scalars['String']>;\n  password?: Maybe<Scalars['String']>;\n  resetPasswordToken?: Maybe<Scalars['String']>;\n  confirmationToken?: Maybe<Scalars['String']>;\n  confirmed?: Maybe<Scalars['Boolean']>;\n  blocked?: Maybe<Scalars['Boolean']>;\n  role?: Maybe<Scalars['ID']>;\n  created_by?: Maybe<Scalars['ID']>;\n  updated_by?: Maybe<Scalars['ID']>;\n};\n\nexport type UpdateBookingInput = {\n  where?: Maybe<InputId>;\n  data?: Maybe<EditBookingInput>;\n};\n\nexport type UpdateBookingPayload = {\n  __typename?: 'updateBookingPayload';\n  booking?: Maybe<Booking>;\n};\n\nexport type UpdateCityInput = {\n  where?: Maybe<InputId>;\n  data?: Maybe<EditCityInput>;\n};\n\nexport type UpdateCityPayload = {\n  __typename?: 'updateCityPayload';\n  city?: Maybe<City>;\n};\n\nexport type UpdateFeatureInput = {\n  where?: Maybe<InputId>;\n  data?: Maybe<EditFeatureInput>;\n};\n\nexport type UpdateFeaturePayload = {\n  __typename?: 'updateFeaturePayload';\n  feature?: Maybe<Feature>;\n};\n\nexport type UpdateHomeBannerInput = {\n  data?: Maybe<EditHomeBannerInput>;\n};\n\nexport type UpdateHomeBannerPayload = {\n  __typename?: 'updateHomeBannerPayload';\n  homeBanner?: Maybe<HomeBanner>;\n};\n\nexport type UpdateHotelInput = {\n  where?: Maybe<InputId>;\n  data?: Maybe<EditHotelInput>;\n};\n\nexport type UpdateHotelPayload = {\n  __typename?: 'updateHotelPayload';\n  hotel?: Maybe<Hotels>;\n};\n\nexport type UpdateLocationInput = {\n  where?: Maybe<InputId>;\n  data?: Maybe<EditLocationInput>;\n};\n\nexport type UpdateLocationPayload = {\n  __typename?: 'updateLocationPayload';\n  location?: Maybe<Location>;\n};\n\nexport type UpdatePartnerInput = {\n  where?: Maybe<InputId>;\n  data?: Maybe<EditPartnerInput>;\n};\n\nexport type UpdatePartnerPayload = {\n  __typename?: 'updatePartnerPayload';\n  partner?: Maybe<Partner>;\n};\n\nexport type UpdateReviewInput = {\n  where?: Maybe<InputId>;\n  data?: Maybe<EditReviewInput>;\n};\n\nexport type UpdateReviewPayload = {\n  __typename?: 'updateReviewPayload';\n  review?: Maybe<Review>;\n};\n\nexport type UpdateRoleInput = {\n  where?: Maybe<InputId>;\n  data?: Maybe<EditRoleInput>;\n};\n\nexport type UpdateRolePayload = {\n  __typename?: 'updateRolePayload';\n  role?: Maybe<UsersPermissionsRole>;\n};\n\nexport type UpdateSubscriberInput = {\n  where?: Maybe<InputId>;\n  data?: Maybe<EditSubscriberInput>;\n};\n\nexport type UpdateSubscriberPayload = {\n  __typename?: 'updateSubscriberPayload';\n  subscriber?: Maybe<Subscribers>;\n};\n\nexport type UpdateTripInput = {\n  where?: Maybe<InputId>;\n  data?: Maybe<EditTripInput>;\n};\n\nexport type UpdateTripPayload = {\n  __typename?: 'updateTripPayload';\n  trip?: Maybe<Trips>;\n};\n\nexport type UpdateUserInput = {\n  where?: Maybe<InputId>;\n  data?: Maybe<EditUserInput>;\n};\n\nexport type UpdateUserPayload = {\n  __typename?: 'updateUserPayload';\n  user?: Maybe<UsersPermissionsUser>;\n};\n\nexport type CreateBookingQueryMutationVariables = Exact<{\n  tripId: Scalars['ID'];\n  fullName: Scalars['String'];\n  basePrice: Scalars['Float'];\n  discount?: Maybe<Scalars['Float']>;\n  basePeopleCount: Scalars['Int'];\n  phone: Scalars['String'];\n  arrivalDate: Scalars['Date'];\n  message?: Maybe<Scalars['String']>;\n  currency: Enum_Booking_Currency;\n  email: Scalars['String'];\n  language: Scalars['String'];\n  adults: Scalars['Int'];\n  children: Scalars['Int'];\n}>;\n\n\nexport type CreateBookingQueryMutation = (\n  { __typename?: 'Mutation' }\n  & { createBooking?: Maybe<(\n    { __typename?: 'createBookingPayload' }\n    & { booking?: Maybe<(\n      { __typename?: 'Booking' }\n      & Pick<Booking, 'message'>\n    )> }\n  )> }\n);\n\nexport type CitiesQueryVariables = Exact<{\n  limit?: Maybe<Scalars['Int']>;\n  locale?: Maybe<Scalars['String']>;\n}>;\n\n\nexport type CitiesQuery = (\n  { __typename?: 'Query' }\n  & { cities?: Maybe<Array<Maybe<(\n    { __typename?: 'City' }\n    & CityInfoFragment\n  )>>> }\n);\n\nexport type GetCityQueryVariables = Exact<{\n  id: Scalars['ID'];\n}>;\n\n\nexport type GetCityQuery = (\n  { __typename?: 'Query' }\n  & { city?: Maybe<(\n    { __typename?: 'City' }\n    & CityInfoFragment\n  )> }\n);\n\nexport type GetLocalizedCityQueryVariables = Exact<{\n  id: Scalars['ID'];\n  locale: Scalars['String'];\n}>;\n\n\nexport type GetLocalizedCityQuery = (\n  { __typename?: 'Query' }\n  & { cities?: Maybe<Array<Maybe<(\n    { __typename?: 'City' }\n    & CityInfoFragment\n  )>>> }\n);\n\nexport type CityInfoFragment = (\n  { __typename?: 'City' }\n  & Pick<City, 'id' | 'name' | 'description' | 'locale'>\n  & { localizations?: Maybe<Array<Maybe<(\n    { __typename?: 'City' }\n    & Pick<City, 'id' | 'locale'>\n  )>>>, image?: Maybe<(\n    { __typename?: 'UploadFile' }\n    & Pick<UploadFile, 'id' | 'width' | 'height' | 'url' | 'formats'>\n  )> }\n);\n\nexport type FeaturesQueryVariables = Exact<{\n  locale: Scalars['String'];\n}>;\n\n\nexport type FeaturesQuery = (\n  { __typename?: 'Query' }\n  & { features?: Maybe<Array<Maybe<(\n    { __typename?: 'Feature' }\n    & Pick<Feature, 'name'>\n  )>>> }\n);\n\nexport type HomeCarousellQueryVariables = Exact<{ [key: string]: never; }>;\n\n\nexport type HomeCarousellQuery = (\n  { __typename?: 'Query' }\n  & { homeBanner?: Maybe<(\n    { __typename?: 'HomeBanner' }\n    & { images?: Maybe<Array<Maybe<(\n      { __typename?: 'UploadFile' }\n      & Pick<UploadFile, 'id' | 'width' | 'height' | 'url' | 'formats'>\n    )>>> }\n  )> }\n);\n\nexport type GetLocationsQueryVariables = Exact<{\n  locale: Scalars['String'];\n  ids: Array<Scalars['String']> | Scalars['String'];\n}>;\n\n\nexport type GetLocationsQuery = (\n  { __typename?: 'Query' }\n  & { locations?: Maybe<Array<Maybe<(\n    { __typename?: 'Location' }\n    & Pick<Location, 'id' | 'name' | 'description' | 'locale'>\n    & { coordinate?: Maybe<(\n      { __typename?: 'ComponentCoordinateCoordinate' }\n      & Pick<ComponentCoordinateCoordinate, 'latitude' | 'longitude'>\n    )>, images?: Maybe<Array<Maybe<(\n      { __typename?: 'UploadFile' }\n      & Pick<UploadFile, 'id' | 'width' | 'height' | 'url' | 'formats'>\n    )>>>, city?: Maybe<(\n      { __typename?: 'City' }\n      & Pick<City, 'id' | 'name' | 'description' | 'locale'>\n      & { localizations?: Maybe<Array<Maybe<(\n        { __typename?: 'City' }\n        & Pick<City, 'id' | 'locale'>\n      )>>>, image?: Maybe<(\n        { __typename?: 'UploadFile' }\n        & Pick<UploadFile, 'id' | 'width' | 'height' | 'url' | 'formats'>\n      )> }\n    )> }\n  )>>> }\n);\n\nexport type AddToNewsLetterMutationVariables = Exact<{\n  email: Scalars['String'];\n}>;\n\n\nexport type AddToNewsLetterMutation = (\n  { __typename?: 'Mutation' }\n  & { createSubscriber?: Maybe<(\n    { __typename?: 'createSubscriberPayload' }\n    & { subscriber?: Maybe<(\n      { __typename?: 'Subscribers' }\n      & Pick<Subscribers, 'email'>\n    )> }\n  )> }\n);\n\nexport type TripsQueryVariables = Exact<{\n  limit?: Maybe<Scalars['Int']>;\n  locale?: Maybe<Scalars['String']>;\n  where?: Maybe<Scalars['JSON']>;\n}>;\n\n\nexport type TripsQuery = (\n  { __typename?: 'Query' }\n  & { trips?: Maybe<Array<Maybe<(\n    { __typename?: 'Trips' }\n    & TripInfoFragment\n  )>>> }\n);\n\nexport type GetTripQueryVariables = Exact<{\n  id: Scalars['ID'];\n}>;\n\n\nexport type GetTripQuery = (\n  { __typename?: 'Query' }\n  & { trip?: Maybe<(\n    { __typename?: 'Trips' }\n    & TripInfoFragment\n  )> }\n);\n\nexport type GetLocalizedTripQueryVariables = Exact<{\n  id: Scalars['ID'];\n  locale: Scalars['String'];\n}>;\n\n\nexport type GetLocalizedTripQuery = (\n  { __typename?: 'Query' }\n  & { trips?: Maybe<Array<Maybe<(\n    { __typename?: 'Trips' }\n    & TripInfoFragment\n  )>>> }\n);\n\nexport type TripInfoFragment = (\n  { __typename?: 'Trips' }\n  & Pick<Trips, 'id' | 'name' | 'active' | 'description' | 'locale' | 'trip_type' | 'duration' | 'travelType' | 'basePrice' | 'discount' | 'currency' | 'basePeopleCount'>\n  & { city?: Maybe<(\n    { __typename?: 'City' }\n    & Pick<City, 'id' | 'name'>\n  )>, hotel?: Maybe<(\n    { __typename?: 'Hotels' }\n    & Pick<Hotels, 'id' | 'name' | 'url' | 'stars'>\n  )>, plan?: Maybe<Array<Maybe<(\n    { __typename?: 'ComponentTimelineTimeline' }\n    & Pick<ComponentTimelineTimeline, 'day' | 'transportationType' | 'description' | 'restDay'>\n    & { locations?: Maybe<Array<Maybe<(\n      { __typename?: 'Location' }\n      & Pick<Location, 'id' | 'name'>\n      & { city?: Maybe<(\n        { __typename?: 'City' }\n        & Pick<City, 'id'>\n      )> }\n    )>>>, travelTo?: Maybe<(\n      { __typename?: 'City' }\n      & Pick<City, 'id' | 'name'>\n    )> }\n  )>>>, previewImage?: Maybe<(\n    { __typename?: 'UploadFile' }\n    & Pick<UploadFile, 'id' | 'width' | 'height' | 'url' | 'formats'>\n  )>, localizations?: Maybe<Array<Maybe<(\n    { __typename?: 'Trips' }\n    & Pick<Trips, 'id' | 'locale'>\n  )>>>, features?: Maybe<Array<Maybe<(\n    { __typename?: 'ComponentFeatureFeature' }\n    & Pick<ComponentFeatureFeature, 'included'>\n    & { feature?: Maybe<(\n      { __typename?: 'Feature' }\n      & Pick<Feature, 'name' | 'info'>\n    )> }\n  )>>> }\n);\n\nexport const CityInfoFragmentDoc = gql`\n    fragment CityInfo on City {\n  id\n  name\n  description\n  locale\n  localizations {\n    id\n    locale\n  }\n  image {\n    id\n    width\n    height\n    url\n    formats\n  }\n}\n    `;\nexport const TripInfoFragmentDoc = gql`\n    fragment tripInfo on Trips {\n  id\n  name\n  active\n  description\n  locale\n  trip_type\n  duration\n  travelType\n  city {\n    id\n    name\n  }\n  hotel {\n    id\n    name\n    url\n    stars\n  }\n  plan {\n    day\n    locations {\n      id\n      name\n      city {\n        id\n      }\n    }\n    transportationType\n    travelTo {\n      id\n      name\n    }\n    description\n    restDay\n  }\n  previewImage {\n    id\n    width\n    height\n    url\n    formats\n  }\n  localizations {\n    id\n    locale\n  }\n  basePrice\n  discount\n  currency\n  basePeopleCount\n  features {\n    included\n    feature {\n      name\n      info\n    }\n  }\n}\n    `;\nexport const CreateBookingQueryDocument = gql`\n    mutation createBookingQuery($tripId: ID!, $fullName: String!, $basePrice: Float!, $discount: Float = 0, $basePeopleCount: Int!, $phone: String!, $arrivalDate: Date!, $message: String, $currency: ENUM_BOOKING_CURRENCY!, $email: String!, $language: String!, $adults: Int!, $children: Int!) {\n  createBooking(\n    input: {data: {trip: $tripId, basePrice: $basePrice, discount: $discount, message: $message, fullName: $fullName, basePeopleCount: $basePeopleCount, phone: $phone, arrivalDate: $arrivalDate, currency: $currency, email: $email, language: $language, adults: $adults, children: $children}}\n  ) {\n    booking {\n      message\n    }\n  }\n}\n    `;\n\n  @Injectable({\n    providedIn: 'root'\n  })\n  export class CreateBookingQueryGQL extends Apollo.Mutation<CreateBookingQueryMutation, CreateBookingQueryMutationVariables> {\n    document = CreateBookingQueryDocument;\n    \n    constructor(apollo: Apollo.Apollo) {\n      super(apollo);\n    }\n  }\nexport const CitiesDocument = gql`\n    query cities($limit: Int, $locale: String) {\n  cities(limit: $limit, locale: $locale) {\n    ...CityInfo\n  }\n}\n    ${CityInfoFragmentDoc}`;\n\n  @Injectable({\n    providedIn: 'root'\n  })\n  export class CitiesGQL extends Apollo.Query<CitiesQuery, CitiesQueryVariables> {\n    document = CitiesDocument;\n    \n    constructor(apollo: Apollo.Apollo) {\n      super(apollo);\n    }\n  }\nexport const GetCityDocument = gql`\n    query getCity($id: ID!) {\n  city(id: $id) {\n    ...CityInfo\n  }\n}\n    ${CityInfoFragmentDoc}`;\n\n  @Injectable({\n    providedIn: 'root'\n  })\n  export class GetCityGQL extends Apollo.Query<GetCityQuery, GetCityQueryVariables> {\n    document = GetCityDocument;\n    \n    constructor(apollo: Apollo.Apollo) {\n      super(apollo);\n    }\n  }\nexport const GetLocalizedCityDocument = gql`\n    query getLocalizedCity($id: ID!, $locale: String!) {\n  cities(locale: $locale, where: {_or: [{localizations: {id: $id}}, {id: $id}]}) {\n    ...CityInfo\n  }\n}\n    ${CityInfoFragmentDoc}`;\n\n  @Injectable({\n    providedIn: 'root'\n  })\n  export class GetLocalizedCityGQL extends Apollo.Query<GetLocalizedCityQuery, GetLocalizedCityQueryVariables> {\n    document = GetLocalizedCityDocument;\n    \n    constructor(apollo: Apollo.Apollo) {\n      super(apollo);\n    }\n  }\nexport const FeaturesDocument = gql`\n    query features($locale: String!) {\n  features(locale: $locale) {\n    name\n  }\n}\n    `;\n\n  @Injectable({\n    providedIn: 'root'\n  })\n  export class FeaturesGQL extends Apollo.Query<FeaturesQuery, FeaturesQueryVariables> {\n    document = FeaturesDocument;\n    \n    constructor(apollo: Apollo.Apollo) {\n      super(apollo);\n    }\n  }\nexport const HomeCarousellDocument = gql`\n    query homeCarousell {\n  homeBanner {\n    images {\n      id\n      width\n      height\n      url\n      formats\n    }\n  }\n}\n    `;\n\n  @Injectable({\n    providedIn: 'root'\n  })\n  export class HomeCarousellGQL extends Apollo.Query<HomeCarousellQuery, HomeCarousellQueryVariables> {\n    document = HomeCarousellDocument;\n    \n    constructor(apollo: Apollo.Apollo) {\n      super(apollo);\n    }\n  }\nexport const GetLocationsDocument = gql`\n    query getLocations($locale: String!, $ids: [String!]!) {\n  locations(locale: $locale, where: {id_in: $ids}) {\n    id\n    name\n    description\n    coordinate {\n      latitude\n      longitude\n    }\n    locale\n    images {\n      id\n      width\n      height\n      url\n      formats\n    }\n    city {\n      id\n      name\n      description\n      locale\n      localizations {\n        id\n        locale\n      }\n      image {\n        id\n        width\n        height\n        url\n        formats\n      }\n    }\n  }\n}\n    `;\n\n  @Injectable({\n    providedIn: 'root'\n  })\n  export class GetLocationsGQL extends Apollo.Query<GetLocationsQuery, GetLocationsQueryVariables> {\n    document = GetLocationsDocument;\n    \n    constructor(apollo: Apollo.Apollo) {\n      super(apollo);\n    }\n  }\nexport const AddToNewsLetterDocument = gql`\n    mutation addToNewsLetter($email: String!) {\n  createSubscriber(input: {data: {email: $email}}) {\n    subscriber {\n      email\n    }\n  }\n}\n    `;\n\n  @Injectable({\n    providedIn: 'root'\n  })\n  export class AddToNewsLetterGQL extends Apollo.Mutation<AddToNewsLetterMutation, AddToNewsLetterMutationVariables> {\n    document = AddToNewsLetterDocument;\n    \n    constructor(apollo: Apollo.Apollo) {\n      super(apollo);\n    }\n  }\nexport const TripsDocument = gql`\n    query trips($limit: Int = 10, $locale: String = \"en\", $where: JSON) {\n  trips(limit: $limit, locale: $locale, where: $where) {\n    ...tripInfo\n  }\n}\n    ${TripInfoFragmentDoc}`;\n\n  @Injectable({\n    providedIn: 'root'\n  })\n  export class TripsGQL extends Apollo.Query<TripsQuery, TripsQueryVariables> {\n    document = TripsDocument;\n    \n    constructor(apollo: Apollo.Apollo) {\n      super(apollo);\n    }\n  }\nexport const GetTripDocument = gql`\n    query getTrip($id: ID!) {\n  trip(id: $id) {\n    ...tripInfo\n  }\n}\n    ${TripInfoFragmentDoc}`;\n\n  @Injectable({\n    providedIn: 'root'\n  })\n  export class GetTripGQL extends Apollo.Query<GetTripQuery, GetTripQueryVariables> {\n    document = GetTripDocument;\n    \n    constructor(apollo: Apollo.Apollo) {\n      super(apollo);\n    }\n  }\nexport const GetLocalizedTripDocument = gql`\n    query getLocalizedTrip($id: ID!, $locale: String!) {\n  trips(locale: $locale, where: {_or: [{localizations: {id: $id}}, {id: $id}]}) {\n    ...tripInfo\n  }\n}\n    ${TripInfoFragmentDoc}`;\n\n  @Injectable({\n    providedIn: 'root'\n  })\n  export class GetLocalizedTripGQL extends Apollo.Query<GetLocalizedTripQuery, GetLocalizedTripQueryVariables> {\n    document = GetLocalizedTripDocument;\n    \n    constructor(apollo: Apollo.Apollo) {\n      super(apollo);\n    }\n  }",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "apollo",
                        "type": "Apollo.Apollo"
                    }
                ],
                "line": 3655,
                "jsdoctags": [
                    {
                        "name": "apollo",
                        "type": "Apollo.Apollo",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "type": "injectable"
        },
        {
            "name": "GetLocalizedCityGQL",
            "id": "injectable-GetLocalizedCityGQL-54bb7cbcdd682e4d53ca5e8a5c5399f6",
            "file": "src/app/data/services/saferniGraphql.service.ts",
            "properties": [
                {
                    "name": "document",
                    "defaultValue": "GetLocalizedCityDocument",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 3673
                }
            ],
            "methods": [],
            "description": "",
            "sourceCode": "import { gql } from 'apollo-angular';\nimport { Injectable } from '@angular/core';\nimport * as Apollo from 'apollo-angular';\nexport type Maybe<T> = T | null;\nexport type Exact<T extends { [key: string]: unknown }> = { [K in keyof T]: T[K] };\nexport type MakeOptional<T, K extends keyof T> = Omit<T, K> & { [SubKey in K]?: Maybe<T[SubKey]> };\nexport type MakeMaybe<T, K extends keyof T> = Omit<T, K> & { [SubKey in K]: Maybe<T[SubKey]> };\n/** All built-in and custom scalars, mapped to their actual values */\nexport type Scalars = {\n  ID: string;\n  String: string;\n  Boolean: boolean;\n  Int: number;\n  Float: number;\n  /** A date string, such as 2007-12-03, compliant with the `full-date` format outlined in section 5.6 of the RFC 3339 profile of the ISO 8601 standard for representation of dates and times using the Gregorian calendar. */\n  Date: any;\n  /** A date-time string at UTC, such as 2007-12-03T10:15:30Z, compliant with the `date-time` format outlined in section 5.6 of the RFC 3339 profile of the ISO 8601 standard for representation of dates and times using the Gregorian calendar. */\n  DateTime: any;\n  /** The `JSON` scalar type represents JSON values as specified by [ECMA-404](http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf). */\n  JSON: any;\n  /** The `Long` scalar type represents 52-bit integers */\n  Long: any;\n  /** A time string with format: HH:mm:ss.SSS */\n  Time: any;\n  /** The `Upload` scalar type represents a file upload. */\n  Upload: any;\n};\n\n\n\nexport type AdminUser = {\n  __typename?: 'AdminUser';\n  id: Scalars['ID'];\n  username?: Maybe<Scalars['String']>;\n  firstname: Scalars['String'];\n  lastname: Scalars['String'];\n};\n\nexport type Booking = {\n  __typename?: 'Booking';\n  id: Scalars['ID'];\n  _id: Scalars['ID'];\n  createdAt: Scalars['DateTime'];\n  updatedAt: Scalars['DateTime'];\n  trip?: Maybe<Trips>;\n  approved?: Maybe<Scalars['Boolean']>;\n  basePrice: Scalars['Float'];\n  currency: Enum_Booking_Currency;\n  basePeopleCount: Scalars['Int'];\n  discount?: Maybe<Scalars['Float']>;\n  fullName: Scalars['String'];\n  phone: Scalars['String'];\n  message?: Maybe<Scalars['String']>;\n  arrivalDate: Scalars['Date'];\n  language?: Maybe<Scalars['String']>;\n  userBookingStatus?: Maybe<Enum_Booking_Userbookingstatus>;\n  email: Scalars['String'];\n  adults: Scalars['Int'];\n  children?: Maybe<Scalars['Int']>;\n  totalPrice?: Maybe<Scalars['Float']>;\n  published_at?: Maybe<Scalars['DateTime']>;\n};\n\nexport type BookingAggregator = {\n  __typename?: 'BookingAggregator';\n  count?: Maybe<Scalars['Int']>;\n  totalCount?: Maybe<Scalars['Int']>;\n  sum?: Maybe<BookingAggregatorSum>;\n  avg?: Maybe<BookingAggregatorAvg>;\n  min?: Maybe<BookingAggregatorMin>;\n  max?: Maybe<BookingAggregatorMax>;\n};\n\nexport type BookingAggregatorAvg = {\n  __typename?: 'BookingAggregatorAvg';\n  basePrice?: Maybe<Scalars['Float']>;\n  basePeopleCount?: Maybe<Scalars['Float']>;\n  discount?: Maybe<Scalars['Float']>;\n  adults?: Maybe<Scalars['Float']>;\n  children?: Maybe<Scalars['Float']>;\n  totalPrice?: Maybe<Scalars['Float']>;\n};\n\nexport type BookingAggregatorMax = {\n  __typename?: 'BookingAggregatorMax';\n  basePrice?: Maybe<Scalars['Float']>;\n  basePeopleCount?: Maybe<Scalars['Float']>;\n  discount?: Maybe<Scalars['Float']>;\n  adults?: Maybe<Scalars['Float']>;\n  children?: Maybe<Scalars['Float']>;\n  totalPrice?: Maybe<Scalars['Float']>;\n};\n\nexport type BookingAggregatorMin = {\n  __typename?: 'BookingAggregatorMin';\n  basePrice?: Maybe<Scalars['Float']>;\n  basePeopleCount?: Maybe<Scalars['Float']>;\n  discount?: Maybe<Scalars['Float']>;\n  adults?: Maybe<Scalars['Float']>;\n  children?: Maybe<Scalars['Float']>;\n  totalPrice?: Maybe<Scalars['Float']>;\n};\n\nexport type BookingAggregatorSum = {\n  __typename?: 'BookingAggregatorSum';\n  basePrice?: Maybe<Scalars['Float']>;\n  basePeopleCount?: Maybe<Scalars['Float']>;\n  discount?: Maybe<Scalars['Float']>;\n  adults?: Maybe<Scalars['Float']>;\n  children?: Maybe<Scalars['Float']>;\n  totalPrice?: Maybe<Scalars['Float']>;\n};\n\nexport type BookingConnection = {\n  __typename?: 'BookingConnection';\n  values?: Maybe<Array<Maybe<Booking>>>;\n  groupBy?: Maybe<BookingGroupBy>;\n  aggregate?: Maybe<BookingAggregator>;\n};\n\nexport type BookingConnectionAdults = {\n  __typename?: 'BookingConnectionAdults';\n  key?: Maybe<Scalars['Int']>;\n  connection?: Maybe<BookingConnection>;\n};\n\nexport type BookingConnectionApproved = {\n  __typename?: 'BookingConnectionApproved';\n  key?: Maybe<Scalars['Boolean']>;\n  connection?: Maybe<BookingConnection>;\n};\n\nexport type BookingConnectionArrivalDate = {\n  __typename?: 'BookingConnectionArrivalDate';\n  key?: Maybe<Scalars['ID']>;\n  connection?: Maybe<BookingConnection>;\n};\n\nexport type BookingConnectionBasePeopleCount = {\n  __typename?: 'BookingConnectionBasePeopleCount';\n  key?: Maybe<Scalars['Int']>;\n  connection?: Maybe<BookingConnection>;\n};\n\nexport type BookingConnectionBasePrice = {\n  __typename?: 'BookingConnectionBasePrice';\n  key?: Maybe<Scalars['Float']>;\n  connection?: Maybe<BookingConnection>;\n};\n\nexport type BookingConnectionChildren = {\n  __typename?: 'BookingConnectionChildren';\n  key?: Maybe<Scalars['Int']>;\n  connection?: Maybe<BookingConnection>;\n};\n\nexport type BookingConnectionCreatedAt = {\n  __typename?: 'BookingConnectionCreatedAt';\n  key?: Maybe<Scalars['DateTime']>;\n  connection?: Maybe<BookingConnection>;\n};\n\nexport type BookingConnectionCurrency = {\n  __typename?: 'BookingConnectionCurrency';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<BookingConnection>;\n};\n\nexport type BookingConnectionDiscount = {\n  __typename?: 'BookingConnectionDiscount';\n  key?: Maybe<Scalars['Float']>;\n  connection?: Maybe<BookingConnection>;\n};\n\nexport type BookingConnectionEmail = {\n  __typename?: 'BookingConnectionEmail';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<BookingConnection>;\n};\n\nexport type BookingConnectionFullName = {\n  __typename?: 'BookingConnectionFullName';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<BookingConnection>;\n};\n\nexport type BookingConnectionId = {\n  __typename?: 'BookingConnectionId';\n  key?: Maybe<Scalars['ID']>;\n  connection?: Maybe<BookingConnection>;\n};\n\nexport type BookingConnectionLanguage = {\n  __typename?: 'BookingConnectionLanguage';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<BookingConnection>;\n};\n\nexport type BookingConnectionMessage = {\n  __typename?: 'BookingConnectionMessage';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<BookingConnection>;\n};\n\nexport type BookingConnectionPhone = {\n  __typename?: 'BookingConnectionPhone';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<BookingConnection>;\n};\n\nexport type BookingConnectionPublished_At = {\n  __typename?: 'BookingConnectionPublished_at';\n  key?: Maybe<Scalars['DateTime']>;\n  connection?: Maybe<BookingConnection>;\n};\n\nexport type BookingConnectionTotalPrice = {\n  __typename?: 'BookingConnectionTotalPrice';\n  key?: Maybe<Scalars['Float']>;\n  connection?: Maybe<BookingConnection>;\n};\n\nexport type BookingConnectionTrip = {\n  __typename?: 'BookingConnectionTrip';\n  key?: Maybe<Scalars['ID']>;\n  connection?: Maybe<BookingConnection>;\n};\n\nexport type BookingConnectionUpdatedAt = {\n  __typename?: 'BookingConnectionUpdatedAt';\n  key?: Maybe<Scalars['DateTime']>;\n  connection?: Maybe<BookingConnection>;\n};\n\nexport type BookingConnectionUserBookingStatus = {\n  __typename?: 'BookingConnectionUserBookingStatus';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<BookingConnection>;\n};\n\nexport type BookingConnection_Id = {\n  __typename?: 'BookingConnection_id';\n  key?: Maybe<Scalars['ID']>;\n  connection?: Maybe<BookingConnection>;\n};\n\nexport type BookingGroupBy = {\n  __typename?: 'BookingGroupBy';\n  id?: Maybe<Array<Maybe<BookingConnectionId>>>;\n  _id?: Maybe<Array<Maybe<BookingConnection_Id>>>;\n  createdAt?: Maybe<Array<Maybe<BookingConnectionCreatedAt>>>;\n  updatedAt?: Maybe<Array<Maybe<BookingConnectionUpdatedAt>>>;\n  trip?: Maybe<Array<Maybe<BookingConnectionTrip>>>;\n  approved?: Maybe<Array<Maybe<BookingConnectionApproved>>>;\n  basePrice?: Maybe<Array<Maybe<BookingConnectionBasePrice>>>;\n  currency?: Maybe<Array<Maybe<BookingConnectionCurrency>>>;\n  basePeopleCount?: Maybe<Array<Maybe<BookingConnectionBasePeopleCount>>>;\n  discount?: Maybe<Array<Maybe<BookingConnectionDiscount>>>;\n  fullName?: Maybe<Array<Maybe<BookingConnectionFullName>>>;\n  phone?: Maybe<Array<Maybe<BookingConnectionPhone>>>;\n  message?: Maybe<Array<Maybe<BookingConnectionMessage>>>;\n  arrivalDate?: Maybe<Array<Maybe<BookingConnectionArrivalDate>>>;\n  language?: Maybe<Array<Maybe<BookingConnectionLanguage>>>;\n  userBookingStatus?: Maybe<Array<Maybe<BookingConnectionUserBookingStatus>>>;\n  email?: Maybe<Array<Maybe<BookingConnectionEmail>>>;\n  adults?: Maybe<Array<Maybe<BookingConnectionAdults>>>;\n  children?: Maybe<Array<Maybe<BookingConnectionChildren>>>;\n  totalPrice?: Maybe<Array<Maybe<BookingConnectionTotalPrice>>>;\n  published_at?: Maybe<Array<Maybe<BookingConnectionPublished_At>>>;\n};\n\nexport type BookingInput = {\n  trip?: Maybe<Scalars['ID']>;\n  approved?: Maybe<Scalars['Boolean']>;\n  basePrice: Scalars['Float'];\n  currency: Enum_Booking_Currency;\n  basePeopleCount: Scalars['Int'];\n  discount?: Maybe<Scalars['Float']>;\n  fullName: Scalars['String'];\n  phone: Scalars['String'];\n  message?: Maybe<Scalars['String']>;\n  arrivalDate: Scalars['Date'];\n  language?: Maybe<Scalars['String']>;\n  userBookingStatus?: Maybe<Enum_Booking_Userbookingstatus>;\n  email: Scalars['String'];\n  adults: Scalars['Int'];\n  children?: Maybe<Scalars['Int']>;\n  totalPrice?: Maybe<Scalars['Float']>;\n  published_at?: Maybe<Scalars['DateTime']>;\n  created_by?: Maybe<Scalars['ID']>;\n  updated_by?: Maybe<Scalars['ID']>;\n};\n\nexport type City = {\n  __typename?: 'City';\n  id: Scalars['ID'];\n  _id: Scalars['ID'];\n  createdAt: Scalars['DateTime'];\n  updatedAt: Scalars['DateTime'];\n  name: Scalars['String'];\n  description?: Maybe<Scalars['String']>;\n  image?: Maybe<UploadFile>;\n  locale?: Maybe<Scalars['String']>;\n  published_at?: Maybe<Scalars['DateTime']>;\n  locations?: Maybe<Array<Maybe<Location>>>;\n  localizations?: Maybe<Array<Maybe<City>>>;\n};\n\n\nexport type CityLocationsArgs = {\n  sort?: Maybe<Scalars['String']>;\n  limit?: Maybe<Scalars['Int']>;\n  start?: Maybe<Scalars['Int']>;\n  where?: Maybe<Scalars['JSON']>;\n};\n\n\nexport type CityLocalizationsArgs = {\n  sort?: Maybe<Scalars['String']>;\n  limit?: Maybe<Scalars['Int']>;\n  start?: Maybe<Scalars['Int']>;\n  where?: Maybe<Scalars['JSON']>;\n};\n\nexport type CityAggregator = {\n  __typename?: 'CityAggregator';\n  count?: Maybe<Scalars['Int']>;\n  totalCount?: Maybe<Scalars['Int']>;\n};\n\nexport type CityConnection = {\n  __typename?: 'CityConnection';\n  values?: Maybe<Array<Maybe<City>>>;\n  groupBy?: Maybe<CityGroupBy>;\n  aggregate?: Maybe<CityAggregator>;\n};\n\nexport type CityConnectionCreatedAt = {\n  __typename?: 'CityConnectionCreatedAt';\n  key?: Maybe<Scalars['DateTime']>;\n  connection?: Maybe<CityConnection>;\n};\n\nexport type CityConnectionDescription = {\n  __typename?: 'CityConnectionDescription';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<CityConnection>;\n};\n\nexport type CityConnectionId = {\n  __typename?: 'CityConnectionId';\n  key?: Maybe<Scalars['ID']>;\n  connection?: Maybe<CityConnection>;\n};\n\nexport type CityConnectionImage = {\n  __typename?: 'CityConnectionImage';\n  key?: Maybe<Scalars['ID']>;\n  connection?: Maybe<CityConnection>;\n};\n\nexport type CityConnectionLocale = {\n  __typename?: 'CityConnectionLocale';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<CityConnection>;\n};\n\nexport type CityConnectionName = {\n  __typename?: 'CityConnectionName';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<CityConnection>;\n};\n\nexport type CityConnectionPublished_At = {\n  __typename?: 'CityConnectionPublished_at';\n  key?: Maybe<Scalars['DateTime']>;\n  connection?: Maybe<CityConnection>;\n};\n\nexport type CityConnectionUpdatedAt = {\n  __typename?: 'CityConnectionUpdatedAt';\n  key?: Maybe<Scalars['DateTime']>;\n  connection?: Maybe<CityConnection>;\n};\n\nexport type CityConnection_Id = {\n  __typename?: 'CityConnection_id';\n  key?: Maybe<Scalars['ID']>;\n  connection?: Maybe<CityConnection>;\n};\n\nexport type CityGroupBy = {\n  __typename?: 'CityGroupBy';\n  id?: Maybe<Array<Maybe<CityConnectionId>>>;\n  _id?: Maybe<Array<Maybe<CityConnection_Id>>>;\n  createdAt?: Maybe<Array<Maybe<CityConnectionCreatedAt>>>;\n  updatedAt?: Maybe<Array<Maybe<CityConnectionUpdatedAt>>>;\n  name?: Maybe<Array<Maybe<CityConnectionName>>>;\n  description?: Maybe<Array<Maybe<CityConnectionDescription>>>;\n  image?: Maybe<Array<Maybe<CityConnectionImage>>>;\n  locale?: Maybe<Array<Maybe<CityConnectionLocale>>>;\n  published_at?: Maybe<Array<Maybe<CityConnectionPublished_At>>>;\n};\n\nexport type CityInput = {\n  name: Scalars['String'];\n  description?: Maybe<Scalars['String']>;\n  image?: Maybe<Scalars['ID']>;\n  locations?: Maybe<Array<Maybe<Scalars['ID']>>>;\n  localizations?: Maybe<Array<Maybe<Scalars['ID']>>>;\n  locale?: Maybe<Scalars['String']>;\n  published_at?: Maybe<Scalars['DateTime']>;\n  created_by?: Maybe<Scalars['ID']>;\n  updated_by?: Maybe<Scalars['ID']>;\n};\n\nexport type ComponentCoordinateCoordinate = {\n  __typename?: 'ComponentCoordinateCoordinate';\n  id: Scalars['ID'];\n  _id: Scalars['ID'];\n  latitude: Scalars['Float'];\n  longitude: Scalars['Float'];\n};\n\nexport type ComponentCoordinateCoordinateInput = {\n  latitude: Scalars['Float'];\n  longitude: Scalars['Float'];\n};\n\nexport type ComponentFeatureFeature = {\n  __typename?: 'ComponentFeatureFeature';\n  id: Scalars['ID'];\n  _id: Scalars['ID'];\n  feature?: Maybe<Feature>;\n  included?: Maybe<Scalars['Boolean']>;\n};\n\nexport type ComponentFeatureFeatureInput = {\n  feature?: Maybe<Scalars['ID']>;\n  included?: Maybe<Scalars['Boolean']>;\n};\n\nexport type ComponentPricePrice = {\n  __typename?: 'ComponentPricePrice';\n  id: Scalars['ID'];\n  _id: Scalars['ID'];\n  basePrice: Scalars['Float'];\n  currency: Enum_Componentpriceprice_Currency;\n  basePeopleCount: Scalars['Int'];\n  extraAdultFee?: Maybe<Scalars['Float']>;\n  discount?: Maybe<Scalars['Float']>;\n};\n\nexport type ComponentPricePriceInput = {\n  basePrice: Scalars['Float'];\n  currency?: Maybe<Enum_Componentpriceprice_Currency>;\n  basePeopleCount: Scalars['Int'];\n  extraAdultFee?: Maybe<Scalars['Float']>;\n  discount?: Maybe<Scalars['Float']>;\n};\n\nexport type ComponentTimelineTimeline = {\n  __typename?: 'ComponentTimelineTimeline';\n  id: Scalars['ID'];\n  _id: Scalars['ID'];\n  day: Scalars['Int'];\n  description?: Maybe<Scalars['String']>;\n  travelTo?: Maybe<City>;\n  transportationType?: Maybe<Enum_Componenttimelinetimeline_Transportationtype>;\n  restDay?: Maybe<Scalars['Boolean']>;\n  locations?: Maybe<Array<Maybe<Location>>>;\n};\n\n\nexport type ComponentTimelineTimelineLocationsArgs = {\n  sort?: Maybe<Scalars['String']>;\n  limit?: Maybe<Scalars['Int']>;\n  start?: Maybe<Scalars['Int']>;\n  where?: Maybe<Scalars['JSON']>;\n};\n\nexport type ComponentTimelineTimelineInput = {\n  day: Scalars['Int'];\n  description?: Maybe<Scalars['String']>;\n  locations?: Maybe<Array<Maybe<Scalars['ID']>>>;\n  travelTo?: Maybe<Scalars['ID']>;\n  transportationType?: Maybe<Enum_Componenttimelinetimeline_Transportationtype>;\n  restDay?: Maybe<Scalars['Boolean']>;\n};\n\n\n\nexport enum Enum_Booking_Currency {\n  Dollar = 'dollar',\n  Lira = 'lira'\n}\n\nexport enum Enum_Booking_Userbookingstatus {\n  Initial = 'initial',\n  Confirmed = 'confirmed',\n  Canceled = 'canceled'\n}\n\nexport enum Enum_Componentpriceprice_Currency {\n  Dollar = 'dollar',\n  Lira = 'lira'\n}\n\nexport enum Enum_Componenttimelinetimeline_Transportationtype {\n  Arrival = 'arrival',\n  Departure = 'departure',\n  BetweenCities = 'betweenCities',\n  WithinCity = 'withinCity'\n}\n\nexport enum Enum_Partner_Agreementstatus {\n  Agreed = 'Agreed',\n  Discussing = 'discussing',\n  Termination = 'termination'\n}\n\nexport enum Enum_Partner_Revenuesource {\n  PricePercentage = 'pricePercentage',\n  InflatedPrice = 'inflatedPrice'\n}\n\nexport enum Enum_Trips_Currency {\n  Dollar = 'dollar',\n  Lira = 'lira'\n}\n\nexport enum Enum_Trips_Traveltype {\n  Private = 'private',\n  Public = 'public',\n  Both = 'both'\n}\n\nexport enum Enum_Trips_Trip_Type {\n  Touristic = 'touristic',\n  Medical = 'medical'\n}\n\nexport type Feature = {\n  __typename?: 'Feature';\n  id: Scalars['ID'];\n  _id: Scalars['ID'];\n  createdAt: Scalars['DateTime'];\n  updatedAt: Scalars['DateTime'];\n  name: Scalars['String'];\n  info?: Maybe<Scalars['String']>;\n  locale?: Maybe<Scalars['String']>;\n  published_at?: Maybe<Scalars['DateTime']>;\n  localizations?: Maybe<Array<Maybe<Feature>>>;\n};\n\n\nexport type FeatureLocalizationsArgs = {\n  sort?: Maybe<Scalars['String']>;\n  limit?: Maybe<Scalars['Int']>;\n  start?: Maybe<Scalars['Int']>;\n  where?: Maybe<Scalars['JSON']>;\n};\n\nexport type FeatureAggregator = {\n  __typename?: 'FeatureAggregator';\n  count?: Maybe<Scalars['Int']>;\n  totalCount?: Maybe<Scalars['Int']>;\n};\n\nexport type FeatureConnection = {\n  __typename?: 'FeatureConnection';\n  values?: Maybe<Array<Maybe<Feature>>>;\n  groupBy?: Maybe<FeatureGroupBy>;\n  aggregate?: Maybe<FeatureAggregator>;\n};\n\nexport type FeatureConnectionCreatedAt = {\n  __typename?: 'FeatureConnectionCreatedAt';\n  key?: Maybe<Scalars['DateTime']>;\n  connection?: Maybe<FeatureConnection>;\n};\n\nexport type FeatureConnectionId = {\n  __typename?: 'FeatureConnectionId';\n  key?: Maybe<Scalars['ID']>;\n  connection?: Maybe<FeatureConnection>;\n};\n\nexport type FeatureConnectionInfo = {\n  __typename?: 'FeatureConnectionInfo';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<FeatureConnection>;\n};\n\nexport type FeatureConnectionLocale = {\n  __typename?: 'FeatureConnectionLocale';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<FeatureConnection>;\n};\n\nexport type FeatureConnectionName = {\n  __typename?: 'FeatureConnectionName';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<FeatureConnection>;\n};\n\nexport type FeatureConnectionPublished_At = {\n  __typename?: 'FeatureConnectionPublished_at';\n  key?: Maybe<Scalars['DateTime']>;\n  connection?: Maybe<FeatureConnection>;\n};\n\nexport type FeatureConnectionUpdatedAt = {\n  __typename?: 'FeatureConnectionUpdatedAt';\n  key?: Maybe<Scalars['DateTime']>;\n  connection?: Maybe<FeatureConnection>;\n};\n\nexport type FeatureConnection_Id = {\n  __typename?: 'FeatureConnection_id';\n  key?: Maybe<Scalars['ID']>;\n  connection?: Maybe<FeatureConnection>;\n};\n\nexport type FeatureGroupBy = {\n  __typename?: 'FeatureGroupBy';\n  id?: Maybe<Array<Maybe<FeatureConnectionId>>>;\n  _id?: Maybe<Array<Maybe<FeatureConnection_Id>>>;\n  createdAt?: Maybe<Array<Maybe<FeatureConnectionCreatedAt>>>;\n  updatedAt?: Maybe<Array<Maybe<FeatureConnectionUpdatedAt>>>;\n  name?: Maybe<Array<Maybe<FeatureConnectionName>>>;\n  info?: Maybe<Array<Maybe<FeatureConnectionInfo>>>;\n  locale?: Maybe<Array<Maybe<FeatureConnectionLocale>>>;\n  published_at?: Maybe<Array<Maybe<FeatureConnectionPublished_At>>>;\n};\n\nexport type FeatureInput = {\n  name: Scalars['String'];\n  info?: Maybe<Scalars['String']>;\n  localizations?: Maybe<Array<Maybe<Scalars['ID']>>>;\n  locale?: Maybe<Scalars['String']>;\n  published_at?: Maybe<Scalars['DateTime']>;\n  created_by?: Maybe<Scalars['ID']>;\n  updated_by?: Maybe<Scalars['ID']>;\n};\n\nexport type FileInfoInput = {\n  name?: Maybe<Scalars['String']>;\n  alternativeText?: Maybe<Scalars['String']>;\n  caption?: Maybe<Scalars['String']>;\n};\n\nexport type FileInput = {\n  name: Scalars['String'];\n  alternativeText?: Maybe<Scalars['String']>;\n  caption?: Maybe<Scalars['String']>;\n  width?: Maybe<Scalars['Int']>;\n  height?: Maybe<Scalars['Int']>;\n  formats?: Maybe<Scalars['JSON']>;\n  hash: Scalars['String'];\n  ext?: Maybe<Scalars['String']>;\n  mime: Scalars['String'];\n  size: Scalars['Float'];\n  url: Scalars['String'];\n  previewUrl?: Maybe<Scalars['String']>;\n  provider: Scalars['String'];\n  provider_metadata?: Maybe<Scalars['JSON']>;\n  related?: Maybe<Array<Maybe<Scalars['ID']>>>;\n  created_by?: Maybe<Scalars['ID']>;\n  updated_by?: Maybe<Scalars['ID']>;\n};\n\nexport type HomeBanner = {\n  __typename?: 'HomeBanner';\n  id: Scalars['ID'];\n  _id: Scalars['ID'];\n  createdAt: Scalars['DateTime'];\n  updatedAt: Scalars['DateTime'];\n  published_at?: Maybe<Scalars['DateTime']>;\n  images?: Maybe<Array<Maybe<UploadFile>>>;\n};\n\n\nexport type HomeBannerImagesArgs = {\n  sort?: Maybe<Scalars['String']>;\n  limit?: Maybe<Scalars['Int']>;\n  start?: Maybe<Scalars['Int']>;\n  where?: Maybe<Scalars['JSON']>;\n};\n\nexport type HomeBannerInput = {\n  images?: Maybe<Array<Maybe<Scalars['ID']>>>;\n  published_at?: Maybe<Scalars['DateTime']>;\n  created_by?: Maybe<Scalars['ID']>;\n  updated_by?: Maybe<Scalars['ID']>;\n};\n\nexport type HotelInput = {\n  name: Scalars['String'];\n  stars: Scalars['Int'];\n  url?: Maybe<Scalars['String']>;\n  trips?: Maybe<Array<Maybe<Scalars['ID']>>>;\n  published_at?: Maybe<Scalars['DateTime']>;\n  created_by?: Maybe<Scalars['ID']>;\n  updated_by?: Maybe<Scalars['ID']>;\n};\n\nexport type Hotels = {\n  __typename?: 'Hotels';\n  id: Scalars['ID'];\n  _id: Scalars['ID'];\n  createdAt: Scalars['DateTime'];\n  updatedAt: Scalars['DateTime'];\n  name: Scalars['String'];\n  stars: Scalars['Int'];\n  url?: Maybe<Scalars['String']>;\n  published_at?: Maybe<Scalars['DateTime']>;\n  trips?: Maybe<Array<Maybe<Trips>>>;\n};\n\n\nexport type HotelsTripsArgs = {\n  sort?: Maybe<Scalars['String']>;\n  limit?: Maybe<Scalars['Int']>;\n  start?: Maybe<Scalars['Int']>;\n  where?: Maybe<Scalars['JSON']>;\n};\n\nexport type HotelsAggregator = {\n  __typename?: 'HotelsAggregator';\n  count?: Maybe<Scalars['Int']>;\n  totalCount?: Maybe<Scalars['Int']>;\n  sum?: Maybe<HotelsAggregatorSum>;\n  avg?: Maybe<HotelsAggregatorAvg>;\n  min?: Maybe<HotelsAggregatorMin>;\n  max?: Maybe<HotelsAggregatorMax>;\n};\n\nexport type HotelsAggregatorAvg = {\n  __typename?: 'HotelsAggregatorAvg';\n  stars?: Maybe<Scalars['Float']>;\n};\n\nexport type HotelsAggregatorMax = {\n  __typename?: 'HotelsAggregatorMax';\n  stars?: Maybe<Scalars['Float']>;\n};\n\nexport type HotelsAggregatorMin = {\n  __typename?: 'HotelsAggregatorMin';\n  stars?: Maybe<Scalars['Float']>;\n};\n\nexport type HotelsAggregatorSum = {\n  __typename?: 'HotelsAggregatorSum';\n  stars?: Maybe<Scalars['Float']>;\n};\n\nexport type HotelsConnection = {\n  __typename?: 'HotelsConnection';\n  values?: Maybe<Array<Maybe<Hotels>>>;\n  groupBy?: Maybe<HotelsGroupBy>;\n  aggregate?: Maybe<HotelsAggregator>;\n};\n\nexport type HotelsConnectionCreatedAt = {\n  __typename?: 'HotelsConnectionCreatedAt';\n  key?: Maybe<Scalars['DateTime']>;\n  connection?: Maybe<HotelsConnection>;\n};\n\nexport type HotelsConnectionId = {\n  __typename?: 'HotelsConnectionId';\n  key?: Maybe<Scalars['ID']>;\n  connection?: Maybe<HotelsConnection>;\n};\n\nexport type HotelsConnectionName = {\n  __typename?: 'HotelsConnectionName';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<HotelsConnection>;\n};\n\nexport type HotelsConnectionPublished_At = {\n  __typename?: 'HotelsConnectionPublished_at';\n  key?: Maybe<Scalars['DateTime']>;\n  connection?: Maybe<HotelsConnection>;\n};\n\nexport type HotelsConnectionStars = {\n  __typename?: 'HotelsConnectionStars';\n  key?: Maybe<Scalars['Int']>;\n  connection?: Maybe<HotelsConnection>;\n};\n\nexport type HotelsConnectionUpdatedAt = {\n  __typename?: 'HotelsConnectionUpdatedAt';\n  key?: Maybe<Scalars['DateTime']>;\n  connection?: Maybe<HotelsConnection>;\n};\n\nexport type HotelsConnectionUrl = {\n  __typename?: 'HotelsConnectionUrl';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<HotelsConnection>;\n};\n\nexport type HotelsConnection_Id = {\n  __typename?: 'HotelsConnection_id';\n  key?: Maybe<Scalars['ID']>;\n  connection?: Maybe<HotelsConnection>;\n};\n\nexport type HotelsGroupBy = {\n  __typename?: 'HotelsGroupBy';\n  id?: Maybe<Array<Maybe<HotelsConnectionId>>>;\n  _id?: Maybe<Array<Maybe<HotelsConnection_Id>>>;\n  createdAt?: Maybe<Array<Maybe<HotelsConnectionCreatedAt>>>;\n  updatedAt?: Maybe<Array<Maybe<HotelsConnectionUpdatedAt>>>;\n  name?: Maybe<Array<Maybe<HotelsConnectionName>>>;\n  stars?: Maybe<Array<Maybe<HotelsConnectionStars>>>;\n  url?: Maybe<Array<Maybe<HotelsConnectionUrl>>>;\n  published_at?: Maybe<Array<Maybe<HotelsConnectionPublished_At>>>;\n};\n\nexport type I18NLocale = {\n  __typename?: 'I18NLocale';\n  id: Scalars['ID'];\n  _id: Scalars['ID'];\n  createdAt: Scalars['DateTime'];\n  updatedAt: Scalars['DateTime'];\n  name?: Maybe<Scalars['String']>;\n  code?: Maybe<Scalars['String']>;\n};\n\nexport type InputId = {\n  id: Scalars['ID'];\n};\n\n\nexport type LocaleInput = {\n  name?: Maybe<Scalars['String']>;\n  code?: Maybe<Scalars['String']>;\n  created_by?: Maybe<Scalars['ID']>;\n  updated_by?: Maybe<Scalars['ID']>;\n};\n\nexport type Location = {\n  __typename?: 'Location';\n  id: Scalars['ID'];\n  _id: Scalars['ID'];\n  createdAt: Scalars['DateTime'];\n  updatedAt: Scalars['DateTime'];\n  name: Scalars['String'];\n  description?: Maybe<Scalars['String']>;\n  city?: Maybe<City>;\n  coordinate?: Maybe<ComponentCoordinateCoordinate>;\n  locale?: Maybe<Scalars['String']>;\n  published_at?: Maybe<Scalars['DateTime']>;\n  images?: Maybe<Array<Maybe<UploadFile>>>;\n  localizations?: Maybe<Array<Maybe<Location>>>;\n};\n\n\nexport type LocationImagesArgs = {\n  sort?: Maybe<Scalars['String']>;\n  limit?: Maybe<Scalars['Int']>;\n  start?: Maybe<Scalars['Int']>;\n  where?: Maybe<Scalars['JSON']>;\n};\n\n\nexport type LocationLocalizationsArgs = {\n  sort?: Maybe<Scalars['String']>;\n  limit?: Maybe<Scalars['Int']>;\n  start?: Maybe<Scalars['Int']>;\n  where?: Maybe<Scalars['JSON']>;\n};\n\nexport type LocationAggregator = {\n  __typename?: 'LocationAggregator';\n  count?: Maybe<Scalars['Int']>;\n  totalCount?: Maybe<Scalars['Int']>;\n};\n\nexport type LocationConnection = {\n  __typename?: 'LocationConnection';\n  values?: Maybe<Array<Maybe<Location>>>;\n  groupBy?: Maybe<LocationGroupBy>;\n  aggregate?: Maybe<LocationAggregator>;\n};\n\nexport type LocationConnectionCity = {\n  __typename?: 'LocationConnectionCity';\n  key?: Maybe<Scalars['ID']>;\n  connection?: Maybe<LocationConnection>;\n};\n\nexport type LocationConnectionCoordinate = {\n  __typename?: 'LocationConnectionCoordinate';\n  key?: Maybe<Scalars['ID']>;\n  connection?: Maybe<LocationConnection>;\n};\n\nexport type LocationConnectionCreatedAt = {\n  __typename?: 'LocationConnectionCreatedAt';\n  key?: Maybe<Scalars['DateTime']>;\n  connection?: Maybe<LocationConnection>;\n};\n\nexport type LocationConnectionDescription = {\n  __typename?: 'LocationConnectionDescription';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<LocationConnection>;\n};\n\nexport type LocationConnectionId = {\n  __typename?: 'LocationConnectionId';\n  key?: Maybe<Scalars['ID']>;\n  connection?: Maybe<LocationConnection>;\n};\n\nexport type LocationConnectionLocale = {\n  __typename?: 'LocationConnectionLocale';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<LocationConnection>;\n};\n\nexport type LocationConnectionName = {\n  __typename?: 'LocationConnectionName';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<LocationConnection>;\n};\n\nexport type LocationConnectionPublished_At = {\n  __typename?: 'LocationConnectionPublished_at';\n  key?: Maybe<Scalars['DateTime']>;\n  connection?: Maybe<LocationConnection>;\n};\n\nexport type LocationConnectionUpdatedAt = {\n  __typename?: 'LocationConnectionUpdatedAt';\n  key?: Maybe<Scalars['DateTime']>;\n  connection?: Maybe<LocationConnection>;\n};\n\nexport type LocationConnection_Id = {\n  __typename?: 'LocationConnection_id';\n  key?: Maybe<Scalars['ID']>;\n  connection?: Maybe<LocationConnection>;\n};\n\nexport type LocationGroupBy = {\n  __typename?: 'LocationGroupBy';\n  id?: Maybe<Array<Maybe<LocationConnectionId>>>;\n  _id?: Maybe<Array<Maybe<LocationConnection_Id>>>;\n  createdAt?: Maybe<Array<Maybe<LocationConnectionCreatedAt>>>;\n  updatedAt?: Maybe<Array<Maybe<LocationConnectionUpdatedAt>>>;\n  name?: Maybe<Array<Maybe<LocationConnectionName>>>;\n  description?: Maybe<Array<Maybe<LocationConnectionDescription>>>;\n  city?: Maybe<Array<Maybe<LocationConnectionCity>>>;\n  coordinate?: Maybe<Array<Maybe<LocationConnectionCoordinate>>>;\n  locale?: Maybe<Array<Maybe<LocationConnectionLocale>>>;\n  published_at?: Maybe<Array<Maybe<LocationConnectionPublished_At>>>;\n};\n\nexport type LocationInput = {\n  name: Scalars['String'];\n  description?: Maybe<Scalars['String']>;\n  images?: Maybe<Array<Maybe<Scalars['ID']>>>;\n  city?: Maybe<Scalars['ID']>;\n  coordinate?: Maybe<ComponentCoordinateCoordinateInput>;\n  localizations?: Maybe<Array<Maybe<Scalars['ID']>>>;\n  locale?: Maybe<Scalars['String']>;\n  published_at?: Maybe<Scalars['DateTime']>;\n  created_by?: Maybe<Scalars['ID']>;\n  updated_by?: Maybe<Scalars['ID']>;\n};\n\n\nexport type Morph = UsersPermissionsMe | UsersPermissionsMeRole | UsersPermissionsLoginPayload | UserPermissionsPasswordPayload | Booking | BookingConnection | BookingAggregator | BookingAggregatorSum | BookingAggregatorAvg | BookingAggregatorMin | BookingAggregatorMax | BookingGroupBy | BookingConnectionId | BookingConnection_Id | BookingConnectionCreatedAt | BookingConnectionUpdatedAt | BookingConnectionTrip | BookingConnectionApproved | BookingConnectionBasePrice | BookingConnectionCurrency | BookingConnectionBasePeopleCount | BookingConnectionDiscount | BookingConnectionFullName | BookingConnectionPhone | BookingConnectionMessage | BookingConnectionArrivalDate | BookingConnectionLanguage | BookingConnectionUserBookingStatus | BookingConnectionEmail | BookingConnectionAdults | BookingConnectionChildren | BookingConnectionTotalPrice | BookingConnectionPublished_At | CreateBookingPayload | UpdateBookingPayload | DeleteBookingPayload | City | CityConnection | CityAggregator | CityGroupBy | CityConnectionId | CityConnection_Id | CityConnectionCreatedAt | CityConnectionUpdatedAt | CityConnectionName | CityConnectionDescription | CityConnectionImage | CityConnectionLocale | CityConnectionPublished_At | CreateCityPayload | UpdateCityPayload | DeleteCityPayload | Feature | FeatureConnection | FeatureAggregator | FeatureGroupBy | FeatureConnectionId | FeatureConnection_Id | FeatureConnectionCreatedAt | FeatureConnectionUpdatedAt | FeatureConnectionName | FeatureConnectionInfo | FeatureConnectionLocale | FeatureConnectionPublished_At | CreateFeaturePayload | UpdateFeaturePayload | DeleteFeaturePayload | HomeBanner | UpdateHomeBannerPayload | DeleteHomeBannerPayload | Hotels | HotelsConnection | HotelsAggregator | HotelsAggregatorSum | HotelsAggregatorAvg | HotelsAggregatorMin | HotelsAggregatorMax | HotelsGroupBy | HotelsConnectionId | HotelsConnection_Id | HotelsConnectionCreatedAt | HotelsConnectionUpdatedAt | HotelsConnectionName | HotelsConnectionStars | HotelsConnectionUrl | HotelsConnectionPublished_At | CreateHotelPayload | UpdateHotelPayload | DeleteHotelPayload | Location | LocationConnection | LocationAggregator | LocationGroupBy | LocationConnectionId | LocationConnection_Id | LocationConnectionCreatedAt | LocationConnectionUpdatedAt | LocationConnectionName | LocationConnectionDescription | LocationConnectionCity | LocationConnectionCoordinate | LocationConnectionLocale | LocationConnectionPublished_At | CreateLocationPayload | UpdateLocationPayload | DeleteLocationPayload | Partner | PartnerConnection | PartnerAggregator | PartnerAggregatorSum | PartnerAggregatorAvg | PartnerAggregatorMin | PartnerAggregatorMax | PartnerGroupBy | PartnerConnectionId | PartnerConnection_Id | PartnerConnectionCreatedAt | PartnerConnectionUpdatedAt | PartnerConnectionName | PartnerConnectionPhone | PartnerConnectionAddress | PartnerConnectionEmail | PartnerConnectionAgreement | PartnerConnectionCommission | PartnerConnectionRevenueSource | PartnerConnectionAgreementStatus | PartnerConnectionNotes | PartnerConnectionPhone2 | PartnerConnectionPublished_At | CreatePartnerPayload | UpdatePartnerPayload | DeletePartnerPayload | Review | ReviewConnection | ReviewAggregator | ReviewAggregatorSum | ReviewAggregatorAvg | ReviewAggregatorMin | ReviewAggregatorMax | ReviewGroupBy | ReviewConnectionId | ReviewConnection_Id | ReviewConnectionCreatedAt | ReviewConnectionUpdatedAt | ReviewConnectionText | ReviewConnectionRating | ReviewConnectionAuthor | ReviewConnectionActive | ReviewConnectionTrip | ReviewConnectionPublished_At | CreateReviewPayload | UpdateReviewPayload | DeleteReviewPayload | Subscribers | SubscribersConnection | SubscribersAggregator | SubscribersGroupBy | SubscribersConnectionId | SubscribersConnection_Id | SubscribersConnectionCreatedAt | SubscribersConnectionUpdatedAt | SubscribersConnectionEmail | SubscribersConnectionPublished_At | CreateSubscriberPayload | UpdateSubscriberPayload | DeleteSubscriberPayload | Trips | TripsConnection | TripsAggregator | TripsAggregatorSum | TripsAggregatorAvg | TripsAggregatorMin | TripsAggregatorMax | TripsGroupBy | TripsConnectionId | TripsConnection_Id | TripsConnectionCreatedAt | TripsConnectionUpdatedAt | TripsConnectionName | TripsConnectionPreviewImage | TripsConnectionActive | TripsConnectionTrip_Type | TripsConnectionDescription | TripsConnectionDuration | TripsConnectionPartner | TripsConnectionCurrency | TripsConnectionCity | TripsConnectionBasePrice | TripsConnectionBasePeopleCount | TripsConnectionDiscount | TripsConnectionTravelType | TripsConnectionHotel | TripsConnectionLocale | TripsConnectionPublished_At | CreateTripPayload | UpdateTripPayload | DeleteTripPayload | I18NLocale | UploadFile | UploadFileConnection | UploadFileAggregator | UploadFileAggregatorSum | UploadFileAggregatorAvg | UploadFileAggregatorMin | UploadFileAggregatorMax | UploadFileGroupBy | UploadFileConnectionId | UploadFileConnection_Id | UploadFileConnectionCreatedAt | UploadFileConnectionUpdatedAt | UploadFileConnectionName | UploadFileConnectionAlternativeText | UploadFileConnectionCaption | UploadFileConnectionWidth | UploadFileConnectionHeight | UploadFileConnectionFormats | UploadFileConnectionHash | UploadFileConnectionExt | UploadFileConnectionMime | UploadFileConnectionSize | UploadFileConnectionUrl | UploadFileConnectionPreviewUrl | UploadFileConnectionProvider | UploadFileConnectionProvider_Metadata | DeleteFilePayload | UsersPermissionsPermission | UsersPermissionsRole | UsersPermissionsRoleConnection | UsersPermissionsRoleAggregator | UsersPermissionsRoleGroupBy | UsersPermissionsRoleConnectionId | UsersPermissionsRoleConnection_Id | UsersPermissionsRoleConnectionName | UsersPermissionsRoleConnectionDescription | UsersPermissionsRoleConnectionType | CreateRolePayload | UpdateRolePayload | DeleteRolePayload | UsersPermissionsUser | UsersPermissionsUserConnection | UsersPermissionsUserAggregator | UsersPermissionsUserGroupBy | UsersPermissionsUserConnectionId | UsersPermissionsUserConnection_Id | UsersPermissionsUserConnectionCreatedAt | UsersPermissionsUserConnectionUpdatedAt | UsersPermissionsUserConnectionUsername | UsersPermissionsUserConnectionEmail | UsersPermissionsUserConnectionProvider | UsersPermissionsUserConnectionConfirmed | UsersPermissionsUserConnectionBlocked | UsersPermissionsUserConnectionRole | CreateUserPayload | UpdateUserPayload | DeleteUserPayload | ComponentCoordinateCoordinate | ComponentFeatureFeature | ComponentPricePrice | ComponentTimelineTimeline;\n\nexport type Mutation = {\n  __typename?: 'Mutation';\n  createBooking?: Maybe<CreateBookingPayload>;\n  updateBooking?: Maybe<UpdateBookingPayload>;\n  deleteBooking?: Maybe<DeleteBookingPayload>;\n  createCity?: Maybe<CreateCityPayload>;\n  updateCity?: Maybe<UpdateCityPayload>;\n  deleteCity?: Maybe<DeleteCityPayload>;\n  createFeature?: Maybe<CreateFeaturePayload>;\n  updateFeature?: Maybe<UpdateFeaturePayload>;\n  deleteFeature?: Maybe<DeleteFeaturePayload>;\n  updateHomeBanner?: Maybe<UpdateHomeBannerPayload>;\n  deleteHomeBanner?: Maybe<DeleteHomeBannerPayload>;\n  createHotel?: Maybe<CreateHotelPayload>;\n  updateHotel?: Maybe<UpdateHotelPayload>;\n  deleteHotel?: Maybe<DeleteHotelPayload>;\n  createLocation?: Maybe<CreateLocationPayload>;\n  updateLocation?: Maybe<UpdateLocationPayload>;\n  deleteLocation?: Maybe<DeleteLocationPayload>;\n  createPartner?: Maybe<CreatePartnerPayload>;\n  updatePartner?: Maybe<UpdatePartnerPayload>;\n  deletePartner?: Maybe<DeletePartnerPayload>;\n  createReview?: Maybe<CreateReviewPayload>;\n  updateReview?: Maybe<UpdateReviewPayload>;\n  deleteReview?: Maybe<DeleteReviewPayload>;\n  createSubscriber?: Maybe<CreateSubscriberPayload>;\n  updateSubscriber?: Maybe<UpdateSubscriberPayload>;\n  deleteSubscriber?: Maybe<DeleteSubscriberPayload>;\n  createTrip?: Maybe<CreateTripPayload>;\n  updateTrip?: Maybe<UpdateTripPayload>;\n  deleteTrip?: Maybe<DeleteTripPayload>;\n  /** Delete one file */\n  deleteFile?: Maybe<DeleteFilePayload>;\n  /** Create a new role */\n  createRole?: Maybe<CreateRolePayload>;\n  /** Update an existing role */\n  updateRole?: Maybe<UpdateRolePayload>;\n  /** Delete an existing role */\n  deleteRole?: Maybe<DeleteRolePayload>;\n  /** Create a new user */\n  createUser?: Maybe<CreateUserPayload>;\n  /** Update an existing user */\n  updateUser?: Maybe<UpdateUserPayload>;\n  /** Delete an existing user */\n  deleteUser?: Maybe<DeleteUserPayload>;\n  createCityLocalization: City;\n  createFeatureLocalization: Feature;\n  createLocationLocalization: Location;\n  createTripLocalization: Trips;\n  upload: UploadFile;\n  multipleUpload: Array<Maybe<UploadFile>>;\n  updateFileInfo: UploadFile;\n  login: UsersPermissionsLoginPayload;\n  register: UsersPermissionsLoginPayload;\n  forgotPassword?: Maybe<UserPermissionsPasswordPayload>;\n  resetPassword?: Maybe<UsersPermissionsLoginPayload>;\n  emailConfirmation?: Maybe<UsersPermissionsLoginPayload>;\n};\n\n\nexport type MutationCreateBookingArgs = {\n  input?: Maybe<CreateBookingInput>;\n};\n\n\nexport type MutationUpdateBookingArgs = {\n  input?: Maybe<UpdateBookingInput>;\n};\n\n\nexport type MutationDeleteBookingArgs = {\n  input?: Maybe<DeleteBookingInput>;\n};\n\n\nexport type MutationCreateCityArgs = {\n  input?: Maybe<CreateCityInput>;\n};\n\n\nexport type MutationUpdateCityArgs = {\n  input?: Maybe<UpdateCityInput>;\n};\n\n\nexport type MutationDeleteCityArgs = {\n  input?: Maybe<DeleteCityInput>;\n};\n\n\nexport type MutationCreateFeatureArgs = {\n  input?: Maybe<CreateFeatureInput>;\n};\n\n\nexport type MutationUpdateFeatureArgs = {\n  input?: Maybe<UpdateFeatureInput>;\n};\n\n\nexport type MutationDeleteFeatureArgs = {\n  input?: Maybe<DeleteFeatureInput>;\n};\n\n\nexport type MutationUpdateHomeBannerArgs = {\n  input?: Maybe<UpdateHomeBannerInput>;\n};\n\n\nexport type MutationCreateHotelArgs = {\n  input?: Maybe<CreateHotelInput>;\n};\n\n\nexport type MutationUpdateHotelArgs = {\n  input?: Maybe<UpdateHotelInput>;\n};\n\n\nexport type MutationDeleteHotelArgs = {\n  input?: Maybe<DeleteHotelInput>;\n};\n\n\nexport type MutationCreateLocationArgs = {\n  input?: Maybe<CreateLocationInput>;\n};\n\n\nexport type MutationUpdateLocationArgs = {\n  input?: Maybe<UpdateLocationInput>;\n};\n\n\nexport type MutationDeleteLocationArgs = {\n  input?: Maybe<DeleteLocationInput>;\n};\n\n\nexport type MutationCreatePartnerArgs = {\n  input?: Maybe<CreatePartnerInput>;\n};\n\n\nexport type MutationUpdatePartnerArgs = {\n  input?: Maybe<UpdatePartnerInput>;\n};\n\n\nexport type MutationDeletePartnerArgs = {\n  input?: Maybe<DeletePartnerInput>;\n};\n\n\nexport type MutationCreateReviewArgs = {\n  input?: Maybe<CreateReviewInput>;\n};\n\n\nexport type MutationUpdateReviewArgs = {\n  input?: Maybe<UpdateReviewInput>;\n};\n\n\nexport type MutationDeleteReviewArgs = {\n  input?: Maybe<DeleteReviewInput>;\n};\n\n\nexport type MutationCreateSubscriberArgs = {\n  input?: Maybe<CreateSubscriberInput>;\n};\n\n\nexport type MutationUpdateSubscriberArgs = {\n  input?: Maybe<UpdateSubscriberInput>;\n};\n\n\nexport type MutationDeleteSubscriberArgs = {\n  input?: Maybe<DeleteSubscriberInput>;\n};\n\n\nexport type MutationCreateTripArgs = {\n  input?: Maybe<CreateTripInput>;\n};\n\n\nexport type MutationUpdateTripArgs = {\n  input?: Maybe<UpdateTripInput>;\n};\n\n\nexport type MutationDeleteTripArgs = {\n  input?: Maybe<DeleteTripInput>;\n};\n\n\nexport type MutationDeleteFileArgs = {\n  input?: Maybe<DeleteFileInput>;\n};\n\n\nexport type MutationCreateRoleArgs = {\n  input?: Maybe<CreateRoleInput>;\n};\n\n\nexport type MutationUpdateRoleArgs = {\n  input?: Maybe<UpdateRoleInput>;\n};\n\n\nexport type MutationDeleteRoleArgs = {\n  input?: Maybe<DeleteRoleInput>;\n};\n\n\nexport type MutationCreateUserArgs = {\n  input?: Maybe<CreateUserInput>;\n};\n\n\nexport type MutationUpdateUserArgs = {\n  input?: Maybe<UpdateUserInput>;\n};\n\n\nexport type MutationDeleteUserArgs = {\n  input?: Maybe<DeleteUserInput>;\n};\n\n\nexport type MutationCreateCityLocalizationArgs = {\n  input: UpdateCityInput;\n};\n\n\nexport type MutationCreateFeatureLocalizationArgs = {\n  input: UpdateFeatureInput;\n};\n\n\nexport type MutationCreateLocationLocalizationArgs = {\n  input: UpdateLocationInput;\n};\n\n\nexport type MutationCreateTripLocalizationArgs = {\n  input: UpdateTripInput;\n};\n\n\nexport type MutationUploadArgs = {\n  refId?: Maybe<Scalars['ID']>;\n  ref?: Maybe<Scalars['String']>;\n  field?: Maybe<Scalars['String']>;\n  source?: Maybe<Scalars['String']>;\n  info?: Maybe<FileInfoInput>;\n  file: Scalars['Upload'];\n};\n\n\nexport type MutationMultipleUploadArgs = {\n  refId?: Maybe<Scalars['ID']>;\n  ref?: Maybe<Scalars['String']>;\n  field?: Maybe<Scalars['String']>;\n  source?: Maybe<Scalars['String']>;\n  files: Array<Maybe<Scalars['Upload']>>;\n};\n\n\nexport type MutationUpdateFileInfoArgs = {\n  id: Scalars['ID'];\n  info: FileInfoInput;\n};\n\n\nexport type MutationLoginArgs = {\n  input: UsersPermissionsLoginInput;\n};\n\n\nexport type MutationRegisterArgs = {\n  input: UsersPermissionsRegisterInput;\n};\n\n\nexport type MutationForgotPasswordArgs = {\n  email: Scalars['String'];\n};\n\n\nexport type MutationResetPasswordArgs = {\n  password: Scalars['String'];\n  passwordConfirmation: Scalars['String'];\n  code: Scalars['String'];\n};\n\n\nexport type MutationEmailConfirmationArgs = {\n  confirmation: Scalars['String'];\n};\n\nexport type Partner = {\n  __typename?: 'Partner';\n  id: Scalars['ID'];\n  _id: Scalars['ID'];\n  createdAt: Scalars['DateTime'];\n  updatedAt: Scalars['DateTime'];\n  name: Scalars['String'];\n  phone: Scalars['String'];\n  address?: Maybe<Scalars['String']>;\n  email?: Maybe<Scalars['String']>;\n  agreement?: Maybe<Scalars['String']>;\n  commission: Scalars['Float'];\n  revenueSource: Enum_Partner_Revenuesource;\n  agreementStatus: Enum_Partner_Agreementstatus;\n  notes?: Maybe<Scalars['String']>;\n  phone2?: Maybe<Scalars['String']>;\n  published_at?: Maybe<Scalars['DateTime']>;\n  trips?: Maybe<Array<Maybe<Trips>>>;\n};\n\n\nexport type PartnerTripsArgs = {\n  sort?: Maybe<Scalars['String']>;\n  limit?: Maybe<Scalars['Int']>;\n  start?: Maybe<Scalars['Int']>;\n  where?: Maybe<Scalars['JSON']>;\n};\n\nexport type PartnerAggregator = {\n  __typename?: 'PartnerAggregator';\n  count?: Maybe<Scalars['Int']>;\n  totalCount?: Maybe<Scalars['Int']>;\n  sum?: Maybe<PartnerAggregatorSum>;\n  avg?: Maybe<PartnerAggregatorAvg>;\n  min?: Maybe<PartnerAggregatorMin>;\n  max?: Maybe<PartnerAggregatorMax>;\n};\n\nexport type PartnerAggregatorAvg = {\n  __typename?: 'PartnerAggregatorAvg';\n  commission?: Maybe<Scalars['Float']>;\n};\n\nexport type PartnerAggregatorMax = {\n  __typename?: 'PartnerAggregatorMax';\n  commission?: Maybe<Scalars['Float']>;\n};\n\nexport type PartnerAggregatorMin = {\n  __typename?: 'PartnerAggregatorMin';\n  commission?: Maybe<Scalars['Float']>;\n};\n\nexport type PartnerAggregatorSum = {\n  __typename?: 'PartnerAggregatorSum';\n  commission?: Maybe<Scalars['Float']>;\n};\n\nexport type PartnerConnection = {\n  __typename?: 'PartnerConnection';\n  values?: Maybe<Array<Maybe<Partner>>>;\n  groupBy?: Maybe<PartnerGroupBy>;\n  aggregate?: Maybe<PartnerAggregator>;\n};\n\nexport type PartnerConnectionAddress = {\n  __typename?: 'PartnerConnectionAddress';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<PartnerConnection>;\n};\n\nexport type PartnerConnectionAgreement = {\n  __typename?: 'PartnerConnectionAgreement';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<PartnerConnection>;\n};\n\nexport type PartnerConnectionAgreementStatus = {\n  __typename?: 'PartnerConnectionAgreementStatus';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<PartnerConnection>;\n};\n\nexport type PartnerConnectionCommission = {\n  __typename?: 'PartnerConnectionCommission';\n  key?: Maybe<Scalars['Float']>;\n  connection?: Maybe<PartnerConnection>;\n};\n\nexport type PartnerConnectionCreatedAt = {\n  __typename?: 'PartnerConnectionCreatedAt';\n  key?: Maybe<Scalars['DateTime']>;\n  connection?: Maybe<PartnerConnection>;\n};\n\nexport type PartnerConnectionEmail = {\n  __typename?: 'PartnerConnectionEmail';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<PartnerConnection>;\n};\n\nexport type PartnerConnectionId = {\n  __typename?: 'PartnerConnectionId';\n  key?: Maybe<Scalars['ID']>;\n  connection?: Maybe<PartnerConnection>;\n};\n\nexport type PartnerConnectionName = {\n  __typename?: 'PartnerConnectionName';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<PartnerConnection>;\n};\n\nexport type PartnerConnectionNotes = {\n  __typename?: 'PartnerConnectionNotes';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<PartnerConnection>;\n};\n\nexport type PartnerConnectionPhone = {\n  __typename?: 'PartnerConnectionPhone';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<PartnerConnection>;\n};\n\nexport type PartnerConnectionPhone2 = {\n  __typename?: 'PartnerConnectionPhone2';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<PartnerConnection>;\n};\n\nexport type PartnerConnectionPublished_At = {\n  __typename?: 'PartnerConnectionPublished_at';\n  key?: Maybe<Scalars['DateTime']>;\n  connection?: Maybe<PartnerConnection>;\n};\n\nexport type PartnerConnectionRevenueSource = {\n  __typename?: 'PartnerConnectionRevenueSource';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<PartnerConnection>;\n};\n\nexport type PartnerConnectionUpdatedAt = {\n  __typename?: 'PartnerConnectionUpdatedAt';\n  key?: Maybe<Scalars['DateTime']>;\n  connection?: Maybe<PartnerConnection>;\n};\n\nexport type PartnerConnection_Id = {\n  __typename?: 'PartnerConnection_id';\n  key?: Maybe<Scalars['ID']>;\n  connection?: Maybe<PartnerConnection>;\n};\n\nexport type PartnerGroupBy = {\n  __typename?: 'PartnerGroupBy';\n  id?: Maybe<Array<Maybe<PartnerConnectionId>>>;\n  _id?: Maybe<Array<Maybe<PartnerConnection_Id>>>;\n  createdAt?: Maybe<Array<Maybe<PartnerConnectionCreatedAt>>>;\n  updatedAt?: Maybe<Array<Maybe<PartnerConnectionUpdatedAt>>>;\n  name?: Maybe<Array<Maybe<PartnerConnectionName>>>;\n  phone?: Maybe<Array<Maybe<PartnerConnectionPhone>>>;\n  address?: Maybe<Array<Maybe<PartnerConnectionAddress>>>;\n  email?: Maybe<Array<Maybe<PartnerConnectionEmail>>>;\n  agreement?: Maybe<Array<Maybe<PartnerConnectionAgreement>>>;\n  commission?: Maybe<Array<Maybe<PartnerConnectionCommission>>>;\n  revenueSource?: Maybe<Array<Maybe<PartnerConnectionRevenueSource>>>;\n  agreementStatus?: Maybe<Array<Maybe<PartnerConnectionAgreementStatus>>>;\n  notes?: Maybe<Array<Maybe<PartnerConnectionNotes>>>;\n  phone2?: Maybe<Array<Maybe<PartnerConnectionPhone2>>>;\n  published_at?: Maybe<Array<Maybe<PartnerConnectionPublished_At>>>;\n};\n\nexport type PartnerInput = {\n  name: Scalars['String'];\n  phone: Scalars['String'];\n  address?: Maybe<Scalars['String']>;\n  email?: Maybe<Scalars['String']>;\n  trips?: Maybe<Array<Maybe<Scalars['ID']>>>;\n  agreement?: Maybe<Scalars['String']>;\n  commission: Scalars['Float'];\n  revenueSource: Enum_Partner_Revenuesource;\n  agreementStatus: Enum_Partner_Agreementstatus;\n  notes?: Maybe<Scalars['String']>;\n  phone2?: Maybe<Scalars['String']>;\n  published_at?: Maybe<Scalars['DateTime']>;\n  created_by?: Maybe<Scalars['ID']>;\n  updated_by?: Maybe<Scalars['ID']>;\n};\n\nexport enum PublicationState {\n  Live = 'LIVE',\n  Preview = 'PREVIEW'\n}\n\nexport type Query = {\n  __typename?: 'Query';\n  booking?: Maybe<Booking>;\n  bookings?: Maybe<Array<Maybe<Booking>>>;\n  bookingsConnection?: Maybe<BookingConnection>;\n  city?: Maybe<City>;\n  cities?: Maybe<Array<Maybe<City>>>;\n  citiesConnection?: Maybe<CityConnection>;\n  feature?: Maybe<Feature>;\n  features?: Maybe<Array<Maybe<Feature>>>;\n  featuresConnection?: Maybe<FeatureConnection>;\n  homeBanner?: Maybe<HomeBanner>;\n  hotel?: Maybe<Hotels>;\n  hotels?: Maybe<Array<Maybe<Hotels>>>;\n  hotelsConnection?: Maybe<HotelsConnection>;\n  location?: Maybe<Location>;\n  locations?: Maybe<Array<Maybe<Location>>>;\n  locationsConnection?: Maybe<LocationConnection>;\n  partner?: Maybe<Partner>;\n  partners?: Maybe<Array<Maybe<Partner>>>;\n  partnersConnection?: Maybe<PartnerConnection>;\n  review?: Maybe<Review>;\n  reviews?: Maybe<Array<Maybe<Review>>>;\n  reviewsConnection?: Maybe<ReviewConnection>;\n  subscriber?: Maybe<Subscribers>;\n  subscribers?: Maybe<Array<Maybe<Subscribers>>>;\n  subscribersConnection?: Maybe<SubscribersConnection>;\n  trip?: Maybe<Trips>;\n  trips?: Maybe<Array<Maybe<Trips>>>;\n  tripsConnection?: Maybe<TripsConnection>;\n  files?: Maybe<Array<Maybe<UploadFile>>>;\n  filesConnection?: Maybe<UploadFileConnection>;\n  role?: Maybe<UsersPermissionsRole>;\n  /** Retrieve all the existing roles. You can't apply filters on this query. */\n  roles?: Maybe<Array<Maybe<UsersPermissionsRole>>>;\n  rolesConnection?: Maybe<UsersPermissionsRoleConnection>;\n  user?: Maybe<UsersPermissionsUser>;\n  users?: Maybe<Array<Maybe<UsersPermissionsUser>>>;\n  usersConnection?: Maybe<UsersPermissionsUserConnection>;\n  me?: Maybe<UsersPermissionsMe>;\n};\n\n\nexport type QueryBookingArgs = {\n  id: Scalars['ID'];\n  publicationState?: Maybe<PublicationState>;\n};\n\n\nexport type QueryBookingsArgs = {\n  sort?: Maybe<Scalars['String']>;\n  limit?: Maybe<Scalars['Int']>;\n  start?: Maybe<Scalars['Int']>;\n  where?: Maybe<Scalars['JSON']>;\n  publicationState?: Maybe<PublicationState>;\n};\n\n\nexport type QueryBookingsConnectionArgs = {\n  sort?: Maybe<Scalars['String']>;\n  limit?: Maybe<Scalars['Int']>;\n  start?: Maybe<Scalars['Int']>;\n  where?: Maybe<Scalars['JSON']>;\n};\n\n\nexport type QueryCityArgs = {\n  id: Scalars['ID'];\n  publicationState?: Maybe<PublicationState>;\n};\n\n\nexport type QueryCitiesArgs = {\n  sort?: Maybe<Scalars['String']>;\n  limit?: Maybe<Scalars['Int']>;\n  start?: Maybe<Scalars['Int']>;\n  where?: Maybe<Scalars['JSON']>;\n  publicationState?: Maybe<PublicationState>;\n  locale?: Maybe<Scalars['String']>;\n};\n\n\nexport type QueryCitiesConnectionArgs = {\n  sort?: Maybe<Scalars['String']>;\n  limit?: Maybe<Scalars['Int']>;\n  start?: Maybe<Scalars['Int']>;\n  where?: Maybe<Scalars['JSON']>;\n  locale?: Maybe<Scalars['String']>;\n};\n\n\nexport type QueryFeatureArgs = {\n  id: Scalars['ID'];\n  publicationState?: Maybe<PublicationState>;\n};\n\n\nexport type QueryFeaturesArgs = {\n  sort?: Maybe<Scalars['String']>;\n  limit?: Maybe<Scalars['Int']>;\n  start?: Maybe<Scalars['Int']>;\n  where?: Maybe<Scalars['JSON']>;\n  publicationState?: Maybe<PublicationState>;\n  locale?: Maybe<Scalars['String']>;\n};\n\n\nexport type QueryFeaturesConnectionArgs = {\n  sort?: Maybe<Scalars['String']>;\n  limit?: Maybe<Scalars['Int']>;\n  start?: Maybe<Scalars['Int']>;\n  where?: Maybe<Scalars['JSON']>;\n  locale?: Maybe<Scalars['String']>;\n};\n\n\nexport type QueryHomeBannerArgs = {\n  publicationState?: Maybe<PublicationState>;\n};\n\n\nexport type QueryHotelArgs = {\n  id: Scalars['ID'];\n  publicationState?: Maybe<PublicationState>;\n};\n\n\nexport type QueryHotelsArgs = {\n  sort?: Maybe<Scalars['String']>;\n  limit?: Maybe<Scalars['Int']>;\n  start?: Maybe<Scalars['Int']>;\n  where?: Maybe<Scalars['JSON']>;\n  publicationState?: Maybe<PublicationState>;\n};\n\n\nexport type QueryHotelsConnectionArgs = {\n  sort?: Maybe<Scalars['String']>;\n  limit?: Maybe<Scalars['Int']>;\n  start?: Maybe<Scalars['Int']>;\n  where?: Maybe<Scalars['JSON']>;\n};\n\n\nexport type QueryLocationArgs = {\n  id: Scalars['ID'];\n  publicationState?: Maybe<PublicationState>;\n};\n\n\nexport type QueryLocationsArgs = {\n  sort?: Maybe<Scalars['String']>;\n  limit?: Maybe<Scalars['Int']>;\n  start?: Maybe<Scalars['Int']>;\n  where?: Maybe<Scalars['JSON']>;\n  publicationState?: Maybe<PublicationState>;\n  locale?: Maybe<Scalars['String']>;\n};\n\n\nexport type QueryLocationsConnectionArgs = {\n  sort?: Maybe<Scalars['String']>;\n  limit?: Maybe<Scalars['Int']>;\n  start?: Maybe<Scalars['Int']>;\n  where?: Maybe<Scalars['JSON']>;\n  locale?: Maybe<Scalars['String']>;\n};\n\n\nexport type QueryPartnerArgs = {\n  id: Scalars['ID'];\n  publicationState?: Maybe<PublicationState>;\n};\n\n\nexport type QueryPartnersArgs = {\n  sort?: Maybe<Scalars['String']>;\n  limit?: Maybe<Scalars['Int']>;\n  start?: Maybe<Scalars['Int']>;\n  where?: Maybe<Scalars['JSON']>;\n  publicationState?: Maybe<PublicationState>;\n};\n\n\nexport type QueryPartnersConnectionArgs = {\n  sort?: Maybe<Scalars['String']>;\n  limit?: Maybe<Scalars['Int']>;\n  start?: Maybe<Scalars['Int']>;\n  where?: Maybe<Scalars['JSON']>;\n};\n\n\nexport type QueryReviewArgs = {\n  id: Scalars['ID'];\n  publicationState?: Maybe<PublicationState>;\n};\n\n\nexport type QueryReviewsArgs = {\n  sort?: Maybe<Scalars['String']>;\n  limit?: Maybe<Scalars['Int']>;\n  start?: Maybe<Scalars['Int']>;\n  where?: Maybe<Scalars['JSON']>;\n  publicationState?: Maybe<PublicationState>;\n};\n\n\nexport type QueryReviewsConnectionArgs = {\n  sort?: Maybe<Scalars['String']>;\n  limit?: Maybe<Scalars['Int']>;\n  start?: Maybe<Scalars['Int']>;\n  where?: Maybe<Scalars['JSON']>;\n};\n\n\nexport type QuerySubscriberArgs = {\n  id: Scalars['ID'];\n  publicationState?: Maybe<PublicationState>;\n};\n\n\nexport type QuerySubscribersArgs = {\n  sort?: Maybe<Scalars['String']>;\n  limit?: Maybe<Scalars['Int']>;\n  start?: Maybe<Scalars['Int']>;\n  where?: Maybe<Scalars['JSON']>;\n  publicationState?: Maybe<PublicationState>;\n};\n\n\nexport type QuerySubscribersConnectionArgs = {\n  sort?: Maybe<Scalars['String']>;\n  limit?: Maybe<Scalars['Int']>;\n  start?: Maybe<Scalars['Int']>;\n  where?: Maybe<Scalars['JSON']>;\n};\n\n\nexport type QueryTripArgs = {\n  id: Scalars['ID'];\n  publicationState?: Maybe<PublicationState>;\n};\n\n\nexport type QueryTripsArgs = {\n  sort?: Maybe<Scalars['String']>;\n  limit?: Maybe<Scalars['Int']>;\n  start?: Maybe<Scalars['Int']>;\n  where?: Maybe<Scalars['JSON']>;\n  publicationState?: Maybe<PublicationState>;\n  locale?: Maybe<Scalars['String']>;\n};\n\n\nexport type QueryTripsConnectionArgs = {\n  sort?: Maybe<Scalars['String']>;\n  limit?: Maybe<Scalars['Int']>;\n  start?: Maybe<Scalars['Int']>;\n  where?: Maybe<Scalars['JSON']>;\n  locale?: Maybe<Scalars['String']>;\n};\n\n\nexport type QueryFilesArgs = {\n  sort?: Maybe<Scalars['String']>;\n  limit?: Maybe<Scalars['Int']>;\n  start?: Maybe<Scalars['Int']>;\n  where?: Maybe<Scalars['JSON']>;\n  publicationState?: Maybe<PublicationState>;\n};\n\n\nexport type QueryFilesConnectionArgs = {\n  sort?: Maybe<Scalars['String']>;\n  limit?: Maybe<Scalars['Int']>;\n  start?: Maybe<Scalars['Int']>;\n  where?: Maybe<Scalars['JSON']>;\n};\n\n\nexport type QueryRoleArgs = {\n  id: Scalars['ID'];\n  publicationState?: Maybe<PublicationState>;\n};\n\n\nexport type QueryRolesArgs = {\n  sort?: Maybe<Scalars['String']>;\n  limit?: Maybe<Scalars['Int']>;\n  start?: Maybe<Scalars['Int']>;\n  where?: Maybe<Scalars['JSON']>;\n  publicationState?: Maybe<PublicationState>;\n};\n\n\nexport type QueryRolesConnectionArgs = {\n  sort?: Maybe<Scalars['String']>;\n  limit?: Maybe<Scalars['Int']>;\n  start?: Maybe<Scalars['Int']>;\n  where?: Maybe<Scalars['JSON']>;\n};\n\n\nexport type QueryUserArgs = {\n  id: Scalars['ID'];\n  publicationState?: Maybe<PublicationState>;\n};\n\n\nexport type QueryUsersArgs = {\n  sort?: Maybe<Scalars['String']>;\n  limit?: Maybe<Scalars['Int']>;\n  start?: Maybe<Scalars['Int']>;\n  where?: Maybe<Scalars['JSON']>;\n  publicationState?: Maybe<PublicationState>;\n};\n\n\nexport type QueryUsersConnectionArgs = {\n  sort?: Maybe<Scalars['String']>;\n  limit?: Maybe<Scalars['Int']>;\n  start?: Maybe<Scalars['Int']>;\n  where?: Maybe<Scalars['JSON']>;\n};\n\nexport type Review = {\n  __typename?: 'Review';\n  id: Scalars['ID'];\n  _id: Scalars['ID'];\n  createdAt: Scalars['DateTime'];\n  updatedAt: Scalars['DateTime'];\n  text?: Maybe<Scalars['String']>;\n  rating: Scalars['Float'];\n  author?: Maybe<UsersPermissionsUser>;\n  active?: Maybe<Scalars['Boolean']>;\n  trip?: Maybe<Trips>;\n  published_at?: Maybe<Scalars['DateTime']>;\n};\n\nexport type ReviewAggregator = {\n  __typename?: 'ReviewAggregator';\n  count?: Maybe<Scalars['Int']>;\n  totalCount?: Maybe<Scalars['Int']>;\n  sum?: Maybe<ReviewAggregatorSum>;\n  avg?: Maybe<ReviewAggregatorAvg>;\n  min?: Maybe<ReviewAggregatorMin>;\n  max?: Maybe<ReviewAggregatorMax>;\n};\n\nexport type ReviewAggregatorAvg = {\n  __typename?: 'ReviewAggregatorAvg';\n  rating?: Maybe<Scalars['Float']>;\n};\n\nexport type ReviewAggregatorMax = {\n  __typename?: 'ReviewAggregatorMax';\n  rating?: Maybe<Scalars['Float']>;\n};\n\nexport type ReviewAggregatorMin = {\n  __typename?: 'ReviewAggregatorMin';\n  rating?: Maybe<Scalars['Float']>;\n};\n\nexport type ReviewAggregatorSum = {\n  __typename?: 'ReviewAggregatorSum';\n  rating?: Maybe<Scalars['Float']>;\n};\n\nexport type ReviewConnection = {\n  __typename?: 'ReviewConnection';\n  values?: Maybe<Array<Maybe<Review>>>;\n  groupBy?: Maybe<ReviewGroupBy>;\n  aggregate?: Maybe<ReviewAggregator>;\n};\n\nexport type ReviewConnectionActive = {\n  __typename?: 'ReviewConnectionActive';\n  key?: Maybe<Scalars['Boolean']>;\n  connection?: Maybe<ReviewConnection>;\n};\n\nexport type ReviewConnectionAuthor = {\n  __typename?: 'ReviewConnectionAuthor';\n  key?: Maybe<Scalars['ID']>;\n  connection?: Maybe<ReviewConnection>;\n};\n\nexport type ReviewConnectionCreatedAt = {\n  __typename?: 'ReviewConnectionCreatedAt';\n  key?: Maybe<Scalars['DateTime']>;\n  connection?: Maybe<ReviewConnection>;\n};\n\nexport type ReviewConnectionId = {\n  __typename?: 'ReviewConnectionId';\n  key?: Maybe<Scalars['ID']>;\n  connection?: Maybe<ReviewConnection>;\n};\n\nexport type ReviewConnectionPublished_At = {\n  __typename?: 'ReviewConnectionPublished_at';\n  key?: Maybe<Scalars['DateTime']>;\n  connection?: Maybe<ReviewConnection>;\n};\n\nexport type ReviewConnectionRating = {\n  __typename?: 'ReviewConnectionRating';\n  key?: Maybe<Scalars['Float']>;\n  connection?: Maybe<ReviewConnection>;\n};\n\nexport type ReviewConnectionText = {\n  __typename?: 'ReviewConnectionText';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<ReviewConnection>;\n};\n\nexport type ReviewConnectionTrip = {\n  __typename?: 'ReviewConnectionTrip';\n  key?: Maybe<Scalars['ID']>;\n  connection?: Maybe<ReviewConnection>;\n};\n\nexport type ReviewConnectionUpdatedAt = {\n  __typename?: 'ReviewConnectionUpdatedAt';\n  key?: Maybe<Scalars['DateTime']>;\n  connection?: Maybe<ReviewConnection>;\n};\n\nexport type ReviewConnection_Id = {\n  __typename?: 'ReviewConnection_id';\n  key?: Maybe<Scalars['ID']>;\n  connection?: Maybe<ReviewConnection>;\n};\n\nexport type ReviewGroupBy = {\n  __typename?: 'ReviewGroupBy';\n  id?: Maybe<Array<Maybe<ReviewConnectionId>>>;\n  _id?: Maybe<Array<Maybe<ReviewConnection_Id>>>;\n  createdAt?: Maybe<Array<Maybe<ReviewConnectionCreatedAt>>>;\n  updatedAt?: Maybe<Array<Maybe<ReviewConnectionUpdatedAt>>>;\n  text?: Maybe<Array<Maybe<ReviewConnectionText>>>;\n  rating?: Maybe<Array<Maybe<ReviewConnectionRating>>>;\n  author?: Maybe<Array<Maybe<ReviewConnectionAuthor>>>;\n  active?: Maybe<Array<Maybe<ReviewConnectionActive>>>;\n  trip?: Maybe<Array<Maybe<ReviewConnectionTrip>>>;\n  published_at?: Maybe<Array<Maybe<ReviewConnectionPublished_At>>>;\n};\n\nexport type ReviewInput = {\n  text?: Maybe<Scalars['String']>;\n  rating: Scalars['Float'];\n  author?: Maybe<Scalars['ID']>;\n  active?: Maybe<Scalars['Boolean']>;\n  trip?: Maybe<Scalars['ID']>;\n  published_at?: Maybe<Scalars['DateTime']>;\n  created_by?: Maybe<Scalars['ID']>;\n  updated_by?: Maybe<Scalars['ID']>;\n};\n\nexport type RoleInput = {\n  name: Scalars['String'];\n  description?: Maybe<Scalars['String']>;\n  type?: Maybe<Scalars['String']>;\n  permissions?: Maybe<Array<Maybe<Scalars['ID']>>>;\n  users?: Maybe<Array<Maybe<Scalars['ID']>>>;\n  created_by?: Maybe<Scalars['ID']>;\n  updated_by?: Maybe<Scalars['ID']>;\n};\n\nexport type SubscriberInput = {\n  email: Scalars['String'];\n  published_at?: Maybe<Scalars['DateTime']>;\n  created_by?: Maybe<Scalars['ID']>;\n  updated_by?: Maybe<Scalars['ID']>;\n};\n\nexport type Subscribers = {\n  __typename?: 'Subscribers';\n  id: Scalars['ID'];\n  _id: Scalars['ID'];\n  createdAt: Scalars['DateTime'];\n  updatedAt: Scalars['DateTime'];\n  email: Scalars['String'];\n  published_at?: Maybe<Scalars['DateTime']>;\n};\n\nexport type SubscribersAggregator = {\n  __typename?: 'SubscribersAggregator';\n  count?: Maybe<Scalars['Int']>;\n  totalCount?: Maybe<Scalars['Int']>;\n};\n\nexport type SubscribersConnection = {\n  __typename?: 'SubscribersConnection';\n  values?: Maybe<Array<Maybe<Subscribers>>>;\n  groupBy?: Maybe<SubscribersGroupBy>;\n  aggregate?: Maybe<SubscribersAggregator>;\n};\n\nexport type SubscribersConnectionCreatedAt = {\n  __typename?: 'SubscribersConnectionCreatedAt';\n  key?: Maybe<Scalars['DateTime']>;\n  connection?: Maybe<SubscribersConnection>;\n};\n\nexport type SubscribersConnectionEmail = {\n  __typename?: 'SubscribersConnectionEmail';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<SubscribersConnection>;\n};\n\nexport type SubscribersConnectionId = {\n  __typename?: 'SubscribersConnectionId';\n  key?: Maybe<Scalars['ID']>;\n  connection?: Maybe<SubscribersConnection>;\n};\n\nexport type SubscribersConnectionPublished_At = {\n  __typename?: 'SubscribersConnectionPublished_at';\n  key?: Maybe<Scalars['DateTime']>;\n  connection?: Maybe<SubscribersConnection>;\n};\n\nexport type SubscribersConnectionUpdatedAt = {\n  __typename?: 'SubscribersConnectionUpdatedAt';\n  key?: Maybe<Scalars['DateTime']>;\n  connection?: Maybe<SubscribersConnection>;\n};\n\nexport type SubscribersConnection_Id = {\n  __typename?: 'SubscribersConnection_id';\n  key?: Maybe<Scalars['ID']>;\n  connection?: Maybe<SubscribersConnection>;\n};\n\nexport type SubscribersGroupBy = {\n  __typename?: 'SubscribersGroupBy';\n  id?: Maybe<Array<Maybe<SubscribersConnectionId>>>;\n  _id?: Maybe<Array<Maybe<SubscribersConnection_Id>>>;\n  createdAt?: Maybe<Array<Maybe<SubscribersConnectionCreatedAt>>>;\n  updatedAt?: Maybe<Array<Maybe<SubscribersConnectionUpdatedAt>>>;\n  email?: Maybe<Array<Maybe<SubscribersConnectionEmail>>>;\n  published_at?: Maybe<Array<Maybe<SubscribersConnectionPublished_At>>>;\n};\n\n\nexport type TripInput = {\n  name: Scalars['String'];\n  previewImage?: Maybe<Scalars['ID']>;\n  active?: Maybe<Scalars['Boolean']>;\n  trip_type: Enum_Trips_Trip_Type;\n  description?: Maybe<Scalars['String']>;\n  duration: Scalars['Int'];\n  partner?: Maybe<Scalars['ID']>;\n  currency?: Maybe<Enum_Trips_Currency>;\n  city?: Maybe<Scalars['ID']>;\n  features?: Maybe<Array<ComponentFeatureFeatureInput>>;\n  basePrice: Scalars['Int'];\n  basePeopleCount: Scalars['Int'];\n  discount?: Maybe<Scalars['Float']>;\n  travelType: Enum_Trips_Traveltype;\n  hotel?: Maybe<Scalars['ID']>;\n  plan?: Maybe<Array<ComponentTimelineTimelineInput>>;\n  sequence: Scalars['String'];\n  localizations?: Maybe<Array<Maybe<Scalars['ID']>>>;\n  locale?: Maybe<Scalars['String']>;\n  published_at?: Maybe<Scalars['DateTime']>;\n  created_by?: Maybe<Scalars['ID']>;\n  updated_by?: Maybe<Scalars['ID']>;\n};\n\nexport type Trips = {\n  __typename?: 'Trips';\n  id: Scalars['ID'];\n  _id: Scalars['ID'];\n  createdAt: Scalars['DateTime'];\n  updatedAt: Scalars['DateTime'];\n  name: Scalars['String'];\n  previewImage?: Maybe<UploadFile>;\n  active?: Maybe<Scalars['Boolean']>;\n  trip_type: Enum_Trips_Trip_Type;\n  description?: Maybe<Scalars['String']>;\n  duration: Scalars['Int'];\n  partner?: Maybe<Partner>;\n  currency?: Maybe<Enum_Trips_Currency>;\n  city?: Maybe<City>;\n  features?: Maybe<Array<Maybe<ComponentFeatureFeature>>>;\n  basePrice: Scalars['Int'];\n  basePeopleCount: Scalars['Int'];\n  discount?: Maybe<Scalars['Float']>;\n  travelType: Enum_Trips_Traveltype;\n  hotel?: Maybe<Hotels>;\n  plan?: Maybe<Array<Maybe<ComponentTimelineTimeline>>>;\n  locale?: Maybe<Scalars['String']>;\n  published_at?: Maybe<Scalars['DateTime']>;\n  localizations?: Maybe<Array<Maybe<Trips>>>;\n};\n\n\nexport type TripsLocalizationsArgs = {\n  sort?: Maybe<Scalars['String']>;\n  limit?: Maybe<Scalars['Int']>;\n  start?: Maybe<Scalars['Int']>;\n  where?: Maybe<Scalars['JSON']>;\n};\n\nexport type TripsAggregator = {\n  __typename?: 'TripsAggregator';\n  count?: Maybe<Scalars['Int']>;\n  totalCount?: Maybe<Scalars['Int']>;\n  sum?: Maybe<TripsAggregatorSum>;\n  avg?: Maybe<TripsAggregatorAvg>;\n  min?: Maybe<TripsAggregatorMin>;\n  max?: Maybe<TripsAggregatorMax>;\n};\n\nexport type TripsAggregatorAvg = {\n  __typename?: 'TripsAggregatorAvg';\n  duration?: Maybe<Scalars['Float']>;\n  basePrice?: Maybe<Scalars['Float']>;\n  basePeopleCount?: Maybe<Scalars['Float']>;\n  discount?: Maybe<Scalars['Float']>;\n};\n\nexport type TripsAggregatorMax = {\n  __typename?: 'TripsAggregatorMax';\n  duration?: Maybe<Scalars['Float']>;\n  basePrice?: Maybe<Scalars['Float']>;\n  basePeopleCount?: Maybe<Scalars['Float']>;\n  discount?: Maybe<Scalars['Float']>;\n};\n\nexport type TripsAggregatorMin = {\n  __typename?: 'TripsAggregatorMin';\n  duration?: Maybe<Scalars['Float']>;\n  basePrice?: Maybe<Scalars['Float']>;\n  basePeopleCount?: Maybe<Scalars['Float']>;\n  discount?: Maybe<Scalars['Float']>;\n};\n\nexport type TripsAggregatorSum = {\n  __typename?: 'TripsAggregatorSum';\n  duration?: Maybe<Scalars['Float']>;\n  basePrice?: Maybe<Scalars['Float']>;\n  basePeopleCount?: Maybe<Scalars['Float']>;\n  discount?: Maybe<Scalars['Float']>;\n};\n\nexport type TripsConnection = {\n  __typename?: 'TripsConnection';\n  values?: Maybe<Array<Maybe<Trips>>>;\n  groupBy?: Maybe<TripsGroupBy>;\n  aggregate?: Maybe<TripsAggregator>;\n};\n\nexport type TripsConnectionActive = {\n  __typename?: 'TripsConnectionActive';\n  key?: Maybe<Scalars['Boolean']>;\n  connection?: Maybe<TripsConnection>;\n};\n\nexport type TripsConnectionBasePeopleCount = {\n  __typename?: 'TripsConnectionBasePeopleCount';\n  key?: Maybe<Scalars['Int']>;\n  connection?: Maybe<TripsConnection>;\n};\n\nexport type TripsConnectionBasePrice = {\n  __typename?: 'TripsConnectionBasePrice';\n  key?: Maybe<Scalars['Int']>;\n  connection?: Maybe<TripsConnection>;\n};\n\nexport type TripsConnectionCity = {\n  __typename?: 'TripsConnectionCity';\n  key?: Maybe<Scalars['ID']>;\n  connection?: Maybe<TripsConnection>;\n};\n\nexport type TripsConnectionCreatedAt = {\n  __typename?: 'TripsConnectionCreatedAt';\n  key?: Maybe<Scalars['DateTime']>;\n  connection?: Maybe<TripsConnection>;\n};\n\nexport type TripsConnectionCurrency = {\n  __typename?: 'TripsConnectionCurrency';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<TripsConnection>;\n};\n\nexport type TripsConnectionDescription = {\n  __typename?: 'TripsConnectionDescription';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<TripsConnection>;\n};\n\nexport type TripsConnectionDiscount = {\n  __typename?: 'TripsConnectionDiscount';\n  key?: Maybe<Scalars['Float']>;\n  connection?: Maybe<TripsConnection>;\n};\n\nexport type TripsConnectionDuration = {\n  __typename?: 'TripsConnectionDuration';\n  key?: Maybe<Scalars['Int']>;\n  connection?: Maybe<TripsConnection>;\n};\n\nexport type TripsConnectionHotel = {\n  __typename?: 'TripsConnectionHotel';\n  key?: Maybe<Scalars['ID']>;\n  connection?: Maybe<TripsConnection>;\n};\n\nexport type TripsConnectionId = {\n  __typename?: 'TripsConnectionId';\n  key?: Maybe<Scalars['ID']>;\n  connection?: Maybe<TripsConnection>;\n};\n\nexport type TripsConnectionLocale = {\n  __typename?: 'TripsConnectionLocale';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<TripsConnection>;\n};\n\nexport type TripsConnectionName = {\n  __typename?: 'TripsConnectionName';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<TripsConnection>;\n};\n\nexport type TripsConnectionPartner = {\n  __typename?: 'TripsConnectionPartner';\n  key?: Maybe<Scalars['ID']>;\n  connection?: Maybe<TripsConnection>;\n};\n\nexport type TripsConnectionPreviewImage = {\n  __typename?: 'TripsConnectionPreviewImage';\n  key?: Maybe<Scalars['ID']>;\n  connection?: Maybe<TripsConnection>;\n};\n\nexport type TripsConnectionPublished_At = {\n  __typename?: 'TripsConnectionPublished_at';\n  key?: Maybe<Scalars['DateTime']>;\n  connection?: Maybe<TripsConnection>;\n};\n\nexport type TripsConnectionTravelType = {\n  __typename?: 'TripsConnectionTravelType';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<TripsConnection>;\n};\n\nexport type TripsConnectionTrip_Type = {\n  __typename?: 'TripsConnectionTrip_type';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<TripsConnection>;\n};\n\nexport type TripsConnectionUpdatedAt = {\n  __typename?: 'TripsConnectionUpdatedAt';\n  key?: Maybe<Scalars['DateTime']>;\n  connection?: Maybe<TripsConnection>;\n};\n\nexport type TripsConnection_Id = {\n  __typename?: 'TripsConnection_id';\n  key?: Maybe<Scalars['ID']>;\n  connection?: Maybe<TripsConnection>;\n};\n\nexport type TripsGroupBy = {\n  __typename?: 'TripsGroupBy';\n  id?: Maybe<Array<Maybe<TripsConnectionId>>>;\n  _id?: Maybe<Array<Maybe<TripsConnection_Id>>>;\n  createdAt?: Maybe<Array<Maybe<TripsConnectionCreatedAt>>>;\n  updatedAt?: Maybe<Array<Maybe<TripsConnectionUpdatedAt>>>;\n  name?: Maybe<Array<Maybe<TripsConnectionName>>>;\n  previewImage?: Maybe<Array<Maybe<TripsConnectionPreviewImage>>>;\n  active?: Maybe<Array<Maybe<TripsConnectionActive>>>;\n  trip_type?: Maybe<Array<Maybe<TripsConnectionTrip_Type>>>;\n  description?: Maybe<Array<Maybe<TripsConnectionDescription>>>;\n  duration?: Maybe<Array<Maybe<TripsConnectionDuration>>>;\n  partner?: Maybe<Array<Maybe<TripsConnectionPartner>>>;\n  currency?: Maybe<Array<Maybe<TripsConnectionCurrency>>>;\n  city?: Maybe<Array<Maybe<TripsConnectionCity>>>;\n  basePrice?: Maybe<Array<Maybe<TripsConnectionBasePrice>>>;\n  basePeopleCount?: Maybe<Array<Maybe<TripsConnectionBasePeopleCount>>>;\n  discount?: Maybe<Array<Maybe<TripsConnectionDiscount>>>;\n  travelType?: Maybe<Array<Maybe<TripsConnectionTravelType>>>;\n  hotel?: Maybe<Array<Maybe<TripsConnectionHotel>>>;\n  locale?: Maybe<Array<Maybe<TripsConnectionLocale>>>;\n  published_at?: Maybe<Array<Maybe<TripsConnectionPublished_At>>>;\n};\n\n\nexport type UploadFile = {\n  __typename?: 'UploadFile';\n  id: Scalars['ID'];\n  _id: Scalars['ID'];\n  createdAt: Scalars['DateTime'];\n  updatedAt: Scalars['DateTime'];\n  name: Scalars['String'];\n  alternativeText?: Maybe<Scalars['String']>;\n  caption?: Maybe<Scalars['String']>;\n  width?: Maybe<Scalars['Int']>;\n  height?: Maybe<Scalars['Int']>;\n  formats?: Maybe<Scalars['JSON']>;\n  hash: Scalars['String'];\n  ext?: Maybe<Scalars['String']>;\n  mime: Scalars['String'];\n  size: Scalars['Float'];\n  url: Scalars['String'];\n  previewUrl?: Maybe<Scalars['String']>;\n  provider: Scalars['String'];\n  provider_metadata?: Maybe<Scalars['JSON']>;\n  related?: Maybe<Array<Maybe<Morph>>>;\n};\n\n\nexport type UploadFileRelatedArgs = {\n  sort?: Maybe<Scalars['String']>;\n  limit?: Maybe<Scalars['Int']>;\n  start?: Maybe<Scalars['Int']>;\n  where?: Maybe<Scalars['JSON']>;\n};\n\nexport type UploadFileAggregator = {\n  __typename?: 'UploadFileAggregator';\n  count?: Maybe<Scalars['Int']>;\n  totalCount?: Maybe<Scalars['Int']>;\n  sum?: Maybe<UploadFileAggregatorSum>;\n  avg?: Maybe<UploadFileAggregatorAvg>;\n  min?: Maybe<UploadFileAggregatorMin>;\n  max?: Maybe<UploadFileAggregatorMax>;\n};\n\nexport type UploadFileAggregatorAvg = {\n  __typename?: 'UploadFileAggregatorAvg';\n  width?: Maybe<Scalars['Float']>;\n  height?: Maybe<Scalars['Float']>;\n  size?: Maybe<Scalars['Float']>;\n};\n\nexport type UploadFileAggregatorMax = {\n  __typename?: 'UploadFileAggregatorMax';\n  width?: Maybe<Scalars['Float']>;\n  height?: Maybe<Scalars['Float']>;\n  size?: Maybe<Scalars['Float']>;\n};\n\nexport type UploadFileAggregatorMin = {\n  __typename?: 'UploadFileAggregatorMin';\n  width?: Maybe<Scalars['Float']>;\n  height?: Maybe<Scalars['Float']>;\n  size?: Maybe<Scalars['Float']>;\n};\n\nexport type UploadFileAggregatorSum = {\n  __typename?: 'UploadFileAggregatorSum';\n  width?: Maybe<Scalars['Float']>;\n  height?: Maybe<Scalars['Float']>;\n  size?: Maybe<Scalars['Float']>;\n};\n\nexport type UploadFileConnection = {\n  __typename?: 'UploadFileConnection';\n  values?: Maybe<Array<Maybe<UploadFile>>>;\n  groupBy?: Maybe<UploadFileGroupBy>;\n  aggregate?: Maybe<UploadFileAggregator>;\n};\n\nexport type UploadFileConnectionAlternativeText = {\n  __typename?: 'UploadFileConnectionAlternativeText';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<UploadFileConnection>;\n};\n\nexport type UploadFileConnectionCaption = {\n  __typename?: 'UploadFileConnectionCaption';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<UploadFileConnection>;\n};\n\nexport type UploadFileConnectionCreatedAt = {\n  __typename?: 'UploadFileConnectionCreatedAt';\n  key?: Maybe<Scalars['DateTime']>;\n  connection?: Maybe<UploadFileConnection>;\n};\n\nexport type UploadFileConnectionExt = {\n  __typename?: 'UploadFileConnectionExt';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<UploadFileConnection>;\n};\n\nexport type UploadFileConnectionFormats = {\n  __typename?: 'UploadFileConnectionFormats';\n  key?: Maybe<Scalars['JSON']>;\n  connection?: Maybe<UploadFileConnection>;\n};\n\nexport type UploadFileConnectionHash = {\n  __typename?: 'UploadFileConnectionHash';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<UploadFileConnection>;\n};\n\nexport type UploadFileConnectionHeight = {\n  __typename?: 'UploadFileConnectionHeight';\n  key?: Maybe<Scalars['Int']>;\n  connection?: Maybe<UploadFileConnection>;\n};\n\nexport type UploadFileConnectionId = {\n  __typename?: 'UploadFileConnectionId';\n  key?: Maybe<Scalars['ID']>;\n  connection?: Maybe<UploadFileConnection>;\n};\n\nexport type UploadFileConnectionMime = {\n  __typename?: 'UploadFileConnectionMime';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<UploadFileConnection>;\n};\n\nexport type UploadFileConnectionName = {\n  __typename?: 'UploadFileConnectionName';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<UploadFileConnection>;\n};\n\nexport type UploadFileConnectionPreviewUrl = {\n  __typename?: 'UploadFileConnectionPreviewUrl';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<UploadFileConnection>;\n};\n\nexport type UploadFileConnectionProvider = {\n  __typename?: 'UploadFileConnectionProvider';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<UploadFileConnection>;\n};\n\nexport type UploadFileConnectionProvider_Metadata = {\n  __typename?: 'UploadFileConnectionProvider_metadata';\n  key?: Maybe<Scalars['JSON']>;\n  connection?: Maybe<UploadFileConnection>;\n};\n\nexport type UploadFileConnectionSize = {\n  __typename?: 'UploadFileConnectionSize';\n  key?: Maybe<Scalars['Float']>;\n  connection?: Maybe<UploadFileConnection>;\n};\n\nexport type UploadFileConnectionUpdatedAt = {\n  __typename?: 'UploadFileConnectionUpdatedAt';\n  key?: Maybe<Scalars['DateTime']>;\n  connection?: Maybe<UploadFileConnection>;\n};\n\nexport type UploadFileConnectionUrl = {\n  __typename?: 'UploadFileConnectionUrl';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<UploadFileConnection>;\n};\n\nexport type UploadFileConnectionWidth = {\n  __typename?: 'UploadFileConnectionWidth';\n  key?: Maybe<Scalars['Int']>;\n  connection?: Maybe<UploadFileConnection>;\n};\n\nexport type UploadFileConnection_Id = {\n  __typename?: 'UploadFileConnection_id';\n  key?: Maybe<Scalars['ID']>;\n  connection?: Maybe<UploadFileConnection>;\n};\n\nexport type UploadFileGroupBy = {\n  __typename?: 'UploadFileGroupBy';\n  id?: Maybe<Array<Maybe<UploadFileConnectionId>>>;\n  _id?: Maybe<Array<Maybe<UploadFileConnection_Id>>>;\n  createdAt?: Maybe<Array<Maybe<UploadFileConnectionCreatedAt>>>;\n  updatedAt?: Maybe<Array<Maybe<UploadFileConnectionUpdatedAt>>>;\n  name?: Maybe<Array<Maybe<UploadFileConnectionName>>>;\n  alternativeText?: Maybe<Array<Maybe<UploadFileConnectionAlternativeText>>>;\n  caption?: Maybe<Array<Maybe<UploadFileConnectionCaption>>>;\n  width?: Maybe<Array<Maybe<UploadFileConnectionWidth>>>;\n  height?: Maybe<Array<Maybe<UploadFileConnectionHeight>>>;\n  formats?: Maybe<Array<Maybe<UploadFileConnectionFormats>>>;\n  hash?: Maybe<Array<Maybe<UploadFileConnectionHash>>>;\n  ext?: Maybe<Array<Maybe<UploadFileConnectionExt>>>;\n  mime?: Maybe<Array<Maybe<UploadFileConnectionMime>>>;\n  size?: Maybe<Array<Maybe<UploadFileConnectionSize>>>;\n  url?: Maybe<Array<Maybe<UploadFileConnectionUrl>>>;\n  previewUrl?: Maybe<Array<Maybe<UploadFileConnectionPreviewUrl>>>;\n  provider?: Maybe<Array<Maybe<UploadFileConnectionProvider>>>;\n  provider_metadata?: Maybe<Array<Maybe<UploadFileConnectionProvider_Metadata>>>;\n};\n\nexport type UserInput = {\n  username: Scalars['String'];\n  email: Scalars['String'];\n  provider?: Maybe<Scalars['String']>;\n  password?: Maybe<Scalars['String']>;\n  resetPasswordToken?: Maybe<Scalars['String']>;\n  confirmationToken?: Maybe<Scalars['String']>;\n  confirmed?: Maybe<Scalars['Boolean']>;\n  blocked?: Maybe<Scalars['Boolean']>;\n  role?: Maybe<Scalars['ID']>;\n  created_by?: Maybe<Scalars['ID']>;\n  updated_by?: Maybe<Scalars['ID']>;\n};\n\nexport type UserPermissionsPasswordPayload = {\n  __typename?: 'UserPermissionsPasswordPayload';\n  ok: Scalars['Boolean'];\n};\n\nexport type UsersPermissionsLoginInput = {\n  identifier: Scalars['String'];\n  password: Scalars['String'];\n  provider?: Maybe<Scalars['String']>;\n};\n\nexport type UsersPermissionsLoginPayload = {\n  __typename?: 'UsersPermissionsLoginPayload';\n  jwt?: Maybe<Scalars['String']>;\n  user: UsersPermissionsMe;\n};\n\nexport type UsersPermissionsMe = {\n  __typename?: 'UsersPermissionsMe';\n  id: Scalars['ID'];\n  username: Scalars['String'];\n  email: Scalars['String'];\n  confirmed?: Maybe<Scalars['Boolean']>;\n  blocked?: Maybe<Scalars['Boolean']>;\n  role?: Maybe<UsersPermissionsMeRole>;\n};\n\nexport type UsersPermissionsMeRole = {\n  __typename?: 'UsersPermissionsMeRole';\n  id: Scalars['ID'];\n  name: Scalars['String'];\n  description?: Maybe<Scalars['String']>;\n  type?: Maybe<Scalars['String']>;\n};\n\nexport type UsersPermissionsPermission = {\n  __typename?: 'UsersPermissionsPermission';\n  id: Scalars['ID'];\n  _id: Scalars['ID'];\n  type: Scalars['String'];\n  controller: Scalars['String'];\n  action: Scalars['String'];\n  enabled: Scalars['Boolean'];\n  policy?: Maybe<Scalars['String']>;\n  role?: Maybe<UsersPermissionsRole>;\n};\n\nexport type UsersPermissionsRegisterInput = {\n  username: Scalars['String'];\n  email: Scalars['String'];\n  password: Scalars['String'];\n};\n\nexport type UsersPermissionsRole = {\n  __typename?: 'UsersPermissionsRole';\n  id: Scalars['ID'];\n  _id: Scalars['ID'];\n  name: Scalars['String'];\n  description?: Maybe<Scalars['String']>;\n  type?: Maybe<Scalars['String']>;\n  permissions?: Maybe<Array<Maybe<UsersPermissionsPermission>>>;\n  users?: Maybe<Array<Maybe<UsersPermissionsUser>>>;\n};\n\n\nexport type UsersPermissionsRolePermissionsArgs = {\n  sort?: Maybe<Scalars['String']>;\n  limit?: Maybe<Scalars['Int']>;\n  start?: Maybe<Scalars['Int']>;\n  where?: Maybe<Scalars['JSON']>;\n};\n\n\nexport type UsersPermissionsRoleUsersArgs = {\n  sort?: Maybe<Scalars['String']>;\n  limit?: Maybe<Scalars['Int']>;\n  start?: Maybe<Scalars['Int']>;\n  where?: Maybe<Scalars['JSON']>;\n};\n\nexport type UsersPermissionsRoleAggregator = {\n  __typename?: 'UsersPermissionsRoleAggregator';\n  count?: Maybe<Scalars['Int']>;\n  totalCount?: Maybe<Scalars['Int']>;\n};\n\nexport type UsersPermissionsRoleConnection = {\n  __typename?: 'UsersPermissionsRoleConnection';\n  values?: Maybe<Array<Maybe<UsersPermissionsRole>>>;\n  groupBy?: Maybe<UsersPermissionsRoleGroupBy>;\n  aggregate?: Maybe<UsersPermissionsRoleAggregator>;\n};\n\nexport type UsersPermissionsRoleConnectionDescription = {\n  __typename?: 'UsersPermissionsRoleConnectionDescription';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<UsersPermissionsRoleConnection>;\n};\n\nexport type UsersPermissionsRoleConnectionId = {\n  __typename?: 'UsersPermissionsRoleConnectionId';\n  key?: Maybe<Scalars['ID']>;\n  connection?: Maybe<UsersPermissionsRoleConnection>;\n};\n\nexport type UsersPermissionsRoleConnectionName = {\n  __typename?: 'UsersPermissionsRoleConnectionName';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<UsersPermissionsRoleConnection>;\n};\n\nexport type UsersPermissionsRoleConnectionType = {\n  __typename?: 'UsersPermissionsRoleConnectionType';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<UsersPermissionsRoleConnection>;\n};\n\nexport type UsersPermissionsRoleConnection_Id = {\n  __typename?: 'UsersPermissionsRoleConnection_id';\n  key?: Maybe<Scalars['ID']>;\n  connection?: Maybe<UsersPermissionsRoleConnection>;\n};\n\nexport type UsersPermissionsRoleGroupBy = {\n  __typename?: 'UsersPermissionsRoleGroupBy';\n  id?: Maybe<Array<Maybe<UsersPermissionsRoleConnectionId>>>;\n  _id?: Maybe<Array<Maybe<UsersPermissionsRoleConnection_Id>>>;\n  name?: Maybe<Array<Maybe<UsersPermissionsRoleConnectionName>>>;\n  description?: Maybe<Array<Maybe<UsersPermissionsRoleConnectionDescription>>>;\n  type?: Maybe<Array<Maybe<UsersPermissionsRoleConnectionType>>>;\n};\n\nexport type UsersPermissionsUser = {\n  __typename?: 'UsersPermissionsUser';\n  id: Scalars['ID'];\n  _id: Scalars['ID'];\n  createdAt: Scalars['DateTime'];\n  updatedAt: Scalars['DateTime'];\n  username: Scalars['String'];\n  email: Scalars['String'];\n  provider?: Maybe<Scalars['String']>;\n  confirmed?: Maybe<Scalars['Boolean']>;\n  blocked?: Maybe<Scalars['Boolean']>;\n  role?: Maybe<UsersPermissionsRole>;\n};\n\nexport type UsersPermissionsUserAggregator = {\n  __typename?: 'UsersPermissionsUserAggregator';\n  count?: Maybe<Scalars['Int']>;\n  totalCount?: Maybe<Scalars['Int']>;\n};\n\nexport type UsersPermissionsUserConnection = {\n  __typename?: 'UsersPermissionsUserConnection';\n  values?: Maybe<Array<Maybe<UsersPermissionsUser>>>;\n  groupBy?: Maybe<UsersPermissionsUserGroupBy>;\n  aggregate?: Maybe<UsersPermissionsUserAggregator>;\n};\n\nexport type UsersPermissionsUserConnectionBlocked = {\n  __typename?: 'UsersPermissionsUserConnectionBlocked';\n  key?: Maybe<Scalars['Boolean']>;\n  connection?: Maybe<UsersPermissionsUserConnection>;\n};\n\nexport type UsersPermissionsUserConnectionConfirmed = {\n  __typename?: 'UsersPermissionsUserConnectionConfirmed';\n  key?: Maybe<Scalars['Boolean']>;\n  connection?: Maybe<UsersPermissionsUserConnection>;\n};\n\nexport type UsersPermissionsUserConnectionCreatedAt = {\n  __typename?: 'UsersPermissionsUserConnectionCreatedAt';\n  key?: Maybe<Scalars['DateTime']>;\n  connection?: Maybe<UsersPermissionsUserConnection>;\n};\n\nexport type UsersPermissionsUserConnectionEmail = {\n  __typename?: 'UsersPermissionsUserConnectionEmail';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<UsersPermissionsUserConnection>;\n};\n\nexport type UsersPermissionsUserConnectionId = {\n  __typename?: 'UsersPermissionsUserConnectionId';\n  key?: Maybe<Scalars['ID']>;\n  connection?: Maybe<UsersPermissionsUserConnection>;\n};\n\nexport type UsersPermissionsUserConnectionProvider = {\n  __typename?: 'UsersPermissionsUserConnectionProvider';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<UsersPermissionsUserConnection>;\n};\n\nexport type UsersPermissionsUserConnectionRole = {\n  __typename?: 'UsersPermissionsUserConnectionRole';\n  key?: Maybe<Scalars['ID']>;\n  connection?: Maybe<UsersPermissionsUserConnection>;\n};\n\nexport type UsersPermissionsUserConnectionUpdatedAt = {\n  __typename?: 'UsersPermissionsUserConnectionUpdatedAt';\n  key?: Maybe<Scalars['DateTime']>;\n  connection?: Maybe<UsersPermissionsUserConnection>;\n};\n\nexport type UsersPermissionsUserConnectionUsername = {\n  __typename?: 'UsersPermissionsUserConnectionUsername';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<UsersPermissionsUserConnection>;\n};\n\nexport type UsersPermissionsUserConnection_Id = {\n  __typename?: 'UsersPermissionsUserConnection_id';\n  key?: Maybe<Scalars['ID']>;\n  connection?: Maybe<UsersPermissionsUserConnection>;\n};\n\nexport type UsersPermissionsUserGroupBy = {\n  __typename?: 'UsersPermissionsUserGroupBy';\n  id?: Maybe<Array<Maybe<UsersPermissionsUserConnectionId>>>;\n  _id?: Maybe<Array<Maybe<UsersPermissionsUserConnection_Id>>>;\n  createdAt?: Maybe<Array<Maybe<UsersPermissionsUserConnectionCreatedAt>>>;\n  updatedAt?: Maybe<Array<Maybe<UsersPermissionsUserConnectionUpdatedAt>>>;\n  username?: Maybe<Array<Maybe<UsersPermissionsUserConnectionUsername>>>;\n  email?: Maybe<Array<Maybe<UsersPermissionsUserConnectionEmail>>>;\n  provider?: Maybe<Array<Maybe<UsersPermissionsUserConnectionProvider>>>;\n  confirmed?: Maybe<Array<Maybe<UsersPermissionsUserConnectionConfirmed>>>;\n  blocked?: Maybe<Array<Maybe<UsersPermissionsUserConnectionBlocked>>>;\n  role?: Maybe<Array<Maybe<UsersPermissionsUserConnectionRole>>>;\n};\n\nexport type CreateBookingInput = {\n  data?: Maybe<BookingInput>;\n};\n\nexport type CreateBookingPayload = {\n  __typename?: 'createBookingPayload';\n  booking?: Maybe<Booking>;\n};\n\nexport type CreateCityInput = {\n  data?: Maybe<CityInput>;\n};\n\nexport type CreateCityPayload = {\n  __typename?: 'createCityPayload';\n  city?: Maybe<City>;\n};\n\nexport type CreateFeatureInput = {\n  data?: Maybe<FeatureInput>;\n};\n\nexport type CreateFeaturePayload = {\n  __typename?: 'createFeaturePayload';\n  feature?: Maybe<Feature>;\n};\n\nexport type CreateHotelInput = {\n  data?: Maybe<HotelInput>;\n};\n\nexport type CreateHotelPayload = {\n  __typename?: 'createHotelPayload';\n  hotel?: Maybe<Hotels>;\n};\n\nexport type CreateLocationInput = {\n  data?: Maybe<LocationInput>;\n};\n\nexport type CreateLocationPayload = {\n  __typename?: 'createLocationPayload';\n  location?: Maybe<Location>;\n};\n\nexport type CreatePartnerInput = {\n  data?: Maybe<PartnerInput>;\n};\n\nexport type CreatePartnerPayload = {\n  __typename?: 'createPartnerPayload';\n  partner?: Maybe<Partner>;\n};\n\nexport type CreateReviewInput = {\n  data?: Maybe<ReviewInput>;\n};\n\nexport type CreateReviewPayload = {\n  __typename?: 'createReviewPayload';\n  review?: Maybe<Review>;\n};\n\nexport type CreateRoleInput = {\n  data?: Maybe<RoleInput>;\n};\n\nexport type CreateRolePayload = {\n  __typename?: 'createRolePayload';\n  role?: Maybe<UsersPermissionsRole>;\n};\n\nexport type CreateSubscriberInput = {\n  data?: Maybe<SubscriberInput>;\n};\n\nexport type CreateSubscriberPayload = {\n  __typename?: 'createSubscriberPayload';\n  subscriber?: Maybe<Subscribers>;\n};\n\nexport type CreateTripInput = {\n  data?: Maybe<TripInput>;\n};\n\nexport type CreateTripPayload = {\n  __typename?: 'createTripPayload';\n  trip?: Maybe<Trips>;\n};\n\nexport type CreateUserInput = {\n  data?: Maybe<UserInput>;\n};\n\nexport type CreateUserPayload = {\n  __typename?: 'createUserPayload';\n  user?: Maybe<UsersPermissionsUser>;\n};\n\nexport type DeleteBookingInput = {\n  where?: Maybe<InputId>;\n};\n\nexport type DeleteBookingPayload = {\n  __typename?: 'deleteBookingPayload';\n  booking?: Maybe<Booking>;\n};\n\nexport type DeleteCityInput = {\n  where?: Maybe<InputId>;\n};\n\nexport type DeleteCityPayload = {\n  __typename?: 'deleteCityPayload';\n  city?: Maybe<City>;\n};\n\nexport type DeleteFeatureInput = {\n  where?: Maybe<InputId>;\n};\n\nexport type DeleteFeaturePayload = {\n  __typename?: 'deleteFeaturePayload';\n  feature?: Maybe<Feature>;\n};\n\nexport type DeleteFileInput = {\n  where?: Maybe<InputId>;\n};\n\nexport type DeleteFilePayload = {\n  __typename?: 'deleteFilePayload';\n  file?: Maybe<UploadFile>;\n};\n\nexport type DeleteHomeBannerPayload = {\n  __typename?: 'deleteHomeBannerPayload';\n  homeBanner?: Maybe<HomeBanner>;\n};\n\nexport type DeleteHotelInput = {\n  where?: Maybe<InputId>;\n};\n\nexport type DeleteHotelPayload = {\n  __typename?: 'deleteHotelPayload';\n  hotel?: Maybe<Hotels>;\n};\n\nexport type DeleteLocationInput = {\n  where?: Maybe<InputId>;\n};\n\nexport type DeleteLocationPayload = {\n  __typename?: 'deleteLocationPayload';\n  location?: Maybe<Location>;\n};\n\nexport type DeletePartnerInput = {\n  where?: Maybe<InputId>;\n};\n\nexport type DeletePartnerPayload = {\n  __typename?: 'deletePartnerPayload';\n  partner?: Maybe<Partner>;\n};\n\nexport type DeleteReviewInput = {\n  where?: Maybe<InputId>;\n};\n\nexport type DeleteReviewPayload = {\n  __typename?: 'deleteReviewPayload';\n  review?: Maybe<Review>;\n};\n\nexport type DeleteRoleInput = {\n  where?: Maybe<InputId>;\n};\n\nexport type DeleteRolePayload = {\n  __typename?: 'deleteRolePayload';\n  role?: Maybe<UsersPermissionsRole>;\n};\n\nexport type DeleteSubscriberInput = {\n  where?: Maybe<InputId>;\n};\n\nexport type DeleteSubscriberPayload = {\n  __typename?: 'deleteSubscriberPayload';\n  subscriber?: Maybe<Subscribers>;\n};\n\nexport type DeleteTripInput = {\n  where?: Maybe<InputId>;\n};\n\nexport type DeleteTripPayload = {\n  __typename?: 'deleteTripPayload';\n  trip?: Maybe<Trips>;\n};\n\nexport type DeleteUserInput = {\n  where?: Maybe<InputId>;\n};\n\nexport type DeleteUserPayload = {\n  __typename?: 'deleteUserPayload';\n  user?: Maybe<UsersPermissionsUser>;\n};\n\nexport type EditBookingInput = {\n  trip?: Maybe<Scalars['ID']>;\n  approved?: Maybe<Scalars['Boolean']>;\n  basePrice?: Maybe<Scalars['Float']>;\n  currency?: Maybe<Enum_Booking_Currency>;\n  basePeopleCount?: Maybe<Scalars['Int']>;\n  discount?: Maybe<Scalars['Float']>;\n  fullName?: Maybe<Scalars['String']>;\n  phone?: Maybe<Scalars['String']>;\n  message?: Maybe<Scalars['String']>;\n  arrivalDate?: Maybe<Scalars['Date']>;\n  language?: Maybe<Scalars['String']>;\n  userBookingStatus?: Maybe<Enum_Booking_Userbookingstatus>;\n  email?: Maybe<Scalars['String']>;\n  adults?: Maybe<Scalars['Int']>;\n  children?: Maybe<Scalars['Int']>;\n  totalPrice?: Maybe<Scalars['Float']>;\n  published_at?: Maybe<Scalars['DateTime']>;\n  created_by?: Maybe<Scalars['ID']>;\n  updated_by?: Maybe<Scalars['ID']>;\n};\n\nexport type EditCityInput = {\n  name?: Maybe<Scalars['String']>;\n  description?: Maybe<Scalars['String']>;\n  image?: Maybe<Scalars['ID']>;\n  locations?: Maybe<Array<Maybe<Scalars['ID']>>>;\n  localizations?: Maybe<Array<Maybe<Scalars['ID']>>>;\n  locale?: Maybe<Scalars['String']>;\n  published_at?: Maybe<Scalars['DateTime']>;\n  created_by?: Maybe<Scalars['ID']>;\n  updated_by?: Maybe<Scalars['ID']>;\n};\n\nexport type EditComponentCoordinateCoordinateInput = {\n  id?: Maybe<Scalars['ID']>;\n  latitude?: Maybe<Scalars['Float']>;\n  longitude?: Maybe<Scalars['Float']>;\n};\n\nexport type EditComponentFeatureFeatureInput = {\n  id?: Maybe<Scalars['ID']>;\n  feature?: Maybe<Scalars['ID']>;\n  included?: Maybe<Scalars['Boolean']>;\n};\n\nexport type EditComponentPricePriceInput = {\n  id?: Maybe<Scalars['ID']>;\n  basePrice?: Maybe<Scalars['Float']>;\n  currency?: Maybe<Enum_Componentpriceprice_Currency>;\n  basePeopleCount?: Maybe<Scalars['Int']>;\n  extraAdultFee?: Maybe<Scalars['Float']>;\n  discount?: Maybe<Scalars['Float']>;\n};\n\nexport type EditComponentTimelineTimelineInput = {\n  id?: Maybe<Scalars['ID']>;\n  day?: Maybe<Scalars['Int']>;\n  description?: Maybe<Scalars['String']>;\n  locations?: Maybe<Array<Maybe<Scalars['ID']>>>;\n  travelTo?: Maybe<Scalars['ID']>;\n  transportationType?: Maybe<Enum_Componenttimelinetimeline_Transportationtype>;\n  restDay?: Maybe<Scalars['Boolean']>;\n};\n\nexport type EditFeatureInput = {\n  name?: Maybe<Scalars['String']>;\n  info?: Maybe<Scalars['String']>;\n  localizations?: Maybe<Array<Maybe<Scalars['ID']>>>;\n  locale?: Maybe<Scalars['String']>;\n  published_at?: Maybe<Scalars['DateTime']>;\n  created_by?: Maybe<Scalars['ID']>;\n  updated_by?: Maybe<Scalars['ID']>;\n};\n\nexport type EditFileInput = {\n  name?: Maybe<Scalars['String']>;\n  alternativeText?: Maybe<Scalars['String']>;\n  caption?: Maybe<Scalars['String']>;\n  width?: Maybe<Scalars['Int']>;\n  height?: Maybe<Scalars['Int']>;\n  formats?: Maybe<Scalars['JSON']>;\n  hash?: Maybe<Scalars['String']>;\n  ext?: Maybe<Scalars['String']>;\n  mime?: Maybe<Scalars['String']>;\n  size?: Maybe<Scalars['Float']>;\n  url?: Maybe<Scalars['String']>;\n  previewUrl?: Maybe<Scalars['String']>;\n  provider?: Maybe<Scalars['String']>;\n  provider_metadata?: Maybe<Scalars['JSON']>;\n  related?: Maybe<Array<Maybe<Scalars['ID']>>>;\n  created_by?: Maybe<Scalars['ID']>;\n  updated_by?: Maybe<Scalars['ID']>;\n};\n\nexport type EditHomeBannerInput = {\n  images?: Maybe<Array<Maybe<Scalars['ID']>>>;\n  published_at?: Maybe<Scalars['DateTime']>;\n  created_by?: Maybe<Scalars['ID']>;\n  updated_by?: Maybe<Scalars['ID']>;\n};\n\nexport type EditHotelInput = {\n  name?: Maybe<Scalars['String']>;\n  stars?: Maybe<Scalars['Int']>;\n  url?: Maybe<Scalars['String']>;\n  trips?: Maybe<Array<Maybe<Scalars['ID']>>>;\n  published_at?: Maybe<Scalars['DateTime']>;\n  created_by?: Maybe<Scalars['ID']>;\n  updated_by?: Maybe<Scalars['ID']>;\n};\n\nexport type EditLocaleInput = {\n  name?: Maybe<Scalars['String']>;\n  code?: Maybe<Scalars['String']>;\n  created_by?: Maybe<Scalars['ID']>;\n  updated_by?: Maybe<Scalars['ID']>;\n};\n\nexport type EditLocationInput = {\n  name?: Maybe<Scalars['String']>;\n  description?: Maybe<Scalars['String']>;\n  images?: Maybe<Array<Maybe<Scalars['ID']>>>;\n  city?: Maybe<Scalars['ID']>;\n  coordinate?: Maybe<EditComponentCoordinateCoordinateInput>;\n  localizations?: Maybe<Array<Maybe<Scalars['ID']>>>;\n  locale?: Maybe<Scalars['String']>;\n  published_at?: Maybe<Scalars['DateTime']>;\n  created_by?: Maybe<Scalars['ID']>;\n  updated_by?: Maybe<Scalars['ID']>;\n};\n\nexport type EditPartnerInput = {\n  name?: Maybe<Scalars['String']>;\n  phone?: Maybe<Scalars['String']>;\n  address?: Maybe<Scalars['String']>;\n  email?: Maybe<Scalars['String']>;\n  trips?: Maybe<Array<Maybe<Scalars['ID']>>>;\n  agreement?: Maybe<Scalars['String']>;\n  commission?: Maybe<Scalars['Float']>;\n  revenueSource?: Maybe<Enum_Partner_Revenuesource>;\n  agreementStatus?: Maybe<Enum_Partner_Agreementstatus>;\n  notes?: Maybe<Scalars['String']>;\n  phone2?: Maybe<Scalars['String']>;\n  published_at?: Maybe<Scalars['DateTime']>;\n  created_by?: Maybe<Scalars['ID']>;\n  updated_by?: Maybe<Scalars['ID']>;\n};\n\nexport type EditReviewInput = {\n  text?: Maybe<Scalars['String']>;\n  rating?: Maybe<Scalars['Float']>;\n  author?: Maybe<Scalars['ID']>;\n  active?: Maybe<Scalars['Boolean']>;\n  trip?: Maybe<Scalars['ID']>;\n  published_at?: Maybe<Scalars['DateTime']>;\n  created_by?: Maybe<Scalars['ID']>;\n  updated_by?: Maybe<Scalars['ID']>;\n};\n\nexport type EditRoleInput = {\n  name?: Maybe<Scalars['String']>;\n  description?: Maybe<Scalars['String']>;\n  type?: Maybe<Scalars['String']>;\n  permissions?: Maybe<Array<Maybe<Scalars['ID']>>>;\n  users?: Maybe<Array<Maybe<Scalars['ID']>>>;\n  created_by?: Maybe<Scalars['ID']>;\n  updated_by?: Maybe<Scalars['ID']>;\n};\n\nexport type EditSubscriberInput = {\n  email?: Maybe<Scalars['String']>;\n  published_at?: Maybe<Scalars['DateTime']>;\n  created_by?: Maybe<Scalars['ID']>;\n  updated_by?: Maybe<Scalars['ID']>;\n};\n\nexport type EditTripInput = {\n  name?: Maybe<Scalars['String']>;\n  previewImage?: Maybe<Scalars['ID']>;\n  active?: Maybe<Scalars['Boolean']>;\n  trip_type?: Maybe<Enum_Trips_Trip_Type>;\n  description?: Maybe<Scalars['String']>;\n  duration?: Maybe<Scalars['Int']>;\n  partner?: Maybe<Scalars['ID']>;\n  currency?: Maybe<Enum_Trips_Currency>;\n  city?: Maybe<Scalars['ID']>;\n  features?: Maybe<Array<Maybe<EditComponentFeatureFeatureInput>>>;\n  basePrice?: Maybe<Scalars['Int']>;\n  basePeopleCount?: Maybe<Scalars['Int']>;\n  discount?: Maybe<Scalars['Float']>;\n  travelType?: Maybe<Enum_Trips_Traveltype>;\n  hotel?: Maybe<Scalars['ID']>;\n  plan?: Maybe<Array<Maybe<EditComponentTimelineTimelineInput>>>;\n  sequence?: Maybe<Scalars['String']>;\n  localizations?: Maybe<Array<Maybe<Scalars['ID']>>>;\n  locale?: Maybe<Scalars['String']>;\n  published_at?: Maybe<Scalars['DateTime']>;\n  created_by?: Maybe<Scalars['ID']>;\n  updated_by?: Maybe<Scalars['ID']>;\n};\n\nexport type EditUserInput = {\n  username?: Maybe<Scalars['String']>;\n  email?: Maybe<Scalars['String']>;\n  provider?: Maybe<Scalars['String']>;\n  password?: Maybe<Scalars['String']>;\n  resetPasswordToken?: Maybe<Scalars['String']>;\n  confirmationToken?: Maybe<Scalars['String']>;\n  confirmed?: Maybe<Scalars['Boolean']>;\n  blocked?: Maybe<Scalars['Boolean']>;\n  role?: Maybe<Scalars['ID']>;\n  created_by?: Maybe<Scalars['ID']>;\n  updated_by?: Maybe<Scalars['ID']>;\n};\n\nexport type UpdateBookingInput = {\n  where?: Maybe<InputId>;\n  data?: Maybe<EditBookingInput>;\n};\n\nexport type UpdateBookingPayload = {\n  __typename?: 'updateBookingPayload';\n  booking?: Maybe<Booking>;\n};\n\nexport type UpdateCityInput = {\n  where?: Maybe<InputId>;\n  data?: Maybe<EditCityInput>;\n};\n\nexport type UpdateCityPayload = {\n  __typename?: 'updateCityPayload';\n  city?: Maybe<City>;\n};\n\nexport type UpdateFeatureInput = {\n  where?: Maybe<InputId>;\n  data?: Maybe<EditFeatureInput>;\n};\n\nexport type UpdateFeaturePayload = {\n  __typename?: 'updateFeaturePayload';\n  feature?: Maybe<Feature>;\n};\n\nexport type UpdateHomeBannerInput = {\n  data?: Maybe<EditHomeBannerInput>;\n};\n\nexport type UpdateHomeBannerPayload = {\n  __typename?: 'updateHomeBannerPayload';\n  homeBanner?: Maybe<HomeBanner>;\n};\n\nexport type UpdateHotelInput = {\n  where?: Maybe<InputId>;\n  data?: Maybe<EditHotelInput>;\n};\n\nexport type UpdateHotelPayload = {\n  __typename?: 'updateHotelPayload';\n  hotel?: Maybe<Hotels>;\n};\n\nexport type UpdateLocationInput = {\n  where?: Maybe<InputId>;\n  data?: Maybe<EditLocationInput>;\n};\n\nexport type UpdateLocationPayload = {\n  __typename?: 'updateLocationPayload';\n  location?: Maybe<Location>;\n};\n\nexport type UpdatePartnerInput = {\n  where?: Maybe<InputId>;\n  data?: Maybe<EditPartnerInput>;\n};\n\nexport type UpdatePartnerPayload = {\n  __typename?: 'updatePartnerPayload';\n  partner?: Maybe<Partner>;\n};\n\nexport type UpdateReviewInput = {\n  where?: Maybe<InputId>;\n  data?: Maybe<EditReviewInput>;\n};\n\nexport type UpdateReviewPayload = {\n  __typename?: 'updateReviewPayload';\n  review?: Maybe<Review>;\n};\n\nexport type UpdateRoleInput = {\n  where?: Maybe<InputId>;\n  data?: Maybe<EditRoleInput>;\n};\n\nexport type UpdateRolePayload = {\n  __typename?: 'updateRolePayload';\n  role?: Maybe<UsersPermissionsRole>;\n};\n\nexport type UpdateSubscriberInput = {\n  where?: Maybe<InputId>;\n  data?: Maybe<EditSubscriberInput>;\n};\n\nexport type UpdateSubscriberPayload = {\n  __typename?: 'updateSubscriberPayload';\n  subscriber?: Maybe<Subscribers>;\n};\n\nexport type UpdateTripInput = {\n  where?: Maybe<InputId>;\n  data?: Maybe<EditTripInput>;\n};\n\nexport type UpdateTripPayload = {\n  __typename?: 'updateTripPayload';\n  trip?: Maybe<Trips>;\n};\n\nexport type UpdateUserInput = {\n  where?: Maybe<InputId>;\n  data?: Maybe<EditUserInput>;\n};\n\nexport type UpdateUserPayload = {\n  __typename?: 'updateUserPayload';\n  user?: Maybe<UsersPermissionsUser>;\n};\n\nexport type CreateBookingQueryMutationVariables = Exact<{\n  tripId: Scalars['ID'];\n  fullName: Scalars['String'];\n  basePrice: Scalars['Float'];\n  discount?: Maybe<Scalars['Float']>;\n  basePeopleCount: Scalars['Int'];\n  phone: Scalars['String'];\n  arrivalDate: Scalars['Date'];\n  message?: Maybe<Scalars['String']>;\n  currency: Enum_Booking_Currency;\n  email: Scalars['String'];\n  language: Scalars['String'];\n  adults: Scalars['Int'];\n  children: Scalars['Int'];\n}>;\n\n\nexport type CreateBookingQueryMutation = (\n  { __typename?: 'Mutation' }\n  & { createBooking?: Maybe<(\n    { __typename?: 'createBookingPayload' }\n    & { booking?: Maybe<(\n      { __typename?: 'Booking' }\n      & Pick<Booking, 'message'>\n    )> }\n  )> }\n);\n\nexport type CitiesQueryVariables = Exact<{\n  limit?: Maybe<Scalars['Int']>;\n  locale?: Maybe<Scalars['String']>;\n}>;\n\n\nexport type CitiesQuery = (\n  { __typename?: 'Query' }\n  & { cities?: Maybe<Array<Maybe<(\n    { __typename?: 'City' }\n    & CityInfoFragment\n  )>>> }\n);\n\nexport type GetCityQueryVariables = Exact<{\n  id: Scalars['ID'];\n}>;\n\n\nexport type GetCityQuery = (\n  { __typename?: 'Query' }\n  & { city?: Maybe<(\n    { __typename?: 'City' }\n    & CityInfoFragment\n  )> }\n);\n\nexport type GetLocalizedCityQueryVariables = Exact<{\n  id: Scalars['ID'];\n  locale: Scalars['String'];\n}>;\n\n\nexport type GetLocalizedCityQuery = (\n  { __typename?: 'Query' }\n  & { cities?: Maybe<Array<Maybe<(\n    { __typename?: 'City' }\n    & CityInfoFragment\n  )>>> }\n);\n\nexport type CityInfoFragment = (\n  { __typename?: 'City' }\n  & Pick<City, 'id' | 'name' | 'description' | 'locale'>\n  & { localizations?: Maybe<Array<Maybe<(\n    { __typename?: 'City' }\n    & Pick<City, 'id' | 'locale'>\n  )>>>, image?: Maybe<(\n    { __typename?: 'UploadFile' }\n    & Pick<UploadFile, 'id' | 'width' | 'height' | 'url' | 'formats'>\n  )> }\n);\n\nexport type FeaturesQueryVariables = Exact<{\n  locale: Scalars['String'];\n}>;\n\n\nexport type FeaturesQuery = (\n  { __typename?: 'Query' }\n  & { features?: Maybe<Array<Maybe<(\n    { __typename?: 'Feature' }\n    & Pick<Feature, 'name'>\n  )>>> }\n);\n\nexport type HomeCarousellQueryVariables = Exact<{ [key: string]: never; }>;\n\n\nexport type HomeCarousellQuery = (\n  { __typename?: 'Query' }\n  & { homeBanner?: Maybe<(\n    { __typename?: 'HomeBanner' }\n    & { images?: Maybe<Array<Maybe<(\n      { __typename?: 'UploadFile' }\n      & Pick<UploadFile, 'id' | 'width' | 'height' | 'url' | 'formats'>\n    )>>> }\n  )> }\n);\n\nexport type GetLocationsQueryVariables = Exact<{\n  locale: Scalars['String'];\n  ids: Array<Scalars['String']> | Scalars['String'];\n}>;\n\n\nexport type GetLocationsQuery = (\n  { __typename?: 'Query' }\n  & { locations?: Maybe<Array<Maybe<(\n    { __typename?: 'Location' }\n    & Pick<Location, 'id' | 'name' | 'description' | 'locale'>\n    & { coordinate?: Maybe<(\n      { __typename?: 'ComponentCoordinateCoordinate' }\n      & Pick<ComponentCoordinateCoordinate, 'latitude' | 'longitude'>\n    )>, images?: Maybe<Array<Maybe<(\n      { __typename?: 'UploadFile' }\n      & Pick<UploadFile, 'id' | 'width' | 'height' | 'url' | 'formats'>\n    )>>>, city?: Maybe<(\n      { __typename?: 'City' }\n      & Pick<City, 'id' | 'name' | 'description' | 'locale'>\n      & { localizations?: Maybe<Array<Maybe<(\n        { __typename?: 'City' }\n        & Pick<City, 'id' | 'locale'>\n      )>>>, image?: Maybe<(\n        { __typename?: 'UploadFile' }\n        & Pick<UploadFile, 'id' | 'width' | 'height' | 'url' | 'formats'>\n      )> }\n    )> }\n  )>>> }\n);\n\nexport type AddToNewsLetterMutationVariables = Exact<{\n  email: Scalars['String'];\n}>;\n\n\nexport type AddToNewsLetterMutation = (\n  { __typename?: 'Mutation' }\n  & { createSubscriber?: Maybe<(\n    { __typename?: 'createSubscriberPayload' }\n    & { subscriber?: Maybe<(\n      { __typename?: 'Subscribers' }\n      & Pick<Subscribers, 'email'>\n    )> }\n  )> }\n);\n\nexport type TripsQueryVariables = Exact<{\n  limit?: Maybe<Scalars['Int']>;\n  locale?: Maybe<Scalars['String']>;\n  where?: Maybe<Scalars['JSON']>;\n}>;\n\n\nexport type TripsQuery = (\n  { __typename?: 'Query' }\n  & { trips?: Maybe<Array<Maybe<(\n    { __typename?: 'Trips' }\n    & TripInfoFragment\n  )>>> }\n);\n\nexport type GetTripQueryVariables = Exact<{\n  id: Scalars['ID'];\n}>;\n\n\nexport type GetTripQuery = (\n  { __typename?: 'Query' }\n  & { trip?: Maybe<(\n    { __typename?: 'Trips' }\n    & TripInfoFragment\n  )> }\n);\n\nexport type GetLocalizedTripQueryVariables = Exact<{\n  id: Scalars['ID'];\n  locale: Scalars['String'];\n}>;\n\n\nexport type GetLocalizedTripQuery = (\n  { __typename?: 'Query' }\n  & { trips?: Maybe<Array<Maybe<(\n    { __typename?: 'Trips' }\n    & TripInfoFragment\n  )>>> }\n);\n\nexport type TripInfoFragment = (\n  { __typename?: 'Trips' }\n  & Pick<Trips, 'id' | 'name' | 'active' | 'description' | 'locale' | 'trip_type' | 'duration' | 'travelType' | 'basePrice' | 'discount' | 'currency' | 'basePeopleCount'>\n  & { city?: Maybe<(\n    { __typename?: 'City' }\n    & Pick<City, 'id' | 'name'>\n  )>, hotel?: Maybe<(\n    { __typename?: 'Hotels' }\n    & Pick<Hotels, 'id' | 'name' | 'url' | 'stars'>\n  )>, plan?: Maybe<Array<Maybe<(\n    { __typename?: 'ComponentTimelineTimeline' }\n    & Pick<ComponentTimelineTimeline, 'day' | 'transportationType' | 'description' | 'restDay'>\n    & { locations?: Maybe<Array<Maybe<(\n      { __typename?: 'Location' }\n      & Pick<Location, 'id' | 'name'>\n      & { city?: Maybe<(\n        { __typename?: 'City' }\n        & Pick<City, 'id'>\n      )> }\n    )>>>, travelTo?: Maybe<(\n      { __typename?: 'City' }\n      & Pick<City, 'id' | 'name'>\n    )> }\n  )>>>, previewImage?: Maybe<(\n    { __typename?: 'UploadFile' }\n    & Pick<UploadFile, 'id' | 'width' | 'height' | 'url' | 'formats'>\n  )>, localizations?: Maybe<Array<Maybe<(\n    { __typename?: 'Trips' }\n    & Pick<Trips, 'id' | 'locale'>\n  )>>>, features?: Maybe<Array<Maybe<(\n    { __typename?: 'ComponentFeatureFeature' }\n    & Pick<ComponentFeatureFeature, 'included'>\n    & { feature?: Maybe<(\n      { __typename?: 'Feature' }\n      & Pick<Feature, 'name' | 'info'>\n    )> }\n  )>>> }\n);\n\nexport const CityInfoFragmentDoc = gql`\n    fragment CityInfo on City {\n  id\n  name\n  description\n  locale\n  localizations {\n    id\n    locale\n  }\n  image {\n    id\n    width\n    height\n    url\n    formats\n  }\n}\n    `;\nexport const TripInfoFragmentDoc = gql`\n    fragment tripInfo on Trips {\n  id\n  name\n  active\n  description\n  locale\n  trip_type\n  duration\n  travelType\n  city {\n    id\n    name\n  }\n  hotel {\n    id\n    name\n    url\n    stars\n  }\n  plan {\n    day\n    locations {\n      id\n      name\n      city {\n        id\n      }\n    }\n    transportationType\n    travelTo {\n      id\n      name\n    }\n    description\n    restDay\n  }\n  previewImage {\n    id\n    width\n    height\n    url\n    formats\n  }\n  localizations {\n    id\n    locale\n  }\n  basePrice\n  discount\n  currency\n  basePeopleCount\n  features {\n    included\n    feature {\n      name\n      info\n    }\n  }\n}\n    `;\nexport const CreateBookingQueryDocument = gql`\n    mutation createBookingQuery($tripId: ID!, $fullName: String!, $basePrice: Float!, $discount: Float = 0, $basePeopleCount: Int!, $phone: String!, $arrivalDate: Date!, $message: String, $currency: ENUM_BOOKING_CURRENCY!, $email: String!, $language: String!, $adults: Int!, $children: Int!) {\n  createBooking(\n    input: {data: {trip: $tripId, basePrice: $basePrice, discount: $discount, message: $message, fullName: $fullName, basePeopleCount: $basePeopleCount, phone: $phone, arrivalDate: $arrivalDate, currency: $currency, email: $email, language: $language, adults: $adults, children: $children}}\n  ) {\n    booking {\n      message\n    }\n  }\n}\n    `;\n\n  @Injectable({\n    providedIn: 'root'\n  })\n  export class CreateBookingQueryGQL extends Apollo.Mutation<CreateBookingQueryMutation, CreateBookingQueryMutationVariables> {\n    document = CreateBookingQueryDocument;\n    \n    constructor(apollo: Apollo.Apollo) {\n      super(apollo);\n    }\n  }\nexport const CitiesDocument = gql`\n    query cities($limit: Int, $locale: String) {\n  cities(limit: $limit, locale: $locale) {\n    ...CityInfo\n  }\n}\n    ${CityInfoFragmentDoc}`;\n\n  @Injectable({\n    providedIn: 'root'\n  })\n  export class CitiesGQL extends Apollo.Query<CitiesQuery, CitiesQueryVariables> {\n    document = CitiesDocument;\n    \n    constructor(apollo: Apollo.Apollo) {\n      super(apollo);\n    }\n  }\nexport const GetCityDocument = gql`\n    query getCity($id: ID!) {\n  city(id: $id) {\n    ...CityInfo\n  }\n}\n    ${CityInfoFragmentDoc}`;\n\n  @Injectable({\n    providedIn: 'root'\n  })\n  export class GetCityGQL extends Apollo.Query<GetCityQuery, GetCityQueryVariables> {\n    document = GetCityDocument;\n    \n    constructor(apollo: Apollo.Apollo) {\n      super(apollo);\n    }\n  }\nexport const GetLocalizedCityDocument = gql`\n    query getLocalizedCity($id: ID!, $locale: String!) {\n  cities(locale: $locale, where: {_or: [{localizations: {id: $id}}, {id: $id}]}) {\n    ...CityInfo\n  }\n}\n    ${CityInfoFragmentDoc}`;\n\n  @Injectable({\n    providedIn: 'root'\n  })\n  export class GetLocalizedCityGQL extends Apollo.Query<GetLocalizedCityQuery, GetLocalizedCityQueryVariables> {\n    document = GetLocalizedCityDocument;\n    \n    constructor(apollo: Apollo.Apollo) {\n      super(apollo);\n    }\n  }\nexport const FeaturesDocument = gql`\n    query features($locale: String!) {\n  features(locale: $locale) {\n    name\n  }\n}\n    `;\n\n  @Injectable({\n    providedIn: 'root'\n  })\n  export class FeaturesGQL extends Apollo.Query<FeaturesQuery, FeaturesQueryVariables> {\n    document = FeaturesDocument;\n    \n    constructor(apollo: Apollo.Apollo) {\n      super(apollo);\n    }\n  }\nexport const HomeCarousellDocument = gql`\n    query homeCarousell {\n  homeBanner {\n    images {\n      id\n      width\n      height\n      url\n      formats\n    }\n  }\n}\n    `;\n\n  @Injectable({\n    providedIn: 'root'\n  })\n  export class HomeCarousellGQL extends Apollo.Query<HomeCarousellQuery, HomeCarousellQueryVariables> {\n    document = HomeCarousellDocument;\n    \n    constructor(apollo: Apollo.Apollo) {\n      super(apollo);\n    }\n  }\nexport const GetLocationsDocument = gql`\n    query getLocations($locale: String!, $ids: [String!]!) {\n  locations(locale: $locale, where: {id_in: $ids}) {\n    id\n    name\n    description\n    coordinate {\n      latitude\n      longitude\n    }\n    locale\n    images {\n      id\n      width\n      height\n      url\n      formats\n    }\n    city {\n      id\n      name\n      description\n      locale\n      localizations {\n        id\n        locale\n      }\n      image {\n        id\n        width\n        height\n        url\n        formats\n      }\n    }\n  }\n}\n    `;\n\n  @Injectable({\n    providedIn: 'root'\n  })\n  export class GetLocationsGQL extends Apollo.Query<GetLocationsQuery, GetLocationsQueryVariables> {\n    document = GetLocationsDocument;\n    \n    constructor(apollo: Apollo.Apollo) {\n      super(apollo);\n    }\n  }\nexport const AddToNewsLetterDocument = gql`\n    mutation addToNewsLetter($email: String!) {\n  createSubscriber(input: {data: {email: $email}}) {\n    subscriber {\n      email\n    }\n  }\n}\n    `;\n\n  @Injectable({\n    providedIn: 'root'\n  })\n  export class AddToNewsLetterGQL extends Apollo.Mutation<AddToNewsLetterMutation, AddToNewsLetterMutationVariables> {\n    document = AddToNewsLetterDocument;\n    \n    constructor(apollo: Apollo.Apollo) {\n      super(apollo);\n    }\n  }\nexport const TripsDocument = gql`\n    query trips($limit: Int = 10, $locale: String = \"en\", $where: JSON) {\n  trips(limit: $limit, locale: $locale, where: $where) {\n    ...tripInfo\n  }\n}\n    ${TripInfoFragmentDoc}`;\n\n  @Injectable({\n    providedIn: 'root'\n  })\n  export class TripsGQL extends Apollo.Query<TripsQuery, TripsQueryVariables> {\n    document = TripsDocument;\n    \n    constructor(apollo: Apollo.Apollo) {\n      super(apollo);\n    }\n  }\nexport const GetTripDocument = gql`\n    query getTrip($id: ID!) {\n  trip(id: $id) {\n    ...tripInfo\n  }\n}\n    ${TripInfoFragmentDoc}`;\n\n  @Injectable({\n    providedIn: 'root'\n  })\n  export class GetTripGQL extends Apollo.Query<GetTripQuery, GetTripQueryVariables> {\n    document = GetTripDocument;\n    \n    constructor(apollo: Apollo.Apollo) {\n      super(apollo);\n    }\n  }\nexport const GetLocalizedTripDocument = gql`\n    query getLocalizedTrip($id: ID!, $locale: String!) {\n  trips(locale: $locale, where: {_or: [{localizations: {id: $id}}, {id: $id}]}) {\n    ...tripInfo\n  }\n}\n    ${TripInfoFragmentDoc}`;\n\n  @Injectable({\n    providedIn: 'root'\n  })\n  export class GetLocalizedTripGQL extends Apollo.Query<GetLocalizedTripQuery, GetLocalizedTripQueryVariables> {\n    document = GetLocalizedTripDocument;\n    \n    constructor(apollo: Apollo.Apollo) {\n      super(apollo);\n    }\n  }",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "apollo",
                        "type": "Apollo.Apollo"
                    }
                ],
                "line": 3673,
                "jsdoctags": [
                    {
                        "name": "apollo",
                        "type": "Apollo.Apollo",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "type": "injectable"
        },
        {
            "name": "GetLocalizedTripGQL",
            "id": "injectable-GetLocalizedTripGQL-54bb7cbcdd682e4d53ca5e8a5c5399f6",
            "file": "src/app/data/services/saferniGraphql.service.ts",
            "properties": [
                {
                    "name": "document",
                    "defaultValue": "GetLocalizedTripDocument",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 3838
                }
            ],
            "methods": [],
            "description": "",
            "sourceCode": "import { gql } from 'apollo-angular';\nimport { Injectable } from '@angular/core';\nimport * as Apollo from 'apollo-angular';\nexport type Maybe<T> = T | null;\nexport type Exact<T extends { [key: string]: unknown }> = { [K in keyof T]: T[K] };\nexport type MakeOptional<T, K extends keyof T> = Omit<T, K> & { [SubKey in K]?: Maybe<T[SubKey]> };\nexport type MakeMaybe<T, K extends keyof T> = Omit<T, K> & { [SubKey in K]: Maybe<T[SubKey]> };\n/** All built-in and custom scalars, mapped to their actual values */\nexport type Scalars = {\n  ID: string;\n  String: string;\n  Boolean: boolean;\n  Int: number;\n  Float: number;\n  /** A date string, such as 2007-12-03, compliant with the `full-date` format outlined in section 5.6 of the RFC 3339 profile of the ISO 8601 standard for representation of dates and times using the Gregorian calendar. */\n  Date: any;\n  /** A date-time string at UTC, such as 2007-12-03T10:15:30Z, compliant with the `date-time` format outlined in section 5.6 of the RFC 3339 profile of the ISO 8601 standard for representation of dates and times using the Gregorian calendar. */\n  DateTime: any;\n  /** The `JSON` scalar type represents JSON values as specified by [ECMA-404](http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf). */\n  JSON: any;\n  /** The `Long` scalar type represents 52-bit integers */\n  Long: any;\n  /** A time string with format: HH:mm:ss.SSS */\n  Time: any;\n  /** The `Upload` scalar type represents a file upload. */\n  Upload: any;\n};\n\n\n\nexport type AdminUser = {\n  __typename?: 'AdminUser';\n  id: Scalars['ID'];\n  username?: Maybe<Scalars['String']>;\n  firstname: Scalars['String'];\n  lastname: Scalars['String'];\n};\n\nexport type Booking = {\n  __typename?: 'Booking';\n  id: Scalars['ID'];\n  _id: Scalars['ID'];\n  createdAt: Scalars['DateTime'];\n  updatedAt: Scalars['DateTime'];\n  trip?: Maybe<Trips>;\n  approved?: Maybe<Scalars['Boolean']>;\n  basePrice: Scalars['Float'];\n  currency: Enum_Booking_Currency;\n  basePeopleCount: Scalars['Int'];\n  discount?: Maybe<Scalars['Float']>;\n  fullName: Scalars['String'];\n  phone: Scalars['String'];\n  message?: Maybe<Scalars['String']>;\n  arrivalDate: Scalars['Date'];\n  language?: Maybe<Scalars['String']>;\n  userBookingStatus?: Maybe<Enum_Booking_Userbookingstatus>;\n  email: Scalars['String'];\n  adults: Scalars['Int'];\n  children?: Maybe<Scalars['Int']>;\n  totalPrice?: Maybe<Scalars['Float']>;\n  published_at?: Maybe<Scalars['DateTime']>;\n};\n\nexport type BookingAggregator = {\n  __typename?: 'BookingAggregator';\n  count?: Maybe<Scalars['Int']>;\n  totalCount?: Maybe<Scalars['Int']>;\n  sum?: Maybe<BookingAggregatorSum>;\n  avg?: Maybe<BookingAggregatorAvg>;\n  min?: Maybe<BookingAggregatorMin>;\n  max?: Maybe<BookingAggregatorMax>;\n};\n\nexport type BookingAggregatorAvg = {\n  __typename?: 'BookingAggregatorAvg';\n  basePrice?: Maybe<Scalars['Float']>;\n  basePeopleCount?: Maybe<Scalars['Float']>;\n  discount?: Maybe<Scalars['Float']>;\n  adults?: Maybe<Scalars['Float']>;\n  children?: Maybe<Scalars['Float']>;\n  totalPrice?: Maybe<Scalars['Float']>;\n};\n\nexport type BookingAggregatorMax = {\n  __typename?: 'BookingAggregatorMax';\n  basePrice?: Maybe<Scalars['Float']>;\n  basePeopleCount?: Maybe<Scalars['Float']>;\n  discount?: Maybe<Scalars['Float']>;\n  adults?: Maybe<Scalars['Float']>;\n  children?: Maybe<Scalars['Float']>;\n  totalPrice?: Maybe<Scalars['Float']>;\n};\n\nexport type BookingAggregatorMin = {\n  __typename?: 'BookingAggregatorMin';\n  basePrice?: Maybe<Scalars['Float']>;\n  basePeopleCount?: Maybe<Scalars['Float']>;\n  discount?: Maybe<Scalars['Float']>;\n  adults?: Maybe<Scalars['Float']>;\n  children?: Maybe<Scalars['Float']>;\n  totalPrice?: Maybe<Scalars['Float']>;\n};\n\nexport type BookingAggregatorSum = {\n  __typename?: 'BookingAggregatorSum';\n  basePrice?: Maybe<Scalars['Float']>;\n  basePeopleCount?: Maybe<Scalars['Float']>;\n  discount?: Maybe<Scalars['Float']>;\n  adults?: Maybe<Scalars['Float']>;\n  children?: Maybe<Scalars['Float']>;\n  totalPrice?: Maybe<Scalars['Float']>;\n};\n\nexport type BookingConnection = {\n  __typename?: 'BookingConnection';\n  values?: Maybe<Array<Maybe<Booking>>>;\n  groupBy?: Maybe<BookingGroupBy>;\n  aggregate?: Maybe<BookingAggregator>;\n};\n\nexport type BookingConnectionAdults = {\n  __typename?: 'BookingConnectionAdults';\n  key?: Maybe<Scalars['Int']>;\n  connection?: Maybe<BookingConnection>;\n};\n\nexport type BookingConnectionApproved = {\n  __typename?: 'BookingConnectionApproved';\n  key?: Maybe<Scalars['Boolean']>;\n  connection?: Maybe<BookingConnection>;\n};\n\nexport type BookingConnectionArrivalDate = {\n  __typename?: 'BookingConnectionArrivalDate';\n  key?: Maybe<Scalars['ID']>;\n  connection?: Maybe<BookingConnection>;\n};\n\nexport type BookingConnectionBasePeopleCount = {\n  __typename?: 'BookingConnectionBasePeopleCount';\n  key?: Maybe<Scalars['Int']>;\n  connection?: Maybe<BookingConnection>;\n};\n\nexport type BookingConnectionBasePrice = {\n  __typename?: 'BookingConnectionBasePrice';\n  key?: Maybe<Scalars['Float']>;\n  connection?: Maybe<BookingConnection>;\n};\n\nexport type BookingConnectionChildren = {\n  __typename?: 'BookingConnectionChildren';\n  key?: Maybe<Scalars['Int']>;\n  connection?: Maybe<BookingConnection>;\n};\n\nexport type BookingConnectionCreatedAt = {\n  __typename?: 'BookingConnectionCreatedAt';\n  key?: Maybe<Scalars['DateTime']>;\n  connection?: Maybe<BookingConnection>;\n};\n\nexport type BookingConnectionCurrency = {\n  __typename?: 'BookingConnectionCurrency';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<BookingConnection>;\n};\n\nexport type BookingConnectionDiscount = {\n  __typename?: 'BookingConnectionDiscount';\n  key?: Maybe<Scalars['Float']>;\n  connection?: Maybe<BookingConnection>;\n};\n\nexport type BookingConnectionEmail = {\n  __typename?: 'BookingConnectionEmail';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<BookingConnection>;\n};\n\nexport type BookingConnectionFullName = {\n  __typename?: 'BookingConnectionFullName';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<BookingConnection>;\n};\n\nexport type BookingConnectionId = {\n  __typename?: 'BookingConnectionId';\n  key?: Maybe<Scalars['ID']>;\n  connection?: Maybe<BookingConnection>;\n};\n\nexport type BookingConnectionLanguage = {\n  __typename?: 'BookingConnectionLanguage';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<BookingConnection>;\n};\n\nexport type BookingConnectionMessage = {\n  __typename?: 'BookingConnectionMessage';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<BookingConnection>;\n};\n\nexport type BookingConnectionPhone = {\n  __typename?: 'BookingConnectionPhone';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<BookingConnection>;\n};\n\nexport type BookingConnectionPublished_At = {\n  __typename?: 'BookingConnectionPublished_at';\n  key?: Maybe<Scalars['DateTime']>;\n  connection?: Maybe<BookingConnection>;\n};\n\nexport type BookingConnectionTotalPrice = {\n  __typename?: 'BookingConnectionTotalPrice';\n  key?: Maybe<Scalars['Float']>;\n  connection?: Maybe<BookingConnection>;\n};\n\nexport type BookingConnectionTrip = {\n  __typename?: 'BookingConnectionTrip';\n  key?: Maybe<Scalars['ID']>;\n  connection?: Maybe<BookingConnection>;\n};\n\nexport type BookingConnectionUpdatedAt = {\n  __typename?: 'BookingConnectionUpdatedAt';\n  key?: Maybe<Scalars['DateTime']>;\n  connection?: Maybe<BookingConnection>;\n};\n\nexport type BookingConnectionUserBookingStatus = {\n  __typename?: 'BookingConnectionUserBookingStatus';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<BookingConnection>;\n};\n\nexport type BookingConnection_Id = {\n  __typename?: 'BookingConnection_id';\n  key?: Maybe<Scalars['ID']>;\n  connection?: Maybe<BookingConnection>;\n};\n\nexport type BookingGroupBy = {\n  __typename?: 'BookingGroupBy';\n  id?: Maybe<Array<Maybe<BookingConnectionId>>>;\n  _id?: Maybe<Array<Maybe<BookingConnection_Id>>>;\n  createdAt?: Maybe<Array<Maybe<BookingConnectionCreatedAt>>>;\n  updatedAt?: Maybe<Array<Maybe<BookingConnectionUpdatedAt>>>;\n  trip?: Maybe<Array<Maybe<BookingConnectionTrip>>>;\n  approved?: Maybe<Array<Maybe<BookingConnectionApproved>>>;\n  basePrice?: Maybe<Array<Maybe<BookingConnectionBasePrice>>>;\n  currency?: Maybe<Array<Maybe<BookingConnectionCurrency>>>;\n  basePeopleCount?: Maybe<Array<Maybe<BookingConnectionBasePeopleCount>>>;\n  discount?: Maybe<Array<Maybe<BookingConnectionDiscount>>>;\n  fullName?: Maybe<Array<Maybe<BookingConnectionFullName>>>;\n  phone?: Maybe<Array<Maybe<BookingConnectionPhone>>>;\n  message?: Maybe<Array<Maybe<BookingConnectionMessage>>>;\n  arrivalDate?: Maybe<Array<Maybe<BookingConnectionArrivalDate>>>;\n  language?: Maybe<Array<Maybe<BookingConnectionLanguage>>>;\n  userBookingStatus?: Maybe<Array<Maybe<BookingConnectionUserBookingStatus>>>;\n  email?: Maybe<Array<Maybe<BookingConnectionEmail>>>;\n  adults?: Maybe<Array<Maybe<BookingConnectionAdults>>>;\n  children?: Maybe<Array<Maybe<BookingConnectionChildren>>>;\n  totalPrice?: Maybe<Array<Maybe<BookingConnectionTotalPrice>>>;\n  published_at?: Maybe<Array<Maybe<BookingConnectionPublished_At>>>;\n};\n\nexport type BookingInput = {\n  trip?: Maybe<Scalars['ID']>;\n  approved?: Maybe<Scalars['Boolean']>;\n  basePrice: Scalars['Float'];\n  currency: Enum_Booking_Currency;\n  basePeopleCount: Scalars['Int'];\n  discount?: Maybe<Scalars['Float']>;\n  fullName: Scalars['String'];\n  phone: Scalars['String'];\n  message?: Maybe<Scalars['String']>;\n  arrivalDate: Scalars['Date'];\n  language?: Maybe<Scalars['String']>;\n  userBookingStatus?: Maybe<Enum_Booking_Userbookingstatus>;\n  email: Scalars['String'];\n  adults: Scalars['Int'];\n  children?: Maybe<Scalars['Int']>;\n  totalPrice?: Maybe<Scalars['Float']>;\n  published_at?: Maybe<Scalars['DateTime']>;\n  created_by?: Maybe<Scalars['ID']>;\n  updated_by?: Maybe<Scalars['ID']>;\n};\n\nexport type City = {\n  __typename?: 'City';\n  id: Scalars['ID'];\n  _id: Scalars['ID'];\n  createdAt: Scalars['DateTime'];\n  updatedAt: Scalars['DateTime'];\n  name: Scalars['String'];\n  description?: Maybe<Scalars['String']>;\n  image?: Maybe<UploadFile>;\n  locale?: Maybe<Scalars['String']>;\n  published_at?: Maybe<Scalars['DateTime']>;\n  locations?: Maybe<Array<Maybe<Location>>>;\n  localizations?: Maybe<Array<Maybe<City>>>;\n};\n\n\nexport type CityLocationsArgs = {\n  sort?: Maybe<Scalars['String']>;\n  limit?: Maybe<Scalars['Int']>;\n  start?: Maybe<Scalars['Int']>;\n  where?: Maybe<Scalars['JSON']>;\n};\n\n\nexport type CityLocalizationsArgs = {\n  sort?: Maybe<Scalars['String']>;\n  limit?: Maybe<Scalars['Int']>;\n  start?: Maybe<Scalars['Int']>;\n  where?: Maybe<Scalars['JSON']>;\n};\n\nexport type CityAggregator = {\n  __typename?: 'CityAggregator';\n  count?: Maybe<Scalars['Int']>;\n  totalCount?: Maybe<Scalars['Int']>;\n};\n\nexport type CityConnection = {\n  __typename?: 'CityConnection';\n  values?: Maybe<Array<Maybe<City>>>;\n  groupBy?: Maybe<CityGroupBy>;\n  aggregate?: Maybe<CityAggregator>;\n};\n\nexport type CityConnectionCreatedAt = {\n  __typename?: 'CityConnectionCreatedAt';\n  key?: Maybe<Scalars['DateTime']>;\n  connection?: Maybe<CityConnection>;\n};\n\nexport type CityConnectionDescription = {\n  __typename?: 'CityConnectionDescription';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<CityConnection>;\n};\n\nexport type CityConnectionId = {\n  __typename?: 'CityConnectionId';\n  key?: Maybe<Scalars['ID']>;\n  connection?: Maybe<CityConnection>;\n};\n\nexport type CityConnectionImage = {\n  __typename?: 'CityConnectionImage';\n  key?: Maybe<Scalars['ID']>;\n  connection?: Maybe<CityConnection>;\n};\n\nexport type CityConnectionLocale = {\n  __typename?: 'CityConnectionLocale';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<CityConnection>;\n};\n\nexport type CityConnectionName = {\n  __typename?: 'CityConnectionName';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<CityConnection>;\n};\n\nexport type CityConnectionPublished_At = {\n  __typename?: 'CityConnectionPublished_at';\n  key?: Maybe<Scalars['DateTime']>;\n  connection?: Maybe<CityConnection>;\n};\n\nexport type CityConnectionUpdatedAt = {\n  __typename?: 'CityConnectionUpdatedAt';\n  key?: Maybe<Scalars['DateTime']>;\n  connection?: Maybe<CityConnection>;\n};\n\nexport type CityConnection_Id = {\n  __typename?: 'CityConnection_id';\n  key?: Maybe<Scalars['ID']>;\n  connection?: Maybe<CityConnection>;\n};\n\nexport type CityGroupBy = {\n  __typename?: 'CityGroupBy';\n  id?: Maybe<Array<Maybe<CityConnectionId>>>;\n  _id?: Maybe<Array<Maybe<CityConnection_Id>>>;\n  createdAt?: Maybe<Array<Maybe<CityConnectionCreatedAt>>>;\n  updatedAt?: Maybe<Array<Maybe<CityConnectionUpdatedAt>>>;\n  name?: Maybe<Array<Maybe<CityConnectionName>>>;\n  description?: Maybe<Array<Maybe<CityConnectionDescription>>>;\n  image?: Maybe<Array<Maybe<CityConnectionImage>>>;\n  locale?: Maybe<Array<Maybe<CityConnectionLocale>>>;\n  published_at?: Maybe<Array<Maybe<CityConnectionPublished_At>>>;\n};\n\nexport type CityInput = {\n  name: Scalars['String'];\n  description?: Maybe<Scalars['String']>;\n  image?: Maybe<Scalars['ID']>;\n  locations?: Maybe<Array<Maybe<Scalars['ID']>>>;\n  localizations?: Maybe<Array<Maybe<Scalars['ID']>>>;\n  locale?: Maybe<Scalars['String']>;\n  published_at?: Maybe<Scalars['DateTime']>;\n  created_by?: Maybe<Scalars['ID']>;\n  updated_by?: Maybe<Scalars['ID']>;\n};\n\nexport type ComponentCoordinateCoordinate = {\n  __typename?: 'ComponentCoordinateCoordinate';\n  id: Scalars['ID'];\n  _id: Scalars['ID'];\n  latitude: Scalars['Float'];\n  longitude: Scalars['Float'];\n};\n\nexport type ComponentCoordinateCoordinateInput = {\n  latitude: Scalars['Float'];\n  longitude: Scalars['Float'];\n};\n\nexport type ComponentFeatureFeature = {\n  __typename?: 'ComponentFeatureFeature';\n  id: Scalars['ID'];\n  _id: Scalars['ID'];\n  feature?: Maybe<Feature>;\n  included?: Maybe<Scalars['Boolean']>;\n};\n\nexport type ComponentFeatureFeatureInput = {\n  feature?: Maybe<Scalars['ID']>;\n  included?: Maybe<Scalars['Boolean']>;\n};\n\nexport type ComponentPricePrice = {\n  __typename?: 'ComponentPricePrice';\n  id: Scalars['ID'];\n  _id: Scalars['ID'];\n  basePrice: Scalars['Float'];\n  currency: Enum_Componentpriceprice_Currency;\n  basePeopleCount: Scalars['Int'];\n  extraAdultFee?: Maybe<Scalars['Float']>;\n  discount?: Maybe<Scalars['Float']>;\n};\n\nexport type ComponentPricePriceInput = {\n  basePrice: Scalars['Float'];\n  currency?: Maybe<Enum_Componentpriceprice_Currency>;\n  basePeopleCount: Scalars['Int'];\n  extraAdultFee?: Maybe<Scalars['Float']>;\n  discount?: Maybe<Scalars['Float']>;\n};\n\nexport type ComponentTimelineTimeline = {\n  __typename?: 'ComponentTimelineTimeline';\n  id: Scalars['ID'];\n  _id: Scalars['ID'];\n  day: Scalars['Int'];\n  description?: Maybe<Scalars['String']>;\n  travelTo?: Maybe<City>;\n  transportationType?: Maybe<Enum_Componenttimelinetimeline_Transportationtype>;\n  restDay?: Maybe<Scalars['Boolean']>;\n  locations?: Maybe<Array<Maybe<Location>>>;\n};\n\n\nexport type ComponentTimelineTimelineLocationsArgs = {\n  sort?: Maybe<Scalars['String']>;\n  limit?: Maybe<Scalars['Int']>;\n  start?: Maybe<Scalars['Int']>;\n  where?: Maybe<Scalars['JSON']>;\n};\n\nexport type ComponentTimelineTimelineInput = {\n  day: Scalars['Int'];\n  description?: Maybe<Scalars['String']>;\n  locations?: Maybe<Array<Maybe<Scalars['ID']>>>;\n  travelTo?: Maybe<Scalars['ID']>;\n  transportationType?: Maybe<Enum_Componenttimelinetimeline_Transportationtype>;\n  restDay?: Maybe<Scalars['Boolean']>;\n};\n\n\n\nexport enum Enum_Booking_Currency {\n  Dollar = 'dollar',\n  Lira = 'lira'\n}\n\nexport enum Enum_Booking_Userbookingstatus {\n  Initial = 'initial',\n  Confirmed = 'confirmed',\n  Canceled = 'canceled'\n}\n\nexport enum Enum_Componentpriceprice_Currency {\n  Dollar = 'dollar',\n  Lira = 'lira'\n}\n\nexport enum Enum_Componenttimelinetimeline_Transportationtype {\n  Arrival = 'arrival',\n  Departure = 'departure',\n  BetweenCities = 'betweenCities',\n  WithinCity = 'withinCity'\n}\n\nexport enum Enum_Partner_Agreementstatus {\n  Agreed = 'Agreed',\n  Discussing = 'discussing',\n  Termination = 'termination'\n}\n\nexport enum Enum_Partner_Revenuesource {\n  PricePercentage = 'pricePercentage',\n  InflatedPrice = 'inflatedPrice'\n}\n\nexport enum Enum_Trips_Currency {\n  Dollar = 'dollar',\n  Lira = 'lira'\n}\n\nexport enum Enum_Trips_Traveltype {\n  Private = 'private',\n  Public = 'public',\n  Both = 'both'\n}\n\nexport enum Enum_Trips_Trip_Type {\n  Touristic = 'touristic',\n  Medical = 'medical'\n}\n\nexport type Feature = {\n  __typename?: 'Feature';\n  id: Scalars['ID'];\n  _id: Scalars['ID'];\n  createdAt: Scalars['DateTime'];\n  updatedAt: Scalars['DateTime'];\n  name: Scalars['String'];\n  info?: Maybe<Scalars['String']>;\n  locale?: Maybe<Scalars['String']>;\n  published_at?: Maybe<Scalars['DateTime']>;\n  localizations?: Maybe<Array<Maybe<Feature>>>;\n};\n\n\nexport type FeatureLocalizationsArgs = {\n  sort?: Maybe<Scalars['String']>;\n  limit?: Maybe<Scalars['Int']>;\n  start?: Maybe<Scalars['Int']>;\n  where?: Maybe<Scalars['JSON']>;\n};\n\nexport type FeatureAggregator = {\n  __typename?: 'FeatureAggregator';\n  count?: Maybe<Scalars['Int']>;\n  totalCount?: Maybe<Scalars['Int']>;\n};\n\nexport type FeatureConnection = {\n  __typename?: 'FeatureConnection';\n  values?: Maybe<Array<Maybe<Feature>>>;\n  groupBy?: Maybe<FeatureGroupBy>;\n  aggregate?: Maybe<FeatureAggregator>;\n};\n\nexport type FeatureConnectionCreatedAt = {\n  __typename?: 'FeatureConnectionCreatedAt';\n  key?: Maybe<Scalars['DateTime']>;\n  connection?: Maybe<FeatureConnection>;\n};\n\nexport type FeatureConnectionId = {\n  __typename?: 'FeatureConnectionId';\n  key?: Maybe<Scalars['ID']>;\n  connection?: Maybe<FeatureConnection>;\n};\n\nexport type FeatureConnectionInfo = {\n  __typename?: 'FeatureConnectionInfo';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<FeatureConnection>;\n};\n\nexport type FeatureConnectionLocale = {\n  __typename?: 'FeatureConnectionLocale';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<FeatureConnection>;\n};\n\nexport type FeatureConnectionName = {\n  __typename?: 'FeatureConnectionName';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<FeatureConnection>;\n};\n\nexport type FeatureConnectionPublished_At = {\n  __typename?: 'FeatureConnectionPublished_at';\n  key?: Maybe<Scalars['DateTime']>;\n  connection?: Maybe<FeatureConnection>;\n};\n\nexport type FeatureConnectionUpdatedAt = {\n  __typename?: 'FeatureConnectionUpdatedAt';\n  key?: Maybe<Scalars['DateTime']>;\n  connection?: Maybe<FeatureConnection>;\n};\n\nexport type FeatureConnection_Id = {\n  __typename?: 'FeatureConnection_id';\n  key?: Maybe<Scalars['ID']>;\n  connection?: Maybe<FeatureConnection>;\n};\n\nexport type FeatureGroupBy = {\n  __typename?: 'FeatureGroupBy';\n  id?: Maybe<Array<Maybe<FeatureConnectionId>>>;\n  _id?: Maybe<Array<Maybe<FeatureConnection_Id>>>;\n  createdAt?: Maybe<Array<Maybe<FeatureConnectionCreatedAt>>>;\n  updatedAt?: Maybe<Array<Maybe<FeatureConnectionUpdatedAt>>>;\n  name?: Maybe<Array<Maybe<FeatureConnectionName>>>;\n  info?: Maybe<Array<Maybe<FeatureConnectionInfo>>>;\n  locale?: Maybe<Array<Maybe<FeatureConnectionLocale>>>;\n  published_at?: Maybe<Array<Maybe<FeatureConnectionPublished_At>>>;\n};\n\nexport type FeatureInput = {\n  name: Scalars['String'];\n  info?: Maybe<Scalars['String']>;\n  localizations?: Maybe<Array<Maybe<Scalars['ID']>>>;\n  locale?: Maybe<Scalars['String']>;\n  published_at?: Maybe<Scalars['DateTime']>;\n  created_by?: Maybe<Scalars['ID']>;\n  updated_by?: Maybe<Scalars['ID']>;\n};\n\nexport type FileInfoInput = {\n  name?: Maybe<Scalars['String']>;\n  alternativeText?: Maybe<Scalars['String']>;\n  caption?: Maybe<Scalars['String']>;\n};\n\nexport type FileInput = {\n  name: Scalars['String'];\n  alternativeText?: Maybe<Scalars['String']>;\n  caption?: Maybe<Scalars['String']>;\n  width?: Maybe<Scalars['Int']>;\n  height?: Maybe<Scalars['Int']>;\n  formats?: Maybe<Scalars['JSON']>;\n  hash: Scalars['String'];\n  ext?: Maybe<Scalars['String']>;\n  mime: Scalars['String'];\n  size: Scalars['Float'];\n  url: Scalars['String'];\n  previewUrl?: Maybe<Scalars['String']>;\n  provider: Scalars['String'];\n  provider_metadata?: Maybe<Scalars['JSON']>;\n  related?: Maybe<Array<Maybe<Scalars['ID']>>>;\n  created_by?: Maybe<Scalars['ID']>;\n  updated_by?: Maybe<Scalars['ID']>;\n};\n\nexport type HomeBanner = {\n  __typename?: 'HomeBanner';\n  id: Scalars['ID'];\n  _id: Scalars['ID'];\n  createdAt: Scalars['DateTime'];\n  updatedAt: Scalars['DateTime'];\n  published_at?: Maybe<Scalars['DateTime']>;\n  images?: Maybe<Array<Maybe<UploadFile>>>;\n};\n\n\nexport type HomeBannerImagesArgs = {\n  sort?: Maybe<Scalars['String']>;\n  limit?: Maybe<Scalars['Int']>;\n  start?: Maybe<Scalars['Int']>;\n  where?: Maybe<Scalars['JSON']>;\n};\n\nexport type HomeBannerInput = {\n  images?: Maybe<Array<Maybe<Scalars['ID']>>>;\n  published_at?: Maybe<Scalars['DateTime']>;\n  created_by?: Maybe<Scalars['ID']>;\n  updated_by?: Maybe<Scalars['ID']>;\n};\n\nexport type HotelInput = {\n  name: Scalars['String'];\n  stars: Scalars['Int'];\n  url?: Maybe<Scalars['String']>;\n  trips?: Maybe<Array<Maybe<Scalars['ID']>>>;\n  published_at?: Maybe<Scalars['DateTime']>;\n  created_by?: Maybe<Scalars['ID']>;\n  updated_by?: Maybe<Scalars['ID']>;\n};\n\nexport type Hotels = {\n  __typename?: 'Hotels';\n  id: Scalars['ID'];\n  _id: Scalars['ID'];\n  createdAt: Scalars['DateTime'];\n  updatedAt: Scalars['DateTime'];\n  name: Scalars['String'];\n  stars: Scalars['Int'];\n  url?: Maybe<Scalars['String']>;\n  published_at?: Maybe<Scalars['DateTime']>;\n  trips?: Maybe<Array<Maybe<Trips>>>;\n};\n\n\nexport type HotelsTripsArgs = {\n  sort?: Maybe<Scalars['String']>;\n  limit?: Maybe<Scalars['Int']>;\n  start?: Maybe<Scalars['Int']>;\n  where?: Maybe<Scalars['JSON']>;\n};\n\nexport type HotelsAggregator = {\n  __typename?: 'HotelsAggregator';\n  count?: Maybe<Scalars['Int']>;\n  totalCount?: Maybe<Scalars['Int']>;\n  sum?: Maybe<HotelsAggregatorSum>;\n  avg?: Maybe<HotelsAggregatorAvg>;\n  min?: Maybe<HotelsAggregatorMin>;\n  max?: Maybe<HotelsAggregatorMax>;\n};\n\nexport type HotelsAggregatorAvg = {\n  __typename?: 'HotelsAggregatorAvg';\n  stars?: Maybe<Scalars['Float']>;\n};\n\nexport type HotelsAggregatorMax = {\n  __typename?: 'HotelsAggregatorMax';\n  stars?: Maybe<Scalars['Float']>;\n};\n\nexport type HotelsAggregatorMin = {\n  __typename?: 'HotelsAggregatorMin';\n  stars?: Maybe<Scalars['Float']>;\n};\n\nexport type HotelsAggregatorSum = {\n  __typename?: 'HotelsAggregatorSum';\n  stars?: Maybe<Scalars['Float']>;\n};\n\nexport type HotelsConnection = {\n  __typename?: 'HotelsConnection';\n  values?: Maybe<Array<Maybe<Hotels>>>;\n  groupBy?: Maybe<HotelsGroupBy>;\n  aggregate?: Maybe<HotelsAggregator>;\n};\n\nexport type HotelsConnectionCreatedAt = {\n  __typename?: 'HotelsConnectionCreatedAt';\n  key?: Maybe<Scalars['DateTime']>;\n  connection?: Maybe<HotelsConnection>;\n};\n\nexport type HotelsConnectionId = {\n  __typename?: 'HotelsConnectionId';\n  key?: Maybe<Scalars['ID']>;\n  connection?: Maybe<HotelsConnection>;\n};\n\nexport type HotelsConnectionName = {\n  __typename?: 'HotelsConnectionName';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<HotelsConnection>;\n};\n\nexport type HotelsConnectionPublished_At = {\n  __typename?: 'HotelsConnectionPublished_at';\n  key?: Maybe<Scalars['DateTime']>;\n  connection?: Maybe<HotelsConnection>;\n};\n\nexport type HotelsConnectionStars = {\n  __typename?: 'HotelsConnectionStars';\n  key?: Maybe<Scalars['Int']>;\n  connection?: Maybe<HotelsConnection>;\n};\n\nexport type HotelsConnectionUpdatedAt = {\n  __typename?: 'HotelsConnectionUpdatedAt';\n  key?: Maybe<Scalars['DateTime']>;\n  connection?: Maybe<HotelsConnection>;\n};\n\nexport type HotelsConnectionUrl = {\n  __typename?: 'HotelsConnectionUrl';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<HotelsConnection>;\n};\n\nexport type HotelsConnection_Id = {\n  __typename?: 'HotelsConnection_id';\n  key?: Maybe<Scalars['ID']>;\n  connection?: Maybe<HotelsConnection>;\n};\n\nexport type HotelsGroupBy = {\n  __typename?: 'HotelsGroupBy';\n  id?: Maybe<Array<Maybe<HotelsConnectionId>>>;\n  _id?: Maybe<Array<Maybe<HotelsConnection_Id>>>;\n  createdAt?: Maybe<Array<Maybe<HotelsConnectionCreatedAt>>>;\n  updatedAt?: Maybe<Array<Maybe<HotelsConnectionUpdatedAt>>>;\n  name?: Maybe<Array<Maybe<HotelsConnectionName>>>;\n  stars?: Maybe<Array<Maybe<HotelsConnectionStars>>>;\n  url?: Maybe<Array<Maybe<HotelsConnectionUrl>>>;\n  published_at?: Maybe<Array<Maybe<HotelsConnectionPublished_At>>>;\n};\n\nexport type I18NLocale = {\n  __typename?: 'I18NLocale';\n  id: Scalars['ID'];\n  _id: Scalars['ID'];\n  createdAt: Scalars['DateTime'];\n  updatedAt: Scalars['DateTime'];\n  name?: Maybe<Scalars['String']>;\n  code?: Maybe<Scalars['String']>;\n};\n\nexport type InputId = {\n  id: Scalars['ID'];\n};\n\n\nexport type LocaleInput = {\n  name?: Maybe<Scalars['String']>;\n  code?: Maybe<Scalars['String']>;\n  created_by?: Maybe<Scalars['ID']>;\n  updated_by?: Maybe<Scalars['ID']>;\n};\n\nexport type Location = {\n  __typename?: 'Location';\n  id: Scalars['ID'];\n  _id: Scalars['ID'];\n  createdAt: Scalars['DateTime'];\n  updatedAt: Scalars['DateTime'];\n  name: Scalars['String'];\n  description?: Maybe<Scalars['String']>;\n  city?: Maybe<City>;\n  coordinate?: Maybe<ComponentCoordinateCoordinate>;\n  locale?: Maybe<Scalars['String']>;\n  published_at?: Maybe<Scalars['DateTime']>;\n  images?: Maybe<Array<Maybe<UploadFile>>>;\n  localizations?: Maybe<Array<Maybe<Location>>>;\n};\n\n\nexport type LocationImagesArgs = {\n  sort?: Maybe<Scalars['String']>;\n  limit?: Maybe<Scalars['Int']>;\n  start?: Maybe<Scalars['Int']>;\n  where?: Maybe<Scalars['JSON']>;\n};\n\n\nexport type LocationLocalizationsArgs = {\n  sort?: Maybe<Scalars['String']>;\n  limit?: Maybe<Scalars['Int']>;\n  start?: Maybe<Scalars['Int']>;\n  where?: Maybe<Scalars['JSON']>;\n};\n\nexport type LocationAggregator = {\n  __typename?: 'LocationAggregator';\n  count?: Maybe<Scalars['Int']>;\n  totalCount?: Maybe<Scalars['Int']>;\n};\n\nexport type LocationConnection = {\n  __typename?: 'LocationConnection';\n  values?: Maybe<Array<Maybe<Location>>>;\n  groupBy?: Maybe<LocationGroupBy>;\n  aggregate?: Maybe<LocationAggregator>;\n};\n\nexport type LocationConnectionCity = {\n  __typename?: 'LocationConnectionCity';\n  key?: Maybe<Scalars['ID']>;\n  connection?: Maybe<LocationConnection>;\n};\n\nexport type LocationConnectionCoordinate = {\n  __typename?: 'LocationConnectionCoordinate';\n  key?: Maybe<Scalars['ID']>;\n  connection?: Maybe<LocationConnection>;\n};\n\nexport type LocationConnectionCreatedAt = {\n  __typename?: 'LocationConnectionCreatedAt';\n  key?: Maybe<Scalars['DateTime']>;\n  connection?: Maybe<LocationConnection>;\n};\n\nexport type LocationConnectionDescription = {\n  __typename?: 'LocationConnectionDescription';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<LocationConnection>;\n};\n\nexport type LocationConnectionId = {\n  __typename?: 'LocationConnectionId';\n  key?: Maybe<Scalars['ID']>;\n  connection?: Maybe<LocationConnection>;\n};\n\nexport type LocationConnectionLocale = {\n  __typename?: 'LocationConnectionLocale';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<LocationConnection>;\n};\n\nexport type LocationConnectionName = {\n  __typename?: 'LocationConnectionName';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<LocationConnection>;\n};\n\nexport type LocationConnectionPublished_At = {\n  __typename?: 'LocationConnectionPublished_at';\n  key?: Maybe<Scalars['DateTime']>;\n  connection?: Maybe<LocationConnection>;\n};\n\nexport type LocationConnectionUpdatedAt = {\n  __typename?: 'LocationConnectionUpdatedAt';\n  key?: Maybe<Scalars['DateTime']>;\n  connection?: Maybe<LocationConnection>;\n};\n\nexport type LocationConnection_Id = {\n  __typename?: 'LocationConnection_id';\n  key?: Maybe<Scalars['ID']>;\n  connection?: Maybe<LocationConnection>;\n};\n\nexport type LocationGroupBy = {\n  __typename?: 'LocationGroupBy';\n  id?: Maybe<Array<Maybe<LocationConnectionId>>>;\n  _id?: Maybe<Array<Maybe<LocationConnection_Id>>>;\n  createdAt?: Maybe<Array<Maybe<LocationConnectionCreatedAt>>>;\n  updatedAt?: Maybe<Array<Maybe<LocationConnectionUpdatedAt>>>;\n  name?: Maybe<Array<Maybe<LocationConnectionName>>>;\n  description?: Maybe<Array<Maybe<LocationConnectionDescription>>>;\n  city?: Maybe<Array<Maybe<LocationConnectionCity>>>;\n  coordinate?: Maybe<Array<Maybe<LocationConnectionCoordinate>>>;\n  locale?: Maybe<Array<Maybe<LocationConnectionLocale>>>;\n  published_at?: Maybe<Array<Maybe<LocationConnectionPublished_At>>>;\n};\n\nexport type LocationInput = {\n  name: Scalars['String'];\n  description?: Maybe<Scalars['String']>;\n  images?: Maybe<Array<Maybe<Scalars['ID']>>>;\n  city?: Maybe<Scalars['ID']>;\n  coordinate?: Maybe<ComponentCoordinateCoordinateInput>;\n  localizations?: Maybe<Array<Maybe<Scalars['ID']>>>;\n  locale?: Maybe<Scalars['String']>;\n  published_at?: Maybe<Scalars['DateTime']>;\n  created_by?: Maybe<Scalars['ID']>;\n  updated_by?: Maybe<Scalars['ID']>;\n};\n\n\nexport type Morph = UsersPermissionsMe | UsersPermissionsMeRole | UsersPermissionsLoginPayload | UserPermissionsPasswordPayload | Booking | BookingConnection | BookingAggregator | BookingAggregatorSum | BookingAggregatorAvg | BookingAggregatorMin | BookingAggregatorMax | BookingGroupBy | BookingConnectionId | BookingConnection_Id | BookingConnectionCreatedAt | BookingConnectionUpdatedAt | BookingConnectionTrip | BookingConnectionApproved | BookingConnectionBasePrice | BookingConnectionCurrency | BookingConnectionBasePeopleCount | BookingConnectionDiscount | BookingConnectionFullName | BookingConnectionPhone | BookingConnectionMessage | BookingConnectionArrivalDate | BookingConnectionLanguage | BookingConnectionUserBookingStatus | BookingConnectionEmail | BookingConnectionAdults | BookingConnectionChildren | BookingConnectionTotalPrice | BookingConnectionPublished_At | CreateBookingPayload | UpdateBookingPayload | DeleteBookingPayload | City | CityConnection | CityAggregator | CityGroupBy | CityConnectionId | CityConnection_Id | CityConnectionCreatedAt | CityConnectionUpdatedAt | CityConnectionName | CityConnectionDescription | CityConnectionImage | CityConnectionLocale | CityConnectionPublished_At | CreateCityPayload | UpdateCityPayload | DeleteCityPayload | Feature | FeatureConnection | FeatureAggregator | FeatureGroupBy | FeatureConnectionId | FeatureConnection_Id | FeatureConnectionCreatedAt | FeatureConnectionUpdatedAt | FeatureConnectionName | FeatureConnectionInfo | FeatureConnectionLocale | FeatureConnectionPublished_At | CreateFeaturePayload | UpdateFeaturePayload | DeleteFeaturePayload | HomeBanner | UpdateHomeBannerPayload | DeleteHomeBannerPayload | Hotels | HotelsConnection | HotelsAggregator | HotelsAggregatorSum | HotelsAggregatorAvg | HotelsAggregatorMin | HotelsAggregatorMax | HotelsGroupBy | HotelsConnectionId | HotelsConnection_Id | HotelsConnectionCreatedAt | HotelsConnectionUpdatedAt | HotelsConnectionName | HotelsConnectionStars | HotelsConnectionUrl | HotelsConnectionPublished_At | CreateHotelPayload | UpdateHotelPayload | DeleteHotelPayload | Location | LocationConnection | LocationAggregator | LocationGroupBy | LocationConnectionId | LocationConnection_Id | LocationConnectionCreatedAt | LocationConnectionUpdatedAt | LocationConnectionName | LocationConnectionDescription | LocationConnectionCity | LocationConnectionCoordinate | LocationConnectionLocale | LocationConnectionPublished_At | CreateLocationPayload | UpdateLocationPayload | DeleteLocationPayload | Partner | PartnerConnection | PartnerAggregator | PartnerAggregatorSum | PartnerAggregatorAvg | PartnerAggregatorMin | PartnerAggregatorMax | PartnerGroupBy | PartnerConnectionId | PartnerConnection_Id | PartnerConnectionCreatedAt | PartnerConnectionUpdatedAt | PartnerConnectionName | PartnerConnectionPhone | PartnerConnectionAddress | PartnerConnectionEmail | PartnerConnectionAgreement | PartnerConnectionCommission | PartnerConnectionRevenueSource | PartnerConnectionAgreementStatus | PartnerConnectionNotes | PartnerConnectionPhone2 | PartnerConnectionPublished_At | CreatePartnerPayload | UpdatePartnerPayload | DeletePartnerPayload | Review | ReviewConnection | ReviewAggregator | ReviewAggregatorSum | ReviewAggregatorAvg | ReviewAggregatorMin | ReviewAggregatorMax | ReviewGroupBy | ReviewConnectionId | ReviewConnection_Id | ReviewConnectionCreatedAt | ReviewConnectionUpdatedAt | ReviewConnectionText | ReviewConnectionRating | ReviewConnectionAuthor | ReviewConnectionActive | ReviewConnectionTrip | ReviewConnectionPublished_At | CreateReviewPayload | UpdateReviewPayload | DeleteReviewPayload | Subscribers | SubscribersConnection | SubscribersAggregator | SubscribersGroupBy | SubscribersConnectionId | SubscribersConnection_Id | SubscribersConnectionCreatedAt | SubscribersConnectionUpdatedAt | SubscribersConnectionEmail | SubscribersConnectionPublished_At | CreateSubscriberPayload | UpdateSubscriberPayload | DeleteSubscriberPayload | Trips | TripsConnection | TripsAggregator | TripsAggregatorSum | TripsAggregatorAvg | TripsAggregatorMin | TripsAggregatorMax | TripsGroupBy | TripsConnectionId | TripsConnection_Id | TripsConnectionCreatedAt | TripsConnectionUpdatedAt | TripsConnectionName | TripsConnectionPreviewImage | TripsConnectionActive | TripsConnectionTrip_Type | TripsConnectionDescription | TripsConnectionDuration | TripsConnectionPartner | TripsConnectionCurrency | TripsConnectionCity | TripsConnectionBasePrice | TripsConnectionBasePeopleCount | TripsConnectionDiscount | TripsConnectionTravelType | TripsConnectionHotel | TripsConnectionLocale | TripsConnectionPublished_At | CreateTripPayload | UpdateTripPayload | DeleteTripPayload | I18NLocale | UploadFile | UploadFileConnection | UploadFileAggregator | UploadFileAggregatorSum | UploadFileAggregatorAvg | UploadFileAggregatorMin | UploadFileAggregatorMax | UploadFileGroupBy | UploadFileConnectionId | UploadFileConnection_Id | UploadFileConnectionCreatedAt | UploadFileConnectionUpdatedAt | UploadFileConnectionName | UploadFileConnectionAlternativeText | UploadFileConnectionCaption | UploadFileConnectionWidth | UploadFileConnectionHeight | UploadFileConnectionFormats | UploadFileConnectionHash | UploadFileConnectionExt | UploadFileConnectionMime | UploadFileConnectionSize | UploadFileConnectionUrl | UploadFileConnectionPreviewUrl | UploadFileConnectionProvider | UploadFileConnectionProvider_Metadata | DeleteFilePayload | UsersPermissionsPermission | UsersPermissionsRole | UsersPermissionsRoleConnection | UsersPermissionsRoleAggregator | UsersPermissionsRoleGroupBy | UsersPermissionsRoleConnectionId | UsersPermissionsRoleConnection_Id | UsersPermissionsRoleConnectionName | UsersPermissionsRoleConnectionDescription | UsersPermissionsRoleConnectionType | CreateRolePayload | UpdateRolePayload | DeleteRolePayload | UsersPermissionsUser | UsersPermissionsUserConnection | UsersPermissionsUserAggregator | UsersPermissionsUserGroupBy | UsersPermissionsUserConnectionId | UsersPermissionsUserConnection_Id | UsersPermissionsUserConnectionCreatedAt | UsersPermissionsUserConnectionUpdatedAt | UsersPermissionsUserConnectionUsername | UsersPermissionsUserConnectionEmail | UsersPermissionsUserConnectionProvider | UsersPermissionsUserConnectionConfirmed | UsersPermissionsUserConnectionBlocked | UsersPermissionsUserConnectionRole | CreateUserPayload | UpdateUserPayload | DeleteUserPayload | ComponentCoordinateCoordinate | ComponentFeatureFeature | ComponentPricePrice | ComponentTimelineTimeline;\n\nexport type Mutation = {\n  __typename?: 'Mutation';\n  createBooking?: Maybe<CreateBookingPayload>;\n  updateBooking?: Maybe<UpdateBookingPayload>;\n  deleteBooking?: Maybe<DeleteBookingPayload>;\n  createCity?: Maybe<CreateCityPayload>;\n  updateCity?: Maybe<UpdateCityPayload>;\n  deleteCity?: Maybe<DeleteCityPayload>;\n  createFeature?: Maybe<CreateFeaturePayload>;\n  updateFeature?: Maybe<UpdateFeaturePayload>;\n  deleteFeature?: Maybe<DeleteFeaturePayload>;\n  updateHomeBanner?: Maybe<UpdateHomeBannerPayload>;\n  deleteHomeBanner?: Maybe<DeleteHomeBannerPayload>;\n  createHotel?: Maybe<CreateHotelPayload>;\n  updateHotel?: Maybe<UpdateHotelPayload>;\n  deleteHotel?: Maybe<DeleteHotelPayload>;\n  createLocation?: Maybe<CreateLocationPayload>;\n  updateLocation?: Maybe<UpdateLocationPayload>;\n  deleteLocation?: Maybe<DeleteLocationPayload>;\n  createPartner?: Maybe<CreatePartnerPayload>;\n  updatePartner?: Maybe<UpdatePartnerPayload>;\n  deletePartner?: Maybe<DeletePartnerPayload>;\n  createReview?: Maybe<CreateReviewPayload>;\n  updateReview?: Maybe<UpdateReviewPayload>;\n  deleteReview?: Maybe<DeleteReviewPayload>;\n  createSubscriber?: Maybe<CreateSubscriberPayload>;\n  updateSubscriber?: Maybe<UpdateSubscriberPayload>;\n  deleteSubscriber?: Maybe<DeleteSubscriberPayload>;\n  createTrip?: Maybe<CreateTripPayload>;\n  updateTrip?: Maybe<UpdateTripPayload>;\n  deleteTrip?: Maybe<DeleteTripPayload>;\n  /** Delete one file */\n  deleteFile?: Maybe<DeleteFilePayload>;\n  /** Create a new role */\n  createRole?: Maybe<CreateRolePayload>;\n  /** Update an existing role */\n  updateRole?: Maybe<UpdateRolePayload>;\n  /** Delete an existing role */\n  deleteRole?: Maybe<DeleteRolePayload>;\n  /** Create a new user */\n  createUser?: Maybe<CreateUserPayload>;\n  /** Update an existing user */\n  updateUser?: Maybe<UpdateUserPayload>;\n  /** Delete an existing user */\n  deleteUser?: Maybe<DeleteUserPayload>;\n  createCityLocalization: City;\n  createFeatureLocalization: Feature;\n  createLocationLocalization: Location;\n  createTripLocalization: Trips;\n  upload: UploadFile;\n  multipleUpload: Array<Maybe<UploadFile>>;\n  updateFileInfo: UploadFile;\n  login: UsersPermissionsLoginPayload;\n  register: UsersPermissionsLoginPayload;\n  forgotPassword?: Maybe<UserPermissionsPasswordPayload>;\n  resetPassword?: Maybe<UsersPermissionsLoginPayload>;\n  emailConfirmation?: Maybe<UsersPermissionsLoginPayload>;\n};\n\n\nexport type MutationCreateBookingArgs = {\n  input?: Maybe<CreateBookingInput>;\n};\n\n\nexport type MutationUpdateBookingArgs = {\n  input?: Maybe<UpdateBookingInput>;\n};\n\n\nexport type MutationDeleteBookingArgs = {\n  input?: Maybe<DeleteBookingInput>;\n};\n\n\nexport type MutationCreateCityArgs = {\n  input?: Maybe<CreateCityInput>;\n};\n\n\nexport type MutationUpdateCityArgs = {\n  input?: Maybe<UpdateCityInput>;\n};\n\n\nexport type MutationDeleteCityArgs = {\n  input?: Maybe<DeleteCityInput>;\n};\n\n\nexport type MutationCreateFeatureArgs = {\n  input?: Maybe<CreateFeatureInput>;\n};\n\n\nexport type MutationUpdateFeatureArgs = {\n  input?: Maybe<UpdateFeatureInput>;\n};\n\n\nexport type MutationDeleteFeatureArgs = {\n  input?: Maybe<DeleteFeatureInput>;\n};\n\n\nexport type MutationUpdateHomeBannerArgs = {\n  input?: Maybe<UpdateHomeBannerInput>;\n};\n\n\nexport type MutationCreateHotelArgs = {\n  input?: Maybe<CreateHotelInput>;\n};\n\n\nexport type MutationUpdateHotelArgs = {\n  input?: Maybe<UpdateHotelInput>;\n};\n\n\nexport type MutationDeleteHotelArgs = {\n  input?: Maybe<DeleteHotelInput>;\n};\n\n\nexport type MutationCreateLocationArgs = {\n  input?: Maybe<CreateLocationInput>;\n};\n\n\nexport type MutationUpdateLocationArgs = {\n  input?: Maybe<UpdateLocationInput>;\n};\n\n\nexport type MutationDeleteLocationArgs = {\n  input?: Maybe<DeleteLocationInput>;\n};\n\n\nexport type MutationCreatePartnerArgs = {\n  input?: Maybe<CreatePartnerInput>;\n};\n\n\nexport type MutationUpdatePartnerArgs = {\n  input?: Maybe<UpdatePartnerInput>;\n};\n\n\nexport type MutationDeletePartnerArgs = {\n  input?: Maybe<DeletePartnerInput>;\n};\n\n\nexport type MutationCreateReviewArgs = {\n  input?: Maybe<CreateReviewInput>;\n};\n\n\nexport type MutationUpdateReviewArgs = {\n  input?: Maybe<UpdateReviewInput>;\n};\n\n\nexport type MutationDeleteReviewArgs = {\n  input?: Maybe<DeleteReviewInput>;\n};\n\n\nexport type MutationCreateSubscriberArgs = {\n  input?: Maybe<CreateSubscriberInput>;\n};\n\n\nexport type MutationUpdateSubscriberArgs = {\n  input?: Maybe<UpdateSubscriberInput>;\n};\n\n\nexport type MutationDeleteSubscriberArgs = {\n  input?: Maybe<DeleteSubscriberInput>;\n};\n\n\nexport type MutationCreateTripArgs = {\n  input?: Maybe<CreateTripInput>;\n};\n\n\nexport type MutationUpdateTripArgs = {\n  input?: Maybe<UpdateTripInput>;\n};\n\n\nexport type MutationDeleteTripArgs = {\n  input?: Maybe<DeleteTripInput>;\n};\n\n\nexport type MutationDeleteFileArgs = {\n  input?: Maybe<DeleteFileInput>;\n};\n\n\nexport type MutationCreateRoleArgs = {\n  input?: Maybe<CreateRoleInput>;\n};\n\n\nexport type MutationUpdateRoleArgs = {\n  input?: Maybe<UpdateRoleInput>;\n};\n\n\nexport type MutationDeleteRoleArgs = {\n  input?: Maybe<DeleteRoleInput>;\n};\n\n\nexport type MutationCreateUserArgs = {\n  input?: Maybe<CreateUserInput>;\n};\n\n\nexport type MutationUpdateUserArgs = {\n  input?: Maybe<UpdateUserInput>;\n};\n\n\nexport type MutationDeleteUserArgs = {\n  input?: Maybe<DeleteUserInput>;\n};\n\n\nexport type MutationCreateCityLocalizationArgs = {\n  input: UpdateCityInput;\n};\n\n\nexport type MutationCreateFeatureLocalizationArgs = {\n  input: UpdateFeatureInput;\n};\n\n\nexport type MutationCreateLocationLocalizationArgs = {\n  input: UpdateLocationInput;\n};\n\n\nexport type MutationCreateTripLocalizationArgs = {\n  input: UpdateTripInput;\n};\n\n\nexport type MutationUploadArgs = {\n  refId?: Maybe<Scalars['ID']>;\n  ref?: Maybe<Scalars['String']>;\n  field?: Maybe<Scalars['String']>;\n  source?: Maybe<Scalars['String']>;\n  info?: Maybe<FileInfoInput>;\n  file: Scalars['Upload'];\n};\n\n\nexport type MutationMultipleUploadArgs = {\n  refId?: Maybe<Scalars['ID']>;\n  ref?: Maybe<Scalars['String']>;\n  field?: Maybe<Scalars['String']>;\n  source?: Maybe<Scalars['String']>;\n  files: Array<Maybe<Scalars['Upload']>>;\n};\n\n\nexport type MutationUpdateFileInfoArgs = {\n  id: Scalars['ID'];\n  info: FileInfoInput;\n};\n\n\nexport type MutationLoginArgs = {\n  input: UsersPermissionsLoginInput;\n};\n\n\nexport type MutationRegisterArgs = {\n  input: UsersPermissionsRegisterInput;\n};\n\n\nexport type MutationForgotPasswordArgs = {\n  email: Scalars['String'];\n};\n\n\nexport type MutationResetPasswordArgs = {\n  password: Scalars['String'];\n  passwordConfirmation: Scalars['String'];\n  code: Scalars['String'];\n};\n\n\nexport type MutationEmailConfirmationArgs = {\n  confirmation: Scalars['String'];\n};\n\nexport type Partner = {\n  __typename?: 'Partner';\n  id: Scalars['ID'];\n  _id: Scalars['ID'];\n  createdAt: Scalars['DateTime'];\n  updatedAt: Scalars['DateTime'];\n  name: Scalars['String'];\n  phone: Scalars['String'];\n  address?: Maybe<Scalars['String']>;\n  email?: Maybe<Scalars['String']>;\n  agreement?: Maybe<Scalars['String']>;\n  commission: Scalars['Float'];\n  revenueSource: Enum_Partner_Revenuesource;\n  agreementStatus: Enum_Partner_Agreementstatus;\n  notes?: Maybe<Scalars['String']>;\n  phone2?: Maybe<Scalars['String']>;\n  published_at?: Maybe<Scalars['DateTime']>;\n  trips?: Maybe<Array<Maybe<Trips>>>;\n};\n\n\nexport type PartnerTripsArgs = {\n  sort?: Maybe<Scalars['String']>;\n  limit?: Maybe<Scalars['Int']>;\n  start?: Maybe<Scalars['Int']>;\n  where?: Maybe<Scalars['JSON']>;\n};\n\nexport type PartnerAggregator = {\n  __typename?: 'PartnerAggregator';\n  count?: Maybe<Scalars['Int']>;\n  totalCount?: Maybe<Scalars['Int']>;\n  sum?: Maybe<PartnerAggregatorSum>;\n  avg?: Maybe<PartnerAggregatorAvg>;\n  min?: Maybe<PartnerAggregatorMin>;\n  max?: Maybe<PartnerAggregatorMax>;\n};\n\nexport type PartnerAggregatorAvg = {\n  __typename?: 'PartnerAggregatorAvg';\n  commission?: Maybe<Scalars['Float']>;\n};\n\nexport type PartnerAggregatorMax = {\n  __typename?: 'PartnerAggregatorMax';\n  commission?: Maybe<Scalars['Float']>;\n};\n\nexport type PartnerAggregatorMin = {\n  __typename?: 'PartnerAggregatorMin';\n  commission?: Maybe<Scalars['Float']>;\n};\n\nexport type PartnerAggregatorSum = {\n  __typename?: 'PartnerAggregatorSum';\n  commission?: Maybe<Scalars['Float']>;\n};\n\nexport type PartnerConnection = {\n  __typename?: 'PartnerConnection';\n  values?: Maybe<Array<Maybe<Partner>>>;\n  groupBy?: Maybe<PartnerGroupBy>;\n  aggregate?: Maybe<PartnerAggregator>;\n};\n\nexport type PartnerConnectionAddress = {\n  __typename?: 'PartnerConnectionAddress';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<PartnerConnection>;\n};\n\nexport type PartnerConnectionAgreement = {\n  __typename?: 'PartnerConnectionAgreement';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<PartnerConnection>;\n};\n\nexport type PartnerConnectionAgreementStatus = {\n  __typename?: 'PartnerConnectionAgreementStatus';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<PartnerConnection>;\n};\n\nexport type PartnerConnectionCommission = {\n  __typename?: 'PartnerConnectionCommission';\n  key?: Maybe<Scalars['Float']>;\n  connection?: Maybe<PartnerConnection>;\n};\n\nexport type PartnerConnectionCreatedAt = {\n  __typename?: 'PartnerConnectionCreatedAt';\n  key?: Maybe<Scalars['DateTime']>;\n  connection?: Maybe<PartnerConnection>;\n};\n\nexport type PartnerConnectionEmail = {\n  __typename?: 'PartnerConnectionEmail';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<PartnerConnection>;\n};\n\nexport type PartnerConnectionId = {\n  __typename?: 'PartnerConnectionId';\n  key?: Maybe<Scalars['ID']>;\n  connection?: Maybe<PartnerConnection>;\n};\n\nexport type PartnerConnectionName = {\n  __typename?: 'PartnerConnectionName';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<PartnerConnection>;\n};\n\nexport type PartnerConnectionNotes = {\n  __typename?: 'PartnerConnectionNotes';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<PartnerConnection>;\n};\n\nexport type PartnerConnectionPhone = {\n  __typename?: 'PartnerConnectionPhone';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<PartnerConnection>;\n};\n\nexport type PartnerConnectionPhone2 = {\n  __typename?: 'PartnerConnectionPhone2';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<PartnerConnection>;\n};\n\nexport type PartnerConnectionPublished_At = {\n  __typename?: 'PartnerConnectionPublished_at';\n  key?: Maybe<Scalars['DateTime']>;\n  connection?: Maybe<PartnerConnection>;\n};\n\nexport type PartnerConnectionRevenueSource = {\n  __typename?: 'PartnerConnectionRevenueSource';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<PartnerConnection>;\n};\n\nexport type PartnerConnectionUpdatedAt = {\n  __typename?: 'PartnerConnectionUpdatedAt';\n  key?: Maybe<Scalars['DateTime']>;\n  connection?: Maybe<PartnerConnection>;\n};\n\nexport type PartnerConnection_Id = {\n  __typename?: 'PartnerConnection_id';\n  key?: Maybe<Scalars['ID']>;\n  connection?: Maybe<PartnerConnection>;\n};\n\nexport type PartnerGroupBy = {\n  __typename?: 'PartnerGroupBy';\n  id?: Maybe<Array<Maybe<PartnerConnectionId>>>;\n  _id?: Maybe<Array<Maybe<PartnerConnection_Id>>>;\n  createdAt?: Maybe<Array<Maybe<PartnerConnectionCreatedAt>>>;\n  updatedAt?: Maybe<Array<Maybe<PartnerConnectionUpdatedAt>>>;\n  name?: Maybe<Array<Maybe<PartnerConnectionName>>>;\n  phone?: Maybe<Array<Maybe<PartnerConnectionPhone>>>;\n  address?: Maybe<Array<Maybe<PartnerConnectionAddress>>>;\n  email?: Maybe<Array<Maybe<PartnerConnectionEmail>>>;\n  agreement?: Maybe<Array<Maybe<PartnerConnectionAgreement>>>;\n  commission?: Maybe<Array<Maybe<PartnerConnectionCommission>>>;\n  revenueSource?: Maybe<Array<Maybe<PartnerConnectionRevenueSource>>>;\n  agreementStatus?: Maybe<Array<Maybe<PartnerConnectionAgreementStatus>>>;\n  notes?: Maybe<Array<Maybe<PartnerConnectionNotes>>>;\n  phone2?: Maybe<Array<Maybe<PartnerConnectionPhone2>>>;\n  published_at?: Maybe<Array<Maybe<PartnerConnectionPublished_At>>>;\n};\n\nexport type PartnerInput = {\n  name: Scalars['String'];\n  phone: Scalars['String'];\n  address?: Maybe<Scalars['String']>;\n  email?: Maybe<Scalars['String']>;\n  trips?: Maybe<Array<Maybe<Scalars['ID']>>>;\n  agreement?: Maybe<Scalars['String']>;\n  commission: Scalars['Float'];\n  revenueSource: Enum_Partner_Revenuesource;\n  agreementStatus: Enum_Partner_Agreementstatus;\n  notes?: Maybe<Scalars['String']>;\n  phone2?: Maybe<Scalars['String']>;\n  published_at?: Maybe<Scalars['DateTime']>;\n  created_by?: Maybe<Scalars['ID']>;\n  updated_by?: Maybe<Scalars['ID']>;\n};\n\nexport enum PublicationState {\n  Live = 'LIVE',\n  Preview = 'PREVIEW'\n}\n\nexport type Query = {\n  __typename?: 'Query';\n  booking?: Maybe<Booking>;\n  bookings?: Maybe<Array<Maybe<Booking>>>;\n  bookingsConnection?: Maybe<BookingConnection>;\n  city?: Maybe<City>;\n  cities?: Maybe<Array<Maybe<City>>>;\n  citiesConnection?: Maybe<CityConnection>;\n  feature?: Maybe<Feature>;\n  features?: Maybe<Array<Maybe<Feature>>>;\n  featuresConnection?: Maybe<FeatureConnection>;\n  homeBanner?: Maybe<HomeBanner>;\n  hotel?: Maybe<Hotels>;\n  hotels?: Maybe<Array<Maybe<Hotels>>>;\n  hotelsConnection?: Maybe<HotelsConnection>;\n  location?: Maybe<Location>;\n  locations?: Maybe<Array<Maybe<Location>>>;\n  locationsConnection?: Maybe<LocationConnection>;\n  partner?: Maybe<Partner>;\n  partners?: Maybe<Array<Maybe<Partner>>>;\n  partnersConnection?: Maybe<PartnerConnection>;\n  review?: Maybe<Review>;\n  reviews?: Maybe<Array<Maybe<Review>>>;\n  reviewsConnection?: Maybe<ReviewConnection>;\n  subscriber?: Maybe<Subscribers>;\n  subscribers?: Maybe<Array<Maybe<Subscribers>>>;\n  subscribersConnection?: Maybe<SubscribersConnection>;\n  trip?: Maybe<Trips>;\n  trips?: Maybe<Array<Maybe<Trips>>>;\n  tripsConnection?: Maybe<TripsConnection>;\n  files?: Maybe<Array<Maybe<UploadFile>>>;\n  filesConnection?: Maybe<UploadFileConnection>;\n  role?: Maybe<UsersPermissionsRole>;\n  /** Retrieve all the existing roles. You can't apply filters on this query. */\n  roles?: Maybe<Array<Maybe<UsersPermissionsRole>>>;\n  rolesConnection?: Maybe<UsersPermissionsRoleConnection>;\n  user?: Maybe<UsersPermissionsUser>;\n  users?: Maybe<Array<Maybe<UsersPermissionsUser>>>;\n  usersConnection?: Maybe<UsersPermissionsUserConnection>;\n  me?: Maybe<UsersPermissionsMe>;\n};\n\n\nexport type QueryBookingArgs = {\n  id: Scalars['ID'];\n  publicationState?: Maybe<PublicationState>;\n};\n\n\nexport type QueryBookingsArgs = {\n  sort?: Maybe<Scalars['String']>;\n  limit?: Maybe<Scalars['Int']>;\n  start?: Maybe<Scalars['Int']>;\n  where?: Maybe<Scalars['JSON']>;\n  publicationState?: Maybe<PublicationState>;\n};\n\n\nexport type QueryBookingsConnectionArgs = {\n  sort?: Maybe<Scalars['String']>;\n  limit?: Maybe<Scalars['Int']>;\n  start?: Maybe<Scalars['Int']>;\n  where?: Maybe<Scalars['JSON']>;\n};\n\n\nexport type QueryCityArgs = {\n  id: Scalars['ID'];\n  publicationState?: Maybe<PublicationState>;\n};\n\n\nexport type QueryCitiesArgs = {\n  sort?: Maybe<Scalars['String']>;\n  limit?: Maybe<Scalars['Int']>;\n  start?: Maybe<Scalars['Int']>;\n  where?: Maybe<Scalars['JSON']>;\n  publicationState?: Maybe<PublicationState>;\n  locale?: Maybe<Scalars['String']>;\n};\n\n\nexport type QueryCitiesConnectionArgs = {\n  sort?: Maybe<Scalars['String']>;\n  limit?: Maybe<Scalars['Int']>;\n  start?: Maybe<Scalars['Int']>;\n  where?: Maybe<Scalars['JSON']>;\n  locale?: Maybe<Scalars['String']>;\n};\n\n\nexport type QueryFeatureArgs = {\n  id: Scalars['ID'];\n  publicationState?: Maybe<PublicationState>;\n};\n\n\nexport type QueryFeaturesArgs = {\n  sort?: Maybe<Scalars['String']>;\n  limit?: Maybe<Scalars['Int']>;\n  start?: Maybe<Scalars['Int']>;\n  where?: Maybe<Scalars['JSON']>;\n  publicationState?: Maybe<PublicationState>;\n  locale?: Maybe<Scalars['String']>;\n};\n\n\nexport type QueryFeaturesConnectionArgs = {\n  sort?: Maybe<Scalars['String']>;\n  limit?: Maybe<Scalars['Int']>;\n  start?: Maybe<Scalars['Int']>;\n  where?: Maybe<Scalars['JSON']>;\n  locale?: Maybe<Scalars['String']>;\n};\n\n\nexport type QueryHomeBannerArgs = {\n  publicationState?: Maybe<PublicationState>;\n};\n\n\nexport type QueryHotelArgs = {\n  id: Scalars['ID'];\n  publicationState?: Maybe<PublicationState>;\n};\n\n\nexport type QueryHotelsArgs = {\n  sort?: Maybe<Scalars['String']>;\n  limit?: Maybe<Scalars['Int']>;\n  start?: Maybe<Scalars['Int']>;\n  where?: Maybe<Scalars['JSON']>;\n  publicationState?: Maybe<PublicationState>;\n};\n\n\nexport type QueryHotelsConnectionArgs = {\n  sort?: Maybe<Scalars['String']>;\n  limit?: Maybe<Scalars['Int']>;\n  start?: Maybe<Scalars['Int']>;\n  where?: Maybe<Scalars['JSON']>;\n};\n\n\nexport type QueryLocationArgs = {\n  id: Scalars['ID'];\n  publicationState?: Maybe<PublicationState>;\n};\n\n\nexport type QueryLocationsArgs = {\n  sort?: Maybe<Scalars['String']>;\n  limit?: Maybe<Scalars['Int']>;\n  start?: Maybe<Scalars['Int']>;\n  where?: Maybe<Scalars['JSON']>;\n  publicationState?: Maybe<PublicationState>;\n  locale?: Maybe<Scalars['String']>;\n};\n\n\nexport type QueryLocationsConnectionArgs = {\n  sort?: Maybe<Scalars['String']>;\n  limit?: Maybe<Scalars['Int']>;\n  start?: Maybe<Scalars['Int']>;\n  where?: Maybe<Scalars['JSON']>;\n  locale?: Maybe<Scalars['String']>;\n};\n\n\nexport type QueryPartnerArgs = {\n  id: Scalars['ID'];\n  publicationState?: Maybe<PublicationState>;\n};\n\n\nexport type QueryPartnersArgs = {\n  sort?: Maybe<Scalars['String']>;\n  limit?: Maybe<Scalars['Int']>;\n  start?: Maybe<Scalars['Int']>;\n  where?: Maybe<Scalars['JSON']>;\n  publicationState?: Maybe<PublicationState>;\n};\n\n\nexport type QueryPartnersConnectionArgs = {\n  sort?: Maybe<Scalars['String']>;\n  limit?: Maybe<Scalars['Int']>;\n  start?: Maybe<Scalars['Int']>;\n  where?: Maybe<Scalars['JSON']>;\n};\n\n\nexport type QueryReviewArgs = {\n  id: Scalars['ID'];\n  publicationState?: Maybe<PublicationState>;\n};\n\n\nexport type QueryReviewsArgs = {\n  sort?: Maybe<Scalars['String']>;\n  limit?: Maybe<Scalars['Int']>;\n  start?: Maybe<Scalars['Int']>;\n  where?: Maybe<Scalars['JSON']>;\n  publicationState?: Maybe<PublicationState>;\n};\n\n\nexport type QueryReviewsConnectionArgs = {\n  sort?: Maybe<Scalars['String']>;\n  limit?: Maybe<Scalars['Int']>;\n  start?: Maybe<Scalars['Int']>;\n  where?: Maybe<Scalars['JSON']>;\n};\n\n\nexport type QuerySubscriberArgs = {\n  id: Scalars['ID'];\n  publicationState?: Maybe<PublicationState>;\n};\n\n\nexport type QuerySubscribersArgs = {\n  sort?: Maybe<Scalars['String']>;\n  limit?: Maybe<Scalars['Int']>;\n  start?: Maybe<Scalars['Int']>;\n  where?: Maybe<Scalars['JSON']>;\n  publicationState?: Maybe<PublicationState>;\n};\n\n\nexport type QuerySubscribersConnectionArgs = {\n  sort?: Maybe<Scalars['String']>;\n  limit?: Maybe<Scalars['Int']>;\n  start?: Maybe<Scalars['Int']>;\n  where?: Maybe<Scalars['JSON']>;\n};\n\n\nexport type QueryTripArgs = {\n  id: Scalars['ID'];\n  publicationState?: Maybe<PublicationState>;\n};\n\n\nexport type QueryTripsArgs = {\n  sort?: Maybe<Scalars['String']>;\n  limit?: Maybe<Scalars['Int']>;\n  start?: Maybe<Scalars['Int']>;\n  where?: Maybe<Scalars['JSON']>;\n  publicationState?: Maybe<PublicationState>;\n  locale?: Maybe<Scalars['String']>;\n};\n\n\nexport type QueryTripsConnectionArgs = {\n  sort?: Maybe<Scalars['String']>;\n  limit?: Maybe<Scalars['Int']>;\n  start?: Maybe<Scalars['Int']>;\n  where?: Maybe<Scalars['JSON']>;\n  locale?: Maybe<Scalars['String']>;\n};\n\n\nexport type QueryFilesArgs = {\n  sort?: Maybe<Scalars['String']>;\n  limit?: Maybe<Scalars['Int']>;\n  start?: Maybe<Scalars['Int']>;\n  where?: Maybe<Scalars['JSON']>;\n  publicationState?: Maybe<PublicationState>;\n};\n\n\nexport type QueryFilesConnectionArgs = {\n  sort?: Maybe<Scalars['String']>;\n  limit?: Maybe<Scalars['Int']>;\n  start?: Maybe<Scalars['Int']>;\n  where?: Maybe<Scalars['JSON']>;\n};\n\n\nexport type QueryRoleArgs = {\n  id: Scalars['ID'];\n  publicationState?: Maybe<PublicationState>;\n};\n\n\nexport type QueryRolesArgs = {\n  sort?: Maybe<Scalars['String']>;\n  limit?: Maybe<Scalars['Int']>;\n  start?: Maybe<Scalars['Int']>;\n  where?: Maybe<Scalars['JSON']>;\n  publicationState?: Maybe<PublicationState>;\n};\n\n\nexport type QueryRolesConnectionArgs = {\n  sort?: Maybe<Scalars['String']>;\n  limit?: Maybe<Scalars['Int']>;\n  start?: Maybe<Scalars['Int']>;\n  where?: Maybe<Scalars['JSON']>;\n};\n\n\nexport type QueryUserArgs = {\n  id: Scalars['ID'];\n  publicationState?: Maybe<PublicationState>;\n};\n\n\nexport type QueryUsersArgs = {\n  sort?: Maybe<Scalars['String']>;\n  limit?: Maybe<Scalars['Int']>;\n  start?: Maybe<Scalars['Int']>;\n  where?: Maybe<Scalars['JSON']>;\n  publicationState?: Maybe<PublicationState>;\n};\n\n\nexport type QueryUsersConnectionArgs = {\n  sort?: Maybe<Scalars['String']>;\n  limit?: Maybe<Scalars['Int']>;\n  start?: Maybe<Scalars['Int']>;\n  where?: Maybe<Scalars['JSON']>;\n};\n\nexport type Review = {\n  __typename?: 'Review';\n  id: Scalars['ID'];\n  _id: Scalars['ID'];\n  createdAt: Scalars['DateTime'];\n  updatedAt: Scalars['DateTime'];\n  text?: Maybe<Scalars['String']>;\n  rating: Scalars['Float'];\n  author?: Maybe<UsersPermissionsUser>;\n  active?: Maybe<Scalars['Boolean']>;\n  trip?: Maybe<Trips>;\n  published_at?: Maybe<Scalars['DateTime']>;\n};\n\nexport type ReviewAggregator = {\n  __typename?: 'ReviewAggregator';\n  count?: Maybe<Scalars['Int']>;\n  totalCount?: Maybe<Scalars['Int']>;\n  sum?: Maybe<ReviewAggregatorSum>;\n  avg?: Maybe<ReviewAggregatorAvg>;\n  min?: Maybe<ReviewAggregatorMin>;\n  max?: Maybe<ReviewAggregatorMax>;\n};\n\nexport type ReviewAggregatorAvg = {\n  __typename?: 'ReviewAggregatorAvg';\n  rating?: Maybe<Scalars['Float']>;\n};\n\nexport type ReviewAggregatorMax = {\n  __typename?: 'ReviewAggregatorMax';\n  rating?: Maybe<Scalars['Float']>;\n};\n\nexport type ReviewAggregatorMin = {\n  __typename?: 'ReviewAggregatorMin';\n  rating?: Maybe<Scalars['Float']>;\n};\n\nexport type ReviewAggregatorSum = {\n  __typename?: 'ReviewAggregatorSum';\n  rating?: Maybe<Scalars['Float']>;\n};\n\nexport type ReviewConnection = {\n  __typename?: 'ReviewConnection';\n  values?: Maybe<Array<Maybe<Review>>>;\n  groupBy?: Maybe<ReviewGroupBy>;\n  aggregate?: Maybe<ReviewAggregator>;\n};\n\nexport type ReviewConnectionActive = {\n  __typename?: 'ReviewConnectionActive';\n  key?: Maybe<Scalars['Boolean']>;\n  connection?: Maybe<ReviewConnection>;\n};\n\nexport type ReviewConnectionAuthor = {\n  __typename?: 'ReviewConnectionAuthor';\n  key?: Maybe<Scalars['ID']>;\n  connection?: Maybe<ReviewConnection>;\n};\n\nexport type ReviewConnectionCreatedAt = {\n  __typename?: 'ReviewConnectionCreatedAt';\n  key?: Maybe<Scalars['DateTime']>;\n  connection?: Maybe<ReviewConnection>;\n};\n\nexport type ReviewConnectionId = {\n  __typename?: 'ReviewConnectionId';\n  key?: Maybe<Scalars['ID']>;\n  connection?: Maybe<ReviewConnection>;\n};\n\nexport type ReviewConnectionPublished_At = {\n  __typename?: 'ReviewConnectionPublished_at';\n  key?: Maybe<Scalars['DateTime']>;\n  connection?: Maybe<ReviewConnection>;\n};\n\nexport type ReviewConnectionRating = {\n  __typename?: 'ReviewConnectionRating';\n  key?: Maybe<Scalars['Float']>;\n  connection?: Maybe<ReviewConnection>;\n};\n\nexport type ReviewConnectionText = {\n  __typename?: 'ReviewConnectionText';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<ReviewConnection>;\n};\n\nexport type ReviewConnectionTrip = {\n  __typename?: 'ReviewConnectionTrip';\n  key?: Maybe<Scalars['ID']>;\n  connection?: Maybe<ReviewConnection>;\n};\n\nexport type ReviewConnectionUpdatedAt = {\n  __typename?: 'ReviewConnectionUpdatedAt';\n  key?: Maybe<Scalars['DateTime']>;\n  connection?: Maybe<ReviewConnection>;\n};\n\nexport type ReviewConnection_Id = {\n  __typename?: 'ReviewConnection_id';\n  key?: Maybe<Scalars['ID']>;\n  connection?: Maybe<ReviewConnection>;\n};\n\nexport type ReviewGroupBy = {\n  __typename?: 'ReviewGroupBy';\n  id?: Maybe<Array<Maybe<ReviewConnectionId>>>;\n  _id?: Maybe<Array<Maybe<ReviewConnection_Id>>>;\n  createdAt?: Maybe<Array<Maybe<ReviewConnectionCreatedAt>>>;\n  updatedAt?: Maybe<Array<Maybe<ReviewConnectionUpdatedAt>>>;\n  text?: Maybe<Array<Maybe<ReviewConnectionText>>>;\n  rating?: Maybe<Array<Maybe<ReviewConnectionRating>>>;\n  author?: Maybe<Array<Maybe<ReviewConnectionAuthor>>>;\n  active?: Maybe<Array<Maybe<ReviewConnectionActive>>>;\n  trip?: Maybe<Array<Maybe<ReviewConnectionTrip>>>;\n  published_at?: Maybe<Array<Maybe<ReviewConnectionPublished_At>>>;\n};\n\nexport type ReviewInput = {\n  text?: Maybe<Scalars['String']>;\n  rating: Scalars['Float'];\n  author?: Maybe<Scalars['ID']>;\n  active?: Maybe<Scalars['Boolean']>;\n  trip?: Maybe<Scalars['ID']>;\n  published_at?: Maybe<Scalars['DateTime']>;\n  created_by?: Maybe<Scalars['ID']>;\n  updated_by?: Maybe<Scalars['ID']>;\n};\n\nexport type RoleInput = {\n  name: Scalars['String'];\n  description?: Maybe<Scalars['String']>;\n  type?: Maybe<Scalars['String']>;\n  permissions?: Maybe<Array<Maybe<Scalars['ID']>>>;\n  users?: Maybe<Array<Maybe<Scalars['ID']>>>;\n  created_by?: Maybe<Scalars['ID']>;\n  updated_by?: Maybe<Scalars['ID']>;\n};\n\nexport type SubscriberInput = {\n  email: Scalars['String'];\n  published_at?: Maybe<Scalars['DateTime']>;\n  created_by?: Maybe<Scalars['ID']>;\n  updated_by?: Maybe<Scalars['ID']>;\n};\n\nexport type Subscribers = {\n  __typename?: 'Subscribers';\n  id: Scalars['ID'];\n  _id: Scalars['ID'];\n  createdAt: Scalars['DateTime'];\n  updatedAt: Scalars['DateTime'];\n  email: Scalars['String'];\n  published_at?: Maybe<Scalars['DateTime']>;\n};\n\nexport type SubscribersAggregator = {\n  __typename?: 'SubscribersAggregator';\n  count?: Maybe<Scalars['Int']>;\n  totalCount?: Maybe<Scalars['Int']>;\n};\n\nexport type SubscribersConnection = {\n  __typename?: 'SubscribersConnection';\n  values?: Maybe<Array<Maybe<Subscribers>>>;\n  groupBy?: Maybe<SubscribersGroupBy>;\n  aggregate?: Maybe<SubscribersAggregator>;\n};\n\nexport type SubscribersConnectionCreatedAt = {\n  __typename?: 'SubscribersConnectionCreatedAt';\n  key?: Maybe<Scalars['DateTime']>;\n  connection?: Maybe<SubscribersConnection>;\n};\n\nexport type SubscribersConnectionEmail = {\n  __typename?: 'SubscribersConnectionEmail';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<SubscribersConnection>;\n};\n\nexport type SubscribersConnectionId = {\n  __typename?: 'SubscribersConnectionId';\n  key?: Maybe<Scalars['ID']>;\n  connection?: Maybe<SubscribersConnection>;\n};\n\nexport type SubscribersConnectionPublished_At = {\n  __typename?: 'SubscribersConnectionPublished_at';\n  key?: Maybe<Scalars['DateTime']>;\n  connection?: Maybe<SubscribersConnection>;\n};\n\nexport type SubscribersConnectionUpdatedAt = {\n  __typename?: 'SubscribersConnectionUpdatedAt';\n  key?: Maybe<Scalars['DateTime']>;\n  connection?: Maybe<SubscribersConnection>;\n};\n\nexport type SubscribersConnection_Id = {\n  __typename?: 'SubscribersConnection_id';\n  key?: Maybe<Scalars['ID']>;\n  connection?: Maybe<SubscribersConnection>;\n};\n\nexport type SubscribersGroupBy = {\n  __typename?: 'SubscribersGroupBy';\n  id?: Maybe<Array<Maybe<SubscribersConnectionId>>>;\n  _id?: Maybe<Array<Maybe<SubscribersConnection_Id>>>;\n  createdAt?: Maybe<Array<Maybe<SubscribersConnectionCreatedAt>>>;\n  updatedAt?: Maybe<Array<Maybe<SubscribersConnectionUpdatedAt>>>;\n  email?: Maybe<Array<Maybe<SubscribersConnectionEmail>>>;\n  published_at?: Maybe<Array<Maybe<SubscribersConnectionPublished_At>>>;\n};\n\n\nexport type TripInput = {\n  name: Scalars['String'];\n  previewImage?: Maybe<Scalars['ID']>;\n  active?: Maybe<Scalars['Boolean']>;\n  trip_type: Enum_Trips_Trip_Type;\n  description?: Maybe<Scalars['String']>;\n  duration: Scalars['Int'];\n  partner?: Maybe<Scalars['ID']>;\n  currency?: Maybe<Enum_Trips_Currency>;\n  city?: Maybe<Scalars['ID']>;\n  features?: Maybe<Array<ComponentFeatureFeatureInput>>;\n  basePrice: Scalars['Int'];\n  basePeopleCount: Scalars['Int'];\n  discount?: Maybe<Scalars['Float']>;\n  travelType: Enum_Trips_Traveltype;\n  hotel?: Maybe<Scalars['ID']>;\n  plan?: Maybe<Array<ComponentTimelineTimelineInput>>;\n  sequence: Scalars['String'];\n  localizations?: Maybe<Array<Maybe<Scalars['ID']>>>;\n  locale?: Maybe<Scalars['String']>;\n  published_at?: Maybe<Scalars['DateTime']>;\n  created_by?: Maybe<Scalars['ID']>;\n  updated_by?: Maybe<Scalars['ID']>;\n};\n\nexport type Trips = {\n  __typename?: 'Trips';\n  id: Scalars['ID'];\n  _id: Scalars['ID'];\n  createdAt: Scalars['DateTime'];\n  updatedAt: Scalars['DateTime'];\n  name: Scalars['String'];\n  previewImage?: Maybe<UploadFile>;\n  active?: Maybe<Scalars['Boolean']>;\n  trip_type: Enum_Trips_Trip_Type;\n  description?: Maybe<Scalars['String']>;\n  duration: Scalars['Int'];\n  partner?: Maybe<Partner>;\n  currency?: Maybe<Enum_Trips_Currency>;\n  city?: Maybe<City>;\n  features?: Maybe<Array<Maybe<ComponentFeatureFeature>>>;\n  basePrice: Scalars['Int'];\n  basePeopleCount: Scalars['Int'];\n  discount?: Maybe<Scalars['Float']>;\n  travelType: Enum_Trips_Traveltype;\n  hotel?: Maybe<Hotels>;\n  plan?: Maybe<Array<Maybe<ComponentTimelineTimeline>>>;\n  locale?: Maybe<Scalars['String']>;\n  published_at?: Maybe<Scalars['DateTime']>;\n  localizations?: Maybe<Array<Maybe<Trips>>>;\n};\n\n\nexport type TripsLocalizationsArgs = {\n  sort?: Maybe<Scalars['String']>;\n  limit?: Maybe<Scalars['Int']>;\n  start?: Maybe<Scalars['Int']>;\n  where?: Maybe<Scalars['JSON']>;\n};\n\nexport type TripsAggregator = {\n  __typename?: 'TripsAggregator';\n  count?: Maybe<Scalars['Int']>;\n  totalCount?: Maybe<Scalars['Int']>;\n  sum?: Maybe<TripsAggregatorSum>;\n  avg?: Maybe<TripsAggregatorAvg>;\n  min?: Maybe<TripsAggregatorMin>;\n  max?: Maybe<TripsAggregatorMax>;\n};\n\nexport type TripsAggregatorAvg = {\n  __typename?: 'TripsAggregatorAvg';\n  duration?: Maybe<Scalars['Float']>;\n  basePrice?: Maybe<Scalars['Float']>;\n  basePeopleCount?: Maybe<Scalars['Float']>;\n  discount?: Maybe<Scalars['Float']>;\n};\n\nexport type TripsAggregatorMax = {\n  __typename?: 'TripsAggregatorMax';\n  duration?: Maybe<Scalars['Float']>;\n  basePrice?: Maybe<Scalars['Float']>;\n  basePeopleCount?: Maybe<Scalars['Float']>;\n  discount?: Maybe<Scalars['Float']>;\n};\n\nexport type TripsAggregatorMin = {\n  __typename?: 'TripsAggregatorMin';\n  duration?: Maybe<Scalars['Float']>;\n  basePrice?: Maybe<Scalars['Float']>;\n  basePeopleCount?: Maybe<Scalars['Float']>;\n  discount?: Maybe<Scalars['Float']>;\n};\n\nexport type TripsAggregatorSum = {\n  __typename?: 'TripsAggregatorSum';\n  duration?: Maybe<Scalars['Float']>;\n  basePrice?: Maybe<Scalars['Float']>;\n  basePeopleCount?: Maybe<Scalars['Float']>;\n  discount?: Maybe<Scalars['Float']>;\n};\n\nexport type TripsConnection = {\n  __typename?: 'TripsConnection';\n  values?: Maybe<Array<Maybe<Trips>>>;\n  groupBy?: Maybe<TripsGroupBy>;\n  aggregate?: Maybe<TripsAggregator>;\n};\n\nexport type TripsConnectionActive = {\n  __typename?: 'TripsConnectionActive';\n  key?: Maybe<Scalars['Boolean']>;\n  connection?: Maybe<TripsConnection>;\n};\n\nexport type TripsConnectionBasePeopleCount = {\n  __typename?: 'TripsConnectionBasePeopleCount';\n  key?: Maybe<Scalars['Int']>;\n  connection?: Maybe<TripsConnection>;\n};\n\nexport type TripsConnectionBasePrice = {\n  __typename?: 'TripsConnectionBasePrice';\n  key?: Maybe<Scalars['Int']>;\n  connection?: Maybe<TripsConnection>;\n};\n\nexport type TripsConnectionCity = {\n  __typename?: 'TripsConnectionCity';\n  key?: Maybe<Scalars['ID']>;\n  connection?: Maybe<TripsConnection>;\n};\n\nexport type TripsConnectionCreatedAt = {\n  __typename?: 'TripsConnectionCreatedAt';\n  key?: Maybe<Scalars['DateTime']>;\n  connection?: Maybe<TripsConnection>;\n};\n\nexport type TripsConnectionCurrency = {\n  __typename?: 'TripsConnectionCurrency';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<TripsConnection>;\n};\n\nexport type TripsConnectionDescription = {\n  __typename?: 'TripsConnectionDescription';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<TripsConnection>;\n};\n\nexport type TripsConnectionDiscount = {\n  __typename?: 'TripsConnectionDiscount';\n  key?: Maybe<Scalars['Float']>;\n  connection?: Maybe<TripsConnection>;\n};\n\nexport type TripsConnectionDuration = {\n  __typename?: 'TripsConnectionDuration';\n  key?: Maybe<Scalars['Int']>;\n  connection?: Maybe<TripsConnection>;\n};\n\nexport type TripsConnectionHotel = {\n  __typename?: 'TripsConnectionHotel';\n  key?: Maybe<Scalars['ID']>;\n  connection?: Maybe<TripsConnection>;\n};\n\nexport type TripsConnectionId = {\n  __typename?: 'TripsConnectionId';\n  key?: Maybe<Scalars['ID']>;\n  connection?: Maybe<TripsConnection>;\n};\n\nexport type TripsConnectionLocale = {\n  __typename?: 'TripsConnectionLocale';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<TripsConnection>;\n};\n\nexport type TripsConnectionName = {\n  __typename?: 'TripsConnectionName';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<TripsConnection>;\n};\n\nexport type TripsConnectionPartner = {\n  __typename?: 'TripsConnectionPartner';\n  key?: Maybe<Scalars['ID']>;\n  connection?: Maybe<TripsConnection>;\n};\n\nexport type TripsConnectionPreviewImage = {\n  __typename?: 'TripsConnectionPreviewImage';\n  key?: Maybe<Scalars['ID']>;\n  connection?: Maybe<TripsConnection>;\n};\n\nexport type TripsConnectionPublished_At = {\n  __typename?: 'TripsConnectionPublished_at';\n  key?: Maybe<Scalars['DateTime']>;\n  connection?: Maybe<TripsConnection>;\n};\n\nexport type TripsConnectionTravelType = {\n  __typename?: 'TripsConnectionTravelType';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<TripsConnection>;\n};\n\nexport type TripsConnectionTrip_Type = {\n  __typename?: 'TripsConnectionTrip_type';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<TripsConnection>;\n};\n\nexport type TripsConnectionUpdatedAt = {\n  __typename?: 'TripsConnectionUpdatedAt';\n  key?: Maybe<Scalars['DateTime']>;\n  connection?: Maybe<TripsConnection>;\n};\n\nexport type TripsConnection_Id = {\n  __typename?: 'TripsConnection_id';\n  key?: Maybe<Scalars['ID']>;\n  connection?: Maybe<TripsConnection>;\n};\n\nexport type TripsGroupBy = {\n  __typename?: 'TripsGroupBy';\n  id?: Maybe<Array<Maybe<TripsConnectionId>>>;\n  _id?: Maybe<Array<Maybe<TripsConnection_Id>>>;\n  createdAt?: Maybe<Array<Maybe<TripsConnectionCreatedAt>>>;\n  updatedAt?: Maybe<Array<Maybe<TripsConnectionUpdatedAt>>>;\n  name?: Maybe<Array<Maybe<TripsConnectionName>>>;\n  previewImage?: Maybe<Array<Maybe<TripsConnectionPreviewImage>>>;\n  active?: Maybe<Array<Maybe<TripsConnectionActive>>>;\n  trip_type?: Maybe<Array<Maybe<TripsConnectionTrip_Type>>>;\n  description?: Maybe<Array<Maybe<TripsConnectionDescription>>>;\n  duration?: Maybe<Array<Maybe<TripsConnectionDuration>>>;\n  partner?: Maybe<Array<Maybe<TripsConnectionPartner>>>;\n  currency?: Maybe<Array<Maybe<TripsConnectionCurrency>>>;\n  city?: Maybe<Array<Maybe<TripsConnectionCity>>>;\n  basePrice?: Maybe<Array<Maybe<TripsConnectionBasePrice>>>;\n  basePeopleCount?: Maybe<Array<Maybe<TripsConnectionBasePeopleCount>>>;\n  discount?: Maybe<Array<Maybe<TripsConnectionDiscount>>>;\n  travelType?: Maybe<Array<Maybe<TripsConnectionTravelType>>>;\n  hotel?: Maybe<Array<Maybe<TripsConnectionHotel>>>;\n  locale?: Maybe<Array<Maybe<TripsConnectionLocale>>>;\n  published_at?: Maybe<Array<Maybe<TripsConnectionPublished_At>>>;\n};\n\n\nexport type UploadFile = {\n  __typename?: 'UploadFile';\n  id: Scalars['ID'];\n  _id: Scalars['ID'];\n  createdAt: Scalars['DateTime'];\n  updatedAt: Scalars['DateTime'];\n  name: Scalars['String'];\n  alternativeText?: Maybe<Scalars['String']>;\n  caption?: Maybe<Scalars['String']>;\n  width?: Maybe<Scalars['Int']>;\n  height?: Maybe<Scalars['Int']>;\n  formats?: Maybe<Scalars['JSON']>;\n  hash: Scalars['String'];\n  ext?: Maybe<Scalars['String']>;\n  mime: Scalars['String'];\n  size: Scalars['Float'];\n  url: Scalars['String'];\n  previewUrl?: Maybe<Scalars['String']>;\n  provider: Scalars['String'];\n  provider_metadata?: Maybe<Scalars['JSON']>;\n  related?: Maybe<Array<Maybe<Morph>>>;\n};\n\n\nexport type UploadFileRelatedArgs = {\n  sort?: Maybe<Scalars['String']>;\n  limit?: Maybe<Scalars['Int']>;\n  start?: Maybe<Scalars['Int']>;\n  where?: Maybe<Scalars['JSON']>;\n};\n\nexport type UploadFileAggregator = {\n  __typename?: 'UploadFileAggregator';\n  count?: Maybe<Scalars['Int']>;\n  totalCount?: Maybe<Scalars['Int']>;\n  sum?: Maybe<UploadFileAggregatorSum>;\n  avg?: Maybe<UploadFileAggregatorAvg>;\n  min?: Maybe<UploadFileAggregatorMin>;\n  max?: Maybe<UploadFileAggregatorMax>;\n};\n\nexport type UploadFileAggregatorAvg = {\n  __typename?: 'UploadFileAggregatorAvg';\n  width?: Maybe<Scalars['Float']>;\n  height?: Maybe<Scalars['Float']>;\n  size?: Maybe<Scalars['Float']>;\n};\n\nexport type UploadFileAggregatorMax = {\n  __typename?: 'UploadFileAggregatorMax';\n  width?: Maybe<Scalars['Float']>;\n  height?: Maybe<Scalars['Float']>;\n  size?: Maybe<Scalars['Float']>;\n};\n\nexport type UploadFileAggregatorMin = {\n  __typename?: 'UploadFileAggregatorMin';\n  width?: Maybe<Scalars['Float']>;\n  height?: Maybe<Scalars['Float']>;\n  size?: Maybe<Scalars['Float']>;\n};\n\nexport type UploadFileAggregatorSum = {\n  __typename?: 'UploadFileAggregatorSum';\n  width?: Maybe<Scalars['Float']>;\n  height?: Maybe<Scalars['Float']>;\n  size?: Maybe<Scalars['Float']>;\n};\n\nexport type UploadFileConnection = {\n  __typename?: 'UploadFileConnection';\n  values?: Maybe<Array<Maybe<UploadFile>>>;\n  groupBy?: Maybe<UploadFileGroupBy>;\n  aggregate?: Maybe<UploadFileAggregator>;\n};\n\nexport type UploadFileConnectionAlternativeText = {\n  __typename?: 'UploadFileConnectionAlternativeText';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<UploadFileConnection>;\n};\n\nexport type UploadFileConnectionCaption = {\n  __typename?: 'UploadFileConnectionCaption';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<UploadFileConnection>;\n};\n\nexport type UploadFileConnectionCreatedAt = {\n  __typename?: 'UploadFileConnectionCreatedAt';\n  key?: Maybe<Scalars['DateTime']>;\n  connection?: Maybe<UploadFileConnection>;\n};\n\nexport type UploadFileConnectionExt = {\n  __typename?: 'UploadFileConnectionExt';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<UploadFileConnection>;\n};\n\nexport type UploadFileConnectionFormats = {\n  __typename?: 'UploadFileConnectionFormats';\n  key?: Maybe<Scalars['JSON']>;\n  connection?: Maybe<UploadFileConnection>;\n};\n\nexport type UploadFileConnectionHash = {\n  __typename?: 'UploadFileConnectionHash';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<UploadFileConnection>;\n};\n\nexport type UploadFileConnectionHeight = {\n  __typename?: 'UploadFileConnectionHeight';\n  key?: Maybe<Scalars['Int']>;\n  connection?: Maybe<UploadFileConnection>;\n};\n\nexport type UploadFileConnectionId = {\n  __typename?: 'UploadFileConnectionId';\n  key?: Maybe<Scalars['ID']>;\n  connection?: Maybe<UploadFileConnection>;\n};\n\nexport type UploadFileConnectionMime = {\n  __typename?: 'UploadFileConnectionMime';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<UploadFileConnection>;\n};\n\nexport type UploadFileConnectionName = {\n  __typename?: 'UploadFileConnectionName';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<UploadFileConnection>;\n};\n\nexport type UploadFileConnectionPreviewUrl = {\n  __typename?: 'UploadFileConnectionPreviewUrl';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<UploadFileConnection>;\n};\n\nexport type UploadFileConnectionProvider = {\n  __typename?: 'UploadFileConnectionProvider';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<UploadFileConnection>;\n};\n\nexport type UploadFileConnectionProvider_Metadata = {\n  __typename?: 'UploadFileConnectionProvider_metadata';\n  key?: Maybe<Scalars['JSON']>;\n  connection?: Maybe<UploadFileConnection>;\n};\n\nexport type UploadFileConnectionSize = {\n  __typename?: 'UploadFileConnectionSize';\n  key?: Maybe<Scalars['Float']>;\n  connection?: Maybe<UploadFileConnection>;\n};\n\nexport type UploadFileConnectionUpdatedAt = {\n  __typename?: 'UploadFileConnectionUpdatedAt';\n  key?: Maybe<Scalars['DateTime']>;\n  connection?: Maybe<UploadFileConnection>;\n};\n\nexport type UploadFileConnectionUrl = {\n  __typename?: 'UploadFileConnectionUrl';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<UploadFileConnection>;\n};\n\nexport type UploadFileConnectionWidth = {\n  __typename?: 'UploadFileConnectionWidth';\n  key?: Maybe<Scalars['Int']>;\n  connection?: Maybe<UploadFileConnection>;\n};\n\nexport type UploadFileConnection_Id = {\n  __typename?: 'UploadFileConnection_id';\n  key?: Maybe<Scalars['ID']>;\n  connection?: Maybe<UploadFileConnection>;\n};\n\nexport type UploadFileGroupBy = {\n  __typename?: 'UploadFileGroupBy';\n  id?: Maybe<Array<Maybe<UploadFileConnectionId>>>;\n  _id?: Maybe<Array<Maybe<UploadFileConnection_Id>>>;\n  createdAt?: Maybe<Array<Maybe<UploadFileConnectionCreatedAt>>>;\n  updatedAt?: Maybe<Array<Maybe<UploadFileConnectionUpdatedAt>>>;\n  name?: Maybe<Array<Maybe<UploadFileConnectionName>>>;\n  alternativeText?: Maybe<Array<Maybe<UploadFileConnectionAlternativeText>>>;\n  caption?: Maybe<Array<Maybe<UploadFileConnectionCaption>>>;\n  width?: Maybe<Array<Maybe<UploadFileConnectionWidth>>>;\n  height?: Maybe<Array<Maybe<UploadFileConnectionHeight>>>;\n  formats?: Maybe<Array<Maybe<UploadFileConnectionFormats>>>;\n  hash?: Maybe<Array<Maybe<UploadFileConnectionHash>>>;\n  ext?: Maybe<Array<Maybe<UploadFileConnectionExt>>>;\n  mime?: Maybe<Array<Maybe<UploadFileConnectionMime>>>;\n  size?: Maybe<Array<Maybe<UploadFileConnectionSize>>>;\n  url?: Maybe<Array<Maybe<UploadFileConnectionUrl>>>;\n  previewUrl?: Maybe<Array<Maybe<UploadFileConnectionPreviewUrl>>>;\n  provider?: Maybe<Array<Maybe<UploadFileConnectionProvider>>>;\n  provider_metadata?: Maybe<Array<Maybe<UploadFileConnectionProvider_Metadata>>>;\n};\n\nexport type UserInput = {\n  username: Scalars['String'];\n  email: Scalars['String'];\n  provider?: Maybe<Scalars['String']>;\n  password?: Maybe<Scalars['String']>;\n  resetPasswordToken?: Maybe<Scalars['String']>;\n  confirmationToken?: Maybe<Scalars['String']>;\n  confirmed?: Maybe<Scalars['Boolean']>;\n  blocked?: Maybe<Scalars['Boolean']>;\n  role?: Maybe<Scalars['ID']>;\n  created_by?: Maybe<Scalars['ID']>;\n  updated_by?: Maybe<Scalars['ID']>;\n};\n\nexport type UserPermissionsPasswordPayload = {\n  __typename?: 'UserPermissionsPasswordPayload';\n  ok: Scalars['Boolean'];\n};\n\nexport type UsersPermissionsLoginInput = {\n  identifier: Scalars['String'];\n  password: Scalars['String'];\n  provider?: Maybe<Scalars['String']>;\n};\n\nexport type UsersPermissionsLoginPayload = {\n  __typename?: 'UsersPermissionsLoginPayload';\n  jwt?: Maybe<Scalars['String']>;\n  user: UsersPermissionsMe;\n};\n\nexport type UsersPermissionsMe = {\n  __typename?: 'UsersPermissionsMe';\n  id: Scalars['ID'];\n  username: Scalars['String'];\n  email: Scalars['String'];\n  confirmed?: Maybe<Scalars['Boolean']>;\n  blocked?: Maybe<Scalars['Boolean']>;\n  role?: Maybe<UsersPermissionsMeRole>;\n};\n\nexport type UsersPermissionsMeRole = {\n  __typename?: 'UsersPermissionsMeRole';\n  id: Scalars['ID'];\n  name: Scalars['String'];\n  description?: Maybe<Scalars['String']>;\n  type?: Maybe<Scalars['String']>;\n};\n\nexport type UsersPermissionsPermission = {\n  __typename?: 'UsersPermissionsPermission';\n  id: Scalars['ID'];\n  _id: Scalars['ID'];\n  type: Scalars['String'];\n  controller: Scalars['String'];\n  action: Scalars['String'];\n  enabled: Scalars['Boolean'];\n  policy?: Maybe<Scalars['String']>;\n  role?: Maybe<UsersPermissionsRole>;\n};\n\nexport type UsersPermissionsRegisterInput = {\n  username: Scalars['String'];\n  email: Scalars['String'];\n  password: Scalars['String'];\n};\n\nexport type UsersPermissionsRole = {\n  __typename?: 'UsersPermissionsRole';\n  id: Scalars['ID'];\n  _id: Scalars['ID'];\n  name: Scalars['String'];\n  description?: Maybe<Scalars['String']>;\n  type?: Maybe<Scalars['String']>;\n  permissions?: Maybe<Array<Maybe<UsersPermissionsPermission>>>;\n  users?: Maybe<Array<Maybe<UsersPermissionsUser>>>;\n};\n\n\nexport type UsersPermissionsRolePermissionsArgs = {\n  sort?: Maybe<Scalars['String']>;\n  limit?: Maybe<Scalars['Int']>;\n  start?: Maybe<Scalars['Int']>;\n  where?: Maybe<Scalars['JSON']>;\n};\n\n\nexport type UsersPermissionsRoleUsersArgs = {\n  sort?: Maybe<Scalars['String']>;\n  limit?: Maybe<Scalars['Int']>;\n  start?: Maybe<Scalars['Int']>;\n  where?: Maybe<Scalars['JSON']>;\n};\n\nexport type UsersPermissionsRoleAggregator = {\n  __typename?: 'UsersPermissionsRoleAggregator';\n  count?: Maybe<Scalars['Int']>;\n  totalCount?: Maybe<Scalars['Int']>;\n};\n\nexport type UsersPermissionsRoleConnection = {\n  __typename?: 'UsersPermissionsRoleConnection';\n  values?: Maybe<Array<Maybe<UsersPermissionsRole>>>;\n  groupBy?: Maybe<UsersPermissionsRoleGroupBy>;\n  aggregate?: Maybe<UsersPermissionsRoleAggregator>;\n};\n\nexport type UsersPermissionsRoleConnectionDescription = {\n  __typename?: 'UsersPermissionsRoleConnectionDescription';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<UsersPermissionsRoleConnection>;\n};\n\nexport type UsersPermissionsRoleConnectionId = {\n  __typename?: 'UsersPermissionsRoleConnectionId';\n  key?: Maybe<Scalars['ID']>;\n  connection?: Maybe<UsersPermissionsRoleConnection>;\n};\n\nexport type UsersPermissionsRoleConnectionName = {\n  __typename?: 'UsersPermissionsRoleConnectionName';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<UsersPermissionsRoleConnection>;\n};\n\nexport type UsersPermissionsRoleConnectionType = {\n  __typename?: 'UsersPermissionsRoleConnectionType';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<UsersPermissionsRoleConnection>;\n};\n\nexport type UsersPermissionsRoleConnection_Id = {\n  __typename?: 'UsersPermissionsRoleConnection_id';\n  key?: Maybe<Scalars['ID']>;\n  connection?: Maybe<UsersPermissionsRoleConnection>;\n};\n\nexport type UsersPermissionsRoleGroupBy = {\n  __typename?: 'UsersPermissionsRoleGroupBy';\n  id?: Maybe<Array<Maybe<UsersPermissionsRoleConnectionId>>>;\n  _id?: Maybe<Array<Maybe<UsersPermissionsRoleConnection_Id>>>;\n  name?: Maybe<Array<Maybe<UsersPermissionsRoleConnectionName>>>;\n  description?: Maybe<Array<Maybe<UsersPermissionsRoleConnectionDescription>>>;\n  type?: Maybe<Array<Maybe<UsersPermissionsRoleConnectionType>>>;\n};\n\nexport type UsersPermissionsUser = {\n  __typename?: 'UsersPermissionsUser';\n  id: Scalars['ID'];\n  _id: Scalars['ID'];\n  createdAt: Scalars['DateTime'];\n  updatedAt: Scalars['DateTime'];\n  username: Scalars['String'];\n  email: Scalars['String'];\n  provider?: Maybe<Scalars['String']>;\n  confirmed?: Maybe<Scalars['Boolean']>;\n  blocked?: Maybe<Scalars['Boolean']>;\n  role?: Maybe<UsersPermissionsRole>;\n};\n\nexport type UsersPermissionsUserAggregator = {\n  __typename?: 'UsersPermissionsUserAggregator';\n  count?: Maybe<Scalars['Int']>;\n  totalCount?: Maybe<Scalars['Int']>;\n};\n\nexport type UsersPermissionsUserConnection = {\n  __typename?: 'UsersPermissionsUserConnection';\n  values?: Maybe<Array<Maybe<UsersPermissionsUser>>>;\n  groupBy?: Maybe<UsersPermissionsUserGroupBy>;\n  aggregate?: Maybe<UsersPermissionsUserAggregator>;\n};\n\nexport type UsersPermissionsUserConnectionBlocked = {\n  __typename?: 'UsersPermissionsUserConnectionBlocked';\n  key?: Maybe<Scalars['Boolean']>;\n  connection?: Maybe<UsersPermissionsUserConnection>;\n};\n\nexport type UsersPermissionsUserConnectionConfirmed = {\n  __typename?: 'UsersPermissionsUserConnectionConfirmed';\n  key?: Maybe<Scalars['Boolean']>;\n  connection?: Maybe<UsersPermissionsUserConnection>;\n};\n\nexport type UsersPermissionsUserConnectionCreatedAt = {\n  __typename?: 'UsersPermissionsUserConnectionCreatedAt';\n  key?: Maybe<Scalars['DateTime']>;\n  connection?: Maybe<UsersPermissionsUserConnection>;\n};\n\nexport type UsersPermissionsUserConnectionEmail = {\n  __typename?: 'UsersPermissionsUserConnectionEmail';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<UsersPermissionsUserConnection>;\n};\n\nexport type UsersPermissionsUserConnectionId = {\n  __typename?: 'UsersPermissionsUserConnectionId';\n  key?: Maybe<Scalars['ID']>;\n  connection?: Maybe<UsersPermissionsUserConnection>;\n};\n\nexport type UsersPermissionsUserConnectionProvider = {\n  __typename?: 'UsersPermissionsUserConnectionProvider';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<UsersPermissionsUserConnection>;\n};\n\nexport type UsersPermissionsUserConnectionRole = {\n  __typename?: 'UsersPermissionsUserConnectionRole';\n  key?: Maybe<Scalars['ID']>;\n  connection?: Maybe<UsersPermissionsUserConnection>;\n};\n\nexport type UsersPermissionsUserConnectionUpdatedAt = {\n  __typename?: 'UsersPermissionsUserConnectionUpdatedAt';\n  key?: Maybe<Scalars['DateTime']>;\n  connection?: Maybe<UsersPermissionsUserConnection>;\n};\n\nexport type UsersPermissionsUserConnectionUsername = {\n  __typename?: 'UsersPermissionsUserConnectionUsername';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<UsersPermissionsUserConnection>;\n};\n\nexport type UsersPermissionsUserConnection_Id = {\n  __typename?: 'UsersPermissionsUserConnection_id';\n  key?: Maybe<Scalars['ID']>;\n  connection?: Maybe<UsersPermissionsUserConnection>;\n};\n\nexport type UsersPermissionsUserGroupBy = {\n  __typename?: 'UsersPermissionsUserGroupBy';\n  id?: Maybe<Array<Maybe<UsersPermissionsUserConnectionId>>>;\n  _id?: Maybe<Array<Maybe<UsersPermissionsUserConnection_Id>>>;\n  createdAt?: Maybe<Array<Maybe<UsersPermissionsUserConnectionCreatedAt>>>;\n  updatedAt?: Maybe<Array<Maybe<UsersPermissionsUserConnectionUpdatedAt>>>;\n  username?: Maybe<Array<Maybe<UsersPermissionsUserConnectionUsername>>>;\n  email?: Maybe<Array<Maybe<UsersPermissionsUserConnectionEmail>>>;\n  provider?: Maybe<Array<Maybe<UsersPermissionsUserConnectionProvider>>>;\n  confirmed?: Maybe<Array<Maybe<UsersPermissionsUserConnectionConfirmed>>>;\n  blocked?: Maybe<Array<Maybe<UsersPermissionsUserConnectionBlocked>>>;\n  role?: Maybe<Array<Maybe<UsersPermissionsUserConnectionRole>>>;\n};\n\nexport type CreateBookingInput = {\n  data?: Maybe<BookingInput>;\n};\n\nexport type CreateBookingPayload = {\n  __typename?: 'createBookingPayload';\n  booking?: Maybe<Booking>;\n};\n\nexport type CreateCityInput = {\n  data?: Maybe<CityInput>;\n};\n\nexport type CreateCityPayload = {\n  __typename?: 'createCityPayload';\n  city?: Maybe<City>;\n};\n\nexport type CreateFeatureInput = {\n  data?: Maybe<FeatureInput>;\n};\n\nexport type CreateFeaturePayload = {\n  __typename?: 'createFeaturePayload';\n  feature?: Maybe<Feature>;\n};\n\nexport type CreateHotelInput = {\n  data?: Maybe<HotelInput>;\n};\n\nexport type CreateHotelPayload = {\n  __typename?: 'createHotelPayload';\n  hotel?: Maybe<Hotels>;\n};\n\nexport type CreateLocationInput = {\n  data?: Maybe<LocationInput>;\n};\n\nexport type CreateLocationPayload = {\n  __typename?: 'createLocationPayload';\n  location?: Maybe<Location>;\n};\n\nexport type CreatePartnerInput = {\n  data?: Maybe<PartnerInput>;\n};\n\nexport type CreatePartnerPayload = {\n  __typename?: 'createPartnerPayload';\n  partner?: Maybe<Partner>;\n};\n\nexport type CreateReviewInput = {\n  data?: Maybe<ReviewInput>;\n};\n\nexport type CreateReviewPayload = {\n  __typename?: 'createReviewPayload';\n  review?: Maybe<Review>;\n};\n\nexport type CreateRoleInput = {\n  data?: Maybe<RoleInput>;\n};\n\nexport type CreateRolePayload = {\n  __typename?: 'createRolePayload';\n  role?: Maybe<UsersPermissionsRole>;\n};\n\nexport type CreateSubscriberInput = {\n  data?: Maybe<SubscriberInput>;\n};\n\nexport type CreateSubscriberPayload = {\n  __typename?: 'createSubscriberPayload';\n  subscriber?: Maybe<Subscribers>;\n};\n\nexport type CreateTripInput = {\n  data?: Maybe<TripInput>;\n};\n\nexport type CreateTripPayload = {\n  __typename?: 'createTripPayload';\n  trip?: Maybe<Trips>;\n};\n\nexport type CreateUserInput = {\n  data?: Maybe<UserInput>;\n};\n\nexport type CreateUserPayload = {\n  __typename?: 'createUserPayload';\n  user?: Maybe<UsersPermissionsUser>;\n};\n\nexport type DeleteBookingInput = {\n  where?: Maybe<InputId>;\n};\n\nexport type DeleteBookingPayload = {\n  __typename?: 'deleteBookingPayload';\n  booking?: Maybe<Booking>;\n};\n\nexport type DeleteCityInput = {\n  where?: Maybe<InputId>;\n};\n\nexport type DeleteCityPayload = {\n  __typename?: 'deleteCityPayload';\n  city?: Maybe<City>;\n};\n\nexport type DeleteFeatureInput = {\n  where?: Maybe<InputId>;\n};\n\nexport type DeleteFeaturePayload = {\n  __typename?: 'deleteFeaturePayload';\n  feature?: Maybe<Feature>;\n};\n\nexport type DeleteFileInput = {\n  where?: Maybe<InputId>;\n};\n\nexport type DeleteFilePayload = {\n  __typename?: 'deleteFilePayload';\n  file?: Maybe<UploadFile>;\n};\n\nexport type DeleteHomeBannerPayload = {\n  __typename?: 'deleteHomeBannerPayload';\n  homeBanner?: Maybe<HomeBanner>;\n};\n\nexport type DeleteHotelInput = {\n  where?: Maybe<InputId>;\n};\n\nexport type DeleteHotelPayload = {\n  __typename?: 'deleteHotelPayload';\n  hotel?: Maybe<Hotels>;\n};\n\nexport type DeleteLocationInput = {\n  where?: Maybe<InputId>;\n};\n\nexport type DeleteLocationPayload = {\n  __typename?: 'deleteLocationPayload';\n  location?: Maybe<Location>;\n};\n\nexport type DeletePartnerInput = {\n  where?: Maybe<InputId>;\n};\n\nexport type DeletePartnerPayload = {\n  __typename?: 'deletePartnerPayload';\n  partner?: Maybe<Partner>;\n};\n\nexport type DeleteReviewInput = {\n  where?: Maybe<InputId>;\n};\n\nexport type DeleteReviewPayload = {\n  __typename?: 'deleteReviewPayload';\n  review?: Maybe<Review>;\n};\n\nexport type DeleteRoleInput = {\n  where?: Maybe<InputId>;\n};\n\nexport type DeleteRolePayload = {\n  __typename?: 'deleteRolePayload';\n  role?: Maybe<UsersPermissionsRole>;\n};\n\nexport type DeleteSubscriberInput = {\n  where?: Maybe<InputId>;\n};\n\nexport type DeleteSubscriberPayload = {\n  __typename?: 'deleteSubscriberPayload';\n  subscriber?: Maybe<Subscribers>;\n};\n\nexport type DeleteTripInput = {\n  where?: Maybe<InputId>;\n};\n\nexport type DeleteTripPayload = {\n  __typename?: 'deleteTripPayload';\n  trip?: Maybe<Trips>;\n};\n\nexport type DeleteUserInput = {\n  where?: Maybe<InputId>;\n};\n\nexport type DeleteUserPayload = {\n  __typename?: 'deleteUserPayload';\n  user?: Maybe<UsersPermissionsUser>;\n};\n\nexport type EditBookingInput = {\n  trip?: Maybe<Scalars['ID']>;\n  approved?: Maybe<Scalars['Boolean']>;\n  basePrice?: Maybe<Scalars['Float']>;\n  currency?: Maybe<Enum_Booking_Currency>;\n  basePeopleCount?: Maybe<Scalars['Int']>;\n  discount?: Maybe<Scalars['Float']>;\n  fullName?: Maybe<Scalars['String']>;\n  phone?: Maybe<Scalars['String']>;\n  message?: Maybe<Scalars['String']>;\n  arrivalDate?: Maybe<Scalars['Date']>;\n  language?: Maybe<Scalars['String']>;\n  userBookingStatus?: Maybe<Enum_Booking_Userbookingstatus>;\n  email?: Maybe<Scalars['String']>;\n  adults?: Maybe<Scalars['Int']>;\n  children?: Maybe<Scalars['Int']>;\n  totalPrice?: Maybe<Scalars['Float']>;\n  published_at?: Maybe<Scalars['DateTime']>;\n  created_by?: Maybe<Scalars['ID']>;\n  updated_by?: Maybe<Scalars['ID']>;\n};\n\nexport type EditCityInput = {\n  name?: Maybe<Scalars['String']>;\n  description?: Maybe<Scalars['String']>;\n  image?: Maybe<Scalars['ID']>;\n  locations?: Maybe<Array<Maybe<Scalars['ID']>>>;\n  localizations?: Maybe<Array<Maybe<Scalars['ID']>>>;\n  locale?: Maybe<Scalars['String']>;\n  published_at?: Maybe<Scalars['DateTime']>;\n  created_by?: Maybe<Scalars['ID']>;\n  updated_by?: Maybe<Scalars['ID']>;\n};\n\nexport type EditComponentCoordinateCoordinateInput = {\n  id?: Maybe<Scalars['ID']>;\n  latitude?: Maybe<Scalars['Float']>;\n  longitude?: Maybe<Scalars['Float']>;\n};\n\nexport type EditComponentFeatureFeatureInput = {\n  id?: Maybe<Scalars['ID']>;\n  feature?: Maybe<Scalars['ID']>;\n  included?: Maybe<Scalars['Boolean']>;\n};\n\nexport type EditComponentPricePriceInput = {\n  id?: Maybe<Scalars['ID']>;\n  basePrice?: Maybe<Scalars['Float']>;\n  currency?: Maybe<Enum_Componentpriceprice_Currency>;\n  basePeopleCount?: Maybe<Scalars['Int']>;\n  extraAdultFee?: Maybe<Scalars['Float']>;\n  discount?: Maybe<Scalars['Float']>;\n};\n\nexport type EditComponentTimelineTimelineInput = {\n  id?: Maybe<Scalars['ID']>;\n  day?: Maybe<Scalars['Int']>;\n  description?: Maybe<Scalars['String']>;\n  locations?: Maybe<Array<Maybe<Scalars['ID']>>>;\n  travelTo?: Maybe<Scalars['ID']>;\n  transportationType?: Maybe<Enum_Componenttimelinetimeline_Transportationtype>;\n  restDay?: Maybe<Scalars['Boolean']>;\n};\n\nexport type EditFeatureInput = {\n  name?: Maybe<Scalars['String']>;\n  info?: Maybe<Scalars['String']>;\n  localizations?: Maybe<Array<Maybe<Scalars['ID']>>>;\n  locale?: Maybe<Scalars['String']>;\n  published_at?: Maybe<Scalars['DateTime']>;\n  created_by?: Maybe<Scalars['ID']>;\n  updated_by?: Maybe<Scalars['ID']>;\n};\n\nexport type EditFileInput = {\n  name?: Maybe<Scalars['String']>;\n  alternativeText?: Maybe<Scalars['String']>;\n  caption?: Maybe<Scalars['String']>;\n  width?: Maybe<Scalars['Int']>;\n  height?: Maybe<Scalars['Int']>;\n  formats?: Maybe<Scalars['JSON']>;\n  hash?: Maybe<Scalars['String']>;\n  ext?: Maybe<Scalars['String']>;\n  mime?: Maybe<Scalars['String']>;\n  size?: Maybe<Scalars['Float']>;\n  url?: Maybe<Scalars['String']>;\n  previewUrl?: Maybe<Scalars['String']>;\n  provider?: Maybe<Scalars['String']>;\n  provider_metadata?: Maybe<Scalars['JSON']>;\n  related?: Maybe<Array<Maybe<Scalars['ID']>>>;\n  created_by?: Maybe<Scalars['ID']>;\n  updated_by?: Maybe<Scalars['ID']>;\n};\n\nexport type EditHomeBannerInput = {\n  images?: Maybe<Array<Maybe<Scalars['ID']>>>;\n  published_at?: Maybe<Scalars['DateTime']>;\n  created_by?: Maybe<Scalars['ID']>;\n  updated_by?: Maybe<Scalars['ID']>;\n};\n\nexport type EditHotelInput = {\n  name?: Maybe<Scalars['String']>;\n  stars?: Maybe<Scalars['Int']>;\n  url?: Maybe<Scalars['String']>;\n  trips?: Maybe<Array<Maybe<Scalars['ID']>>>;\n  published_at?: Maybe<Scalars['DateTime']>;\n  created_by?: Maybe<Scalars['ID']>;\n  updated_by?: Maybe<Scalars['ID']>;\n};\n\nexport type EditLocaleInput = {\n  name?: Maybe<Scalars['String']>;\n  code?: Maybe<Scalars['String']>;\n  created_by?: Maybe<Scalars['ID']>;\n  updated_by?: Maybe<Scalars['ID']>;\n};\n\nexport type EditLocationInput = {\n  name?: Maybe<Scalars['String']>;\n  description?: Maybe<Scalars['String']>;\n  images?: Maybe<Array<Maybe<Scalars['ID']>>>;\n  city?: Maybe<Scalars['ID']>;\n  coordinate?: Maybe<EditComponentCoordinateCoordinateInput>;\n  localizations?: Maybe<Array<Maybe<Scalars['ID']>>>;\n  locale?: Maybe<Scalars['String']>;\n  published_at?: Maybe<Scalars['DateTime']>;\n  created_by?: Maybe<Scalars['ID']>;\n  updated_by?: Maybe<Scalars['ID']>;\n};\n\nexport type EditPartnerInput = {\n  name?: Maybe<Scalars['String']>;\n  phone?: Maybe<Scalars['String']>;\n  address?: Maybe<Scalars['String']>;\n  email?: Maybe<Scalars['String']>;\n  trips?: Maybe<Array<Maybe<Scalars['ID']>>>;\n  agreement?: Maybe<Scalars['String']>;\n  commission?: Maybe<Scalars['Float']>;\n  revenueSource?: Maybe<Enum_Partner_Revenuesource>;\n  agreementStatus?: Maybe<Enum_Partner_Agreementstatus>;\n  notes?: Maybe<Scalars['String']>;\n  phone2?: Maybe<Scalars['String']>;\n  published_at?: Maybe<Scalars['DateTime']>;\n  created_by?: Maybe<Scalars['ID']>;\n  updated_by?: Maybe<Scalars['ID']>;\n};\n\nexport type EditReviewInput = {\n  text?: Maybe<Scalars['String']>;\n  rating?: Maybe<Scalars['Float']>;\n  author?: Maybe<Scalars['ID']>;\n  active?: Maybe<Scalars['Boolean']>;\n  trip?: Maybe<Scalars['ID']>;\n  published_at?: Maybe<Scalars['DateTime']>;\n  created_by?: Maybe<Scalars['ID']>;\n  updated_by?: Maybe<Scalars['ID']>;\n};\n\nexport type EditRoleInput = {\n  name?: Maybe<Scalars['String']>;\n  description?: Maybe<Scalars['String']>;\n  type?: Maybe<Scalars['String']>;\n  permissions?: Maybe<Array<Maybe<Scalars['ID']>>>;\n  users?: Maybe<Array<Maybe<Scalars['ID']>>>;\n  created_by?: Maybe<Scalars['ID']>;\n  updated_by?: Maybe<Scalars['ID']>;\n};\n\nexport type EditSubscriberInput = {\n  email?: Maybe<Scalars['String']>;\n  published_at?: Maybe<Scalars['DateTime']>;\n  created_by?: Maybe<Scalars['ID']>;\n  updated_by?: Maybe<Scalars['ID']>;\n};\n\nexport type EditTripInput = {\n  name?: Maybe<Scalars['String']>;\n  previewImage?: Maybe<Scalars['ID']>;\n  active?: Maybe<Scalars['Boolean']>;\n  trip_type?: Maybe<Enum_Trips_Trip_Type>;\n  description?: Maybe<Scalars['String']>;\n  duration?: Maybe<Scalars['Int']>;\n  partner?: Maybe<Scalars['ID']>;\n  currency?: Maybe<Enum_Trips_Currency>;\n  city?: Maybe<Scalars['ID']>;\n  features?: Maybe<Array<Maybe<EditComponentFeatureFeatureInput>>>;\n  basePrice?: Maybe<Scalars['Int']>;\n  basePeopleCount?: Maybe<Scalars['Int']>;\n  discount?: Maybe<Scalars['Float']>;\n  travelType?: Maybe<Enum_Trips_Traveltype>;\n  hotel?: Maybe<Scalars['ID']>;\n  plan?: Maybe<Array<Maybe<EditComponentTimelineTimelineInput>>>;\n  sequence?: Maybe<Scalars['String']>;\n  localizations?: Maybe<Array<Maybe<Scalars['ID']>>>;\n  locale?: Maybe<Scalars['String']>;\n  published_at?: Maybe<Scalars['DateTime']>;\n  created_by?: Maybe<Scalars['ID']>;\n  updated_by?: Maybe<Scalars['ID']>;\n};\n\nexport type EditUserInput = {\n  username?: Maybe<Scalars['String']>;\n  email?: Maybe<Scalars['String']>;\n  provider?: Maybe<Scalars['String']>;\n  password?: Maybe<Scalars['String']>;\n  resetPasswordToken?: Maybe<Scalars['String']>;\n  confirmationToken?: Maybe<Scalars['String']>;\n  confirmed?: Maybe<Scalars['Boolean']>;\n  blocked?: Maybe<Scalars['Boolean']>;\n  role?: Maybe<Scalars['ID']>;\n  created_by?: Maybe<Scalars['ID']>;\n  updated_by?: Maybe<Scalars['ID']>;\n};\n\nexport type UpdateBookingInput = {\n  where?: Maybe<InputId>;\n  data?: Maybe<EditBookingInput>;\n};\n\nexport type UpdateBookingPayload = {\n  __typename?: 'updateBookingPayload';\n  booking?: Maybe<Booking>;\n};\n\nexport type UpdateCityInput = {\n  where?: Maybe<InputId>;\n  data?: Maybe<EditCityInput>;\n};\n\nexport type UpdateCityPayload = {\n  __typename?: 'updateCityPayload';\n  city?: Maybe<City>;\n};\n\nexport type UpdateFeatureInput = {\n  where?: Maybe<InputId>;\n  data?: Maybe<EditFeatureInput>;\n};\n\nexport type UpdateFeaturePayload = {\n  __typename?: 'updateFeaturePayload';\n  feature?: Maybe<Feature>;\n};\n\nexport type UpdateHomeBannerInput = {\n  data?: Maybe<EditHomeBannerInput>;\n};\n\nexport type UpdateHomeBannerPayload = {\n  __typename?: 'updateHomeBannerPayload';\n  homeBanner?: Maybe<HomeBanner>;\n};\n\nexport type UpdateHotelInput = {\n  where?: Maybe<InputId>;\n  data?: Maybe<EditHotelInput>;\n};\n\nexport type UpdateHotelPayload = {\n  __typename?: 'updateHotelPayload';\n  hotel?: Maybe<Hotels>;\n};\n\nexport type UpdateLocationInput = {\n  where?: Maybe<InputId>;\n  data?: Maybe<EditLocationInput>;\n};\n\nexport type UpdateLocationPayload = {\n  __typename?: 'updateLocationPayload';\n  location?: Maybe<Location>;\n};\n\nexport type UpdatePartnerInput = {\n  where?: Maybe<InputId>;\n  data?: Maybe<EditPartnerInput>;\n};\n\nexport type UpdatePartnerPayload = {\n  __typename?: 'updatePartnerPayload';\n  partner?: Maybe<Partner>;\n};\n\nexport type UpdateReviewInput = {\n  where?: Maybe<InputId>;\n  data?: Maybe<EditReviewInput>;\n};\n\nexport type UpdateReviewPayload = {\n  __typename?: 'updateReviewPayload';\n  review?: Maybe<Review>;\n};\n\nexport type UpdateRoleInput = {\n  where?: Maybe<InputId>;\n  data?: Maybe<EditRoleInput>;\n};\n\nexport type UpdateRolePayload = {\n  __typename?: 'updateRolePayload';\n  role?: Maybe<UsersPermissionsRole>;\n};\n\nexport type UpdateSubscriberInput = {\n  where?: Maybe<InputId>;\n  data?: Maybe<EditSubscriberInput>;\n};\n\nexport type UpdateSubscriberPayload = {\n  __typename?: 'updateSubscriberPayload';\n  subscriber?: Maybe<Subscribers>;\n};\n\nexport type UpdateTripInput = {\n  where?: Maybe<InputId>;\n  data?: Maybe<EditTripInput>;\n};\n\nexport type UpdateTripPayload = {\n  __typename?: 'updateTripPayload';\n  trip?: Maybe<Trips>;\n};\n\nexport type UpdateUserInput = {\n  where?: Maybe<InputId>;\n  data?: Maybe<EditUserInput>;\n};\n\nexport type UpdateUserPayload = {\n  __typename?: 'updateUserPayload';\n  user?: Maybe<UsersPermissionsUser>;\n};\n\nexport type CreateBookingQueryMutationVariables = Exact<{\n  tripId: Scalars['ID'];\n  fullName: Scalars['String'];\n  basePrice: Scalars['Float'];\n  discount?: Maybe<Scalars['Float']>;\n  basePeopleCount: Scalars['Int'];\n  phone: Scalars['String'];\n  arrivalDate: Scalars['Date'];\n  message?: Maybe<Scalars['String']>;\n  currency: Enum_Booking_Currency;\n  email: Scalars['String'];\n  language: Scalars['String'];\n  adults: Scalars['Int'];\n  children: Scalars['Int'];\n}>;\n\n\nexport type CreateBookingQueryMutation = (\n  { __typename?: 'Mutation' }\n  & { createBooking?: Maybe<(\n    { __typename?: 'createBookingPayload' }\n    & { booking?: Maybe<(\n      { __typename?: 'Booking' }\n      & Pick<Booking, 'message'>\n    )> }\n  )> }\n);\n\nexport type CitiesQueryVariables = Exact<{\n  limit?: Maybe<Scalars['Int']>;\n  locale?: Maybe<Scalars['String']>;\n}>;\n\n\nexport type CitiesQuery = (\n  { __typename?: 'Query' }\n  & { cities?: Maybe<Array<Maybe<(\n    { __typename?: 'City' }\n    & CityInfoFragment\n  )>>> }\n);\n\nexport type GetCityQueryVariables = Exact<{\n  id: Scalars['ID'];\n}>;\n\n\nexport type GetCityQuery = (\n  { __typename?: 'Query' }\n  & { city?: Maybe<(\n    { __typename?: 'City' }\n    & CityInfoFragment\n  )> }\n);\n\nexport type GetLocalizedCityQueryVariables = Exact<{\n  id: Scalars['ID'];\n  locale: Scalars['String'];\n}>;\n\n\nexport type GetLocalizedCityQuery = (\n  { __typename?: 'Query' }\n  & { cities?: Maybe<Array<Maybe<(\n    { __typename?: 'City' }\n    & CityInfoFragment\n  )>>> }\n);\n\nexport type CityInfoFragment = (\n  { __typename?: 'City' }\n  & Pick<City, 'id' | 'name' | 'description' | 'locale'>\n  & { localizations?: Maybe<Array<Maybe<(\n    { __typename?: 'City' }\n    & Pick<City, 'id' | 'locale'>\n  )>>>, image?: Maybe<(\n    { __typename?: 'UploadFile' }\n    & Pick<UploadFile, 'id' | 'width' | 'height' | 'url' | 'formats'>\n  )> }\n);\n\nexport type FeaturesQueryVariables = Exact<{\n  locale: Scalars['String'];\n}>;\n\n\nexport type FeaturesQuery = (\n  { __typename?: 'Query' }\n  & { features?: Maybe<Array<Maybe<(\n    { __typename?: 'Feature' }\n    & Pick<Feature, 'name'>\n  )>>> }\n);\n\nexport type HomeCarousellQueryVariables = Exact<{ [key: string]: never; }>;\n\n\nexport type HomeCarousellQuery = (\n  { __typename?: 'Query' }\n  & { homeBanner?: Maybe<(\n    { __typename?: 'HomeBanner' }\n    & { images?: Maybe<Array<Maybe<(\n      { __typename?: 'UploadFile' }\n      & Pick<UploadFile, 'id' | 'width' | 'height' | 'url' | 'formats'>\n    )>>> }\n  )> }\n);\n\nexport type GetLocationsQueryVariables = Exact<{\n  locale: Scalars['String'];\n  ids: Array<Scalars['String']> | Scalars['String'];\n}>;\n\n\nexport type GetLocationsQuery = (\n  { __typename?: 'Query' }\n  & { locations?: Maybe<Array<Maybe<(\n    { __typename?: 'Location' }\n    & Pick<Location, 'id' | 'name' | 'description' | 'locale'>\n    & { coordinate?: Maybe<(\n      { __typename?: 'ComponentCoordinateCoordinate' }\n      & Pick<ComponentCoordinateCoordinate, 'latitude' | 'longitude'>\n    )>, images?: Maybe<Array<Maybe<(\n      { __typename?: 'UploadFile' }\n      & Pick<UploadFile, 'id' | 'width' | 'height' | 'url' | 'formats'>\n    )>>>, city?: Maybe<(\n      { __typename?: 'City' }\n      & Pick<City, 'id' | 'name' | 'description' | 'locale'>\n      & { localizations?: Maybe<Array<Maybe<(\n        { __typename?: 'City' }\n        & Pick<City, 'id' | 'locale'>\n      )>>>, image?: Maybe<(\n        { __typename?: 'UploadFile' }\n        & Pick<UploadFile, 'id' | 'width' | 'height' | 'url' | 'formats'>\n      )> }\n    )> }\n  )>>> }\n);\n\nexport type AddToNewsLetterMutationVariables = Exact<{\n  email: Scalars['String'];\n}>;\n\n\nexport type AddToNewsLetterMutation = (\n  { __typename?: 'Mutation' }\n  & { createSubscriber?: Maybe<(\n    { __typename?: 'createSubscriberPayload' }\n    & { subscriber?: Maybe<(\n      { __typename?: 'Subscribers' }\n      & Pick<Subscribers, 'email'>\n    )> }\n  )> }\n);\n\nexport type TripsQueryVariables = Exact<{\n  limit?: Maybe<Scalars['Int']>;\n  locale?: Maybe<Scalars['String']>;\n  where?: Maybe<Scalars['JSON']>;\n}>;\n\n\nexport type TripsQuery = (\n  { __typename?: 'Query' }\n  & { trips?: Maybe<Array<Maybe<(\n    { __typename?: 'Trips' }\n    & TripInfoFragment\n  )>>> }\n);\n\nexport type GetTripQueryVariables = Exact<{\n  id: Scalars['ID'];\n}>;\n\n\nexport type GetTripQuery = (\n  { __typename?: 'Query' }\n  & { trip?: Maybe<(\n    { __typename?: 'Trips' }\n    & TripInfoFragment\n  )> }\n);\n\nexport type GetLocalizedTripQueryVariables = Exact<{\n  id: Scalars['ID'];\n  locale: Scalars['String'];\n}>;\n\n\nexport type GetLocalizedTripQuery = (\n  { __typename?: 'Query' }\n  & { trips?: Maybe<Array<Maybe<(\n    { __typename?: 'Trips' }\n    & TripInfoFragment\n  )>>> }\n);\n\nexport type TripInfoFragment = (\n  { __typename?: 'Trips' }\n  & Pick<Trips, 'id' | 'name' | 'active' | 'description' | 'locale' | 'trip_type' | 'duration' | 'travelType' | 'basePrice' | 'discount' | 'currency' | 'basePeopleCount'>\n  & { city?: Maybe<(\n    { __typename?: 'City' }\n    & Pick<City, 'id' | 'name'>\n  )>, hotel?: Maybe<(\n    { __typename?: 'Hotels' }\n    & Pick<Hotels, 'id' | 'name' | 'url' | 'stars'>\n  )>, plan?: Maybe<Array<Maybe<(\n    { __typename?: 'ComponentTimelineTimeline' }\n    & Pick<ComponentTimelineTimeline, 'day' | 'transportationType' | 'description' | 'restDay'>\n    & { locations?: Maybe<Array<Maybe<(\n      { __typename?: 'Location' }\n      & Pick<Location, 'id' | 'name'>\n      & { city?: Maybe<(\n        { __typename?: 'City' }\n        & Pick<City, 'id'>\n      )> }\n    )>>>, travelTo?: Maybe<(\n      { __typename?: 'City' }\n      & Pick<City, 'id' | 'name'>\n    )> }\n  )>>>, previewImage?: Maybe<(\n    { __typename?: 'UploadFile' }\n    & Pick<UploadFile, 'id' | 'width' | 'height' | 'url' | 'formats'>\n  )>, localizations?: Maybe<Array<Maybe<(\n    { __typename?: 'Trips' }\n    & Pick<Trips, 'id' | 'locale'>\n  )>>>, features?: Maybe<Array<Maybe<(\n    { __typename?: 'ComponentFeatureFeature' }\n    & Pick<ComponentFeatureFeature, 'included'>\n    & { feature?: Maybe<(\n      { __typename?: 'Feature' }\n      & Pick<Feature, 'name' | 'info'>\n    )> }\n  )>>> }\n);\n\nexport const CityInfoFragmentDoc = gql`\n    fragment CityInfo on City {\n  id\n  name\n  description\n  locale\n  localizations {\n    id\n    locale\n  }\n  image {\n    id\n    width\n    height\n    url\n    formats\n  }\n}\n    `;\nexport const TripInfoFragmentDoc = gql`\n    fragment tripInfo on Trips {\n  id\n  name\n  active\n  description\n  locale\n  trip_type\n  duration\n  travelType\n  city {\n    id\n    name\n  }\n  hotel {\n    id\n    name\n    url\n    stars\n  }\n  plan {\n    day\n    locations {\n      id\n      name\n      city {\n        id\n      }\n    }\n    transportationType\n    travelTo {\n      id\n      name\n    }\n    description\n    restDay\n  }\n  previewImage {\n    id\n    width\n    height\n    url\n    formats\n  }\n  localizations {\n    id\n    locale\n  }\n  basePrice\n  discount\n  currency\n  basePeopleCount\n  features {\n    included\n    feature {\n      name\n      info\n    }\n  }\n}\n    `;\nexport const CreateBookingQueryDocument = gql`\n    mutation createBookingQuery($tripId: ID!, $fullName: String!, $basePrice: Float!, $discount: Float = 0, $basePeopleCount: Int!, $phone: String!, $arrivalDate: Date!, $message: String, $currency: ENUM_BOOKING_CURRENCY!, $email: String!, $language: String!, $adults: Int!, $children: Int!) {\n  createBooking(\n    input: {data: {trip: $tripId, basePrice: $basePrice, discount: $discount, message: $message, fullName: $fullName, basePeopleCount: $basePeopleCount, phone: $phone, arrivalDate: $arrivalDate, currency: $currency, email: $email, language: $language, adults: $adults, children: $children}}\n  ) {\n    booking {\n      message\n    }\n  }\n}\n    `;\n\n  @Injectable({\n    providedIn: 'root'\n  })\n  export class CreateBookingQueryGQL extends Apollo.Mutation<CreateBookingQueryMutation, CreateBookingQueryMutationVariables> {\n    document = CreateBookingQueryDocument;\n    \n    constructor(apollo: Apollo.Apollo) {\n      super(apollo);\n    }\n  }\nexport const CitiesDocument = gql`\n    query cities($limit: Int, $locale: String) {\n  cities(limit: $limit, locale: $locale) {\n    ...CityInfo\n  }\n}\n    ${CityInfoFragmentDoc}`;\n\n  @Injectable({\n    providedIn: 'root'\n  })\n  export class CitiesGQL extends Apollo.Query<CitiesQuery, CitiesQueryVariables> {\n    document = CitiesDocument;\n    \n    constructor(apollo: Apollo.Apollo) {\n      super(apollo);\n    }\n  }\nexport const GetCityDocument = gql`\n    query getCity($id: ID!) {\n  city(id: $id) {\n    ...CityInfo\n  }\n}\n    ${CityInfoFragmentDoc}`;\n\n  @Injectable({\n    providedIn: 'root'\n  })\n  export class GetCityGQL extends Apollo.Query<GetCityQuery, GetCityQueryVariables> {\n    document = GetCityDocument;\n    \n    constructor(apollo: Apollo.Apollo) {\n      super(apollo);\n    }\n  }\nexport const GetLocalizedCityDocument = gql`\n    query getLocalizedCity($id: ID!, $locale: String!) {\n  cities(locale: $locale, where: {_or: [{localizations: {id: $id}}, {id: $id}]}) {\n    ...CityInfo\n  }\n}\n    ${CityInfoFragmentDoc}`;\n\n  @Injectable({\n    providedIn: 'root'\n  })\n  export class GetLocalizedCityGQL extends Apollo.Query<GetLocalizedCityQuery, GetLocalizedCityQueryVariables> {\n    document = GetLocalizedCityDocument;\n    \n    constructor(apollo: Apollo.Apollo) {\n      super(apollo);\n    }\n  }\nexport const FeaturesDocument = gql`\n    query features($locale: String!) {\n  features(locale: $locale) {\n    name\n  }\n}\n    `;\n\n  @Injectable({\n    providedIn: 'root'\n  })\n  export class FeaturesGQL extends Apollo.Query<FeaturesQuery, FeaturesQueryVariables> {\n    document = FeaturesDocument;\n    \n    constructor(apollo: Apollo.Apollo) {\n      super(apollo);\n    }\n  }\nexport const HomeCarousellDocument = gql`\n    query homeCarousell {\n  homeBanner {\n    images {\n      id\n      width\n      height\n      url\n      formats\n    }\n  }\n}\n    `;\n\n  @Injectable({\n    providedIn: 'root'\n  })\n  export class HomeCarousellGQL extends Apollo.Query<HomeCarousellQuery, HomeCarousellQueryVariables> {\n    document = HomeCarousellDocument;\n    \n    constructor(apollo: Apollo.Apollo) {\n      super(apollo);\n    }\n  }\nexport const GetLocationsDocument = gql`\n    query getLocations($locale: String!, $ids: [String!]!) {\n  locations(locale: $locale, where: {id_in: $ids}) {\n    id\n    name\n    description\n    coordinate {\n      latitude\n      longitude\n    }\n    locale\n    images {\n      id\n      width\n      height\n      url\n      formats\n    }\n    city {\n      id\n      name\n      description\n      locale\n      localizations {\n        id\n        locale\n      }\n      image {\n        id\n        width\n        height\n        url\n        formats\n      }\n    }\n  }\n}\n    `;\n\n  @Injectable({\n    providedIn: 'root'\n  })\n  export class GetLocationsGQL extends Apollo.Query<GetLocationsQuery, GetLocationsQueryVariables> {\n    document = GetLocationsDocument;\n    \n    constructor(apollo: Apollo.Apollo) {\n      super(apollo);\n    }\n  }\nexport const AddToNewsLetterDocument = gql`\n    mutation addToNewsLetter($email: String!) {\n  createSubscriber(input: {data: {email: $email}}) {\n    subscriber {\n      email\n    }\n  }\n}\n    `;\n\n  @Injectable({\n    providedIn: 'root'\n  })\n  export class AddToNewsLetterGQL extends Apollo.Mutation<AddToNewsLetterMutation, AddToNewsLetterMutationVariables> {\n    document = AddToNewsLetterDocument;\n    \n    constructor(apollo: Apollo.Apollo) {\n      super(apollo);\n    }\n  }\nexport const TripsDocument = gql`\n    query trips($limit: Int = 10, $locale: String = \"en\", $where: JSON) {\n  trips(limit: $limit, locale: $locale, where: $where) {\n    ...tripInfo\n  }\n}\n    ${TripInfoFragmentDoc}`;\n\n  @Injectable({\n    providedIn: 'root'\n  })\n  export class TripsGQL extends Apollo.Query<TripsQuery, TripsQueryVariables> {\n    document = TripsDocument;\n    \n    constructor(apollo: Apollo.Apollo) {\n      super(apollo);\n    }\n  }\nexport const GetTripDocument = gql`\n    query getTrip($id: ID!) {\n  trip(id: $id) {\n    ...tripInfo\n  }\n}\n    ${TripInfoFragmentDoc}`;\n\n  @Injectable({\n    providedIn: 'root'\n  })\n  export class GetTripGQL extends Apollo.Query<GetTripQuery, GetTripQueryVariables> {\n    document = GetTripDocument;\n    \n    constructor(apollo: Apollo.Apollo) {\n      super(apollo);\n    }\n  }\nexport const GetLocalizedTripDocument = gql`\n    query getLocalizedTrip($id: ID!, $locale: String!) {\n  trips(locale: $locale, where: {_or: [{localizations: {id: $id}}, {id: $id}]}) {\n    ...tripInfo\n  }\n}\n    ${TripInfoFragmentDoc}`;\n\n  @Injectable({\n    providedIn: 'root'\n  })\n  export class GetLocalizedTripGQL extends Apollo.Query<GetLocalizedTripQuery, GetLocalizedTripQueryVariables> {\n    document = GetLocalizedTripDocument;\n    \n    constructor(apollo: Apollo.Apollo) {\n      super(apollo);\n    }\n  }",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "apollo",
                        "type": "Apollo.Apollo"
                    }
                ],
                "line": 3838,
                "jsdoctags": [
                    {
                        "name": "apollo",
                        "type": "Apollo.Apollo",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "type": "injectable"
        },
        {
            "name": "GetLocationsGQL",
            "id": "injectable-GetLocationsGQL-54bb7cbcdd682e4d53ca5e8a5c5399f6",
            "file": "src/app/data/services/saferniGraphql.service.ts",
            "properties": [
                {
                    "name": "document",
                    "defaultValue": "GetLocationsDocument",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 3764
                }
            ],
            "methods": [],
            "description": "",
            "sourceCode": "import { gql } from 'apollo-angular';\nimport { Injectable } from '@angular/core';\nimport * as Apollo from 'apollo-angular';\nexport type Maybe<T> = T | null;\nexport type Exact<T extends { [key: string]: unknown }> = { [K in keyof T]: T[K] };\nexport type MakeOptional<T, K extends keyof T> = Omit<T, K> & { [SubKey in K]?: Maybe<T[SubKey]> };\nexport type MakeMaybe<T, K extends keyof T> = Omit<T, K> & { [SubKey in K]: Maybe<T[SubKey]> };\n/** All built-in and custom scalars, mapped to their actual values */\nexport type Scalars = {\n  ID: string;\n  String: string;\n  Boolean: boolean;\n  Int: number;\n  Float: number;\n  /** A date string, such as 2007-12-03, compliant with the `full-date` format outlined in section 5.6 of the RFC 3339 profile of the ISO 8601 standard for representation of dates and times using the Gregorian calendar. */\n  Date: any;\n  /** A date-time string at UTC, such as 2007-12-03T10:15:30Z, compliant with the `date-time` format outlined in section 5.6 of the RFC 3339 profile of the ISO 8601 standard for representation of dates and times using the Gregorian calendar. */\n  DateTime: any;\n  /** The `JSON` scalar type represents JSON values as specified by [ECMA-404](http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf). */\n  JSON: any;\n  /** The `Long` scalar type represents 52-bit integers */\n  Long: any;\n  /** A time string with format: HH:mm:ss.SSS */\n  Time: any;\n  /** The `Upload` scalar type represents a file upload. */\n  Upload: any;\n};\n\n\n\nexport type AdminUser = {\n  __typename?: 'AdminUser';\n  id: Scalars['ID'];\n  username?: Maybe<Scalars['String']>;\n  firstname: Scalars['String'];\n  lastname: Scalars['String'];\n};\n\nexport type Booking = {\n  __typename?: 'Booking';\n  id: Scalars['ID'];\n  _id: Scalars['ID'];\n  createdAt: Scalars['DateTime'];\n  updatedAt: Scalars['DateTime'];\n  trip?: Maybe<Trips>;\n  approved?: Maybe<Scalars['Boolean']>;\n  basePrice: Scalars['Float'];\n  currency: Enum_Booking_Currency;\n  basePeopleCount: Scalars['Int'];\n  discount?: Maybe<Scalars['Float']>;\n  fullName: Scalars['String'];\n  phone: Scalars['String'];\n  message?: Maybe<Scalars['String']>;\n  arrivalDate: Scalars['Date'];\n  language?: Maybe<Scalars['String']>;\n  userBookingStatus?: Maybe<Enum_Booking_Userbookingstatus>;\n  email: Scalars['String'];\n  adults: Scalars['Int'];\n  children?: Maybe<Scalars['Int']>;\n  totalPrice?: Maybe<Scalars['Float']>;\n  published_at?: Maybe<Scalars['DateTime']>;\n};\n\nexport type BookingAggregator = {\n  __typename?: 'BookingAggregator';\n  count?: Maybe<Scalars['Int']>;\n  totalCount?: Maybe<Scalars['Int']>;\n  sum?: Maybe<BookingAggregatorSum>;\n  avg?: Maybe<BookingAggregatorAvg>;\n  min?: Maybe<BookingAggregatorMin>;\n  max?: Maybe<BookingAggregatorMax>;\n};\n\nexport type BookingAggregatorAvg = {\n  __typename?: 'BookingAggregatorAvg';\n  basePrice?: Maybe<Scalars['Float']>;\n  basePeopleCount?: Maybe<Scalars['Float']>;\n  discount?: Maybe<Scalars['Float']>;\n  adults?: Maybe<Scalars['Float']>;\n  children?: Maybe<Scalars['Float']>;\n  totalPrice?: Maybe<Scalars['Float']>;\n};\n\nexport type BookingAggregatorMax = {\n  __typename?: 'BookingAggregatorMax';\n  basePrice?: Maybe<Scalars['Float']>;\n  basePeopleCount?: Maybe<Scalars['Float']>;\n  discount?: Maybe<Scalars['Float']>;\n  adults?: Maybe<Scalars['Float']>;\n  children?: Maybe<Scalars['Float']>;\n  totalPrice?: Maybe<Scalars['Float']>;\n};\n\nexport type BookingAggregatorMin = {\n  __typename?: 'BookingAggregatorMin';\n  basePrice?: Maybe<Scalars['Float']>;\n  basePeopleCount?: Maybe<Scalars['Float']>;\n  discount?: Maybe<Scalars['Float']>;\n  adults?: Maybe<Scalars['Float']>;\n  children?: Maybe<Scalars['Float']>;\n  totalPrice?: Maybe<Scalars['Float']>;\n};\n\nexport type BookingAggregatorSum = {\n  __typename?: 'BookingAggregatorSum';\n  basePrice?: Maybe<Scalars['Float']>;\n  basePeopleCount?: Maybe<Scalars['Float']>;\n  discount?: Maybe<Scalars['Float']>;\n  adults?: Maybe<Scalars['Float']>;\n  children?: Maybe<Scalars['Float']>;\n  totalPrice?: Maybe<Scalars['Float']>;\n};\n\nexport type BookingConnection = {\n  __typename?: 'BookingConnection';\n  values?: Maybe<Array<Maybe<Booking>>>;\n  groupBy?: Maybe<BookingGroupBy>;\n  aggregate?: Maybe<BookingAggregator>;\n};\n\nexport type BookingConnectionAdults = {\n  __typename?: 'BookingConnectionAdults';\n  key?: Maybe<Scalars['Int']>;\n  connection?: Maybe<BookingConnection>;\n};\n\nexport type BookingConnectionApproved = {\n  __typename?: 'BookingConnectionApproved';\n  key?: Maybe<Scalars['Boolean']>;\n  connection?: Maybe<BookingConnection>;\n};\n\nexport type BookingConnectionArrivalDate = {\n  __typename?: 'BookingConnectionArrivalDate';\n  key?: Maybe<Scalars['ID']>;\n  connection?: Maybe<BookingConnection>;\n};\n\nexport type BookingConnectionBasePeopleCount = {\n  __typename?: 'BookingConnectionBasePeopleCount';\n  key?: Maybe<Scalars['Int']>;\n  connection?: Maybe<BookingConnection>;\n};\n\nexport type BookingConnectionBasePrice = {\n  __typename?: 'BookingConnectionBasePrice';\n  key?: Maybe<Scalars['Float']>;\n  connection?: Maybe<BookingConnection>;\n};\n\nexport type BookingConnectionChildren = {\n  __typename?: 'BookingConnectionChildren';\n  key?: Maybe<Scalars['Int']>;\n  connection?: Maybe<BookingConnection>;\n};\n\nexport type BookingConnectionCreatedAt = {\n  __typename?: 'BookingConnectionCreatedAt';\n  key?: Maybe<Scalars['DateTime']>;\n  connection?: Maybe<BookingConnection>;\n};\n\nexport type BookingConnectionCurrency = {\n  __typename?: 'BookingConnectionCurrency';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<BookingConnection>;\n};\n\nexport type BookingConnectionDiscount = {\n  __typename?: 'BookingConnectionDiscount';\n  key?: Maybe<Scalars['Float']>;\n  connection?: Maybe<BookingConnection>;\n};\n\nexport type BookingConnectionEmail = {\n  __typename?: 'BookingConnectionEmail';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<BookingConnection>;\n};\n\nexport type BookingConnectionFullName = {\n  __typename?: 'BookingConnectionFullName';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<BookingConnection>;\n};\n\nexport type BookingConnectionId = {\n  __typename?: 'BookingConnectionId';\n  key?: Maybe<Scalars['ID']>;\n  connection?: Maybe<BookingConnection>;\n};\n\nexport type BookingConnectionLanguage = {\n  __typename?: 'BookingConnectionLanguage';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<BookingConnection>;\n};\n\nexport type BookingConnectionMessage = {\n  __typename?: 'BookingConnectionMessage';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<BookingConnection>;\n};\n\nexport type BookingConnectionPhone = {\n  __typename?: 'BookingConnectionPhone';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<BookingConnection>;\n};\n\nexport type BookingConnectionPublished_At = {\n  __typename?: 'BookingConnectionPublished_at';\n  key?: Maybe<Scalars['DateTime']>;\n  connection?: Maybe<BookingConnection>;\n};\n\nexport type BookingConnectionTotalPrice = {\n  __typename?: 'BookingConnectionTotalPrice';\n  key?: Maybe<Scalars['Float']>;\n  connection?: Maybe<BookingConnection>;\n};\n\nexport type BookingConnectionTrip = {\n  __typename?: 'BookingConnectionTrip';\n  key?: Maybe<Scalars['ID']>;\n  connection?: Maybe<BookingConnection>;\n};\n\nexport type BookingConnectionUpdatedAt = {\n  __typename?: 'BookingConnectionUpdatedAt';\n  key?: Maybe<Scalars['DateTime']>;\n  connection?: Maybe<BookingConnection>;\n};\n\nexport type BookingConnectionUserBookingStatus = {\n  __typename?: 'BookingConnectionUserBookingStatus';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<BookingConnection>;\n};\n\nexport type BookingConnection_Id = {\n  __typename?: 'BookingConnection_id';\n  key?: Maybe<Scalars['ID']>;\n  connection?: Maybe<BookingConnection>;\n};\n\nexport type BookingGroupBy = {\n  __typename?: 'BookingGroupBy';\n  id?: Maybe<Array<Maybe<BookingConnectionId>>>;\n  _id?: Maybe<Array<Maybe<BookingConnection_Id>>>;\n  createdAt?: Maybe<Array<Maybe<BookingConnectionCreatedAt>>>;\n  updatedAt?: Maybe<Array<Maybe<BookingConnectionUpdatedAt>>>;\n  trip?: Maybe<Array<Maybe<BookingConnectionTrip>>>;\n  approved?: Maybe<Array<Maybe<BookingConnectionApproved>>>;\n  basePrice?: Maybe<Array<Maybe<BookingConnectionBasePrice>>>;\n  currency?: Maybe<Array<Maybe<BookingConnectionCurrency>>>;\n  basePeopleCount?: Maybe<Array<Maybe<BookingConnectionBasePeopleCount>>>;\n  discount?: Maybe<Array<Maybe<BookingConnectionDiscount>>>;\n  fullName?: Maybe<Array<Maybe<BookingConnectionFullName>>>;\n  phone?: Maybe<Array<Maybe<BookingConnectionPhone>>>;\n  message?: Maybe<Array<Maybe<BookingConnectionMessage>>>;\n  arrivalDate?: Maybe<Array<Maybe<BookingConnectionArrivalDate>>>;\n  language?: Maybe<Array<Maybe<BookingConnectionLanguage>>>;\n  userBookingStatus?: Maybe<Array<Maybe<BookingConnectionUserBookingStatus>>>;\n  email?: Maybe<Array<Maybe<BookingConnectionEmail>>>;\n  adults?: Maybe<Array<Maybe<BookingConnectionAdults>>>;\n  children?: Maybe<Array<Maybe<BookingConnectionChildren>>>;\n  totalPrice?: Maybe<Array<Maybe<BookingConnectionTotalPrice>>>;\n  published_at?: Maybe<Array<Maybe<BookingConnectionPublished_At>>>;\n};\n\nexport type BookingInput = {\n  trip?: Maybe<Scalars['ID']>;\n  approved?: Maybe<Scalars['Boolean']>;\n  basePrice: Scalars['Float'];\n  currency: Enum_Booking_Currency;\n  basePeopleCount: Scalars['Int'];\n  discount?: Maybe<Scalars['Float']>;\n  fullName: Scalars['String'];\n  phone: Scalars['String'];\n  message?: Maybe<Scalars['String']>;\n  arrivalDate: Scalars['Date'];\n  language?: Maybe<Scalars['String']>;\n  userBookingStatus?: Maybe<Enum_Booking_Userbookingstatus>;\n  email: Scalars['String'];\n  adults: Scalars['Int'];\n  children?: Maybe<Scalars['Int']>;\n  totalPrice?: Maybe<Scalars['Float']>;\n  published_at?: Maybe<Scalars['DateTime']>;\n  created_by?: Maybe<Scalars['ID']>;\n  updated_by?: Maybe<Scalars['ID']>;\n};\n\nexport type City = {\n  __typename?: 'City';\n  id: Scalars['ID'];\n  _id: Scalars['ID'];\n  createdAt: Scalars['DateTime'];\n  updatedAt: Scalars['DateTime'];\n  name: Scalars['String'];\n  description?: Maybe<Scalars['String']>;\n  image?: Maybe<UploadFile>;\n  locale?: Maybe<Scalars['String']>;\n  published_at?: Maybe<Scalars['DateTime']>;\n  locations?: Maybe<Array<Maybe<Location>>>;\n  localizations?: Maybe<Array<Maybe<City>>>;\n};\n\n\nexport type CityLocationsArgs = {\n  sort?: Maybe<Scalars['String']>;\n  limit?: Maybe<Scalars['Int']>;\n  start?: Maybe<Scalars['Int']>;\n  where?: Maybe<Scalars['JSON']>;\n};\n\n\nexport type CityLocalizationsArgs = {\n  sort?: Maybe<Scalars['String']>;\n  limit?: Maybe<Scalars['Int']>;\n  start?: Maybe<Scalars['Int']>;\n  where?: Maybe<Scalars['JSON']>;\n};\n\nexport type CityAggregator = {\n  __typename?: 'CityAggregator';\n  count?: Maybe<Scalars['Int']>;\n  totalCount?: Maybe<Scalars['Int']>;\n};\n\nexport type CityConnection = {\n  __typename?: 'CityConnection';\n  values?: Maybe<Array<Maybe<City>>>;\n  groupBy?: Maybe<CityGroupBy>;\n  aggregate?: Maybe<CityAggregator>;\n};\n\nexport type CityConnectionCreatedAt = {\n  __typename?: 'CityConnectionCreatedAt';\n  key?: Maybe<Scalars['DateTime']>;\n  connection?: Maybe<CityConnection>;\n};\n\nexport type CityConnectionDescription = {\n  __typename?: 'CityConnectionDescription';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<CityConnection>;\n};\n\nexport type CityConnectionId = {\n  __typename?: 'CityConnectionId';\n  key?: Maybe<Scalars['ID']>;\n  connection?: Maybe<CityConnection>;\n};\n\nexport type CityConnectionImage = {\n  __typename?: 'CityConnectionImage';\n  key?: Maybe<Scalars['ID']>;\n  connection?: Maybe<CityConnection>;\n};\n\nexport type CityConnectionLocale = {\n  __typename?: 'CityConnectionLocale';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<CityConnection>;\n};\n\nexport type CityConnectionName = {\n  __typename?: 'CityConnectionName';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<CityConnection>;\n};\n\nexport type CityConnectionPublished_At = {\n  __typename?: 'CityConnectionPublished_at';\n  key?: Maybe<Scalars['DateTime']>;\n  connection?: Maybe<CityConnection>;\n};\n\nexport type CityConnectionUpdatedAt = {\n  __typename?: 'CityConnectionUpdatedAt';\n  key?: Maybe<Scalars['DateTime']>;\n  connection?: Maybe<CityConnection>;\n};\n\nexport type CityConnection_Id = {\n  __typename?: 'CityConnection_id';\n  key?: Maybe<Scalars['ID']>;\n  connection?: Maybe<CityConnection>;\n};\n\nexport type CityGroupBy = {\n  __typename?: 'CityGroupBy';\n  id?: Maybe<Array<Maybe<CityConnectionId>>>;\n  _id?: Maybe<Array<Maybe<CityConnection_Id>>>;\n  createdAt?: Maybe<Array<Maybe<CityConnectionCreatedAt>>>;\n  updatedAt?: Maybe<Array<Maybe<CityConnectionUpdatedAt>>>;\n  name?: Maybe<Array<Maybe<CityConnectionName>>>;\n  description?: Maybe<Array<Maybe<CityConnectionDescription>>>;\n  image?: Maybe<Array<Maybe<CityConnectionImage>>>;\n  locale?: Maybe<Array<Maybe<CityConnectionLocale>>>;\n  published_at?: Maybe<Array<Maybe<CityConnectionPublished_At>>>;\n};\n\nexport type CityInput = {\n  name: Scalars['String'];\n  description?: Maybe<Scalars['String']>;\n  image?: Maybe<Scalars['ID']>;\n  locations?: Maybe<Array<Maybe<Scalars['ID']>>>;\n  localizations?: Maybe<Array<Maybe<Scalars['ID']>>>;\n  locale?: Maybe<Scalars['String']>;\n  published_at?: Maybe<Scalars['DateTime']>;\n  created_by?: Maybe<Scalars['ID']>;\n  updated_by?: Maybe<Scalars['ID']>;\n};\n\nexport type ComponentCoordinateCoordinate = {\n  __typename?: 'ComponentCoordinateCoordinate';\n  id: Scalars['ID'];\n  _id: Scalars['ID'];\n  latitude: Scalars['Float'];\n  longitude: Scalars['Float'];\n};\n\nexport type ComponentCoordinateCoordinateInput = {\n  latitude: Scalars['Float'];\n  longitude: Scalars['Float'];\n};\n\nexport type ComponentFeatureFeature = {\n  __typename?: 'ComponentFeatureFeature';\n  id: Scalars['ID'];\n  _id: Scalars['ID'];\n  feature?: Maybe<Feature>;\n  included?: Maybe<Scalars['Boolean']>;\n};\n\nexport type ComponentFeatureFeatureInput = {\n  feature?: Maybe<Scalars['ID']>;\n  included?: Maybe<Scalars['Boolean']>;\n};\n\nexport type ComponentPricePrice = {\n  __typename?: 'ComponentPricePrice';\n  id: Scalars['ID'];\n  _id: Scalars['ID'];\n  basePrice: Scalars['Float'];\n  currency: Enum_Componentpriceprice_Currency;\n  basePeopleCount: Scalars['Int'];\n  extraAdultFee?: Maybe<Scalars['Float']>;\n  discount?: Maybe<Scalars['Float']>;\n};\n\nexport type ComponentPricePriceInput = {\n  basePrice: Scalars['Float'];\n  currency?: Maybe<Enum_Componentpriceprice_Currency>;\n  basePeopleCount: Scalars['Int'];\n  extraAdultFee?: Maybe<Scalars['Float']>;\n  discount?: Maybe<Scalars['Float']>;\n};\n\nexport type ComponentTimelineTimeline = {\n  __typename?: 'ComponentTimelineTimeline';\n  id: Scalars['ID'];\n  _id: Scalars['ID'];\n  day: Scalars['Int'];\n  description?: Maybe<Scalars['String']>;\n  travelTo?: Maybe<City>;\n  transportationType?: Maybe<Enum_Componenttimelinetimeline_Transportationtype>;\n  restDay?: Maybe<Scalars['Boolean']>;\n  locations?: Maybe<Array<Maybe<Location>>>;\n};\n\n\nexport type ComponentTimelineTimelineLocationsArgs = {\n  sort?: Maybe<Scalars['String']>;\n  limit?: Maybe<Scalars['Int']>;\n  start?: Maybe<Scalars['Int']>;\n  where?: Maybe<Scalars['JSON']>;\n};\n\nexport type ComponentTimelineTimelineInput = {\n  day: Scalars['Int'];\n  description?: Maybe<Scalars['String']>;\n  locations?: Maybe<Array<Maybe<Scalars['ID']>>>;\n  travelTo?: Maybe<Scalars['ID']>;\n  transportationType?: Maybe<Enum_Componenttimelinetimeline_Transportationtype>;\n  restDay?: Maybe<Scalars['Boolean']>;\n};\n\n\n\nexport enum Enum_Booking_Currency {\n  Dollar = 'dollar',\n  Lira = 'lira'\n}\n\nexport enum Enum_Booking_Userbookingstatus {\n  Initial = 'initial',\n  Confirmed = 'confirmed',\n  Canceled = 'canceled'\n}\n\nexport enum Enum_Componentpriceprice_Currency {\n  Dollar = 'dollar',\n  Lira = 'lira'\n}\n\nexport enum Enum_Componenttimelinetimeline_Transportationtype {\n  Arrival = 'arrival',\n  Departure = 'departure',\n  BetweenCities = 'betweenCities',\n  WithinCity = 'withinCity'\n}\n\nexport enum Enum_Partner_Agreementstatus {\n  Agreed = 'Agreed',\n  Discussing = 'discussing',\n  Termination = 'termination'\n}\n\nexport enum Enum_Partner_Revenuesource {\n  PricePercentage = 'pricePercentage',\n  InflatedPrice = 'inflatedPrice'\n}\n\nexport enum Enum_Trips_Currency {\n  Dollar = 'dollar',\n  Lira = 'lira'\n}\n\nexport enum Enum_Trips_Traveltype {\n  Private = 'private',\n  Public = 'public',\n  Both = 'both'\n}\n\nexport enum Enum_Trips_Trip_Type {\n  Touristic = 'touristic',\n  Medical = 'medical'\n}\n\nexport type Feature = {\n  __typename?: 'Feature';\n  id: Scalars['ID'];\n  _id: Scalars['ID'];\n  createdAt: Scalars['DateTime'];\n  updatedAt: Scalars['DateTime'];\n  name: Scalars['String'];\n  info?: Maybe<Scalars['String']>;\n  locale?: Maybe<Scalars['String']>;\n  published_at?: Maybe<Scalars['DateTime']>;\n  localizations?: Maybe<Array<Maybe<Feature>>>;\n};\n\n\nexport type FeatureLocalizationsArgs = {\n  sort?: Maybe<Scalars['String']>;\n  limit?: Maybe<Scalars['Int']>;\n  start?: Maybe<Scalars['Int']>;\n  where?: Maybe<Scalars['JSON']>;\n};\n\nexport type FeatureAggregator = {\n  __typename?: 'FeatureAggregator';\n  count?: Maybe<Scalars['Int']>;\n  totalCount?: Maybe<Scalars['Int']>;\n};\n\nexport type FeatureConnection = {\n  __typename?: 'FeatureConnection';\n  values?: Maybe<Array<Maybe<Feature>>>;\n  groupBy?: Maybe<FeatureGroupBy>;\n  aggregate?: Maybe<FeatureAggregator>;\n};\n\nexport type FeatureConnectionCreatedAt = {\n  __typename?: 'FeatureConnectionCreatedAt';\n  key?: Maybe<Scalars['DateTime']>;\n  connection?: Maybe<FeatureConnection>;\n};\n\nexport type FeatureConnectionId = {\n  __typename?: 'FeatureConnectionId';\n  key?: Maybe<Scalars['ID']>;\n  connection?: Maybe<FeatureConnection>;\n};\n\nexport type FeatureConnectionInfo = {\n  __typename?: 'FeatureConnectionInfo';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<FeatureConnection>;\n};\n\nexport type FeatureConnectionLocale = {\n  __typename?: 'FeatureConnectionLocale';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<FeatureConnection>;\n};\n\nexport type FeatureConnectionName = {\n  __typename?: 'FeatureConnectionName';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<FeatureConnection>;\n};\n\nexport type FeatureConnectionPublished_At = {\n  __typename?: 'FeatureConnectionPublished_at';\n  key?: Maybe<Scalars['DateTime']>;\n  connection?: Maybe<FeatureConnection>;\n};\n\nexport type FeatureConnectionUpdatedAt = {\n  __typename?: 'FeatureConnectionUpdatedAt';\n  key?: Maybe<Scalars['DateTime']>;\n  connection?: Maybe<FeatureConnection>;\n};\n\nexport type FeatureConnection_Id = {\n  __typename?: 'FeatureConnection_id';\n  key?: Maybe<Scalars['ID']>;\n  connection?: Maybe<FeatureConnection>;\n};\n\nexport type FeatureGroupBy = {\n  __typename?: 'FeatureGroupBy';\n  id?: Maybe<Array<Maybe<FeatureConnectionId>>>;\n  _id?: Maybe<Array<Maybe<FeatureConnection_Id>>>;\n  createdAt?: Maybe<Array<Maybe<FeatureConnectionCreatedAt>>>;\n  updatedAt?: Maybe<Array<Maybe<FeatureConnectionUpdatedAt>>>;\n  name?: Maybe<Array<Maybe<FeatureConnectionName>>>;\n  info?: Maybe<Array<Maybe<FeatureConnectionInfo>>>;\n  locale?: Maybe<Array<Maybe<FeatureConnectionLocale>>>;\n  published_at?: Maybe<Array<Maybe<FeatureConnectionPublished_At>>>;\n};\n\nexport type FeatureInput = {\n  name: Scalars['String'];\n  info?: Maybe<Scalars['String']>;\n  localizations?: Maybe<Array<Maybe<Scalars['ID']>>>;\n  locale?: Maybe<Scalars['String']>;\n  published_at?: Maybe<Scalars['DateTime']>;\n  created_by?: Maybe<Scalars['ID']>;\n  updated_by?: Maybe<Scalars['ID']>;\n};\n\nexport type FileInfoInput = {\n  name?: Maybe<Scalars['String']>;\n  alternativeText?: Maybe<Scalars['String']>;\n  caption?: Maybe<Scalars['String']>;\n};\n\nexport type FileInput = {\n  name: Scalars['String'];\n  alternativeText?: Maybe<Scalars['String']>;\n  caption?: Maybe<Scalars['String']>;\n  width?: Maybe<Scalars['Int']>;\n  height?: Maybe<Scalars['Int']>;\n  formats?: Maybe<Scalars['JSON']>;\n  hash: Scalars['String'];\n  ext?: Maybe<Scalars['String']>;\n  mime: Scalars['String'];\n  size: Scalars['Float'];\n  url: Scalars['String'];\n  previewUrl?: Maybe<Scalars['String']>;\n  provider: Scalars['String'];\n  provider_metadata?: Maybe<Scalars['JSON']>;\n  related?: Maybe<Array<Maybe<Scalars['ID']>>>;\n  created_by?: Maybe<Scalars['ID']>;\n  updated_by?: Maybe<Scalars['ID']>;\n};\n\nexport type HomeBanner = {\n  __typename?: 'HomeBanner';\n  id: Scalars['ID'];\n  _id: Scalars['ID'];\n  createdAt: Scalars['DateTime'];\n  updatedAt: Scalars['DateTime'];\n  published_at?: Maybe<Scalars['DateTime']>;\n  images?: Maybe<Array<Maybe<UploadFile>>>;\n};\n\n\nexport type HomeBannerImagesArgs = {\n  sort?: Maybe<Scalars['String']>;\n  limit?: Maybe<Scalars['Int']>;\n  start?: Maybe<Scalars['Int']>;\n  where?: Maybe<Scalars['JSON']>;\n};\n\nexport type HomeBannerInput = {\n  images?: Maybe<Array<Maybe<Scalars['ID']>>>;\n  published_at?: Maybe<Scalars['DateTime']>;\n  created_by?: Maybe<Scalars['ID']>;\n  updated_by?: Maybe<Scalars['ID']>;\n};\n\nexport type HotelInput = {\n  name: Scalars['String'];\n  stars: Scalars['Int'];\n  url?: Maybe<Scalars['String']>;\n  trips?: Maybe<Array<Maybe<Scalars['ID']>>>;\n  published_at?: Maybe<Scalars['DateTime']>;\n  created_by?: Maybe<Scalars['ID']>;\n  updated_by?: Maybe<Scalars['ID']>;\n};\n\nexport type Hotels = {\n  __typename?: 'Hotels';\n  id: Scalars['ID'];\n  _id: Scalars['ID'];\n  createdAt: Scalars['DateTime'];\n  updatedAt: Scalars['DateTime'];\n  name: Scalars['String'];\n  stars: Scalars['Int'];\n  url?: Maybe<Scalars['String']>;\n  published_at?: Maybe<Scalars['DateTime']>;\n  trips?: Maybe<Array<Maybe<Trips>>>;\n};\n\n\nexport type HotelsTripsArgs = {\n  sort?: Maybe<Scalars['String']>;\n  limit?: Maybe<Scalars['Int']>;\n  start?: Maybe<Scalars['Int']>;\n  where?: Maybe<Scalars['JSON']>;\n};\n\nexport type HotelsAggregator = {\n  __typename?: 'HotelsAggregator';\n  count?: Maybe<Scalars['Int']>;\n  totalCount?: Maybe<Scalars['Int']>;\n  sum?: Maybe<HotelsAggregatorSum>;\n  avg?: Maybe<HotelsAggregatorAvg>;\n  min?: Maybe<HotelsAggregatorMin>;\n  max?: Maybe<HotelsAggregatorMax>;\n};\n\nexport type HotelsAggregatorAvg = {\n  __typename?: 'HotelsAggregatorAvg';\n  stars?: Maybe<Scalars['Float']>;\n};\n\nexport type HotelsAggregatorMax = {\n  __typename?: 'HotelsAggregatorMax';\n  stars?: Maybe<Scalars['Float']>;\n};\n\nexport type HotelsAggregatorMin = {\n  __typename?: 'HotelsAggregatorMin';\n  stars?: Maybe<Scalars['Float']>;\n};\n\nexport type HotelsAggregatorSum = {\n  __typename?: 'HotelsAggregatorSum';\n  stars?: Maybe<Scalars['Float']>;\n};\n\nexport type HotelsConnection = {\n  __typename?: 'HotelsConnection';\n  values?: Maybe<Array<Maybe<Hotels>>>;\n  groupBy?: Maybe<HotelsGroupBy>;\n  aggregate?: Maybe<HotelsAggregator>;\n};\n\nexport type HotelsConnectionCreatedAt = {\n  __typename?: 'HotelsConnectionCreatedAt';\n  key?: Maybe<Scalars['DateTime']>;\n  connection?: Maybe<HotelsConnection>;\n};\n\nexport type HotelsConnectionId = {\n  __typename?: 'HotelsConnectionId';\n  key?: Maybe<Scalars['ID']>;\n  connection?: Maybe<HotelsConnection>;\n};\n\nexport type HotelsConnectionName = {\n  __typename?: 'HotelsConnectionName';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<HotelsConnection>;\n};\n\nexport type HotelsConnectionPublished_At = {\n  __typename?: 'HotelsConnectionPublished_at';\n  key?: Maybe<Scalars['DateTime']>;\n  connection?: Maybe<HotelsConnection>;\n};\n\nexport type HotelsConnectionStars = {\n  __typename?: 'HotelsConnectionStars';\n  key?: Maybe<Scalars['Int']>;\n  connection?: Maybe<HotelsConnection>;\n};\n\nexport type HotelsConnectionUpdatedAt = {\n  __typename?: 'HotelsConnectionUpdatedAt';\n  key?: Maybe<Scalars['DateTime']>;\n  connection?: Maybe<HotelsConnection>;\n};\n\nexport type HotelsConnectionUrl = {\n  __typename?: 'HotelsConnectionUrl';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<HotelsConnection>;\n};\n\nexport type HotelsConnection_Id = {\n  __typename?: 'HotelsConnection_id';\n  key?: Maybe<Scalars['ID']>;\n  connection?: Maybe<HotelsConnection>;\n};\n\nexport type HotelsGroupBy = {\n  __typename?: 'HotelsGroupBy';\n  id?: Maybe<Array<Maybe<HotelsConnectionId>>>;\n  _id?: Maybe<Array<Maybe<HotelsConnection_Id>>>;\n  createdAt?: Maybe<Array<Maybe<HotelsConnectionCreatedAt>>>;\n  updatedAt?: Maybe<Array<Maybe<HotelsConnectionUpdatedAt>>>;\n  name?: Maybe<Array<Maybe<HotelsConnectionName>>>;\n  stars?: Maybe<Array<Maybe<HotelsConnectionStars>>>;\n  url?: Maybe<Array<Maybe<HotelsConnectionUrl>>>;\n  published_at?: Maybe<Array<Maybe<HotelsConnectionPublished_At>>>;\n};\n\nexport type I18NLocale = {\n  __typename?: 'I18NLocale';\n  id: Scalars['ID'];\n  _id: Scalars['ID'];\n  createdAt: Scalars['DateTime'];\n  updatedAt: Scalars['DateTime'];\n  name?: Maybe<Scalars['String']>;\n  code?: Maybe<Scalars['String']>;\n};\n\nexport type InputId = {\n  id: Scalars['ID'];\n};\n\n\nexport type LocaleInput = {\n  name?: Maybe<Scalars['String']>;\n  code?: Maybe<Scalars['String']>;\n  created_by?: Maybe<Scalars['ID']>;\n  updated_by?: Maybe<Scalars['ID']>;\n};\n\nexport type Location = {\n  __typename?: 'Location';\n  id: Scalars['ID'];\n  _id: Scalars['ID'];\n  createdAt: Scalars['DateTime'];\n  updatedAt: Scalars['DateTime'];\n  name: Scalars['String'];\n  description?: Maybe<Scalars['String']>;\n  city?: Maybe<City>;\n  coordinate?: Maybe<ComponentCoordinateCoordinate>;\n  locale?: Maybe<Scalars['String']>;\n  published_at?: Maybe<Scalars['DateTime']>;\n  images?: Maybe<Array<Maybe<UploadFile>>>;\n  localizations?: Maybe<Array<Maybe<Location>>>;\n};\n\n\nexport type LocationImagesArgs = {\n  sort?: Maybe<Scalars['String']>;\n  limit?: Maybe<Scalars['Int']>;\n  start?: Maybe<Scalars['Int']>;\n  where?: Maybe<Scalars['JSON']>;\n};\n\n\nexport type LocationLocalizationsArgs = {\n  sort?: Maybe<Scalars['String']>;\n  limit?: Maybe<Scalars['Int']>;\n  start?: Maybe<Scalars['Int']>;\n  where?: Maybe<Scalars['JSON']>;\n};\n\nexport type LocationAggregator = {\n  __typename?: 'LocationAggregator';\n  count?: Maybe<Scalars['Int']>;\n  totalCount?: Maybe<Scalars['Int']>;\n};\n\nexport type LocationConnection = {\n  __typename?: 'LocationConnection';\n  values?: Maybe<Array<Maybe<Location>>>;\n  groupBy?: Maybe<LocationGroupBy>;\n  aggregate?: Maybe<LocationAggregator>;\n};\n\nexport type LocationConnectionCity = {\n  __typename?: 'LocationConnectionCity';\n  key?: Maybe<Scalars['ID']>;\n  connection?: Maybe<LocationConnection>;\n};\n\nexport type LocationConnectionCoordinate = {\n  __typename?: 'LocationConnectionCoordinate';\n  key?: Maybe<Scalars['ID']>;\n  connection?: Maybe<LocationConnection>;\n};\n\nexport type LocationConnectionCreatedAt = {\n  __typename?: 'LocationConnectionCreatedAt';\n  key?: Maybe<Scalars['DateTime']>;\n  connection?: Maybe<LocationConnection>;\n};\n\nexport type LocationConnectionDescription = {\n  __typename?: 'LocationConnectionDescription';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<LocationConnection>;\n};\n\nexport type LocationConnectionId = {\n  __typename?: 'LocationConnectionId';\n  key?: Maybe<Scalars['ID']>;\n  connection?: Maybe<LocationConnection>;\n};\n\nexport type LocationConnectionLocale = {\n  __typename?: 'LocationConnectionLocale';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<LocationConnection>;\n};\n\nexport type LocationConnectionName = {\n  __typename?: 'LocationConnectionName';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<LocationConnection>;\n};\n\nexport type LocationConnectionPublished_At = {\n  __typename?: 'LocationConnectionPublished_at';\n  key?: Maybe<Scalars['DateTime']>;\n  connection?: Maybe<LocationConnection>;\n};\n\nexport type LocationConnectionUpdatedAt = {\n  __typename?: 'LocationConnectionUpdatedAt';\n  key?: Maybe<Scalars['DateTime']>;\n  connection?: Maybe<LocationConnection>;\n};\n\nexport type LocationConnection_Id = {\n  __typename?: 'LocationConnection_id';\n  key?: Maybe<Scalars['ID']>;\n  connection?: Maybe<LocationConnection>;\n};\n\nexport type LocationGroupBy = {\n  __typename?: 'LocationGroupBy';\n  id?: Maybe<Array<Maybe<LocationConnectionId>>>;\n  _id?: Maybe<Array<Maybe<LocationConnection_Id>>>;\n  createdAt?: Maybe<Array<Maybe<LocationConnectionCreatedAt>>>;\n  updatedAt?: Maybe<Array<Maybe<LocationConnectionUpdatedAt>>>;\n  name?: Maybe<Array<Maybe<LocationConnectionName>>>;\n  description?: Maybe<Array<Maybe<LocationConnectionDescription>>>;\n  city?: Maybe<Array<Maybe<LocationConnectionCity>>>;\n  coordinate?: Maybe<Array<Maybe<LocationConnectionCoordinate>>>;\n  locale?: Maybe<Array<Maybe<LocationConnectionLocale>>>;\n  published_at?: Maybe<Array<Maybe<LocationConnectionPublished_At>>>;\n};\n\nexport type LocationInput = {\n  name: Scalars['String'];\n  description?: Maybe<Scalars['String']>;\n  images?: Maybe<Array<Maybe<Scalars['ID']>>>;\n  city?: Maybe<Scalars['ID']>;\n  coordinate?: Maybe<ComponentCoordinateCoordinateInput>;\n  localizations?: Maybe<Array<Maybe<Scalars['ID']>>>;\n  locale?: Maybe<Scalars['String']>;\n  published_at?: Maybe<Scalars['DateTime']>;\n  created_by?: Maybe<Scalars['ID']>;\n  updated_by?: Maybe<Scalars['ID']>;\n};\n\n\nexport type Morph = UsersPermissionsMe | UsersPermissionsMeRole | UsersPermissionsLoginPayload | UserPermissionsPasswordPayload | Booking | BookingConnection | BookingAggregator | BookingAggregatorSum | BookingAggregatorAvg | BookingAggregatorMin | BookingAggregatorMax | BookingGroupBy | BookingConnectionId | BookingConnection_Id | BookingConnectionCreatedAt | BookingConnectionUpdatedAt | BookingConnectionTrip | BookingConnectionApproved | BookingConnectionBasePrice | BookingConnectionCurrency | BookingConnectionBasePeopleCount | BookingConnectionDiscount | BookingConnectionFullName | BookingConnectionPhone | BookingConnectionMessage | BookingConnectionArrivalDate | BookingConnectionLanguage | BookingConnectionUserBookingStatus | BookingConnectionEmail | BookingConnectionAdults | BookingConnectionChildren | BookingConnectionTotalPrice | BookingConnectionPublished_At | CreateBookingPayload | UpdateBookingPayload | DeleteBookingPayload | City | CityConnection | CityAggregator | CityGroupBy | CityConnectionId | CityConnection_Id | CityConnectionCreatedAt | CityConnectionUpdatedAt | CityConnectionName | CityConnectionDescription | CityConnectionImage | CityConnectionLocale | CityConnectionPublished_At | CreateCityPayload | UpdateCityPayload | DeleteCityPayload | Feature | FeatureConnection | FeatureAggregator | FeatureGroupBy | FeatureConnectionId | FeatureConnection_Id | FeatureConnectionCreatedAt | FeatureConnectionUpdatedAt | FeatureConnectionName | FeatureConnectionInfo | FeatureConnectionLocale | FeatureConnectionPublished_At | CreateFeaturePayload | UpdateFeaturePayload | DeleteFeaturePayload | HomeBanner | UpdateHomeBannerPayload | DeleteHomeBannerPayload | Hotels | HotelsConnection | HotelsAggregator | HotelsAggregatorSum | HotelsAggregatorAvg | HotelsAggregatorMin | HotelsAggregatorMax | HotelsGroupBy | HotelsConnectionId | HotelsConnection_Id | HotelsConnectionCreatedAt | HotelsConnectionUpdatedAt | HotelsConnectionName | HotelsConnectionStars | HotelsConnectionUrl | HotelsConnectionPublished_At | CreateHotelPayload | UpdateHotelPayload | DeleteHotelPayload | Location | LocationConnection | LocationAggregator | LocationGroupBy | LocationConnectionId | LocationConnection_Id | LocationConnectionCreatedAt | LocationConnectionUpdatedAt | LocationConnectionName | LocationConnectionDescription | LocationConnectionCity | LocationConnectionCoordinate | LocationConnectionLocale | LocationConnectionPublished_At | CreateLocationPayload | UpdateLocationPayload | DeleteLocationPayload | Partner | PartnerConnection | PartnerAggregator | PartnerAggregatorSum | PartnerAggregatorAvg | PartnerAggregatorMin | PartnerAggregatorMax | PartnerGroupBy | PartnerConnectionId | PartnerConnection_Id | PartnerConnectionCreatedAt | PartnerConnectionUpdatedAt | PartnerConnectionName | PartnerConnectionPhone | PartnerConnectionAddress | PartnerConnectionEmail | PartnerConnectionAgreement | PartnerConnectionCommission | PartnerConnectionRevenueSource | PartnerConnectionAgreementStatus | PartnerConnectionNotes | PartnerConnectionPhone2 | PartnerConnectionPublished_At | CreatePartnerPayload | UpdatePartnerPayload | DeletePartnerPayload | Review | ReviewConnection | ReviewAggregator | ReviewAggregatorSum | ReviewAggregatorAvg | ReviewAggregatorMin | ReviewAggregatorMax | ReviewGroupBy | ReviewConnectionId | ReviewConnection_Id | ReviewConnectionCreatedAt | ReviewConnectionUpdatedAt | ReviewConnectionText | ReviewConnectionRating | ReviewConnectionAuthor | ReviewConnectionActive | ReviewConnectionTrip | ReviewConnectionPublished_At | CreateReviewPayload | UpdateReviewPayload | DeleteReviewPayload | Subscribers | SubscribersConnection | SubscribersAggregator | SubscribersGroupBy | SubscribersConnectionId | SubscribersConnection_Id | SubscribersConnectionCreatedAt | SubscribersConnectionUpdatedAt | SubscribersConnectionEmail | SubscribersConnectionPublished_At | CreateSubscriberPayload | UpdateSubscriberPayload | DeleteSubscriberPayload | Trips | TripsConnection | TripsAggregator | TripsAggregatorSum | TripsAggregatorAvg | TripsAggregatorMin | TripsAggregatorMax | TripsGroupBy | TripsConnectionId | TripsConnection_Id | TripsConnectionCreatedAt | TripsConnectionUpdatedAt | TripsConnectionName | TripsConnectionPreviewImage | TripsConnectionActive | TripsConnectionTrip_Type | TripsConnectionDescription | TripsConnectionDuration | TripsConnectionPartner | TripsConnectionCurrency | TripsConnectionCity | TripsConnectionBasePrice | TripsConnectionBasePeopleCount | TripsConnectionDiscount | TripsConnectionTravelType | TripsConnectionHotel | TripsConnectionLocale | TripsConnectionPublished_At | CreateTripPayload | UpdateTripPayload | DeleteTripPayload | I18NLocale | UploadFile | UploadFileConnection | UploadFileAggregator | UploadFileAggregatorSum | UploadFileAggregatorAvg | UploadFileAggregatorMin | UploadFileAggregatorMax | UploadFileGroupBy | UploadFileConnectionId | UploadFileConnection_Id | UploadFileConnectionCreatedAt | UploadFileConnectionUpdatedAt | UploadFileConnectionName | UploadFileConnectionAlternativeText | UploadFileConnectionCaption | UploadFileConnectionWidth | UploadFileConnectionHeight | UploadFileConnectionFormats | UploadFileConnectionHash | UploadFileConnectionExt | UploadFileConnectionMime | UploadFileConnectionSize | UploadFileConnectionUrl | UploadFileConnectionPreviewUrl | UploadFileConnectionProvider | UploadFileConnectionProvider_Metadata | DeleteFilePayload | UsersPermissionsPermission | UsersPermissionsRole | UsersPermissionsRoleConnection | UsersPermissionsRoleAggregator | UsersPermissionsRoleGroupBy | UsersPermissionsRoleConnectionId | UsersPermissionsRoleConnection_Id | UsersPermissionsRoleConnectionName | UsersPermissionsRoleConnectionDescription | UsersPermissionsRoleConnectionType | CreateRolePayload | UpdateRolePayload | DeleteRolePayload | UsersPermissionsUser | UsersPermissionsUserConnection | UsersPermissionsUserAggregator | UsersPermissionsUserGroupBy | UsersPermissionsUserConnectionId | UsersPermissionsUserConnection_Id | UsersPermissionsUserConnectionCreatedAt | UsersPermissionsUserConnectionUpdatedAt | UsersPermissionsUserConnectionUsername | UsersPermissionsUserConnectionEmail | UsersPermissionsUserConnectionProvider | UsersPermissionsUserConnectionConfirmed | UsersPermissionsUserConnectionBlocked | UsersPermissionsUserConnectionRole | CreateUserPayload | UpdateUserPayload | DeleteUserPayload | ComponentCoordinateCoordinate | ComponentFeatureFeature | ComponentPricePrice | ComponentTimelineTimeline;\n\nexport type Mutation = {\n  __typename?: 'Mutation';\n  createBooking?: Maybe<CreateBookingPayload>;\n  updateBooking?: Maybe<UpdateBookingPayload>;\n  deleteBooking?: Maybe<DeleteBookingPayload>;\n  createCity?: Maybe<CreateCityPayload>;\n  updateCity?: Maybe<UpdateCityPayload>;\n  deleteCity?: Maybe<DeleteCityPayload>;\n  createFeature?: Maybe<CreateFeaturePayload>;\n  updateFeature?: Maybe<UpdateFeaturePayload>;\n  deleteFeature?: Maybe<DeleteFeaturePayload>;\n  updateHomeBanner?: Maybe<UpdateHomeBannerPayload>;\n  deleteHomeBanner?: Maybe<DeleteHomeBannerPayload>;\n  createHotel?: Maybe<CreateHotelPayload>;\n  updateHotel?: Maybe<UpdateHotelPayload>;\n  deleteHotel?: Maybe<DeleteHotelPayload>;\n  createLocation?: Maybe<CreateLocationPayload>;\n  updateLocation?: Maybe<UpdateLocationPayload>;\n  deleteLocation?: Maybe<DeleteLocationPayload>;\n  createPartner?: Maybe<CreatePartnerPayload>;\n  updatePartner?: Maybe<UpdatePartnerPayload>;\n  deletePartner?: Maybe<DeletePartnerPayload>;\n  createReview?: Maybe<CreateReviewPayload>;\n  updateReview?: Maybe<UpdateReviewPayload>;\n  deleteReview?: Maybe<DeleteReviewPayload>;\n  createSubscriber?: Maybe<CreateSubscriberPayload>;\n  updateSubscriber?: Maybe<UpdateSubscriberPayload>;\n  deleteSubscriber?: Maybe<DeleteSubscriberPayload>;\n  createTrip?: Maybe<CreateTripPayload>;\n  updateTrip?: Maybe<UpdateTripPayload>;\n  deleteTrip?: Maybe<DeleteTripPayload>;\n  /** Delete one file */\n  deleteFile?: Maybe<DeleteFilePayload>;\n  /** Create a new role */\n  createRole?: Maybe<CreateRolePayload>;\n  /** Update an existing role */\n  updateRole?: Maybe<UpdateRolePayload>;\n  /** Delete an existing role */\n  deleteRole?: Maybe<DeleteRolePayload>;\n  /** Create a new user */\n  createUser?: Maybe<CreateUserPayload>;\n  /** Update an existing user */\n  updateUser?: Maybe<UpdateUserPayload>;\n  /** Delete an existing user */\n  deleteUser?: Maybe<DeleteUserPayload>;\n  createCityLocalization: City;\n  createFeatureLocalization: Feature;\n  createLocationLocalization: Location;\n  createTripLocalization: Trips;\n  upload: UploadFile;\n  multipleUpload: Array<Maybe<UploadFile>>;\n  updateFileInfo: UploadFile;\n  login: UsersPermissionsLoginPayload;\n  register: UsersPermissionsLoginPayload;\n  forgotPassword?: Maybe<UserPermissionsPasswordPayload>;\n  resetPassword?: Maybe<UsersPermissionsLoginPayload>;\n  emailConfirmation?: Maybe<UsersPermissionsLoginPayload>;\n};\n\n\nexport type MutationCreateBookingArgs = {\n  input?: Maybe<CreateBookingInput>;\n};\n\n\nexport type MutationUpdateBookingArgs = {\n  input?: Maybe<UpdateBookingInput>;\n};\n\n\nexport type MutationDeleteBookingArgs = {\n  input?: Maybe<DeleteBookingInput>;\n};\n\n\nexport type MutationCreateCityArgs = {\n  input?: Maybe<CreateCityInput>;\n};\n\n\nexport type MutationUpdateCityArgs = {\n  input?: Maybe<UpdateCityInput>;\n};\n\n\nexport type MutationDeleteCityArgs = {\n  input?: Maybe<DeleteCityInput>;\n};\n\n\nexport type MutationCreateFeatureArgs = {\n  input?: Maybe<CreateFeatureInput>;\n};\n\n\nexport type MutationUpdateFeatureArgs = {\n  input?: Maybe<UpdateFeatureInput>;\n};\n\n\nexport type MutationDeleteFeatureArgs = {\n  input?: Maybe<DeleteFeatureInput>;\n};\n\n\nexport type MutationUpdateHomeBannerArgs = {\n  input?: Maybe<UpdateHomeBannerInput>;\n};\n\n\nexport type MutationCreateHotelArgs = {\n  input?: Maybe<CreateHotelInput>;\n};\n\n\nexport type MutationUpdateHotelArgs = {\n  input?: Maybe<UpdateHotelInput>;\n};\n\n\nexport type MutationDeleteHotelArgs = {\n  input?: Maybe<DeleteHotelInput>;\n};\n\n\nexport type MutationCreateLocationArgs = {\n  input?: Maybe<CreateLocationInput>;\n};\n\n\nexport type MutationUpdateLocationArgs = {\n  input?: Maybe<UpdateLocationInput>;\n};\n\n\nexport type MutationDeleteLocationArgs = {\n  input?: Maybe<DeleteLocationInput>;\n};\n\n\nexport type MutationCreatePartnerArgs = {\n  input?: Maybe<CreatePartnerInput>;\n};\n\n\nexport type MutationUpdatePartnerArgs = {\n  input?: Maybe<UpdatePartnerInput>;\n};\n\n\nexport type MutationDeletePartnerArgs = {\n  input?: Maybe<DeletePartnerInput>;\n};\n\n\nexport type MutationCreateReviewArgs = {\n  input?: Maybe<CreateReviewInput>;\n};\n\n\nexport type MutationUpdateReviewArgs = {\n  input?: Maybe<UpdateReviewInput>;\n};\n\n\nexport type MutationDeleteReviewArgs = {\n  input?: Maybe<DeleteReviewInput>;\n};\n\n\nexport type MutationCreateSubscriberArgs = {\n  input?: Maybe<CreateSubscriberInput>;\n};\n\n\nexport type MutationUpdateSubscriberArgs = {\n  input?: Maybe<UpdateSubscriberInput>;\n};\n\n\nexport type MutationDeleteSubscriberArgs = {\n  input?: Maybe<DeleteSubscriberInput>;\n};\n\n\nexport type MutationCreateTripArgs = {\n  input?: Maybe<CreateTripInput>;\n};\n\n\nexport type MutationUpdateTripArgs = {\n  input?: Maybe<UpdateTripInput>;\n};\n\n\nexport type MutationDeleteTripArgs = {\n  input?: Maybe<DeleteTripInput>;\n};\n\n\nexport type MutationDeleteFileArgs = {\n  input?: Maybe<DeleteFileInput>;\n};\n\n\nexport type MutationCreateRoleArgs = {\n  input?: Maybe<CreateRoleInput>;\n};\n\n\nexport type MutationUpdateRoleArgs = {\n  input?: Maybe<UpdateRoleInput>;\n};\n\n\nexport type MutationDeleteRoleArgs = {\n  input?: Maybe<DeleteRoleInput>;\n};\n\n\nexport type MutationCreateUserArgs = {\n  input?: Maybe<CreateUserInput>;\n};\n\n\nexport type MutationUpdateUserArgs = {\n  input?: Maybe<UpdateUserInput>;\n};\n\n\nexport type MutationDeleteUserArgs = {\n  input?: Maybe<DeleteUserInput>;\n};\n\n\nexport type MutationCreateCityLocalizationArgs = {\n  input: UpdateCityInput;\n};\n\n\nexport type MutationCreateFeatureLocalizationArgs = {\n  input: UpdateFeatureInput;\n};\n\n\nexport type MutationCreateLocationLocalizationArgs = {\n  input: UpdateLocationInput;\n};\n\n\nexport type MutationCreateTripLocalizationArgs = {\n  input: UpdateTripInput;\n};\n\n\nexport type MutationUploadArgs = {\n  refId?: Maybe<Scalars['ID']>;\n  ref?: Maybe<Scalars['String']>;\n  field?: Maybe<Scalars['String']>;\n  source?: Maybe<Scalars['String']>;\n  info?: Maybe<FileInfoInput>;\n  file: Scalars['Upload'];\n};\n\n\nexport type MutationMultipleUploadArgs = {\n  refId?: Maybe<Scalars['ID']>;\n  ref?: Maybe<Scalars['String']>;\n  field?: Maybe<Scalars['String']>;\n  source?: Maybe<Scalars['String']>;\n  files: Array<Maybe<Scalars['Upload']>>;\n};\n\n\nexport type MutationUpdateFileInfoArgs = {\n  id: Scalars['ID'];\n  info: FileInfoInput;\n};\n\n\nexport type MutationLoginArgs = {\n  input: UsersPermissionsLoginInput;\n};\n\n\nexport type MutationRegisterArgs = {\n  input: UsersPermissionsRegisterInput;\n};\n\n\nexport type MutationForgotPasswordArgs = {\n  email: Scalars['String'];\n};\n\n\nexport type MutationResetPasswordArgs = {\n  password: Scalars['String'];\n  passwordConfirmation: Scalars['String'];\n  code: Scalars['String'];\n};\n\n\nexport type MutationEmailConfirmationArgs = {\n  confirmation: Scalars['String'];\n};\n\nexport type Partner = {\n  __typename?: 'Partner';\n  id: Scalars['ID'];\n  _id: Scalars['ID'];\n  createdAt: Scalars['DateTime'];\n  updatedAt: Scalars['DateTime'];\n  name: Scalars['String'];\n  phone: Scalars['String'];\n  address?: Maybe<Scalars['String']>;\n  email?: Maybe<Scalars['String']>;\n  agreement?: Maybe<Scalars['String']>;\n  commission: Scalars['Float'];\n  revenueSource: Enum_Partner_Revenuesource;\n  agreementStatus: Enum_Partner_Agreementstatus;\n  notes?: Maybe<Scalars['String']>;\n  phone2?: Maybe<Scalars['String']>;\n  published_at?: Maybe<Scalars['DateTime']>;\n  trips?: Maybe<Array<Maybe<Trips>>>;\n};\n\n\nexport type PartnerTripsArgs = {\n  sort?: Maybe<Scalars['String']>;\n  limit?: Maybe<Scalars['Int']>;\n  start?: Maybe<Scalars['Int']>;\n  where?: Maybe<Scalars['JSON']>;\n};\n\nexport type PartnerAggregator = {\n  __typename?: 'PartnerAggregator';\n  count?: Maybe<Scalars['Int']>;\n  totalCount?: Maybe<Scalars['Int']>;\n  sum?: Maybe<PartnerAggregatorSum>;\n  avg?: Maybe<PartnerAggregatorAvg>;\n  min?: Maybe<PartnerAggregatorMin>;\n  max?: Maybe<PartnerAggregatorMax>;\n};\n\nexport type PartnerAggregatorAvg = {\n  __typename?: 'PartnerAggregatorAvg';\n  commission?: Maybe<Scalars['Float']>;\n};\n\nexport type PartnerAggregatorMax = {\n  __typename?: 'PartnerAggregatorMax';\n  commission?: Maybe<Scalars['Float']>;\n};\n\nexport type PartnerAggregatorMin = {\n  __typename?: 'PartnerAggregatorMin';\n  commission?: Maybe<Scalars['Float']>;\n};\n\nexport type PartnerAggregatorSum = {\n  __typename?: 'PartnerAggregatorSum';\n  commission?: Maybe<Scalars['Float']>;\n};\n\nexport type PartnerConnection = {\n  __typename?: 'PartnerConnection';\n  values?: Maybe<Array<Maybe<Partner>>>;\n  groupBy?: Maybe<PartnerGroupBy>;\n  aggregate?: Maybe<PartnerAggregator>;\n};\n\nexport type PartnerConnectionAddress = {\n  __typename?: 'PartnerConnectionAddress';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<PartnerConnection>;\n};\n\nexport type PartnerConnectionAgreement = {\n  __typename?: 'PartnerConnectionAgreement';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<PartnerConnection>;\n};\n\nexport type PartnerConnectionAgreementStatus = {\n  __typename?: 'PartnerConnectionAgreementStatus';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<PartnerConnection>;\n};\n\nexport type PartnerConnectionCommission = {\n  __typename?: 'PartnerConnectionCommission';\n  key?: Maybe<Scalars['Float']>;\n  connection?: Maybe<PartnerConnection>;\n};\n\nexport type PartnerConnectionCreatedAt = {\n  __typename?: 'PartnerConnectionCreatedAt';\n  key?: Maybe<Scalars['DateTime']>;\n  connection?: Maybe<PartnerConnection>;\n};\n\nexport type PartnerConnectionEmail = {\n  __typename?: 'PartnerConnectionEmail';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<PartnerConnection>;\n};\n\nexport type PartnerConnectionId = {\n  __typename?: 'PartnerConnectionId';\n  key?: Maybe<Scalars['ID']>;\n  connection?: Maybe<PartnerConnection>;\n};\n\nexport type PartnerConnectionName = {\n  __typename?: 'PartnerConnectionName';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<PartnerConnection>;\n};\n\nexport type PartnerConnectionNotes = {\n  __typename?: 'PartnerConnectionNotes';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<PartnerConnection>;\n};\n\nexport type PartnerConnectionPhone = {\n  __typename?: 'PartnerConnectionPhone';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<PartnerConnection>;\n};\n\nexport type PartnerConnectionPhone2 = {\n  __typename?: 'PartnerConnectionPhone2';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<PartnerConnection>;\n};\n\nexport type PartnerConnectionPublished_At = {\n  __typename?: 'PartnerConnectionPublished_at';\n  key?: Maybe<Scalars['DateTime']>;\n  connection?: Maybe<PartnerConnection>;\n};\n\nexport type PartnerConnectionRevenueSource = {\n  __typename?: 'PartnerConnectionRevenueSource';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<PartnerConnection>;\n};\n\nexport type PartnerConnectionUpdatedAt = {\n  __typename?: 'PartnerConnectionUpdatedAt';\n  key?: Maybe<Scalars['DateTime']>;\n  connection?: Maybe<PartnerConnection>;\n};\n\nexport type PartnerConnection_Id = {\n  __typename?: 'PartnerConnection_id';\n  key?: Maybe<Scalars['ID']>;\n  connection?: Maybe<PartnerConnection>;\n};\n\nexport type PartnerGroupBy = {\n  __typename?: 'PartnerGroupBy';\n  id?: Maybe<Array<Maybe<PartnerConnectionId>>>;\n  _id?: Maybe<Array<Maybe<PartnerConnection_Id>>>;\n  createdAt?: Maybe<Array<Maybe<PartnerConnectionCreatedAt>>>;\n  updatedAt?: Maybe<Array<Maybe<PartnerConnectionUpdatedAt>>>;\n  name?: Maybe<Array<Maybe<PartnerConnectionName>>>;\n  phone?: Maybe<Array<Maybe<PartnerConnectionPhone>>>;\n  address?: Maybe<Array<Maybe<PartnerConnectionAddress>>>;\n  email?: Maybe<Array<Maybe<PartnerConnectionEmail>>>;\n  agreement?: Maybe<Array<Maybe<PartnerConnectionAgreement>>>;\n  commission?: Maybe<Array<Maybe<PartnerConnectionCommission>>>;\n  revenueSource?: Maybe<Array<Maybe<PartnerConnectionRevenueSource>>>;\n  agreementStatus?: Maybe<Array<Maybe<PartnerConnectionAgreementStatus>>>;\n  notes?: Maybe<Array<Maybe<PartnerConnectionNotes>>>;\n  phone2?: Maybe<Array<Maybe<PartnerConnectionPhone2>>>;\n  published_at?: Maybe<Array<Maybe<PartnerConnectionPublished_At>>>;\n};\n\nexport type PartnerInput = {\n  name: Scalars['String'];\n  phone: Scalars['String'];\n  address?: Maybe<Scalars['String']>;\n  email?: Maybe<Scalars['String']>;\n  trips?: Maybe<Array<Maybe<Scalars['ID']>>>;\n  agreement?: Maybe<Scalars['String']>;\n  commission: Scalars['Float'];\n  revenueSource: Enum_Partner_Revenuesource;\n  agreementStatus: Enum_Partner_Agreementstatus;\n  notes?: Maybe<Scalars['String']>;\n  phone2?: Maybe<Scalars['String']>;\n  published_at?: Maybe<Scalars['DateTime']>;\n  created_by?: Maybe<Scalars['ID']>;\n  updated_by?: Maybe<Scalars['ID']>;\n};\n\nexport enum PublicationState {\n  Live = 'LIVE',\n  Preview = 'PREVIEW'\n}\n\nexport type Query = {\n  __typename?: 'Query';\n  booking?: Maybe<Booking>;\n  bookings?: Maybe<Array<Maybe<Booking>>>;\n  bookingsConnection?: Maybe<BookingConnection>;\n  city?: Maybe<City>;\n  cities?: Maybe<Array<Maybe<City>>>;\n  citiesConnection?: Maybe<CityConnection>;\n  feature?: Maybe<Feature>;\n  features?: Maybe<Array<Maybe<Feature>>>;\n  featuresConnection?: Maybe<FeatureConnection>;\n  homeBanner?: Maybe<HomeBanner>;\n  hotel?: Maybe<Hotels>;\n  hotels?: Maybe<Array<Maybe<Hotels>>>;\n  hotelsConnection?: Maybe<HotelsConnection>;\n  location?: Maybe<Location>;\n  locations?: Maybe<Array<Maybe<Location>>>;\n  locationsConnection?: Maybe<LocationConnection>;\n  partner?: Maybe<Partner>;\n  partners?: Maybe<Array<Maybe<Partner>>>;\n  partnersConnection?: Maybe<PartnerConnection>;\n  review?: Maybe<Review>;\n  reviews?: Maybe<Array<Maybe<Review>>>;\n  reviewsConnection?: Maybe<ReviewConnection>;\n  subscriber?: Maybe<Subscribers>;\n  subscribers?: Maybe<Array<Maybe<Subscribers>>>;\n  subscribersConnection?: Maybe<SubscribersConnection>;\n  trip?: Maybe<Trips>;\n  trips?: Maybe<Array<Maybe<Trips>>>;\n  tripsConnection?: Maybe<TripsConnection>;\n  files?: Maybe<Array<Maybe<UploadFile>>>;\n  filesConnection?: Maybe<UploadFileConnection>;\n  role?: Maybe<UsersPermissionsRole>;\n  /** Retrieve all the existing roles. You can't apply filters on this query. */\n  roles?: Maybe<Array<Maybe<UsersPermissionsRole>>>;\n  rolesConnection?: Maybe<UsersPermissionsRoleConnection>;\n  user?: Maybe<UsersPermissionsUser>;\n  users?: Maybe<Array<Maybe<UsersPermissionsUser>>>;\n  usersConnection?: Maybe<UsersPermissionsUserConnection>;\n  me?: Maybe<UsersPermissionsMe>;\n};\n\n\nexport type QueryBookingArgs = {\n  id: Scalars['ID'];\n  publicationState?: Maybe<PublicationState>;\n};\n\n\nexport type QueryBookingsArgs = {\n  sort?: Maybe<Scalars['String']>;\n  limit?: Maybe<Scalars['Int']>;\n  start?: Maybe<Scalars['Int']>;\n  where?: Maybe<Scalars['JSON']>;\n  publicationState?: Maybe<PublicationState>;\n};\n\n\nexport type QueryBookingsConnectionArgs = {\n  sort?: Maybe<Scalars['String']>;\n  limit?: Maybe<Scalars['Int']>;\n  start?: Maybe<Scalars['Int']>;\n  where?: Maybe<Scalars['JSON']>;\n};\n\n\nexport type QueryCityArgs = {\n  id: Scalars['ID'];\n  publicationState?: Maybe<PublicationState>;\n};\n\n\nexport type QueryCitiesArgs = {\n  sort?: Maybe<Scalars['String']>;\n  limit?: Maybe<Scalars['Int']>;\n  start?: Maybe<Scalars['Int']>;\n  where?: Maybe<Scalars['JSON']>;\n  publicationState?: Maybe<PublicationState>;\n  locale?: Maybe<Scalars['String']>;\n};\n\n\nexport type QueryCitiesConnectionArgs = {\n  sort?: Maybe<Scalars['String']>;\n  limit?: Maybe<Scalars['Int']>;\n  start?: Maybe<Scalars['Int']>;\n  where?: Maybe<Scalars['JSON']>;\n  locale?: Maybe<Scalars['String']>;\n};\n\n\nexport type QueryFeatureArgs = {\n  id: Scalars['ID'];\n  publicationState?: Maybe<PublicationState>;\n};\n\n\nexport type QueryFeaturesArgs = {\n  sort?: Maybe<Scalars['String']>;\n  limit?: Maybe<Scalars['Int']>;\n  start?: Maybe<Scalars['Int']>;\n  where?: Maybe<Scalars['JSON']>;\n  publicationState?: Maybe<PublicationState>;\n  locale?: Maybe<Scalars['String']>;\n};\n\n\nexport type QueryFeaturesConnectionArgs = {\n  sort?: Maybe<Scalars['String']>;\n  limit?: Maybe<Scalars['Int']>;\n  start?: Maybe<Scalars['Int']>;\n  where?: Maybe<Scalars['JSON']>;\n  locale?: Maybe<Scalars['String']>;\n};\n\n\nexport type QueryHomeBannerArgs = {\n  publicationState?: Maybe<PublicationState>;\n};\n\n\nexport type QueryHotelArgs = {\n  id: Scalars['ID'];\n  publicationState?: Maybe<PublicationState>;\n};\n\n\nexport type QueryHotelsArgs = {\n  sort?: Maybe<Scalars['String']>;\n  limit?: Maybe<Scalars['Int']>;\n  start?: Maybe<Scalars['Int']>;\n  where?: Maybe<Scalars['JSON']>;\n  publicationState?: Maybe<PublicationState>;\n};\n\n\nexport type QueryHotelsConnectionArgs = {\n  sort?: Maybe<Scalars['String']>;\n  limit?: Maybe<Scalars['Int']>;\n  start?: Maybe<Scalars['Int']>;\n  where?: Maybe<Scalars['JSON']>;\n};\n\n\nexport type QueryLocationArgs = {\n  id: Scalars['ID'];\n  publicationState?: Maybe<PublicationState>;\n};\n\n\nexport type QueryLocationsArgs = {\n  sort?: Maybe<Scalars['String']>;\n  limit?: Maybe<Scalars['Int']>;\n  start?: Maybe<Scalars['Int']>;\n  where?: Maybe<Scalars['JSON']>;\n  publicationState?: Maybe<PublicationState>;\n  locale?: Maybe<Scalars['String']>;\n};\n\n\nexport type QueryLocationsConnectionArgs = {\n  sort?: Maybe<Scalars['String']>;\n  limit?: Maybe<Scalars['Int']>;\n  start?: Maybe<Scalars['Int']>;\n  where?: Maybe<Scalars['JSON']>;\n  locale?: Maybe<Scalars['String']>;\n};\n\n\nexport type QueryPartnerArgs = {\n  id: Scalars['ID'];\n  publicationState?: Maybe<PublicationState>;\n};\n\n\nexport type QueryPartnersArgs = {\n  sort?: Maybe<Scalars['String']>;\n  limit?: Maybe<Scalars['Int']>;\n  start?: Maybe<Scalars['Int']>;\n  where?: Maybe<Scalars['JSON']>;\n  publicationState?: Maybe<PublicationState>;\n};\n\n\nexport type QueryPartnersConnectionArgs = {\n  sort?: Maybe<Scalars['String']>;\n  limit?: Maybe<Scalars['Int']>;\n  start?: Maybe<Scalars['Int']>;\n  where?: Maybe<Scalars['JSON']>;\n};\n\n\nexport type QueryReviewArgs = {\n  id: Scalars['ID'];\n  publicationState?: Maybe<PublicationState>;\n};\n\n\nexport type QueryReviewsArgs = {\n  sort?: Maybe<Scalars['String']>;\n  limit?: Maybe<Scalars['Int']>;\n  start?: Maybe<Scalars['Int']>;\n  where?: Maybe<Scalars['JSON']>;\n  publicationState?: Maybe<PublicationState>;\n};\n\n\nexport type QueryReviewsConnectionArgs = {\n  sort?: Maybe<Scalars['String']>;\n  limit?: Maybe<Scalars['Int']>;\n  start?: Maybe<Scalars['Int']>;\n  where?: Maybe<Scalars['JSON']>;\n};\n\n\nexport type QuerySubscriberArgs = {\n  id: Scalars['ID'];\n  publicationState?: Maybe<PublicationState>;\n};\n\n\nexport type QuerySubscribersArgs = {\n  sort?: Maybe<Scalars['String']>;\n  limit?: Maybe<Scalars['Int']>;\n  start?: Maybe<Scalars['Int']>;\n  where?: Maybe<Scalars['JSON']>;\n  publicationState?: Maybe<PublicationState>;\n};\n\n\nexport type QuerySubscribersConnectionArgs = {\n  sort?: Maybe<Scalars['String']>;\n  limit?: Maybe<Scalars['Int']>;\n  start?: Maybe<Scalars['Int']>;\n  where?: Maybe<Scalars['JSON']>;\n};\n\n\nexport type QueryTripArgs = {\n  id: Scalars['ID'];\n  publicationState?: Maybe<PublicationState>;\n};\n\n\nexport type QueryTripsArgs = {\n  sort?: Maybe<Scalars['String']>;\n  limit?: Maybe<Scalars['Int']>;\n  start?: Maybe<Scalars['Int']>;\n  where?: Maybe<Scalars['JSON']>;\n  publicationState?: Maybe<PublicationState>;\n  locale?: Maybe<Scalars['String']>;\n};\n\n\nexport type QueryTripsConnectionArgs = {\n  sort?: Maybe<Scalars['String']>;\n  limit?: Maybe<Scalars['Int']>;\n  start?: Maybe<Scalars['Int']>;\n  where?: Maybe<Scalars['JSON']>;\n  locale?: Maybe<Scalars['String']>;\n};\n\n\nexport type QueryFilesArgs = {\n  sort?: Maybe<Scalars['String']>;\n  limit?: Maybe<Scalars['Int']>;\n  start?: Maybe<Scalars['Int']>;\n  where?: Maybe<Scalars['JSON']>;\n  publicationState?: Maybe<PublicationState>;\n};\n\n\nexport type QueryFilesConnectionArgs = {\n  sort?: Maybe<Scalars['String']>;\n  limit?: Maybe<Scalars['Int']>;\n  start?: Maybe<Scalars['Int']>;\n  where?: Maybe<Scalars['JSON']>;\n};\n\n\nexport type QueryRoleArgs = {\n  id: Scalars['ID'];\n  publicationState?: Maybe<PublicationState>;\n};\n\n\nexport type QueryRolesArgs = {\n  sort?: Maybe<Scalars['String']>;\n  limit?: Maybe<Scalars['Int']>;\n  start?: Maybe<Scalars['Int']>;\n  where?: Maybe<Scalars['JSON']>;\n  publicationState?: Maybe<PublicationState>;\n};\n\n\nexport type QueryRolesConnectionArgs = {\n  sort?: Maybe<Scalars['String']>;\n  limit?: Maybe<Scalars['Int']>;\n  start?: Maybe<Scalars['Int']>;\n  where?: Maybe<Scalars['JSON']>;\n};\n\n\nexport type QueryUserArgs = {\n  id: Scalars['ID'];\n  publicationState?: Maybe<PublicationState>;\n};\n\n\nexport type QueryUsersArgs = {\n  sort?: Maybe<Scalars['String']>;\n  limit?: Maybe<Scalars['Int']>;\n  start?: Maybe<Scalars['Int']>;\n  where?: Maybe<Scalars['JSON']>;\n  publicationState?: Maybe<PublicationState>;\n};\n\n\nexport type QueryUsersConnectionArgs = {\n  sort?: Maybe<Scalars['String']>;\n  limit?: Maybe<Scalars['Int']>;\n  start?: Maybe<Scalars['Int']>;\n  where?: Maybe<Scalars['JSON']>;\n};\n\nexport type Review = {\n  __typename?: 'Review';\n  id: Scalars['ID'];\n  _id: Scalars['ID'];\n  createdAt: Scalars['DateTime'];\n  updatedAt: Scalars['DateTime'];\n  text?: Maybe<Scalars['String']>;\n  rating: Scalars['Float'];\n  author?: Maybe<UsersPermissionsUser>;\n  active?: Maybe<Scalars['Boolean']>;\n  trip?: Maybe<Trips>;\n  published_at?: Maybe<Scalars['DateTime']>;\n};\n\nexport type ReviewAggregator = {\n  __typename?: 'ReviewAggregator';\n  count?: Maybe<Scalars['Int']>;\n  totalCount?: Maybe<Scalars['Int']>;\n  sum?: Maybe<ReviewAggregatorSum>;\n  avg?: Maybe<ReviewAggregatorAvg>;\n  min?: Maybe<ReviewAggregatorMin>;\n  max?: Maybe<ReviewAggregatorMax>;\n};\n\nexport type ReviewAggregatorAvg = {\n  __typename?: 'ReviewAggregatorAvg';\n  rating?: Maybe<Scalars['Float']>;\n};\n\nexport type ReviewAggregatorMax = {\n  __typename?: 'ReviewAggregatorMax';\n  rating?: Maybe<Scalars['Float']>;\n};\n\nexport type ReviewAggregatorMin = {\n  __typename?: 'ReviewAggregatorMin';\n  rating?: Maybe<Scalars['Float']>;\n};\n\nexport type ReviewAggregatorSum = {\n  __typename?: 'ReviewAggregatorSum';\n  rating?: Maybe<Scalars['Float']>;\n};\n\nexport type ReviewConnection = {\n  __typename?: 'ReviewConnection';\n  values?: Maybe<Array<Maybe<Review>>>;\n  groupBy?: Maybe<ReviewGroupBy>;\n  aggregate?: Maybe<ReviewAggregator>;\n};\n\nexport type ReviewConnectionActive = {\n  __typename?: 'ReviewConnectionActive';\n  key?: Maybe<Scalars['Boolean']>;\n  connection?: Maybe<ReviewConnection>;\n};\n\nexport type ReviewConnectionAuthor = {\n  __typename?: 'ReviewConnectionAuthor';\n  key?: Maybe<Scalars['ID']>;\n  connection?: Maybe<ReviewConnection>;\n};\n\nexport type ReviewConnectionCreatedAt = {\n  __typename?: 'ReviewConnectionCreatedAt';\n  key?: Maybe<Scalars['DateTime']>;\n  connection?: Maybe<ReviewConnection>;\n};\n\nexport type ReviewConnectionId = {\n  __typename?: 'ReviewConnectionId';\n  key?: Maybe<Scalars['ID']>;\n  connection?: Maybe<ReviewConnection>;\n};\n\nexport type ReviewConnectionPublished_At = {\n  __typename?: 'ReviewConnectionPublished_at';\n  key?: Maybe<Scalars['DateTime']>;\n  connection?: Maybe<ReviewConnection>;\n};\n\nexport type ReviewConnectionRating = {\n  __typename?: 'ReviewConnectionRating';\n  key?: Maybe<Scalars['Float']>;\n  connection?: Maybe<ReviewConnection>;\n};\n\nexport type ReviewConnectionText = {\n  __typename?: 'ReviewConnectionText';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<ReviewConnection>;\n};\n\nexport type ReviewConnectionTrip = {\n  __typename?: 'ReviewConnectionTrip';\n  key?: Maybe<Scalars['ID']>;\n  connection?: Maybe<ReviewConnection>;\n};\n\nexport type ReviewConnectionUpdatedAt = {\n  __typename?: 'ReviewConnectionUpdatedAt';\n  key?: Maybe<Scalars['DateTime']>;\n  connection?: Maybe<ReviewConnection>;\n};\n\nexport type ReviewConnection_Id = {\n  __typename?: 'ReviewConnection_id';\n  key?: Maybe<Scalars['ID']>;\n  connection?: Maybe<ReviewConnection>;\n};\n\nexport type ReviewGroupBy = {\n  __typename?: 'ReviewGroupBy';\n  id?: Maybe<Array<Maybe<ReviewConnectionId>>>;\n  _id?: Maybe<Array<Maybe<ReviewConnection_Id>>>;\n  createdAt?: Maybe<Array<Maybe<ReviewConnectionCreatedAt>>>;\n  updatedAt?: Maybe<Array<Maybe<ReviewConnectionUpdatedAt>>>;\n  text?: Maybe<Array<Maybe<ReviewConnectionText>>>;\n  rating?: Maybe<Array<Maybe<ReviewConnectionRating>>>;\n  author?: Maybe<Array<Maybe<ReviewConnectionAuthor>>>;\n  active?: Maybe<Array<Maybe<ReviewConnectionActive>>>;\n  trip?: Maybe<Array<Maybe<ReviewConnectionTrip>>>;\n  published_at?: Maybe<Array<Maybe<ReviewConnectionPublished_At>>>;\n};\n\nexport type ReviewInput = {\n  text?: Maybe<Scalars['String']>;\n  rating: Scalars['Float'];\n  author?: Maybe<Scalars['ID']>;\n  active?: Maybe<Scalars['Boolean']>;\n  trip?: Maybe<Scalars['ID']>;\n  published_at?: Maybe<Scalars['DateTime']>;\n  created_by?: Maybe<Scalars['ID']>;\n  updated_by?: Maybe<Scalars['ID']>;\n};\n\nexport type RoleInput = {\n  name: Scalars['String'];\n  description?: Maybe<Scalars['String']>;\n  type?: Maybe<Scalars['String']>;\n  permissions?: Maybe<Array<Maybe<Scalars['ID']>>>;\n  users?: Maybe<Array<Maybe<Scalars['ID']>>>;\n  created_by?: Maybe<Scalars['ID']>;\n  updated_by?: Maybe<Scalars['ID']>;\n};\n\nexport type SubscriberInput = {\n  email: Scalars['String'];\n  published_at?: Maybe<Scalars['DateTime']>;\n  created_by?: Maybe<Scalars['ID']>;\n  updated_by?: Maybe<Scalars['ID']>;\n};\n\nexport type Subscribers = {\n  __typename?: 'Subscribers';\n  id: Scalars['ID'];\n  _id: Scalars['ID'];\n  createdAt: Scalars['DateTime'];\n  updatedAt: Scalars['DateTime'];\n  email: Scalars['String'];\n  published_at?: Maybe<Scalars['DateTime']>;\n};\n\nexport type SubscribersAggregator = {\n  __typename?: 'SubscribersAggregator';\n  count?: Maybe<Scalars['Int']>;\n  totalCount?: Maybe<Scalars['Int']>;\n};\n\nexport type SubscribersConnection = {\n  __typename?: 'SubscribersConnection';\n  values?: Maybe<Array<Maybe<Subscribers>>>;\n  groupBy?: Maybe<SubscribersGroupBy>;\n  aggregate?: Maybe<SubscribersAggregator>;\n};\n\nexport type SubscribersConnectionCreatedAt = {\n  __typename?: 'SubscribersConnectionCreatedAt';\n  key?: Maybe<Scalars['DateTime']>;\n  connection?: Maybe<SubscribersConnection>;\n};\n\nexport type SubscribersConnectionEmail = {\n  __typename?: 'SubscribersConnectionEmail';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<SubscribersConnection>;\n};\n\nexport type SubscribersConnectionId = {\n  __typename?: 'SubscribersConnectionId';\n  key?: Maybe<Scalars['ID']>;\n  connection?: Maybe<SubscribersConnection>;\n};\n\nexport type SubscribersConnectionPublished_At = {\n  __typename?: 'SubscribersConnectionPublished_at';\n  key?: Maybe<Scalars['DateTime']>;\n  connection?: Maybe<SubscribersConnection>;\n};\n\nexport type SubscribersConnectionUpdatedAt = {\n  __typename?: 'SubscribersConnectionUpdatedAt';\n  key?: Maybe<Scalars['DateTime']>;\n  connection?: Maybe<SubscribersConnection>;\n};\n\nexport type SubscribersConnection_Id = {\n  __typename?: 'SubscribersConnection_id';\n  key?: Maybe<Scalars['ID']>;\n  connection?: Maybe<SubscribersConnection>;\n};\n\nexport type SubscribersGroupBy = {\n  __typename?: 'SubscribersGroupBy';\n  id?: Maybe<Array<Maybe<SubscribersConnectionId>>>;\n  _id?: Maybe<Array<Maybe<SubscribersConnection_Id>>>;\n  createdAt?: Maybe<Array<Maybe<SubscribersConnectionCreatedAt>>>;\n  updatedAt?: Maybe<Array<Maybe<SubscribersConnectionUpdatedAt>>>;\n  email?: Maybe<Array<Maybe<SubscribersConnectionEmail>>>;\n  published_at?: Maybe<Array<Maybe<SubscribersConnectionPublished_At>>>;\n};\n\n\nexport type TripInput = {\n  name: Scalars['String'];\n  previewImage?: Maybe<Scalars['ID']>;\n  active?: Maybe<Scalars['Boolean']>;\n  trip_type: Enum_Trips_Trip_Type;\n  description?: Maybe<Scalars['String']>;\n  duration: Scalars['Int'];\n  partner?: Maybe<Scalars['ID']>;\n  currency?: Maybe<Enum_Trips_Currency>;\n  city?: Maybe<Scalars['ID']>;\n  features?: Maybe<Array<ComponentFeatureFeatureInput>>;\n  basePrice: Scalars['Int'];\n  basePeopleCount: Scalars['Int'];\n  discount?: Maybe<Scalars['Float']>;\n  travelType: Enum_Trips_Traveltype;\n  hotel?: Maybe<Scalars['ID']>;\n  plan?: Maybe<Array<ComponentTimelineTimelineInput>>;\n  sequence: Scalars['String'];\n  localizations?: Maybe<Array<Maybe<Scalars['ID']>>>;\n  locale?: Maybe<Scalars['String']>;\n  published_at?: Maybe<Scalars['DateTime']>;\n  created_by?: Maybe<Scalars['ID']>;\n  updated_by?: Maybe<Scalars['ID']>;\n};\n\nexport type Trips = {\n  __typename?: 'Trips';\n  id: Scalars['ID'];\n  _id: Scalars['ID'];\n  createdAt: Scalars['DateTime'];\n  updatedAt: Scalars['DateTime'];\n  name: Scalars['String'];\n  previewImage?: Maybe<UploadFile>;\n  active?: Maybe<Scalars['Boolean']>;\n  trip_type: Enum_Trips_Trip_Type;\n  description?: Maybe<Scalars['String']>;\n  duration: Scalars['Int'];\n  partner?: Maybe<Partner>;\n  currency?: Maybe<Enum_Trips_Currency>;\n  city?: Maybe<City>;\n  features?: Maybe<Array<Maybe<ComponentFeatureFeature>>>;\n  basePrice: Scalars['Int'];\n  basePeopleCount: Scalars['Int'];\n  discount?: Maybe<Scalars['Float']>;\n  travelType: Enum_Trips_Traveltype;\n  hotel?: Maybe<Hotels>;\n  plan?: Maybe<Array<Maybe<ComponentTimelineTimeline>>>;\n  locale?: Maybe<Scalars['String']>;\n  published_at?: Maybe<Scalars['DateTime']>;\n  localizations?: Maybe<Array<Maybe<Trips>>>;\n};\n\n\nexport type TripsLocalizationsArgs = {\n  sort?: Maybe<Scalars['String']>;\n  limit?: Maybe<Scalars['Int']>;\n  start?: Maybe<Scalars['Int']>;\n  where?: Maybe<Scalars['JSON']>;\n};\n\nexport type TripsAggregator = {\n  __typename?: 'TripsAggregator';\n  count?: Maybe<Scalars['Int']>;\n  totalCount?: Maybe<Scalars['Int']>;\n  sum?: Maybe<TripsAggregatorSum>;\n  avg?: Maybe<TripsAggregatorAvg>;\n  min?: Maybe<TripsAggregatorMin>;\n  max?: Maybe<TripsAggregatorMax>;\n};\n\nexport type TripsAggregatorAvg = {\n  __typename?: 'TripsAggregatorAvg';\n  duration?: Maybe<Scalars['Float']>;\n  basePrice?: Maybe<Scalars['Float']>;\n  basePeopleCount?: Maybe<Scalars['Float']>;\n  discount?: Maybe<Scalars['Float']>;\n};\n\nexport type TripsAggregatorMax = {\n  __typename?: 'TripsAggregatorMax';\n  duration?: Maybe<Scalars['Float']>;\n  basePrice?: Maybe<Scalars['Float']>;\n  basePeopleCount?: Maybe<Scalars['Float']>;\n  discount?: Maybe<Scalars['Float']>;\n};\n\nexport type TripsAggregatorMin = {\n  __typename?: 'TripsAggregatorMin';\n  duration?: Maybe<Scalars['Float']>;\n  basePrice?: Maybe<Scalars['Float']>;\n  basePeopleCount?: Maybe<Scalars['Float']>;\n  discount?: Maybe<Scalars['Float']>;\n};\n\nexport type TripsAggregatorSum = {\n  __typename?: 'TripsAggregatorSum';\n  duration?: Maybe<Scalars['Float']>;\n  basePrice?: Maybe<Scalars['Float']>;\n  basePeopleCount?: Maybe<Scalars['Float']>;\n  discount?: Maybe<Scalars['Float']>;\n};\n\nexport type TripsConnection = {\n  __typename?: 'TripsConnection';\n  values?: Maybe<Array<Maybe<Trips>>>;\n  groupBy?: Maybe<TripsGroupBy>;\n  aggregate?: Maybe<TripsAggregator>;\n};\n\nexport type TripsConnectionActive = {\n  __typename?: 'TripsConnectionActive';\n  key?: Maybe<Scalars['Boolean']>;\n  connection?: Maybe<TripsConnection>;\n};\n\nexport type TripsConnectionBasePeopleCount = {\n  __typename?: 'TripsConnectionBasePeopleCount';\n  key?: Maybe<Scalars['Int']>;\n  connection?: Maybe<TripsConnection>;\n};\n\nexport type TripsConnectionBasePrice = {\n  __typename?: 'TripsConnectionBasePrice';\n  key?: Maybe<Scalars['Int']>;\n  connection?: Maybe<TripsConnection>;\n};\n\nexport type TripsConnectionCity = {\n  __typename?: 'TripsConnectionCity';\n  key?: Maybe<Scalars['ID']>;\n  connection?: Maybe<TripsConnection>;\n};\n\nexport type TripsConnectionCreatedAt = {\n  __typename?: 'TripsConnectionCreatedAt';\n  key?: Maybe<Scalars['DateTime']>;\n  connection?: Maybe<TripsConnection>;\n};\n\nexport type TripsConnectionCurrency = {\n  __typename?: 'TripsConnectionCurrency';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<TripsConnection>;\n};\n\nexport type TripsConnectionDescription = {\n  __typename?: 'TripsConnectionDescription';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<TripsConnection>;\n};\n\nexport type TripsConnectionDiscount = {\n  __typename?: 'TripsConnectionDiscount';\n  key?: Maybe<Scalars['Float']>;\n  connection?: Maybe<TripsConnection>;\n};\n\nexport type TripsConnectionDuration = {\n  __typename?: 'TripsConnectionDuration';\n  key?: Maybe<Scalars['Int']>;\n  connection?: Maybe<TripsConnection>;\n};\n\nexport type TripsConnectionHotel = {\n  __typename?: 'TripsConnectionHotel';\n  key?: Maybe<Scalars['ID']>;\n  connection?: Maybe<TripsConnection>;\n};\n\nexport type TripsConnectionId = {\n  __typename?: 'TripsConnectionId';\n  key?: Maybe<Scalars['ID']>;\n  connection?: Maybe<TripsConnection>;\n};\n\nexport type TripsConnectionLocale = {\n  __typename?: 'TripsConnectionLocale';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<TripsConnection>;\n};\n\nexport type TripsConnectionName = {\n  __typename?: 'TripsConnectionName';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<TripsConnection>;\n};\n\nexport type TripsConnectionPartner = {\n  __typename?: 'TripsConnectionPartner';\n  key?: Maybe<Scalars['ID']>;\n  connection?: Maybe<TripsConnection>;\n};\n\nexport type TripsConnectionPreviewImage = {\n  __typename?: 'TripsConnectionPreviewImage';\n  key?: Maybe<Scalars['ID']>;\n  connection?: Maybe<TripsConnection>;\n};\n\nexport type TripsConnectionPublished_At = {\n  __typename?: 'TripsConnectionPublished_at';\n  key?: Maybe<Scalars['DateTime']>;\n  connection?: Maybe<TripsConnection>;\n};\n\nexport type TripsConnectionTravelType = {\n  __typename?: 'TripsConnectionTravelType';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<TripsConnection>;\n};\n\nexport type TripsConnectionTrip_Type = {\n  __typename?: 'TripsConnectionTrip_type';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<TripsConnection>;\n};\n\nexport type TripsConnectionUpdatedAt = {\n  __typename?: 'TripsConnectionUpdatedAt';\n  key?: Maybe<Scalars['DateTime']>;\n  connection?: Maybe<TripsConnection>;\n};\n\nexport type TripsConnection_Id = {\n  __typename?: 'TripsConnection_id';\n  key?: Maybe<Scalars['ID']>;\n  connection?: Maybe<TripsConnection>;\n};\n\nexport type TripsGroupBy = {\n  __typename?: 'TripsGroupBy';\n  id?: Maybe<Array<Maybe<TripsConnectionId>>>;\n  _id?: Maybe<Array<Maybe<TripsConnection_Id>>>;\n  createdAt?: Maybe<Array<Maybe<TripsConnectionCreatedAt>>>;\n  updatedAt?: Maybe<Array<Maybe<TripsConnectionUpdatedAt>>>;\n  name?: Maybe<Array<Maybe<TripsConnectionName>>>;\n  previewImage?: Maybe<Array<Maybe<TripsConnectionPreviewImage>>>;\n  active?: Maybe<Array<Maybe<TripsConnectionActive>>>;\n  trip_type?: Maybe<Array<Maybe<TripsConnectionTrip_Type>>>;\n  description?: Maybe<Array<Maybe<TripsConnectionDescription>>>;\n  duration?: Maybe<Array<Maybe<TripsConnectionDuration>>>;\n  partner?: Maybe<Array<Maybe<TripsConnectionPartner>>>;\n  currency?: Maybe<Array<Maybe<TripsConnectionCurrency>>>;\n  city?: Maybe<Array<Maybe<TripsConnectionCity>>>;\n  basePrice?: Maybe<Array<Maybe<TripsConnectionBasePrice>>>;\n  basePeopleCount?: Maybe<Array<Maybe<TripsConnectionBasePeopleCount>>>;\n  discount?: Maybe<Array<Maybe<TripsConnectionDiscount>>>;\n  travelType?: Maybe<Array<Maybe<TripsConnectionTravelType>>>;\n  hotel?: Maybe<Array<Maybe<TripsConnectionHotel>>>;\n  locale?: Maybe<Array<Maybe<TripsConnectionLocale>>>;\n  published_at?: Maybe<Array<Maybe<TripsConnectionPublished_At>>>;\n};\n\n\nexport type UploadFile = {\n  __typename?: 'UploadFile';\n  id: Scalars['ID'];\n  _id: Scalars['ID'];\n  createdAt: Scalars['DateTime'];\n  updatedAt: Scalars['DateTime'];\n  name: Scalars['String'];\n  alternativeText?: Maybe<Scalars['String']>;\n  caption?: Maybe<Scalars['String']>;\n  width?: Maybe<Scalars['Int']>;\n  height?: Maybe<Scalars['Int']>;\n  formats?: Maybe<Scalars['JSON']>;\n  hash: Scalars['String'];\n  ext?: Maybe<Scalars['String']>;\n  mime: Scalars['String'];\n  size: Scalars['Float'];\n  url: Scalars['String'];\n  previewUrl?: Maybe<Scalars['String']>;\n  provider: Scalars['String'];\n  provider_metadata?: Maybe<Scalars['JSON']>;\n  related?: Maybe<Array<Maybe<Morph>>>;\n};\n\n\nexport type UploadFileRelatedArgs = {\n  sort?: Maybe<Scalars['String']>;\n  limit?: Maybe<Scalars['Int']>;\n  start?: Maybe<Scalars['Int']>;\n  where?: Maybe<Scalars['JSON']>;\n};\n\nexport type UploadFileAggregator = {\n  __typename?: 'UploadFileAggregator';\n  count?: Maybe<Scalars['Int']>;\n  totalCount?: Maybe<Scalars['Int']>;\n  sum?: Maybe<UploadFileAggregatorSum>;\n  avg?: Maybe<UploadFileAggregatorAvg>;\n  min?: Maybe<UploadFileAggregatorMin>;\n  max?: Maybe<UploadFileAggregatorMax>;\n};\n\nexport type UploadFileAggregatorAvg = {\n  __typename?: 'UploadFileAggregatorAvg';\n  width?: Maybe<Scalars['Float']>;\n  height?: Maybe<Scalars['Float']>;\n  size?: Maybe<Scalars['Float']>;\n};\n\nexport type UploadFileAggregatorMax = {\n  __typename?: 'UploadFileAggregatorMax';\n  width?: Maybe<Scalars['Float']>;\n  height?: Maybe<Scalars['Float']>;\n  size?: Maybe<Scalars['Float']>;\n};\n\nexport type UploadFileAggregatorMin = {\n  __typename?: 'UploadFileAggregatorMin';\n  width?: Maybe<Scalars['Float']>;\n  height?: Maybe<Scalars['Float']>;\n  size?: Maybe<Scalars['Float']>;\n};\n\nexport type UploadFileAggregatorSum = {\n  __typename?: 'UploadFileAggregatorSum';\n  width?: Maybe<Scalars['Float']>;\n  height?: Maybe<Scalars['Float']>;\n  size?: Maybe<Scalars['Float']>;\n};\n\nexport type UploadFileConnection = {\n  __typename?: 'UploadFileConnection';\n  values?: Maybe<Array<Maybe<UploadFile>>>;\n  groupBy?: Maybe<UploadFileGroupBy>;\n  aggregate?: Maybe<UploadFileAggregator>;\n};\n\nexport type UploadFileConnectionAlternativeText = {\n  __typename?: 'UploadFileConnectionAlternativeText';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<UploadFileConnection>;\n};\n\nexport type UploadFileConnectionCaption = {\n  __typename?: 'UploadFileConnectionCaption';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<UploadFileConnection>;\n};\n\nexport type UploadFileConnectionCreatedAt = {\n  __typename?: 'UploadFileConnectionCreatedAt';\n  key?: Maybe<Scalars['DateTime']>;\n  connection?: Maybe<UploadFileConnection>;\n};\n\nexport type UploadFileConnectionExt = {\n  __typename?: 'UploadFileConnectionExt';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<UploadFileConnection>;\n};\n\nexport type UploadFileConnectionFormats = {\n  __typename?: 'UploadFileConnectionFormats';\n  key?: Maybe<Scalars['JSON']>;\n  connection?: Maybe<UploadFileConnection>;\n};\n\nexport type UploadFileConnectionHash = {\n  __typename?: 'UploadFileConnectionHash';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<UploadFileConnection>;\n};\n\nexport type UploadFileConnectionHeight = {\n  __typename?: 'UploadFileConnectionHeight';\n  key?: Maybe<Scalars['Int']>;\n  connection?: Maybe<UploadFileConnection>;\n};\n\nexport type UploadFileConnectionId = {\n  __typename?: 'UploadFileConnectionId';\n  key?: Maybe<Scalars['ID']>;\n  connection?: Maybe<UploadFileConnection>;\n};\n\nexport type UploadFileConnectionMime = {\n  __typename?: 'UploadFileConnectionMime';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<UploadFileConnection>;\n};\n\nexport type UploadFileConnectionName = {\n  __typename?: 'UploadFileConnectionName';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<UploadFileConnection>;\n};\n\nexport type UploadFileConnectionPreviewUrl = {\n  __typename?: 'UploadFileConnectionPreviewUrl';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<UploadFileConnection>;\n};\n\nexport type UploadFileConnectionProvider = {\n  __typename?: 'UploadFileConnectionProvider';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<UploadFileConnection>;\n};\n\nexport type UploadFileConnectionProvider_Metadata = {\n  __typename?: 'UploadFileConnectionProvider_metadata';\n  key?: Maybe<Scalars['JSON']>;\n  connection?: Maybe<UploadFileConnection>;\n};\n\nexport type UploadFileConnectionSize = {\n  __typename?: 'UploadFileConnectionSize';\n  key?: Maybe<Scalars['Float']>;\n  connection?: Maybe<UploadFileConnection>;\n};\n\nexport type UploadFileConnectionUpdatedAt = {\n  __typename?: 'UploadFileConnectionUpdatedAt';\n  key?: Maybe<Scalars['DateTime']>;\n  connection?: Maybe<UploadFileConnection>;\n};\n\nexport type UploadFileConnectionUrl = {\n  __typename?: 'UploadFileConnectionUrl';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<UploadFileConnection>;\n};\n\nexport type UploadFileConnectionWidth = {\n  __typename?: 'UploadFileConnectionWidth';\n  key?: Maybe<Scalars['Int']>;\n  connection?: Maybe<UploadFileConnection>;\n};\n\nexport type UploadFileConnection_Id = {\n  __typename?: 'UploadFileConnection_id';\n  key?: Maybe<Scalars['ID']>;\n  connection?: Maybe<UploadFileConnection>;\n};\n\nexport type UploadFileGroupBy = {\n  __typename?: 'UploadFileGroupBy';\n  id?: Maybe<Array<Maybe<UploadFileConnectionId>>>;\n  _id?: Maybe<Array<Maybe<UploadFileConnection_Id>>>;\n  createdAt?: Maybe<Array<Maybe<UploadFileConnectionCreatedAt>>>;\n  updatedAt?: Maybe<Array<Maybe<UploadFileConnectionUpdatedAt>>>;\n  name?: Maybe<Array<Maybe<UploadFileConnectionName>>>;\n  alternativeText?: Maybe<Array<Maybe<UploadFileConnectionAlternativeText>>>;\n  caption?: Maybe<Array<Maybe<UploadFileConnectionCaption>>>;\n  width?: Maybe<Array<Maybe<UploadFileConnectionWidth>>>;\n  height?: Maybe<Array<Maybe<UploadFileConnectionHeight>>>;\n  formats?: Maybe<Array<Maybe<UploadFileConnectionFormats>>>;\n  hash?: Maybe<Array<Maybe<UploadFileConnectionHash>>>;\n  ext?: Maybe<Array<Maybe<UploadFileConnectionExt>>>;\n  mime?: Maybe<Array<Maybe<UploadFileConnectionMime>>>;\n  size?: Maybe<Array<Maybe<UploadFileConnectionSize>>>;\n  url?: Maybe<Array<Maybe<UploadFileConnectionUrl>>>;\n  previewUrl?: Maybe<Array<Maybe<UploadFileConnectionPreviewUrl>>>;\n  provider?: Maybe<Array<Maybe<UploadFileConnectionProvider>>>;\n  provider_metadata?: Maybe<Array<Maybe<UploadFileConnectionProvider_Metadata>>>;\n};\n\nexport type UserInput = {\n  username: Scalars['String'];\n  email: Scalars['String'];\n  provider?: Maybe<Scalars['String']>;\n  password?: Maybe<Scalars['String']>;\n  resetPasswordToken?: Maybe<Scalars['String']>;\n  confirmationToken?: Maybe<Scalars['String']>;\n  confirmed?: Maybe<Scalars['Boolean']>;\n  blocked?: Maybe<Scalars['Boolean']>;\n  role?: Maybe<Scalars['ID']>;\n  created_by?: Maybe<Scalars['ID']>;\n  updated_by?: Maybe<Scalars['ID']>;\n};\n\nexport type UserPermissionsPasswordPayload = {\n  __typename?: 'UserPermissionsPasswordPayload';\n  ok: Scalars['Boolean'];\n};\n\nexport type UsersPermissionsLoginInput = {\n  identifier: Scalars['String'];\n  password: Scalars['String'];\n  provider?: Maybe<Scalars['String']>;\n};\n\nexport type UsersPermissionsLoginPayload = {\n  __typename?: 'UsersPermissionsLoginPayload';\n  jwt?: Maybe<Scalars['String']>;\n  user: UsersPermissionsMe;\n};\n\nexport type UsersPermissionsMe = {\n  __typename?: 'UsersPermissionsMe';\n  id: Scalars['ID'];\n  username: Scalars['String'];\n  email: Scalars['String'];\n  confirmed?: Maybe<Scalars['Boolean']>;\n  blocked?: Maybe<Scalars['Boolean']>;\n  role?: Maybe<UsersPermissionsMeRole>;\n};\n\nexport type UsersPermissionsMeRole = {\n  __typename?: 'UsersPermissionsMeRole';\n  id: Scalars['ID'];\n  name: Scalars['String'];\n  description?: Maybe<Scalars['String']>;\n  type?: Maybe<Scalars['String']>;\n};\n\nexport type UsersPermissionsPermission = {\n  __typename?: 'UsersPermissionsPermission';\n  id: Scalars['ID'];\n  _id: Scalars['ID'];\n  type: Scalars['String'];\n  controller: Scalars['String'];\n  action: Scalars['String'];\n  enabled: Scalars['Boolean'];\n  policy?: Maybe<Scalars['String']>;\n  role?: Maybe<UsersPermissionsRole>;\n};\n\nexport type UsersPermissionsRegisterInput = {\n  username: Scalars['String'];\n  email: Scalars['String'];\n  password: Scalars['String'];\n};\n\nexport type UsersPermissionsRole = {\n  __typename?: 'UsersPermissionsRole';\n  id: Scalars['ID'];\n  _id: Scalars['ID'];\n  name: Scalars['String'];\n  description?: Maybe<Scalars['String']>;\n  type?: Maybe<Scalars['String']>;\n  permissions?: Maybe<Array<Maybe<UsersPermissionsPermission>>>;\n  users?: Maybe<Array<Maybe<UsersPermissionsUser>>>;\n};\n\n\nexport type UsersPermissionsRolePermissionsArgs = {\n  sort?: Maybe<Scalars['String']>;\n  limit?: Maybe<Scalars['Int']>;\n  start?: Maybe<Scalars['Int']>;\n  where?: Maybe<Scalars['JSON']>;\n};\n\n\nexport type UsersPermissionsRoleUsersArgs = {\n  sort?: Maybe<Scalars['String']>;\n  limit?: Maybe<Scalars['Int']>;\n  start?: Maybe<Scalars['Int']>;\n  where?: Maybe<Scalars['JSON']>;\n};\n\nexport type UsersPermissionsRoleAggregator = {\n  __typename?: 'UsersPermissionsRoleAggregator';\n  count?: Maybe<Scalars['Int']>;\n  totalCount?: Maybe<Scalars['Int']>;\n};\n\nexport type UsersPermissionsRoleConnection = {\n  __typename?: 'UsersPermissionsRoleConnection';\n  values?: Maybe<Array<Maybe<UsersPermissionsRole>>>;\n  groupBy?: Maybe<UsersPermissionsRoleGroupBy>;\n  aggregate?: Maybe<UsersPermissionsRoleAggregator>;\n};\n\nexport type UsersPermissionsRoleConnectionDescription = {\n  __typename?: 'UsersPermissionsRoleConnectionDescription';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<UsersPermissionsRoleConnection>;\n};\n\nexport type UsersPermissionsRoleConnectionId = {\n  __typename?: 'UsersPermissionsRoleConnectionId';\n  key?: Maybe<Scalars['ID']>;\n  connection?: Maybe<UsersPermissionsRoleConnection>;\n};\n\nexport type UsersPermissionsRoleConnectionName = {\n  __typename?: 'UsersPermissionsRoleConnectionName';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<UsersPermissionsRoleConnection>;\n};\n\nexport type UsersPermissionsRoleConnectionType = {\n  __typename?: 'UsersPermissionsRoleConnectionType';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<UsersPermissionsRoleConnection>;\n};\n\nexport type UsersPermissionsRoleConnection_Id = {\n  __typename?: 'UsersPermissionsRoleConnection_id';\n  key?: Maybe<Scalars['ID']>;\n  connection?: Maybe<UsersPermissionsRoleConnection>;\n};\n\nexport type UsersPermissionsRoleGroupBy = {\n  __typename?: 'UsersPermissionsRoleGroupBy';\n  id?: Maybe<Array<Maybe<UsersPermissionsRoleConnectionId>>>;\n  _id?: Maybe<Array<Maybe<UsersPermissionsRoleConnection_Id>>>;\n  name?: Maybe<Array<Maybe<UsersPermissionsRoleConnectionName>>>;\n  description?: Maybe<Array<Maybe<UsersPermissionsRoleConnectionDescription>>>;\n  type?: Maybe<Array<Maybe<UsersPermissionsRoleConnectionType>>>;\n};\n\nexport type UsersPermissionsUser = {\n  __typename?: 'UsersPermissionsUser';\n  id: Scalars['ID'];\n  _id: Scalars['ID'];\n  createdAt: Scalars['DateTime'];\n  updatedAt: Scalars['DateTime'];\n  username: Scalars['String'];\n  email: Scalars['String'];\n  provider?: Maybe<Scalars['String']>;\n  confirmed?: Maybe<Scalars['Boolean']>;\n  blocked?: Maybe<Scalars['Boolean']>;\n  role?: Maybe<UsersPermissionsRole>;\n};\n\nexport type UsersPermissionsUserAggregator = {\n  __typename?: 'UsersPermissionsUserAggregator';\n  count?: Maybe<Scalars['Int']>;\n  totalCount?: Maybe<Scalars['Int']>;\n};\n\nexport type UsersPermissionsUserConnection = {\n  __typename?: 'UsersPermissionsUserConnection';\n  values?: Maybe<Array<Maybe<UsersPermissionsUser>>>;\n  groupBy?: Maybe<UsersPermissionsUserGroupBy>;\n  aggregate?: Maybe<UsersPermissionsUserAggregator>;\n};\n\nexport type UsersPermissionsUserConnectionBlocked = {\n  __typename?: 'UsersPermissionsUserConnectionBlocked';\n  key?: Maybe<Scalars['Boolean']>;\n  connection?: Maybe<UsersPermissionsUserConnection>;\n};\n\nexport type UsersPermissionsUserConnectionConfirmed = {\n  __typename?: 'UsersPermissionsUserConnectionConfirmed';\n  key?: Maybe<Scalars['Boolean']>;\n  connection?: Maybe<UsersPermissionsUserConnection>;\n};\n\nexport type UsersPermissionsUserConnectionCreatedAt = {\n  __typename?: 'UsersPermissionsUserConnectionCreatedAt';\n  key?: Maybe<Scalars['DateTime']>;\n  connection?: Maybe<UsersPermissionsUserConnection>;\n};\n\nexport type UsersPermissionsUserConnectionEmail = {\n  __typename?: 'UsersPermissionsUserConnectionEmail';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<UsersPermissionsUserConnection>;\n};\n\nexport type UsersPermissionsUserConnectionId = {\n  __typename?: 'UsersPermissionsUserConnectionId';\n  key?: Maybe<Scalars['ID']>;\n  connection?: Maybe<UsersPermissionsUserConnection>;\n};\n\nexport type UsersPermissionsUserConnectionProvider = {\n  __typename?: 'UsersPermissionsUserConnectionProvider';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<UsersPermissionsUserConnection>;\n};\n\nexport type UsersPermissionsUserConnectionRole = {\n  __typename?: 'UsersPermissionsUserConnectionRole';\n  key?: Maybe<Scalars['ID']>;\n  connection?: Maybe<UsersPermissionsUserConnection>;\n};\n\nexport type UsersPermissionsUserConnectionUpdatedAt = {\n  __typename?: 'UsersPermissionsUserConnectionUpdatedAt';\n  key?: Maybe<Scalars['DateTime']>;\n  connection?: Maybe<UsersPermissionsUserConnection>;\n};\n\nexport type UsersPermissionsUserConnectionUsername = {\n  __typename?: 'UsersPermissionsUserConnectionUsername';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<UsersPermissionsUserConnection>;\n};\n\nexport type UsersPermissionsUserConnection_Id = {\n  __typename?: 'UsersPermissionsUserConnection_id';\n  key?: Maybe<Scalars['ID']>;\n  connection?: Maybe<UsersPermissionsUserConnection>;\n};\n\nexport type UsersPermissionsUserGroupBy = {\n  __typename?: 'UsersPermissionsUserGroupBy';\n  id?: Maybe<Array<Maybe<UsersPermissionsUserConnectionId>>>;\n  _id?: Maybe<Array<Maybe<UsersPermissionsUserConnection_Id>>>;\n  createdAt?: Maybe<Array<Maybe<UsersPermissionsUserConnectionCreatedAt>>>;\n  updatedAt?: Maybe<Array<Maybe<UsersPermissionsUserConnectionUpdatedAt>>>;\n  username?: Maybe<Array<Maybe<UsersPermissionsUserConnectionUsername>>>;\n  email?: Maybe<Array<Maybe<UsersPermissionsUserConnectionEmail>>>;\n  provider?: Maybe<Array<Maybe<UsersPermissionsUserConnectionProvider>>>;\n  confirmed?: Maybe<Array<Maybe<UsersPermissionsUserConnectionConfirmed>>>;\n  blocked?: Maybe<Array<Maybe<UsersPermissionsUserConnectionBlocked>>>;\n  role?: Maybe<Array<Maybe<UsersPermissionsUserConnectionRole>>>;\n};\n\nexport type CreateBookingInput = {\n  data?: Maybe<BookingInput>;\n};\n\nexport type CreateBookingPayload = {\n  __typename?: 'createBookingPayload';\n  booking?: Maybe<Booking>;\n};\n\nexport type CreateCityInput = {\n  data?: Maybe<CityInput>;\n};\n\nexport type CreateCityPayload = {\n  __typename?: 'createCityPayload';\n  city?: Maybe<City>;\n};\n\nexport type CreateFeatureInput = {\n  data?: Maybe<FeatureInput>;\n};\n\nexport type CreateFeaturePayload = {\n  __typename?: 'createFeaturePayload';\n  feature?: Maybe<Feature>;\n};\n\nexport type CreateHotelInput = {\n  data?: Maybe<HotelInput>;\n};\n\nexport type CreateHotelPayload = {\n  __typename?: 'createHotelPayload';\n  hotel?: Maybe<Hotels>;\n};\n\nexport type CreateLocationInput = {\n  data?: Maybe<LocationInput>;\n};\n\nexport type CreateLocationPayload = {\n  __typename?: 'createLocationPayload';\n  location?: Maybe<Location>;\n};\n\nexport type CreatePartnerInput = {\n  data?: Maybe<PartnerInput>;\n};\n\nexport type CreatePartnerPayload = {\n  __typename?: 'createPartnerPayload';\n  partner?: Maybe<Partner>;\n};\n\nexport type CreateReviewInput = {\n  data?: Maybe<ReviewInput>;\n};\n\nexport type CreateReviewPayload = {\n  __typename?: 'createReviewPayload';\n  review?: Maybe<Review>;\n};\n\nexport type CreateRoleInput = {\n  data?: Maybe<RoleInput>;\n};\n\nexport type CreateRolePayload = {\n  __typename?: 'createRolePayload';\n  role?: Maybe<UsersPermissionsRole>;\n};\n\nexport type CreateSubscriberInput = {\n  data?: Maybe<SubscriberInput>;\n};\n\nexport type CreateSubscriberPayload = {\n  __typename?: 'createSubscriberPayload';\n  subscriber?: Maybe<Subscribers>;\n};\n\nexport type CreateTripInput = {\n  data?: Maybe<TripInput>;\n};\n\nexport type CreateTripPayload = {\n  __typename?: 'createTripPayload';\n  trip?: Maybe<Trips>;\n};\n\nexport type CreateUserInput = {\n  data?: Maybe<UserInput>;\n};\n\nexport type CreateUserPayload = {\n  __typename?: 'createUserPayload';\n  user?: Maybe<UsersPermissionsUser>;\n};\n\nexport type DeleteBookingInput = {\n  where?: Maybe<InputId>;\n};\n\nexport type DeleteBookingPayload = {\n  __typename?: 'deleteBookingPayload';\n  booking?: Maybe<Booking>;\n};\n\nexport type DeleteCityInput = {\n  where?: Maybe<InputId>;\n};\n\nexport type DeleteCityPayload = {\n  __typename?: 'deleteCityPayload';\n  city?: Maybe<City>;\n};\n\nexport type DeleteFeatureInput = {\n  where?: Maybe<InputId>;\n};\n\nexport type DeleteFeaturePayload = {\n  __typename?: 'deleteFeaturePayload';\n  feature?: Maybe<Feature>;\n};\n\nexport type DeleteFileInput = {\n  where?: Maybe<InputId>;\n};\n\nexport type DeleteFilePayload = {\n  __typename?: 'deleteFilePayload';\n  file?: Maybe<UploadFile>;\n};\n\nexport type DeleteHomeBannerPayload = {\n  __typename?: 'deleteHomeBannerPayload';\n  homeBanner?: Maybe<HomeBanner>;\n};\n\nexport type DeleteHotelInput = {\n  where?: Maybe<InputId>;\n};\n\nexport type DeleteHotelPayload = {\n  __typename?: 'deleteHotelPayload';\n  hotel?: Maybe<Hotels>;\n};\n\nexport type DeleteLocationInput = {\n  where?: Maybe<InputId>;\n};\n\nexport type DeleteLocationPayload = {\n  __typename?: 'deleteLocationPayload';\n  location?: Maybe<Location>;\n};\n\nexport type DeletePartnerInput = {\n  where?: Maybe<InputId>;\n};\n\nexport type DeletePartnerPayload = {\n  __typename?: 'deletePartnerPayload';\n  partner?: Maybe<Partner>;\n};\n\nexport type DeleteReviewInput = {\n  where?: Maybe<InputId>;\n};\n\nexport type DeleteReviewPayload = {\n  __typename?: 'deleteReviewPayload';\n  review?: Maybe<Review>;\n};\n\nexport type DeleteRoleInput = {\n  where?: Maybe<InputId>;\n};\n\nexport type DeleteRolePayload = {\n  __typename?: 'deleteRolePayload';\n  role?: Maybe<UsersPermissionsRole>;\n};\n\nexport type DeleteSubscriberInput = {\n  where?: Maybe<InputId>;\n};\n\nexport type DeleteSubscriberPayload = {\n  __typename?: 'deleteSubscriberPayload';\n  subscriber?: Maybe<Subscribers>;\n};\n\nexport type DeleteTripInput = {\n  where?: Maybe<InputId>;\n};\n\nexport type DeleteTripPayload = {\n  __typename?: 'deleteTripPayload';\n  trip?: Maybe<Trips>;\n};\n\nexport type DeleteUserInput = {\n  where?: Maybe<InputId>;\n};\n\nexport type DeleteUserPayload = {\n  __typename?: 'deleteUserPayload';\n  user?: Maybe<UsersPermissionsUser>;\n};\n\nexport type EditBookingInput = {\n  trip?: Maybe<Scalars['ID']>;\n  approved?: Maybe<Scalars['Boolean']>;\n  basePrice?: Maybe<Scalars['Float']>;\n  currency?: Maybe<Enum_Booking_Currency>;\n  basePeopleCount?: Maybe<Scalars['Int']>;\n  discount?: Maybe<Scalars['Float']>;\n  fullName?: Maybe<Scalars['String']>;\n  phone?: Maybe<Scalars['String']>;\n  message?: Maybe<Scalars['String']>;\n  arrivalDate?: Maybe<Scalars['Date']>;\n  language?: Maybe<Scalars['String']>;\n  userBookingStatus?: Maybe<Enum_Booking_Userbookingstatus>;\n  email?: Maybe<Scalars['String']>;\n  adults?: Maybe<Scalars['Int']>;\n  children?: Maybe<Scalars['Int']>;\n  totalPrice?: Maybe<Scalars['Float']>;\n  published_at?: Maybe<Scalars['DateTime']>;\n  created_by?: Maybe<Scalars['ID']>;\n  updated_by?: Maybe<Scalars['ID']>;\n};\n\nexport type EditCityInput = {\n  name?: Maybe<Scalars['String']>;\n  description?: Maybe<Scalars['String']>;\n  image?: Maybe<Scalars['ID']>;\n  locations?: Maybe<Array<Maybe<Scalars['ID']>>>;\n  localizations?: Maybe<Array<Maybe<Scalars['ID']>>>;\n  locale?: Maybe<Scalars['String']>;\n  published_at?: Maybe<Scalars['DateTime']>;\n  created_by?: Maybe<Scalars['ID']>;\n  updated_by?: Maybe<Scalars['ID']>;\n};\n\nexport type EditComponentCoordinateCoordinateInput = {\n  id?: Maybe<Scalars['ID']>;\n  latitude?: Maybe<Scalars['Float']>;\n  longitude?: Maybe<Scalars['Float']>;\n};\n\nexport type EditComponentFeatureFeatureInput = {\n  id?: Maybe<Scalars['ID']>;\n  feature?: Maybe<Scalars['ID']>;\n  included?: Maybe<Scalars['Boolean']>;\n};\n\nexport type EditComponentPricePriceInput = {\n  id?: Maybe<Scalars['ID']>;\n  basePrice?: Maybe<Scalars['Float']>;\n  currency?: Maybe<Enum_Componentpriceprice_Currency>;\n  basePeopleCount?: Maybe<Scalars['Int']>;\n  extraAdultFee?: Maybe<Scalars['Float']>;\n  discount?: Maybe<Scalars['Float']>;\n};\n\nexport type EditComponentTimelineTimelineInput = {\n  id?: Maybe<Scalars['ID']>;\n  day?: Maybe<Scalars['Int']>;\n  description?: Maybe<Scalars['String']>;\n  locations?: Maybe<Array<Maybe<Scalars['ID']>>>;\n  travelTo?: Maybe<Scalars['ID']>;\n  transportationType?: Maybe<Enum_Componenttimelinetimeline_Transportationtype>;\n  restDay?: Maybe<Scalars['Boolean']>;\n};\n\nexport type EditFeatureInput = {\n  name?: Maybe<Scalars['String']>;\n  info?: Maybe<Scalars['String']>;\n  localizations?: Maybe<Array<Maybe<Scalars['ID']>>>;\n  locale?: Maybe<Scalars['String']>;\n  published_at?: Maybe<Scalars['DateTime']>;\n  created_by?: Maybe<Scalars['ID']>;\n  updated_by?: Maybe<Scalars['ID']>;\n};\n\nexport type EditFileInput = {\n  name?: Maybe<Scalars['String']>;\n  alternativeText?: Maybe<Scalars['String']>;\n  caption?: Maybe<Scalars['String']>;\n  width?: Maybe<Scalars['Int']>;\n  height?: Maybe<Scalars['Int']>;\n  formats?: Maybe<Scalars['JSON']>;\n  hash?: Maybe<Scalars['String']>;\n  ext?: Maybe<Scalars['String']>;\n  mime?: Maybe<Scalars['String']>;\n  size?: Maybe<Scalars['Float']>;\n  url?: Maybe<Scalars['String']>;\n  previewUrl?: Maybe<Scalars['String']>;\n  provider?: Maybe<Scalars['String']>;\n  provider_metadata?: Maybe<Scalars['JSON']>;\n  related?: Maybe<Array<Maybe<Scalars['ID']>>>;\n  created_by?: Maybe<Scalars['ID']>;\n  updated_by?: Maybe<Scalars['ID']>;\n};\n\nexport type EditHomeBannerInput = {\n  images?: Maybe<Array<Maybe<Scalars['ID']>>>;\n  published_at?: Maybe<Scalars['DateTime']>;\n  created_by?: Maybe<Scalars['ID']>;\n  updated_by?: Maybe<Scalars['ID']>;\n};\n\nexport type EditHotelInput = {\n  name?: Maybe<Scalars['String']>;\n  stars?: Maybe<Scalars['Int']>;\n  url?: Maybe<Scalars['String']>;\n  trips?: Maybe<Array<Maybe<Scalars['ID']>>>;\n  published_at?: Maybe<Scalars['DateTime']>;\n  created_by?: Maybe<Scalars['ID']>;\n  updated_by?: Maybe<Scalars['ID']>;\n};\n\nexport type EditLocaleInput = {\n  name?: Maybe<Scalars['String']>;\n  code?: Maybe<Scalars['String']>;\n  created_by?: Maybe<Scalars['ID']>;\n  updated_by?: Maybe<Scalars['ID']>;\n};\n\nexport type EditLocationInput = {\n  name?: Maybe<Scalars['String']>;\n  description?: Maybe<Scalars['String']>;\n  images?: Maybe<Array<Maybe<Scalars['ID']>>>;\n  city?: Maybe<Scalars['ID']>;\n  coordinate?: Maybe<EditComponentCoordinateCoordinateInput>;\n  localizations?: Maybe<Array<Maybe<Scalars['ID']>>>;\n  locale?: Maybe<Scalars['String']>;\n  published_at?: Maybe<Scalars['DateTime']>;\n  created_by?: Maybe<Scalars['ID']>;\n  updated_by?: Maybe<Scalars['ID']>;\n};\n\nexport type EditPartnerInput = {\n  name?: Maybe<Scalars['String']>;\n  phone?: Maybe<Scalars['String']>;\n  address?: Maybe<Scalars['String']>;\n  email?: Maybe<Scalars['String']>;\n  trips?: Maybe<Array<Maybe<Scalars['ID']>>>;\n  agreement?: Maybe<Scalars['String']>;\n  commission?: Maybe<Scalars['Float']>;\n  revenueSource?: Maybe<Enum_Partner_Revenuesource>;\n  agreementStatus?: Maybe<Enum_Partner_Agreementstatus>;\n  notes?: Maybe<Scalars['String']>;\n  phone2?: Maybe<Scalars['String']>;\n  published_at?: Maybe<Scalars['DateTime']>;\n  created_by?: Maybe<Scalars['ID']>;\n  updated_by?: Maybe<Scalars['ID']>;\n};\n\nexport type EditReviewInput = {\n  text?: Maybe<Scalars['String']>;\n  rating?: Maybe<Scalars['Float']>;\n  author?: Maybe<Scalars['ID']>;\n  active?: Maybe<Scalars['Boolean']>;\n  trip?: Maybe<Scalars['ID']>;\n  published_at?: Maybe<Scalars['DateTime']>;\n  created_by?: Maybe<Scalars['ID']>;\n  updated_by?: Maybe<Scalars['ID']>;\n};\n\nexport type EditRoleInput = {\n  name?: Maybe<Scalars['String']>;\n  description?: Maybe<Scalars['String']>;\n  type?: Maybe<Scalars['String']>;\n  permissions?: Maybe<Array<Maybe<Scalars['ID']>>>;\n  users?: Maybe<Array<Maybe<Scalars['ID']>>>;\n  created_by?: Maybe<Scalars['ID']>;\n  updated_by?: Maybe<Scalars['ID']>;\n};\n\nexport type EditSubscriberInput = {\n  email?: Maybe<Scalars['String']>;\n  published_at?: Maybe<Scalars['DateTime']>;\n  created_by?: Maybe<Scalars['ID']>;\n  updated_by?: Maybe<Scalars['ID']>;\n};\n\nexport type EditTripInput = {\n  name?: Maybe<Scalars['String']>;\n  previewImage?: Maybe<Scalars['ID']>;\n  active?: Maybe<Scalars['Boolean']>;\n  trip_type?: Maybe<Enum_Trips_Trip_Type>;\n  description?: Maybe<Scalars['String']>;\n  duration?: Maybe<Scalars['Int']>;\n  partner?: Maybe<Scalars['ID']>;\n  currency?: Maybe<Enum_Trips_Currency>;\n  city?: Maybe<Scalars['ID']>;\n  features?: Maybe<Array<Maybe<EditComponentFeatureFeatureInput>>>;\n  basePrice?: Maybe<Scalars['Int']>;\n  basePeopleCount?: Maybe<Scalars['Int']>;\n  discount?: Maybe<Scalars['Float']>;\n  travelType?: Maybe<Enum_Trips_Traveltype>;\n  hotel?: Maybe<Scalars['ID']>;\n  plan?: Maybe<Array<Maybe<EditComponentTimelineTimelineInput>>>;\n  sequence?: Maybe<Scalars['String']>;\n  localizations?: Maybe<Array<Maybe<Scalars['ID']>>>;\n  locale?: Maybe<Scalars['String']>;\n  published_at?: Maybe<Scalars['DateTime']>;\n  created_by?: Maybe<Scalars['ID']>;\n  updated_by?: Maybe<Scalars['ID']>;\n};\n\nexport type EditUserInput = {\n  username?: Maybe<Scalars['String']>;\n  email?: Maybe<Scalars['String']>;\n  provider?: Maybe<Scalars['String']>;\n  password?: Maybe<Scalars['String']>;\n  resetPasswordToken?: Maybe<Scalars['String']>;\n  confirmationToken?: Maybe<Scalars['String']>;\n  confirmed?: Maybe<Scalars['Boolean']>;\n  blocked?: Maybe<Scalars['Boolean']>;\n  role?: Maybe<Scalars['ID']>;\n  created_by?: Maybe<Scalars['ID']>;\n  updated_by?: Maybe<Scalars['ID']>;\n};\n\nexport type UpdateBookingInput = {\n  where?: Maybe<InputId>;\n  data?: Maybe<EditBookingInput>;\n};\n\nexport type UpdateBookingPayload = {\n  __typename?: 'updateBookingPayload';\n  booking?: Maybe<Booking>;\n};\n\nexport type UpdateCityInput = {\n  where?: Maybe<InputId>;\n  data?: Maybe<EditCityInput>;\n};\n\nexport type UpdateCityPayload = {\n  __typename?: 'updateCityPayload';\n  city?: Maybe<City>;\n};\n\nexport type UpdateFeatureInput = {\n  where?: Maybe<InputId>;\n  data?: Maybe<EditFeatureInput>;\n};\n\nexport type UpdateFeaturePayload = {\n  __typename?: 'updateFeaturePayload';\n  feature?: Maybe<Feature>;\n};\n\nexport type UpdateHomeBannerInput = {\n  data?: Maybe<EditHomeBannerInput>;\n};\n\nexport type UpdateHomeBannerPayload = {\n  __typename?: 'updateHomeBannerPayload';\n  homeBanner?: Maybe<HomeBanner>;\n};\n\nexport type UpdateHotelInput = {\n  where?: Maybe<InputId>;\n  data?: Maybe<EditHotelInput>;\n};\n\nexport type UpdateHotelPayload = {\n  __typename?: 'updateHotelPayload';\n  hotel?: Maybe<Hotels>;\n};\n\nexport type UpdateLocationInput = {\n  where?: Maybe<InputId>;\n  data?: Maybe<EditLocationInput>;\n};\n\nexport type UpdateLocationPayload = {\n  __typename?: 'updateLocationPayload';\n  location?: Maybe<Location>;\n};\n\nexport type UpdatePartnerInput = {\n  where?: Maybe<InputId>;\n  data?: Maybe<EditPartnerInput>;\n};\n\nexport type UpdatePartnerPayload = {\n  __typename?: 'updatePartnerPayload';\n  partner?: Maybe<Partner>;\n};\n\nexport type UpdateReviewInput = {\n  where?: Maybe<InputId>;\n  data?: Maybe<EditReviewInput>;\n};\n\nexport type UpdateReviewPayload = {\n  __typename?: 'updateReviewPayload';\n  review?: Maybe<Review>;\n};\n\nexport type UpdateRoleInput = {\n  where?: Maybe<InputId>;\n  data?: Maybe<EditRoleInput>;\n};\n\nexport type UpdateRolePayload = {\n  __typename?: 'updateRolePayload';\n  role?: Maybe<UsersPermissionsRole>;\n};\n\nexport type UpdateSubscriberInput = {\n  where?: Maybe<InputId>;\n  data?: Maybe<EditSubscriberInput>;\n};\n\nexport type UpdateSubscriberPayload = {\n  __typename?: 'updateSubscriberPayload';\n  subscriber?: Maybe<Subscribers>;\n};\n\nexport type UpdateTripInput = {\n  where?: Maybe<InputId>;\n  data?: Maybe<EditTripInput>;\n};\n\nexport type UpdateTripPayload = {\n  __typename?: 'updateTripPayload';\n  trip?: Maybe<Trips>;\n};\n\nexport type UpdateUserInput = {\n  where?: Maybe<InputId>;\n  data?: Maybe<EditUserInput>;\n};\n\nexport type UpdateUserPayload = {\n  __typename?: 'updateUserPayload';\n  user?: Maybe<UsersPermissionsUser>;\n};\n\nexport type CreateBookingQueryMutationVariables = Exact<{\n  tripId: Scalars['ID'];\n  fullName: Scalars['String'];\n  basePrice: Scalars['Float'];\n  discount?: Maybe<Scalars['Float']>;\n  basePeopleCount: Scalars['Int'];\n  phone: Scalars['String'];\n  arrivalDate: Scalars['Date'];\n  message?: Maybe<Scalars['String']>;\n  currency: Enum_Booking_Currency;\n  email: Scalars['String'];\n  language: Scalars['String'];\n  adults: Scalars['Int'];\n  children: Scalars['Int'];\n}>;\n\n\nexport type CreateBookingQueryMutation = (\n  { __typename?: 'Mutation' }\n  & { createBooking?: Maybe<(\n    { __typename?: 'createBookingPayload' }\n    & { booking?: Maybe<(\n      { __typename?: 'Booking' }\n      & Pick<Booking, 'message'>\n    )> }\n  )> }\n);\n\nexport type CitiesQueryVariables = Exact<{\n  limit?: Maybe<Scalars['Int']>;\n  locale?: Maybe<Scalars['String']>;\n}>;\n\n\nexport type CitiesQuery = (\n  { __typename?: 'Query' }\n  & { cities?: Maybe<Array<Maybe<(\n    { __typename?: 'City' }\n    & CityInfoFragment\n  )>>> }\n);\n\nexport type GetCityQueryVariables = Exact<{\n  id: Scalars['ID'];\n}>;\n\n\nexport type GetCityQuery = (\n  { __typename?: 'Query' }\n  & { city?: Maybe<(\n    { __typename?: 'City' }\n    & CityInfoFragment\n  )> }\n);\n\nexport type GetLocalizedCityQueryVariables = Exact<{\n  id: Scalars['ID'];\n  locale: Scalars['String'];\n}>;\n\n\nexport type GetLocalizedCityQuery = (\n  { __typename?: 'Query' }\n  & { cities?: Maybe<Array<Maybe<(\n    { __typename?: 'City' }\n    & CityInfoFragment\n  )>>> }\n);\n\nexport type CityInfoFragment = (\n  { __typename?: 'City' }\n  & Pick<City, 'id' | 'name' | 'description' | 'locale'>\n  & { localizations?: Maybe<Array<Maybe<(\n    { __typename?: 'City' }\n    & Pick<City, 'id' | 'locale'>\n  )>>>, image?: Maybe<(\n    { __typename?: 'UploadFile' }\n    & Pick<UploadFile, 'id' | 'width' | 'height' | 'url' | 'formats'>\n  )> }\n);\n\nexport type FeaturesQueryVariables = Exact<{\n  locale: Scalars['String'];\n}>;\n\n\nexport type FeaturesQuery = (\n  { __typename?: 'Query' }\n  & { features?: Maybe<Array<Maybe<(\n    { __typename?: 'Feature' }\n    & Pick<Feature, 'name'>\n  )>>> }\n);\n\nexport type HomeCarousellQueryVariables = Exact<{ [key: string]: never; }>;\n\n\nexport type HomeCarousellQuery = (\n  { __typename?: 'Query' }\n  & { homeBanner?: Maybe<(\n    { __typename?: 'HomeBanner' }\n    & { images?: Maybe<Array<Maybe<(\n      { __typename?: 'UploadFile' }\n      & Pick<UploadFile, 'id' | 'width' | 'height' | 'url' | 'formats'>\n    )>>> }\n  )> }\n);\n\nexport type GetLocationsQueryVariables = Exact<{\n  locale: Scalars['String'];\n  ids: Array<Scalars['String']> | Scalars['String'];\n}>;\n\n\nexport type GetLocationsQuery = (\n  { __typename?: 'Query' }\n  & { locations?: Maybe<Array<Maybe<(\n    { __typename?: 'Location' }\n    & Pick<Location, 'id' | 'name' | 'description' | 'locale'>\n    & { coordinate?: Maybe<(\n      { __typename?: 'ComponentCoordinateCoordinate' }\n      & Pick<ComponentCoordinateCoordinate, 'latitude' | 'longitude'>\n    )>, images?: Maybe<Array<Maybe<(\n      { __typename?: 'UploadFile' }\n      & Pick<UploadFile, 'id' | 'width' | 'height' | 'url' | 'formats'>\n    )>>>, city?: Maybe<(\n      { __typename?: 'City' }\n      & Pick<City, 'id' | 'name' | 'description' | 'locale'>\n      & { localizations?: Maybe<Array<Maybe<(\n        { __typename?: 'City' }\n        & Pick<City, 'id' | 'locale'>\n      )>>>, image?: Maybe<(\n        { __typename?: 'UploadFile' }\n        & Pick<UploadFile, 'id' | 'width' | 'height' | 'url' | 'formats'>\n      )> }\n    )> }\n  )>>> }\n);\n\nexport type AddToNewsLetterMutationVariables = Exact<{\n  email: Scalars['String'];\n}>;\n\n\nexport type AddToNewsLetterMutation = (\n  { __typename?: 'Mutation' }\n  & { createSubscriber?: Maybe<(\n    { __typename?: 'createSubscriberPayload' }\n    & { subscriber?: Maybe<(\n      { __typename?: 'Subscribers' }\n      & Pick<Subscribers, 'email'>\n    )> }\n  )> }\n);\n\nexport type TripsQueryVariables = Exact<{\n  limit?: Maybe<Scalars['Int']>;\n  locale?: Maybe<Scalars['String']>;\n  where?: Maybe<Scalars['JSON']>;\n}>;\n\n\nexport type TripsQuery = (\n  { __typename?: 'Query' }\n  & { trips?: Maybe<Array<Maybe<(\n    { __typename?: 'Trips' }\n    & TripInfoFragment\n  )>>> }\n);\n\nexport type GetTripQueryVariables = Exact<{\n  id: Scalars['ID'];\n}>;\n\n\nexport type GetTripQuery = (\n  { __typename?: 'Query' }\n  & { trip?: Maybe<(\n    { __typename?: 'Trips' }\n    & TripInfoFragment\n  )> }\n);\n\nexport type GetLocalizedTripQueryVariables = Exact<{\n  id: Scalars['ID'];\n  locale: Scalars['String'];\n}>;\n\n\nexport type GetLocalizedTripQuery = (\n  { __typename?: 'Query' }\n  & { trips?: Maybe<Array<Maybe<(\n    { __typename?: 'Trips' }\n    & TripInfoFragment\n  )>>> }\n);\n\nexport type TripInfoFragment = (\n  { __typename?: 'Trips' }\n  & Pick<Trips, 'id' | 'name' | 'active' | 'description' | 'locale' | 'trip_type' | 'duration' | 'travelType' | 'basePrice' | 'discount' | 'currency' | 'basePeopleCount'>\n  & { city?: Maybe<(\n    { __typename?: 'City' }\n    & Pick<City, 'id' | 'name'>\n  )>, hotel?: Maybe<(\n    { __typename?: 'Hotels' }\n    & Pick<Hotels, 'id' | 'name' | 'url' | 'stars'>\n  )>, plan?: Maybe<Array<Maybe<(\n    { __typename?: 'ComponentTimelineTimeline' }\n    & Pick<ComponentTimelineTimeline, 'day' | 'transportationType' | 'description' | 'restDay'>\n    & { locations?: Maybe<Array<Maybe<(\n      { __typename?: 'Location' }\n      & Pick<Location, 'id' | 'name'>\n      & { city?: Maybe<(\n        { __typename?: 'City' }\n        & Pick<City, 'id'>\n      )> }\n    )>>>, travelTo?: Maybe<(\n      { __typename?: 'City' }\n      & Pick<City, 'id' | 'name'>\n    )> }\n  )>>>, previewImage?: Maybe<(\n    { __typename?: 'UploadFile' }\n    & Pick<UploadFile, 'id' | 'width' | 'height' | 'url' | 'formats'>\n  )>, localizations?: Maybe<Array<Maybe<(\n    { __typename?: 'Trips' }\n    & Pick<Trips, 'id' | 'locale'>\n  )>>>, features?: Maybe<Array<Maybe<(\n    { __typename?: 'ComponentFeatureFeature' }\n    & Pick<ComponentFeatureFeature, 'included'>\n    & { feature?: Maybe<(\n      { __typename?: 'Feature' }\n      & Pick<Feature, 'name' | 'info'>\n    )> }\n  )>>> }\n);\n\nexport const CityInfoFragmentDoc = gql`\n    fragment CityInfo on City {\n  id\n  name\n  description\n  locale\n  localizations {\n    id\n    locale\n  }\n  image {\n    id\n    width\n    height\n    url\n    formats\n  }\n}\n    `;\nexport const TripInfoFragmentDoc = gql`\n    fragment tripInfo on Trips {\n  id\n  name\n  active\n  description\n  locale\n  trip_type\n  duration\n  travelType\n  city {\n    id\n    name\n  }\n  hotel {\n    id\n    name\n    url\n    stars\n  }\n  plan {\n    day\n    locations {\n      id\n      name\n      city {\n        id\n      }\n    }\n    transportationType\n    travelTo {\n      id\n      name\n    }\n    description\n    restDay\n  }\n  previewImage {\n    id\n    width\n    height\n    url\n    formats\n  }\n  localizations {\n    id\n    locale\n  }\n  basePrice\n  discount\n  currency\n  basePeopleCount\n  features {\n    included\n    feature {\n      name\n      info\n    }\n  }\n}\n    `;\nexport const CreateBookingQueryDocument = gql`\n    mutation createBookingQuery($tripId: ID!, $fullName: String!, $basePrice: Float!, $discount: Float = 0, $basePeopleCount: Int!, $phone: String!, $arrivalDate: Date!, $message: String, $currency: ENUM_BOOKING_CURRENCY!, $email: String!, $language: String!, $adults: Int!, $children: Int!) {\n  createBooking(\n    input: {data: {trip: $tripId, basePrice: $basePrice, discount: $discount, message: $message, fullName: $fullName, basePeopleCount: $basePeopleCount, phone: $phone, arrivalDate: $arrivalDate, currency: $currency, email: $email, language: $language, adults: $adults, children: $children}}\n  ) {\n    booking {\n      message\n    }\n  }\n}\n    `;\n\n  @Injectable({\n    providedIn: 'root'\n  })\n  export class CreateBookingQueryGQL extends Apollo.Mutation<CreateBookingQueryMutation, CreateBookingQueryMutationVariables> {\n    document = CreateBookingQueryDocument;\n    \n    constructor(apollo: Apollo.Apollo) {\n      super(apollo);\n    }\n  }\nexport const CitiesDocument = gql`\n    query cities($limit: Int, $locale: String) {\n  cities(limit: $limit, locale: $locale) {\n    ...CityInfo\n  }\n}\n    ${CityInfoFragmentDoc}`;\n\n  @Injectable({\n    providedIn: 'root'\n  })\n  export class CitiesGQL extends Apollo.Query<CitiesQuery, CitiesQueryVariables> {\n    document = CitiesDocument;\n    \n    constructor(apollo: Apollo.Apollo) {\n      super(apollo);\n    }\n  }\nexport const GetCityDocument = gql`\n    query getCity($id: ID!) {\n  city(id: $id) {\n    ...CityInfo\n  }\n}\n    ${CityInfoFragmentDoc}`;\n\n  @Injectable({\n    providedIn: 'root'\n  })\n  export class GetCityGQL extends Apollo.Query<GetCityQuery, GetCityQueryVariables> {\n    document = GetCityDocument;\n    \n    constructor(apollo: Apollo.Apollo) {\n      super(apollo);\n    }\n  }\nexport const GetLocalizedCityDocument = gql`\n    query getLocalizedCity($id: ID!, $locale: String!) {\n  cities(locale: $locale, where: {_or: [{localizations: {id: $id}}, {id: $id}]}) {\n    ...CityInfo\n  }\n}\n    ${CityInfoFragmentDoc}`;\n\n  @Injectable({\n    providedIn: 'root'\n  })\n  export class GetLocalizedCityGQL extends Apollo.Query<GetLocalizedCityQuery, GetLocalizedCityQueryVariables> {\n    document = GetLocalizedCityDocument;\n    \n    constructor(apollo: Apollo.Apollo) {\n      super(apollo);\n    }\n  }\nexport const FeaturesDocument = gql`\n    query features($locale: String!) {\n  features(locale: $locale) {\n    name\n  }\n}\n    `;\n\n  @Injectable({\n    providedIn: 'root'\n  })\n  export class FeaturesGQL extends Apollo.Query<FeaturesQuery, FeaturesQueryVariables> {\n    document = FeaturesDocument;\n    \n    constructor(apollo: Apollo.Apollo) {\n      super(apollo);\n    }\n  }\nexport const HomeCarousellDocument = gql`\n    query homeCarousell {\n  homeBanner {\n    images {\n      id\n      width\n      height\n      url\n      formats\n    }\n  }\n}\n    `;\n\n  @Injectable({\n    providedIn: 'root'\n  })\n  export class HomeCarousellGQL extends Apollo.Query<HomeCarousellQuery, HomeCarousellQueryVariables> {\n    document = HomeCarousellDocument;\n    \n    constructor(apollo: Apollo.Apollo) {\n      super(apollo);\n    }\n  }\nexport const GetLocationsDocument = gql`\n    query getLocations($locale: String!, $ids: [String!]!) {\n  locations(locale: $locale, where: {id_in: $ids}) {\n    id\n    name\n    description\n    coordinate {\n      latitude\n      longitude\n    }\n    locale\n    images {\n      id\n      width\n      height\n      url\n      formats\n    }\n    city {\n      id\n      name\n      description\n      locale\n      localizations {\n        id\n        locale\n      }\n      image {\n        id\n        width\n        height\n        url\n        formats\n      }\n    }\n  }\n}\n    `;\n\n  @Injectable({\n    providedIn: 'root'\n  })\n  export class GetLocationsGQL extends Apollo.Query<GetLocationsQuery, GetLocationsQueryVariables> {\n    document = GetLocationsDocument;\n    \n    constructor(apollo: Apollo.Apollo) {\n      super(apollo);\n    }\n  }\nexport const AddToNewsLetterDocument = gql`\n    mutation addToNewsLetter($email: String!) {\n  createSubscriber(input: {data: {email: $email}}) {\n    subscriber {\n      email\n    }\n  }\n}\n    `;\n\n  @Injectable({\n    providedIn: 'root'\n  })\n  export class AddToNewsLetterGQL extends Apollo.Mutation<AddToNewsLetterMutation, AddToNewsLetterMutationVariables> {\n    document = AddToNewsLetterDocument;\n    \n    constructor(apollo: Apollo.Apollo) {\n      super(apollo);\n    }\n  }\nexport const TripsDocument = gql`\n    query trips($limit: Int = 10, $locale: String = \"en\", $where: JSON) {\n  trips(limit: $limit, locale: $locale, where: $where) {\n    ...tripInfo\n  }\n}\n    ${TripInfoFragmentDoc}`;\n\n  @Injectable({\n    providedIn: 'root'\n  })\n  export class TripsGQL extends Apollo.Query<TripsQuery, TripsQueryVariables> {\n    document = TripsDocument;\n    \n    constructor(apollo: Apollo.Apollo) {\n      super(apollo);\n    }\n  }\nexport const GetTripDocument = gql`\n    query getTrip($id: ID!) {\n  trip(id: $id) {\n    ...tripInfo\n  }\n}\n    ${TripInfoFragmentDoc}`;\n\n  @Injectable({\n    providedIn: 'root'\n  })\n  export class GetTripGQL extends Apollo.Query<GetTripQuery, GetTripQueryVariables> {\n    document = GetTripDocument;\n    \n    constructor(apollo: Apollo.Apollo) {\n      super(apollo);\n    }\n  }\nexport const GetLocalizedTripDocument = gql`\n    query getLocalizedTrip($id: ID!, $locale: String!) {\n  trips(locale: $locale, where: {_or: [{localizations: {id: $id}}, {id: $id}]}) {\n    ...tripInfo\n  }\n}\n    ${TripInfoFragmentDoc}`;\n\n  @Injectable({\n    providedIn: 'root'\n  })\n  export class GetLocalizedTripGQL extends Apollo.Query<GetLocalizedTripQuery, GetLocalizedTripQueryVariables> {\n    document = GetLocalizedTripDocument;\n    \n    constructor(apollo: Apollo.Apollo) {\n      super(apollo);\n    }\n  }",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "apollo",
                        "type": "Apollo.Apollo"
                    }
                ],
                "line": 3764,
                "jsdoctags": [
                    {
                        "name": "apollo",
                        "type": "Apollo.Apollo",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "type": "injectable"
        },
        {
            "name": "GetTripGQL",
            "id": "injectable-GetTripGQL-54bb7cbcdd682e4d53ca5e8a5c5399f6",
            "file": "src/app/data/services/saferniGraphql.service.ts",
            "properties": [
                {
                    "name": "document",
                    "defaultValue": "GetTripDocument",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 3820
                }
            ],
            "methods": [],
            "description": "",
            "sourceCode": "import { gql } from 'apollo-angular';\nimport { Injectable } from '@angular/core';\nimport * as Apollo from 'apollo-angular';\nexport type Maybe<T> = T | null;\nexport type Exact<T extends { [key: string]: unknown }> = { [K in keyof T]: T[K] };\nexport type MakeOptional<T, K extends keyof T> = Omit<T, K> & { [SubKey in K]?: Maybe<T[SubKey]> };\nexport type MakeMaybe<T, K extends keyof T> = Omit<T, K> & { [SubKey in K]: Maybe<T[SubKey]> };\n/** All built-in and custom scalars, mapped to their actual values */\nexport type Scalars = {\n  ID: string;\n  String: string;\n  Boolean: boolean;\n  Int: number;\n  Float: number;\n  /** A date string, such as 2007-12-03, compliant with the `full-date` format outlined in section 5.6 of the RFC 3339 profile of the ISO 8601 standard for representation of dates and times using the Gregorian calendar. */\n  Date: any;\n  /** A date-time string at UTC, such as 2007-12-03T10:15:30Z, compliant with the `date-time` format outlined in section 5.6 of the RFC 3339 profile of the ISO 8601 standard for representation of dates and times using the Gregorian calendar. */\n  DateTime: any;\n  /** The `JSON` scalar type represents JSON values as specified by [ECMA-404](http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf). */\n  JSON: any;\n  /** The `Long` scalar type represents 52-bit integers */\n  Long: any;\n  /** A time string with format: HH:mm:ss.SSS */\n  Time: any;\n  /** The `Upload` scalar type represents a file upload. */\n  Upload: any;\n};\n\n\n\nexport type AdminUser = {\n  __typename?: 'AdminUser';\n  id: Scalars['ID'];\n  username?: Maybe<Scalars['String']>;\n  firstname: Scalars['String'];\n  lastname: Scalars['String'];\n};\n\nexport type Booking = {\n  __typename?: 'Booking';\n  id: Scalars['ID'];\n  _id: Scalars['ID'];\n  createdAt: Scalars['DateTime'];\n  updatedAt: Scalars['DateTime'];\n  trip?: Maybe<Trips>;\n  approved?: Maybe<Scalars['Boolean']>;\n  basePrice: Scalars['Float'];\n  currency: Enum_Booking_Currency;\n  basePeopleCount: Scalars['Int'];\n  discount?: Maybe<Scalars['Float']>;\n  fullName: Scalars['String'];\n  phone: Scalars['String'];\n  message?: Maybe<Scalars['String']>;\n  arrivalDate: Scalars['Date'];\n  language?: Maybe<Scalars['String']>;\n  userBookingStatus?: Maybe<Enum_Booking_Userbookingstatus>;\n  email: Scalars['String'];\n  adults: Scalars['Int'];\n  children?: Maybe<Scalars['Int']>;\n  totalPrice?: Maybe<Scalars['Float']>;\n  published_at?: Maybe<Scalars['DateTime']>;\n};\n\nexport type BookingAggregator = {\n  __typename?: 'BookingAggregator';\n  count?: Maybe<Scalars['Int']>;\n  totalCount?: Maybe<Scalars['Int']>;\n  sum?: Maybe<BookingAggregatorSum>;\n  avg?: Maybe<BookingAggregatorAvg>;\n  min?: Maybe<BookingAggregatorMin>;\n  max?: Maybe<BookingAggregatorMax>;\n};\n\nexport type BookingAggregatorAvg = {\n  __typename?: 'BookingAggregatorAvg';\n  basePrice?: Maybe<Scalars['Float']>;\n  basePeopleCount?: Maybe<Scalars['Float']>;\n  discount?: Maybe<Scalars['Float']>;\n  adults?: Maybe<Scalars['Float']>;\n  children?: Maybe<Scalars['Float']>;\n  totalPrice?: Maybe<Scalars['Float']>;\n};\n\nexport type BookingAggregatorMax = {\n  __typename?: 'BookingAggregatorMax';\n  basePrice?: Maybe<Scalars['Float']>;\n  basePeopleCount?: Maybe<Scalars['Float']>;\n  discount?: Maybe<Scalars['Float']>;\n  adults?: Maybe<Scalars['Float']>;\n  children?: Maybe<Scalars['Float']>;\n  totalPrice?: Maybe<Scalars['Float']>;\n};\n\nexport type BookingAggregatorMin = {\n  __typename?: 'BookingAggregatorMin';\n  basePrice?: Maybe<Scalars['Float']>;\n  basePeopleCount?: Maybe<Scalars['Float']>;\n  discount?: Maybe<Scalars['Float']>;\n  adults?: Maybe<Scalars['Float']>;\n  children?: Maybe<Scalars['Float']>;\n  totalPrice?: Maybe<Scalars['Float']>;\n};\n\nexport type BookingAggregatorSum = {\n  __typename?: 'BookingAggregatorSum';\n  basePrice?: Maybe<Scalars['Float']>;\n  basePeopleCount?: Maybe<Scalars['Float']>;\n  discount?: Maybe<Scalars['Float']>;\n  adults?: Maybe<Scalars['Float']>;\n  children?: Maybe<Scalars['Float']>;\n  totalPrice?: Maybe<Scalars['Float']>;\n};\n\nexport type BookingConnection = {\n  __typename?: 'BookingConnection';\n  values?: Maybe<Array<Maybe<Booking>>>;\n  groupBy?: Maybe<BookingGroupBy>;\n  aggregate?: Maybe<BookingAggregator>;\n};\n\nexport type BookingConnectionAdults = {\n  __typename?: 'BookingConnectionAdults';\n  key?: Maybe<Scalars['Int']>;\n  connection?: Maybe<BookingConnection>;\n};\n\nexport type BookingConnectionApproved = {\n  __typename?: 'BookingConnectionApproved';\n  key?: Maybe<Scalars['Boolean']>;\n  connection?: Maybe<BookingConnection>;\n};\n\nexport type BookingConnectionArrivalDate = {\n  __typename?: 'BookingConnectionArrivalDate';\n  key?: Maybe<Scalars['ID']>;\n  connection?: Maybe<BookingConnection>;\n};\n\nexport type BookingConnectionBasePeopleCount = {\n  __typename?: 'BookingConnectionBasePeopleCount';\n  key?: Maybe<Scalars['Int']>;\n  connection?: Maybe<BookingConnection>;\n};\n\nexport type BookingConnectionBasePrice = {\n  __typename?: 'BookingConnectionBasePrice';\n  key?: Maybe<Scalars['Float']>;\n  connection?: Maybe<BookingConnection>;\n};\n\nexport type BookingConnectionChildren = {\n  __typename?: 'BookingConnectionChildren';\n  key?: Maybe<Scalars['Int']>;\n  connection?: Maybe<BookingConnection>;\n};\n\nexport type BookingConnectionCreatedAt = {\n  __typename?: 'BookingConnectionCreatedAt';\n  key?: Maybe<Scalars['DateTime']>;\n  connection?: Maybe<BookingConnection>;\n};\n\nexport type BookingConnectionCurrency = {\n  __typename?: 'BookingConnectionCurrency';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<BookingConnection>;\n};\n\nexport type BookingConnectionDiscount = {\n  __typename?: 'BookingConnectionDiscount';\n  key?: Maybe<Scalars['Float']>;\n  connection?: Maybe<BookingConnection>;\n};\n\nexport type BookingConnectionEmail = {\n  __typename?: 'BookingConnectionEmail';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<BookingConnection>;\n};\n\nexport type BookingConnectionFullName = {\n  __typename?: 'BookingConnectionFullName';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<BookingConnection>;\n};\n\nexport type BookingConnectionId = {\n  __typename?: 'BookingConnectionId';\n  key?: Maybe<Scalars['ID']>;\n  connection?: Maybe<BookingConnection>;\n};\n\nexport type BookingConnectionLanguage = {\n  __typename?: 'BookingConnectionLanguage';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<BookingConnection>;\n};\n\nexport type BookingConnectionMessage = {\n  __typename?: 'BookingConnectionMessage';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<BookingConnection>;\n};\n\nexport type BookingConnectionPhone = {\n  __typename?: 'BookingConnectionPhone';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<BookingConnection>;\n};\n\nexport type BookingConnectionPublished_At = {\n  __typename?: 'BookingConnectionPublished_at';\n  key?: Maybe<Scalars['DateTime']>;\n  connection?: Maybe<BookingConnection>;\n};\n\nexport type BookingConnectionTotalPrice = {\n  __typename?: 'BookingConnectionTotalPrice';\n  key?: Maybe<Scalars['Float']>;\n  connection?: Maybe<BookingConnection>;\n};\n\nexport type BookingConnectionTrip = {\n  __typename?: 'BookingConnectionTrip';\n  key?: Maybe<Scalars['ID']>;\n  connection?: Maybe<BookingConnection>;\n};\n\nexport type BookingConnectionUpdatedAt = {\n  __typename?: 'BookingConnectionUpdatedAt';\n  key?: Maybe<Scalars['DateTime']>;\n  connection?: Maybe<BookingConnection>;\n};\n\nexport type BookingConnectionUserBookingStatus = {\n  __typename?: 'BookingConnectionUserBookingStatus';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<BookingConnection>;\n};\n\nexport type BookingConnection_Id = {\n  __typename?: 'BookingConnection_id';\n  key?: Maybe<Scalars['ID']>;\n  connection?: Maybe<BookingConnection>;\n};\n\nexport type BookingGroupBy = {\n  __typename?: 'BookingGroupBy';\n  id?: Maybe<Array<Maybe<BookingConnectionId>>>;\n  _id?: Maybe<Array<Maybe<BookingConnection_Id>>>;\n  createdAt?: Maybe<Array<Maybe<BookingConnectionCreatedAt>>>;\n  updatedAt?: Maybe<Array<Maybe<BookingConnectionUpdatedAt>>>;\n  trip?: Maybe<Array<Maybe<BookingConnectionTrip>>>;\n  approved?: Maybe<Array<Maybe<BookingConnectionApproved>>>;\n  basePrice?: Maybe<Array<Maybe<BookingConnectionBasePrice>>>;\n  currency?: Maybe<Array<Maybe<BookingConnectionCurrency>>>;\n  basePeopleCount?: Maybe<Array<Maybe<BookingConnectionBasePeopleCount>>>;\n  discount?: Maybe<Array<Maybe<BookingConnectionDiscount>>>;\n  fullName?: Maybe<Array<Maybe<BookingConnectionFullName>>>;\n  phone?: Maybe<Array<Maybe<BookingConnectionPhone>>>;\n  message?: Maybe<Array<Maybe<BookingConnectionMessage>>>;\n  arrivalDate?: Maybe<Array<Maybe<BookingConnectionArrivalDate>>>;\n  language?: Maybe<Array<Maybe<BookingConnectionLanguage>>>;\n  userBookingStatus?: Maybe<Array<Maybe<BookingConnectionUserBookingStatus>>>;\n  email?: Maybe<Array<Maybe<BookingConnectionEmail>>>;\n  adults?: Maybe<Array<Maybe<BookingConnectionAdults>>>;\n  children?: Maybe<Array<Maybe<BookingConnectionChildren>>>;\n  totalPrice?: Maybe<Array<Maybe<BookingConnectionTotalPrice>>>;\n  published_at?: Maybe<Array<Maybe<BookingConnectionPublished_At>>>;\n};\n\nexport type BookingInput = {\n  trip?: Maybe<Scalars['ID']>;\n  approved?: Maybe<Scalars['Boolean']>;\n  basePrice: Scalars['Float'];\n  currency: Enum_Booking_Currency;\n  basePeopleCount: Scalars['Int'];\n  discount?: Maybe<Scalars['Float']>;\n  fullName: Scalars['String'];\n  phone: Scalars['String'];\n  message?: Maybe<Scalars['String']>;\n  arrivalDate: Scalars['Date'];\n  language?: Maybe<Scalars['String']>;\n  userBookingStatus?: Maybe<Enum_Booking_Userbookingstatus>;\n  email: Scalars['String'];\n  adults: Scalars['Int'];\n  children?: Maybe<Scalars['Int']>;\n  totalPrice?: Maybe<Scalars['Float']>;\n  published_at?: Maybe<Scalars['DateTime']>;\n  created_by?: Maybe<Scalars['ID']>;\n  updated_by?: Maybe<Scalars['ID']>;\n};\n\nexport type City = {\n  __typename?: 'City';\n  id: Scalars['ID'];\n  _id: Scalars['ID'];\n  createdAt: Scalars['DateTime'];\n  updatedAt: Scalars['DateTime'];\n  name: Scalars['String'];\n  description?: Maybe<Scalars['String']>;\n  image?: Maybe<UploadFile>;\n  locale?: Maybe<Scalars['String']>;\n  published_at?: Maybe<Scalars['DateTime']>;\n  locations?: Maybe<Array<Maybe<Location>>>;\n  localizations?: Maybe<Array<Maybe<City>>>;\n};\n\n\nexport type CityLocationsArgs = {\n  sort?: Maybe<Scalars['String']>;\n  limit?: Maybe<Scalars['Int']>;\n  start?: Maybe<Scalars['Int']>;\n  where?: Maybe<Scalars['JSON']>;\n};\n\n\nexport type CityLocalizationsArgs = {\n  sort?: Maybe<Scalars['String']>;\n  limit?: Maybe<Scalars['Int']>;\n  start?: Maybe<Scalars['Int']>;\n  where?: Maybe<Scalars['JSON']>;\n};\n\nexport type CityAggregator = {\n  __typename?: 'CityAggregator';\n  count?: Maybe<Scalars['Int']>;\n  totalCount?: Maybe<Scalars['Int']>;\n};\n\nexport type CityConnection = {\n  __typename?: 'CityConnection';\n  values?: Maybe<Array<Maybe<City>>>;\n  groupBy?: Maybe<CityGroupBy>;\n  aggregate?: Maybe<CityAggregator>;\n};\n\nexport type CityConnectionCreatedAt = {\n  __typename?: 'CityConnectionCreatedAt';\n  key?: Maybe<Scalars['DateTime']>;\n  connection?: Maybe<CityConnection>;\n};\n\nexport type CityConnectionDescription = {\n  __typename?: 'CityConnectionDescription';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<CityConnection>;\n};\n\nexport type CityConnectionId = {\n  __typename?: 'CityConnectionId';\n  key?: Maybe<Scalars['ID']>;\n  connection?: Maybe<CityConnection>;\n};\n\nexport type CityConnectionImage = {\n  __typename?: 'CityConnectionImage';\n  key?: Maybe<Scalars['ID']>;\n  connection?: Maybe<CityConnection>;\n};\n\nexport type CityConnectionLocale = {\n  __typename?: 'CityConnectionLocale';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<CityConnection>;\n};\n\nexport type CityConnectionName = {\n  __typename?: 'CityConnectionName';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<CityConnection>;\n};\n\nexport type CityConnectionPublished_At = {\n  __typename?: 'CityConnectionPublished_at';\n  key?: Maybe<Scalars['DateTime']>;\n  connection?: Maybe<CityConnection>;\n};\n\nexport type CityConnectionUpdatedAt = {\n  __typename?: 'CityConnectionUpdatedAt';\n  key?: Maybe<Scalars['DateTime']>;\n  connection?: Maybe<CityConnection>;\n};\n\nexport type CityConnection_Id = {\n  __typename?: 'CityConnection_id';\n  key?: Maybe<Scalars['ID']>;\n  connection?: Maybe<CityConnection>;\n};\n\nexport type CityGroupBy = {\n  __typename?: 'CityGroupBy';\n  id?: Maybe<Array<Maybe<CityConnectionId>>>;\n  _id?: Maybe<Array<Maybe<CityConnection_Id>>>;\n  createdAt?: Maybe<Array<Maybe<CityConnectionCreatedAt>>>;\n  updatedAt?: Maybe<Array<Maybe<CityConnectionUpdatedAt>>>;\n  name?: Maybe<Array<Maybe<CityConnectionName>>>;\n  description?: Maybe<Array<Maybe<CityConnectionDescription>>>;\n  image?: Maybe<Array<Maybe<CityConnectionImage>>>;\n  locale?: Maybe<Array<Maybe<CityConnectionLocale>>>;\n  published_at?: Maybe<Array<Maybe<CityConnectionPublished_At>>>;\n};\n\nexport type CityInput = {\n  name: Scalars['String'];\n  description?: Maybe<Scalars['String']>;\n  image?: Maybe<Scalars['ID']>;\n  locations?: Maybe<Array<Maybe<Scalars['ID']>>>;\n  localizations?: Maybe<Array<Maybe<Scalars['ID']>>>;\n  locale?: Maybe<Scalars['String']>;\n  published_at?: Maybe<Scalars['DateTime']>;\n  created_by?: Maybe<Scalars['ID']>;\n  updated_by?: Maybe<Scalars['ID']>;\n};\n\nexport type ComponentCoordinateCoordinate = {\n  __typename?: 'ComponentCoordinateCoordinate';\n  id: Scalars['ID'];\n  _id: Scalars['ID'];\n  latitude: Scalars['Float'];\n  longitude: Scalars['Float'];\n};\n\nexport type ComponentCoordinateCoordinateInput = {\n  latitude: Scalars['Float'];\n  longitude: Scalars['Float'];\n};\n\nexport type ComponentFeatureFeature = {\n  __typename?: 'ComponentFeatureFeature';\n  id: Scalars['ID'];\n  _id: Scalars['ID'];\n  feature?: Maybe<Feature>;\n  included?: Maybe<Scalars['Boolean']>;\n};\n\nexport type ComponentFeatureFeatureInput = {\n  feature?: Maybe<Scalars['ID']>;\n  included?: Maybe<Scalars['Boolean']>;\n};\n\nexport type ComponentPricePrice = {\n  __typename?: 'ComponentPricePrice';\n  id: Scalars['ID'];\n  _id: Scalars['ID'];\n  basePrice: Scalars['Float'];\n  currency: Enum_Componentpriceprice_Currency;\n  basePeopleCount: Scalars['Int'];\n  extraAdultFee?: Maybe<Scalars['Float']>;\n  discount?: Maybe<Scalars['Float']>;\n};\n\nexport type ComponentPricePriceInput = {\n  basePrice: Scalars['Float'];\n  currency?: Maybe<Enum_Componentpriceprice_Currency>;\n  basePeopleCount: Scalars['Int'];\n  extraAdultFee?: Maybe<Scalars['Float']>;\n  discount?: Maybe<Scalars['Float']>;\n};\n\nexport type ComponentTimelineTimeline = {\n  __typename?: 'ComponentTimelineTimeline';\n  id: Scalars['ID'];\n  _id: Scalars['ID'];\n  day: Scalars['Int'];\n  description?: Maybe<Scalars['String']>;\n  travelTo?: Maybe<City>;\n  transportationType?: Maybe<Enum_Componenttimelinetimeline_Transportationtype>;\n  restDay?: Maybe<Scalars['Boolean']>;\n  locations?: Maybe<Array<Maybe<Location>>>;\n};\n\n\nexport type ComponentTimelineTimelineLocationsArgs = {\n  sort?: Maybe<Scalars['String']>;\n  limit?: Maybe<Scalars['Int']>;\n  start?: Maybe<Scalars['Int']>;\n  where?: Maybe<Scalars['JSON']>;\n};\n\nexport type ComponentTimelineTimelineInput = {\n  day: Scalars['Int'];\n  description?: Maybe<Scalars['String']>;\n  locations?: Maybe<Array<Maybe<Scalars['ID']>>>;\n  travelTo?: Maybe<Scalars['ID']>;\n  transportationType?: Maybe<Enum_Componenttimelinetimeline_Transportationtype>;\n  restDay?: Maybe<Scalars['Boolean']>;\n};\n\n\n\nexport enum Enum_Booking_Currency {\n  Dollar = 'dollar',\n  Lira = 'lira'\n}\n\nexport enum Enum_Booking_Userbookingstatus {\n  Initial = 'initial',\n  Confirmed = 'confirmed',\n  Canceled = 'canceled'\n}\n\nexport enum Enum_Componentpriceprice_Currency {\n  Dollar = 'dollar',\n  Lira = 'lira'\n}\n\nexport enum Enum_Componenttimelinetimeline_Transportationtype {\n  Arrival = 'arrival',\n  Departure = 'departure',\n  BetweenCities = 'betweenCities',\n  WithinCity = 'withinCity'\n}\n\nexport enum Enum_Partner_Agreementstatus {\n  Agreed = 'Agreed',\n  Discussing = 'discussing',\n  Termination = 'termination'\n}\n\nexport enum Enum_Partner_Revenuesource {\n  PricePercentage = 'pricePercentage',\n  InflatedPrice = 'inflatedPrice'\n}\n\nexport enum Enum_Trips_Currency {\n  Dollar = 'dollar',\n  Lira = 'lira'\n}\n\nexport enum Enum_Trips_Traveltype {\n  Private = 'private',\n  Public = 'public',\n  Both = 'both'\n}\n\nexport enum Enum_Trips_Trip_Type {\n  Touristic = 'touristic',\n  Medical = 'medical'\n}\n\nexport type Feature = {\n  __typename?: 'Feature';\n  id: Scalars['ID'];\n  _id: Scalars['ID'];\n  createdAt: Scalars['DateTime'];\n  updatedAt: Scalars['DateTime'];\n  name: Scalars['String'];\n  info?: Maybe<Scalars['String']>;\n  locale?: Maybe<Scalars['String']>;\n  published_at?: Maybe<Scalars['DateTime']>;\n  localizations?: Maybe<Array<Maybe<Feature>>>;\n};\n\n\nexport type FeatureLocalizationsArgs = {\n  sort?: Maybe<Scalars['String']>;\n  limit?: Maybe<Scalars['Int']>;\n  start?: Maybe<Scalars['Int']>;\n  where?: Maybe<Scalars['JSON']>;\n};\n\nexport type FeatureAggregator = {\n  __typename?: 'FeatureAggregator';\n  count?: Maybe<Scalars['Int']>;\n  totalCount?: Maybe<Scalars['Int']>;\n};\n\nexport type FeatureConnection = {\n  __typename?: 'FeatureConnection';\n  values?: Maybe<Array<Maybe<Feature>>>;\n  groupBy?: Maybe<FeatureGroupBy>;\n  aggregate?: Maybe<FeatureAggregator>;\n};\n\nexport type FeatureConnectionCreatedAt = {\n  __typename?: 'FeatureConnectionCreatedAt';\n  key?: Maybe<Scalars['DateTime']>;\n  connection?: Maybe<FeatureConnection>;\n};\n\nexport type FeatureConnectionId = {\n  __typename?: 'FeatureConnectionId';\n  key?: Maybe<Scalars['ID']>;\n  connection?: Maybe<FeatureConnection>;\n};\n\nexport type FeatureConnectionInfo = {\n  __typename?: 'FeatureConnectionInfo';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<FeatureConnection>;\n};\n\nexport type FeatureConnectionLocale = {\n  __typename?: 'FeatureConnectionLocale';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<FeatureConnection>;\n};\n\nexport type FeatureConnectionName = {\n  __typename?: 'FeatureConnectionName';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<FeatureConnection>;\n};\n\nexport type FeatureConnectionPublished_At = {\n  __typename?: 'FeatureConnectionPublished_at';\n  key?: Maybe<Scalars['DateTime']>;\n  connection?: Maybe<FeatureConnection>;\n};\n\nexport type FeatureConnectionUpdatedAt = {\n  __typename?: 'FeatureConnectionUpdatedAt';\n  key?: Maybe<Scalars['DateTime']>;\n  connection?: Maybe<FeatureConnection>;\n};\n\nexport type FeatureConnection_Id = {\n  __typename?: 'FeatureConnection_id';\n  key?: Maybe<Scalars['ID']>;\n  connection?: Maybe<FeatureConnection>;\n};\n\nexport type FeatureGroupBy = {\n  __typename?: 'FeatureGroupBy';\n  id?: Maybe<Array<Maybe<FeatureConnectionId>>>;\n  _id?: Maybe<Array<Maybe<FeatureConnection_Id>>>;\n  createdAt?: Maybe<Array<Maybe<FeatureConnectionCreatedAt>>>;\n  updatedAt?: Maybe<Array<Maybe<FeatureConnectionUpdatedAt>>>;\n  name?: Maybe<Array<Maybe<FeatureConnectionName>>>;\n  info?: Maybe<Array<Maybe<FeatureConnectionInfo>>>;\n  locale?: Maybe<Array<Maybe<FeatureConnectionLocale>>>;\n  published_at?: Maybe<Array<Maybe<FeatureConnectionPublished_At>>>;\n};\n\nexport type FeatureInput = {\n  name: Scalars['String'];\n  info?: Maybe<Scalars['String']>;\n  localizations?: Maybe<Array<Maybe<Scalars['ID']>>>;\n  locale?: Maybe<Scalars['String']>;\n  published_at?: Maybe<Scalars['DateTime']>;\n  created_by?: Maybe<Scalars['ID']>;\n  updated_by?: Maybe<Scalars['ID']>;\n};\n\nexport type FileInfoInput = {\n  name?: Maybe<Scalars['String']>;\n  alternativeText?: Maybe<Scalars['String']>;\n  caption?: Maybe<Scalars['String']>;\n};\n\nexport type FileInput = {\n  name: Scalars['String'];\n  alternativeText?: Maybe<Scalars['String']>;\n  caption?: Maybe<Scalars['String']>;\n  width?: Maybe<Scalars['Int']>;\n  height?: Maybe<Scalars['Int']>;\n  formats?: Maybe<Scalars['JSON']>;\n  hash: Scalars['String'];\n  ext?: Maybe<Scalars['String']>;\n  mime: Scalars['String'];\n  size: Scalars['Float'];\n  url: Scalars['String'];\n  previewUrl?: Maybe<Scalars['String']>;\n  provider: Scalars['String'];\n  provider_metadata?: Maybe<Scalars['JSON']>;\n  related?: Maybe<Array<Maybe<Scalars['ID']>>>;\n  created_by?: Maybe<Scalars['ID']>;\n  updated_by?: Maybe<Scalars['ID']>;\n};\n\nexport type HomeBanner = {\n  __typename?: 'HomeBanner';\n  id: Scalars['ID'];\n  _id: Scalars['ID'];\n  createdAt: Scalars['DateTime'];\n  updatedAt: Scalars['DateTime'];\n  published_at?: Maybe<Scalars['DateTime']>;\n  images?: Maybe<Array<Maybe<UploadFile>>>;\n};\n\n\nexport type HomeBannerImagesArgs = {\n  sort?: Maybe<Scalars['String']>;\n  limit?: Maybe<Scalars['Int']>;\n  start?: Maybe<Scalars['Int']>;\n  where?: Maybe<Scalars['JSON']>;\n};\n\nexport type HomeBannerInput = {\n  images?: Maybe<Array<Maybe<Scalars['ID']>>>;\n  published_at?: Maybe<Scalars['DateTime']>;\n  created_by?: Maybe<Scalars['ID']>;\n  updated_by?: Maybe<Scalars['ID']>;\n};\n\nexport type HotelInput = {\n  name: Scalars['String'];\n  stars: Scalars['Int'];\n  url?: Maybe<Scalars['String']>;\n  trips?: Maybe<Array<Maybe<Scalars['ID']>>>;\n  published_at?: Maybe<Scalars['DateTime']>;\n  created_by?: Maybe<Scalars['ID']>;\n  updated_by?: Maybe<Scalars['ID']>;\n};\n\nexport type Hotels = {\n  __typename?: 'Hotels';\n  id: Scalars['ID'];\n  _id: Scalars['ID'];\n  createdAt: Scalars['DateTime'];\n  updatedAt: Scalars['DateTime'];\n  name: Scalars['String'];\n  stars: Scalars['Int'];\n  url?: Maybe<Scalars['String']>;\n  published_at?: Maybe<Scalars['DateTime']>;\n  trips?: Maybe<Array<Maybe<Trips>>>;\n};\n\n\nexport type HotelsTripsArgs = {\n  sort?: Maybe<Scalars['String']>;\n  limit?: Maybe<Scalars['Int']>;\n  start?: Maybe<Scalars['Int']>;\n  where?: Maybe<Scalars['JSON']>;\n};\n\nexport type HotelsAggregator = {\n  __typename?: 'HotelsAggregator';\n  count?: Maybe<Scalars['Int']>;\n  totalCount?: Maybe<Scalars['Int']>;\n  sum?: Maybe<HotelsAggregatorSum>;\n  avg?: Maybe<HotelsAggregatorAvg>;\n  min?: Maybe<HotelsAggregatorMin>;\n  max?: Maybe<HotelsAggregatorMax>;\n};\n\nexport type HotelsAggregatorAvg = {\n  __typename?: 'HotelsAggregatorAvg';\n  stars?: Maybe<Scalars['Float']>;\n};\n\nexport type HotelsAggregatorMax = {\n  __typename?: 'HotelsAggregatorMax';\n  stars?: Maybe<Scalars['Float']>;\n};\n\nexport type HotelsAggregatorMin = {\n  __typename?: 'HotelsAggregatorMin';\n  stars?: Maybe<Scalars['Float']>;\n};\n\nexport type HotelsAggregatorSum = {\n  __typename?: 'HotelsAggregatorSum';\n  stars?: Maybe<Scalars['Float']>;\n};\n\nexport type HotelsConnection = {\n  __typename?: 'HotelsConnection';\n  values?: Maybe<Array<Maybe<Hotels>>>;\n  groupBy?: Maybe<HotelsGroupBy>;\n  aggregate?: Maybe<HotelsAggregator>;\n};\n\nexport type HotelsConnectionCreatedAt = {\n  __typename?: 'HotelsConnectionCreatedAt';\n  key?: Maybe<Scalars['DateTime']>;\n  connection?: Maybe<HotelsConnection>;\n};\n\nexport type HotelsConnectionId = {\n  __typename?: 'HotelsConnectionId';\n  key?: Maybe<Scalars['ID']>;\n  connection?: Maybe<HotelsConnection>;\n};\n\nexport type HotelsConnectionName = {\n  __typename?: 'HotelsConnectionName';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<HotelsConnection>;\n};\n\nexport type HotelsConnectionPublished_At = {\n  __typename?: 'HotelsConnectionPublished_at';\n  key?: Maybe<Scalars['DateTime']>;\n  connection?: Maybe<HotelsConnection>;\n};\n\nexport type HotelsConnectionStars = {\n  __typename?: 'HotelsConnectionStars';\n  key?: Maybe<Scalars['Int']>;\n  connection?: Maybe<HotelsConnection>;\n};\n\nexport type HotelsConnectionUpdatedAt = {\n  __typename?: 'HotelsConnectionUpdatedAt';\n  key?: Maybe<Scalars['DateTime']>;\n  connection?: Maybe<HotelsConnection>;\n};\n\nexport type HotelsConnectionUrl = {\n  __typename?: 'HotelsConnectionUrl';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<HotelsConnection>;\n};\n\nexport type HotelsConnection_Id = {\n  __typename?: 'HotelsConnection_id';\n  key?: Maybe<Scalars['ID']>;\n  connection?: Maybe<HotelsConnection>;\n};\n\nexport type HotelsGroupBy = {\n  __typename?: 'HotelsGroupBy';\n  id?: Maybe<Array<Maybe<HotelsConnectionId>>>;\n  _id?: Maybe<Array<Maybe<HotelsConnection_Id>>>;\n  createdAt?: Maybe<Array<Maybe<HotelsConnectionCreatedAt>>>;\n  updatedAt?: Maybe<Array<Maybe<HotelsConnectionUpdatedAt>>>;\n  name?: Maybe<Array<Maybe<HotelsConnectionName>>>;\n  stars?: Maybe<Array<Maybe<HotelsConnectionStars>>>;\n  url?: Maybe<Array<Maybe<HotelsConnectionUrl>>>;\n  published_at?: Maybe<Array<Maybe<HotelsConnectionPublished_At>>>;\n};\n\nexport type I18NLocale = {\n  __typename?: 'I18NLocale';\n  id: Scalars['ID'];\n  _id: Scalars['ID'];\n  createdAt: Scalars['DateTime'];\n  updatedAt: Scalars['DateTime'];\n  name?: Maybe<Scalars['String']>;\n  code?: Maybe<Scalars['String']>;\n};\n\nexport type InputId = {\n  id: Scalars['ID'];\n};\n\n\nexport type LocaleInput = {\n  name?: Maybe<Scalars['String']>;\n  code?: Maybe<Scalars['String']>;\n  created_by?: Maybe<Scalars['ID']>;\n  updated_by?: Maybe<Scalars['ID']>;\n};\n\nexport type Location = {\n  __typename?: 'Location';\n  id: Scalars['ID'];\n  _id: Scalars['ID'];\n  createdAt: Scalars['DateTime'];\n  updatedAt: Scalars['DateTime'];\n  name: Scalars['String'];\n  description?: Maybe<Scalars['String']>;\n  city?: Maybe<City>;\n  coordinate?: Maybe<ComponentCoordinateCoordinate>;\n  locale?: Maybe<Scalars['String']>;\n  published_at?: Maybe<Scalars['DateTime']>;\n  images?: Maybe<Array<Maybe<UploadFile>>>;\n  localizations?: Maybe<Array<Maybe<Location>>>;\n};\n\n\nexport type LocationImagesArgs = {\n  sort?: Maybe<Scalars['String']>;\n  limit?: Maybe<Scalars['Int']>;\n  start?: Maybe<Scalars['Int']>;\n  where?: Maybe<Scalars['JSON']>;\n};\n\n\nexport type LocationLocalizationsArgs = {\n  sort?: Maybe<Scalars['String']>;\n  limit?: Maybe<Scalars['Int']>;\n  start?: Maybe<Scalars['Int']>;\n  where?: Maybe<Scalars['JSON']>;\n};\n\nexport type LocationAggregator = {\n  __typename?: 'LocationAggregator';\n  count?: Maybe<Scalars['Int']>;\n  totalCount?: Maybe<Scalars['Int']>;\n};\n\nexport type LocationConnection = {\n  __typename?: 'LocationConnection';\n  values?: Maybe<Array<Maybe<Location>>>;\n  groupBy?: Maybe<LocationGroupBy>;\n  aggregate?: Maybe<LocationAggregator>;\n};\n\nexport type LocationConnectionCity = {\n  __typename?: 'LocationConnectionCity';\n  key?: Maybe<Scalars['ID']>;\n  connection?: Maybe<LocationConnection>;\n};\n\nexport type LocationConnectionCoordinate = {\n  __typename?: 'LocationConnectionCoordinate';\n  key?: Maybe<Scalars['ID']>;\n  connection?: Maybe<LocationConnection>;\n};\n\nexport type LocationConnectionCreatedAt = {\n  __typename?: 'LocationConnectionCreatedAt';\n  key?: Maybe<Scalars['DateTime']>;\n  connection?: Maybe<LocationConnection>;\n};\n\nexport type LocationConnectionDescription = {\n  __typename?: 'LocationConnectionDescription';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<LocationConnection>;\n};\n\nexport type LocationConnectionId = {\n  __typename?: 'LocationConnectionId';\n  key?: Maybe<Scalars['ID']>;\n  connection?: Maybe<LocationConnection>;\n};\n\nexport type LocationConnectionLocale = {\n  __typename?: 'LocationConnectionLocale';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<LocationConnection>;\n};\n\nexport type LocationConnectionName = {\n  __typename?: 'LocationConnectionName';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<LocationConnection>;\n};\n\nexport type LocationConnectionPublished_At = {\n  __typename?: 'LocationConnectionPublished_at';\n  key?: Maybe<Scalars['DateTime']>;\n  connection?: Maybe<LocationConnection>;\n};\n\nexport type LocationConnectionUpdatedAt = {\n  __typename?: 'LocationConnectionUpdatedAt';\n  key?: Maybe<Scalars['DateTime']>;\n  connection?: Maybe<LocationConnection>;\n};\n\nexport type LocationConnection_Id = {\n  __typename?: 'LocationConnection_id';\n  key?: Maybe<Scalars['ID']>;\n  connection?: Maybe<LocationConnection>;\n};\n\nexport type LocationGroupBy = {\n  __typename?: 'LocationGroupBy';\n  id?: Maybe<Array<Maybe<LocationConnectionId>>>;\n  _id?: Maybe<Array<Maybe<LocationConnection_Id>>>;\n  createdAt?: Maybe<Array<Maybe<LocationConnectionCreatedAt>>>;\n  updatedAt?: Maybe<Array<Maybe<LocationConnectionUpdatedAt>>>;\n  name?: Maybe<Array<Maybe<LocationConnectionName>>>;\n  description?: Maybe<Array<Maybe<LocationConnectionDescription>>>;\n  city?: Maybe<Array<Maybe<LocationConnectionCity>>>;\n  coordinate?: Maybe<Array<Maybe<LocationConnectionCoordinate>>>;\n  locale?: Maybe<Array<Maybe<LocationConnectionLocale>>>;\n  published_at?: Maybe<Array<Maybe<LocationConnectionPublished_At>>>;\n};\n\nexport type LocationInput = {\n  name: Scalars['String'];\n  description?: Maybe<Scalars['String']>;\n  images?: Maybe<Array<Maybe<Scalars['ID']>>>;\n  city?: Maybe<Scalars['ID']>;\n  coordinate?: Maybe<ComponentCoordinateCoordinateInput>;\n  localizations?: Maybe<Array<Maybe<Scalars['ID']>>>;\n  locale?: Maybe<Scalars['String']>;\n  published_at?: Maybe<Scalars['DateTime']>;\n  created_by?: Maybe<Scalars['ID']>;\n  updated_by?: Maybe<Scalars['ID']>;\n};\n\n\nexport type Morph = UsersPermissionsMe | UsersPermissionsMeRole | UsersPermissionsLoginPayload | UserPermissionsPasswordPayload | Booking | BookingConnection | BookingAggregator | BookingAggregatorSum | BookingAggregatorAvg | BookingAggregatorMin | BookingAggregatorMax | BookingGroupBy | BookingConnectionId | BookingConnection_Id | BookingConnectionCreatedAt | BookingConnectionUpdatedAt | BookingConnectionTrip | BookingConnectionApproved | BookingConnectionBasePrice | BookingConnectionCurrency | BookingConnectionBasePeopleCount | BookingConnectionDiscount | BookingConnectionFullName | BookingConnectionPhone | BookingConnectionMessage | BookingConnectionArrivalDate | BookingConnectionLanguage | BookingConnectionUserBookingStatus | BookingConnectionEmail | BookingConnectionAdults | BookingConnectionChildren | BookingConnectionTotalPrice | BookingConnectionPublished_At | CreateBookingPayload | UpdateBookingPayload | DeleteBookingPayload | City | CityConnection | CityAggregator | CityGroupBy | CityConnectionId | CityConnection_Id | CityConnectionCreatedAt | CityConnectionUpdatedAt | CityConnectionName | CityConnectionDescription | CityConnectionImage | CityConnectionLocale | CityConnectionPublished_At | CreateCityPayload | UpdateCityPayload | DeleteCityPayload | Feature | FeatureConnection | FeatureAggregator | FeatureGroupBy | FeatureConnectionId | FeatureConnection_Id | FeatureConnectionCreatedAt | FeatureConnectionUpdatedAt | FeatureConnectionName | FeatureConnectionInfo | FeatureConnectionLocale | FeatureConnectionPublished_At | CreateFeaturePayload | UpdateFeaturePayload | DeleteFeaturePayload | HomeBanner | UpdateHomeBannerPayload | DeleteHomeBannerPayload | Hotels | HotelsConnection | HotelsAggregator | HotelsAggregatorSum | HotelsAggregatorAvg | HotelsAggregatorMin | HotelsAggregatorMax | HotelsGroupBy | HotelsConnectionId | HotelsConnection_Id | HotelsConnectionCreatedAt | HotelsConnectionUpdatedAt | HotelsConnectionName | HotelsConnectionStars | HotelsConnectionUrl | HotelsConnectionPublished_At | CreateHotelPayload | UpdateHotelPayload | DeleteHotelPayload | Location | LocationConnection | LocationAggregator | LocationGroupBy | LocationConnectionId | LocationConnection_Id | LocationConnectionCreatedAt | LocationConnectionUpdatedAt | LocationConnectionName | LocationConnectionDescription | LocationConnectionCity | LocationConnectionCoordinate | LocationConnectionLocale | LocationConnectionPublished_At | CreateLocationPayload | UpdateLocationPayload | DeleteLocationPayload | Partner | PartnerConnection | PartnerAggregator | PartnerAggregatorSum | PartnerAggregatorAvg | PartnerAggregatorMin | PartnerAggregatorMax | PartnerGroupBy | PartnerConnectionId | PartnerConnection_Id | PartnerConnectionCreatedAt | PartnerConnectionUpdatedAt | PartnerConnectionName | PartnerConnectionPhone | PartnerConnectionAddress | PartnerConnectionEmail | PartnerConnectionAgreement | PartnerConnectionCommission | PartnerConnectionRevenueSource | PartnerConnectionAgreementStatus | PartnerConnectionNotes | PartnerConnectionPhone2 | PartnerConnectionPublished_At | CreatePartnerPayload | UpdatePartnerPayload | DeletePartnerPayload | Review | ReviewConnection | ReviewAggregator | ReviewAggregatorSum | ReviewAggregatorAvg | ReviewAggregatorMin | ReviewAggregatorMax | ReviewGroupBy | ReviewConnectionId | ReviewConnection_Id | ReviewConnectionCreatedAt | ReviewConnectionUpdatedAt | ReviewConnectionText | ReviewConnectionRating | ReviewConnectionAuthor | ReviewConnectionActive | ReviewConnectionTrip | ReviewConnectionPublished_At | CreateReviewPayload | UpdateReviewPayload | DeleteReviewPayload | Subscribers | SubscribersConnection | SubscribersAggregator | SubscribersGroupBy | SubscribersConnectionId | SubscribersConnection_Id | SubscribersConnectionCreatedAt | SubscribersConnectionUpdatedAt | SubscribersConnectionEmail | SubscribersConnectionPublished_At | CreateSubscriberPayload | UpdateSubscriberPayload | DeleteSubscriberPayload | Trips | TripsConnection | TripsAggregator | TripsAggregatorSum | TripsAggregatorAvg | TripsAggregatorMin | TripsAggregatorMax | TripsGroupBy | TripsConnectionId | TripsConnection_Id | TripsConnectionCreatedAt | TripsConnectionUpdatedAt | TripsConnectionName | TripsConnectionPreviewImage | TripsConnectionActive | TripsConnectionTrip_Type | TripsConnectionDescription | TripsConnectionDuration | TripsConnectionPartner | TripsConnectionCurrency | TripsConnectionCity | TripsConnectionBasePrice | TripsConnectionBasePeopleCount | TripsConnectionDiscount | TripsConnectionTravelType | TripsConnectionHotel | TripsConnectionLocale | TripsConnectionPublished_At | CreateTripPayload | UpdateTripPayload | DeleteTripPayload | I18NLocale | UploadFile | UploadFileConnection | UploadFileAggregator | UploadFileAggregatorSum | UploadFileAggregatorAvg | UploadFileAggregatorMin | UploadFileAggregatorMax | UploadFileGroupBy | UploadFileConnectionId | UploadFileConnection_Id | UploadFileConnectionCreatedAt | UploadFileConnectionUpdatedAt | UploadFileConnectionName | UploadFileConnectionAlternativeText | UploadFileConnectionCaption | UploadFileConnectionWidth | UploadFileConnectionHeight | UploadFileConnectionFormats | UploadFileConnectionHash | UploadFileConnectionExt | UploadFileConnectionMime | UploadFileConnectionSize | UploadFileConnectionUrl | UploadFileConnectionPreviewUrl | UploadFileConnectionProvider | UploadFileConnectionProvider_Metadata | DeleteFilePayload | UsersPermissionsPermission | UsersPermissionsRole | UsersPermissionsRoleConnection | UsersPermissionsRoleAggregator | UsersPermissionsRoleGroupBy | UsersPermissionsRoleConnectionId | UsersPermissionsRoleConnection_Id | UsersPermissionsRoleConnectionName | UsersPermissionsRoleConnectionDescription | UsersPermissionsRoleConnectionType | CreateRolePayload | UpdateRolePayload | DeleteRolePayload | UsersPermissionsUser | UsersPermissionsUserConnection | UsersPermissionsUserAggregator | UsersPermissionsUserGroupBy | UsersPermissionsUserConnectionId | UsersPermissionsUserConnection_Id | UsersPermissionsUserConnectionCreatedAt | UsersPermissionsUserConnectionUpdatedAt | UsersPermissionsUserConnectionUsername | UsersPermissionsUserConnectionEmail | UsersPermissionsUserConnectionProvider | UsersPermissionsUserConnectionConfirmed | UsersPermissionsUserConnectionBlocked | UsersPermissionsUserConnectionRole | CreateUserPayload | UpdateUserPayload | DeleteUserPayload | ComponentCoordinateCoordinate | ComponentFeatureFeature | ComponentPricePrice | ComponentTimelineTimeline;\n\nexport type Mutation = {\n  __typename?: 'Mutation';\n  createBooking?: Maybe<CreateBookingPayload>;\n  updateBooking?: Maybe<UpdateBookingPayload>;\n  deleteBooking?: Maybe<DeleteBookingPayload>;\n  createCity?: Maybe<CreateCityPayload>;\n  updateCity?: Maybe<UpdateCityPayload>;\n  deleteCity?: Maybe<DeleteCityPayload>;\n  createFeature?: Maybe<CreateFeaturePayload>;\n  updateFeature?: Maybe<UpdateFeaturePayload>;\n  deleteFeature?: Maybe<DeleteFeaturePayload>;\n  updateHomeBanner?: Maybe<UpdateHomeBannerPayload>;\n  deleteHomeBanner?: Maybe<DeleteHomeBannerPayload>;\n  createHotel?: Maybe<CreateHotelPayload>;\n  updateHotel?: Maybe<UpdateHotelPayload>;\n  deleteHotel?: Maybe<DeleteHotelPayload>;\n  createLocation?: Maybe<CreateLocationPayload>;\n  updateLocation?: Maybe<UpdateLocationPayload>;\n  deleteLocation?: Maybe<DeleteLocationPayload>;\n  createPartner?: Maybe<CreatePartnerPayload>;\n  updatePartner?: Maybe<UpdatePartnerPayload>;\n  deletePartner?: Maybe<DeletePartnerPayload>;\n  createReview?: Maybe<CreateReviewPayload>;\n  updateReview?: Maybe<UpdateReviewPayload>;\n  deleteReview?: Maybe<DeleteReviewPayload>;\n  createSubscriber?: Maybe<CreateSubscriberPayload>;\n  updateSubscriber?: Maybe<UpdateSubscriberPayload>;\n  deleteSubscriber?: Maybe<DeleteSubscriberPayload>;\n  createTrip?: Maybe<CreateTripPayload>;\n  updateTrip?: Maybe<UpdateTripPayload>;\n  deleteTrip?: Maybe<DeleteTripPayload>;\n  /** Delete one file */\n  deleteFile?: Maybe<DeleteFilePayload>;\n  /** Create a new role */\n  createRole?: Maybe<CreateRolePayload>;\n  /** Update an existing role */\n  updateRole?: Maybe<UpdateRolePayload>;\n  /** Delete an existing role */\n  deleteRole?: Maybe<DeleteRolePayload>;\n  /** Create a new user */\n  createUser?: Maybe<CreateUserPayload>;\n  /** Update an existing user */\n  updateUser?: Maybe<UpdateUserPayload>;\n  /** Delete an existing user */\n  deleteUser?: Maybe<DeleteUserPayload>;\n  createCityLocalization: City;\n  createFeatureLocalization: Feature;\n  createLocationLocalization: Location;\n  createTripLocalization: Trips;\n  upload: UploadFile;\n  multipleUpload: Array<Maybe<UploadFile>>;\n  updateFileInfo: UploadFile;\n  login: UsersPermissionsLoginPayload;\n  register: UsersPermissionsLoginPayload;\n  forgotPassword?: Maybe<UserPermissionsPasswordPayload>;\n  resetPassword?: Maybe<UsersPermissionsLoginPayload>;\n  emailConfirmation?: Maybe<UsersPermissionsLoginPayload>;\n};\n\n\nexport type MutationCreateBookingArgs = {\n  input?: Maybe<CreateBookingInput>;\n};\n\n\nexport type MutationUpdateBookingArgs = {\n  input?: Maybe<UpdateBookingInput>;\n};\n\n\nexport type MutationDeleteBookingArgs = {\n  input?: Maybe<DeleteBookingInput>;\n};\n\n\nexport type MutationCreateCityArgs = {\n  input?: Maybe<CreateCityInput>;\n};\n\n\nexport type MutationUpdateCityArgs = {\n  input?: Maybe<UpdateCityInput>;\n};\n\n\nexport type MutationDeleteCityArgs = {\n  input?: Maybe<DeleteCityInput>;\n};\n\n\nexport type MutationCreateFeatureArgs = {\n  input?: Maybe<CreateFeatureInput>;\n};\n\n\nexport type MutationUpdateFeatureArgs = {\n  input?: Maybe<UpdateFeatureInput>;\n};\n\n\nexport type MutationDeleteFeatureArgs = {\n  input?: Maybe<DeleteFeatureInput>;\n};\n\n\nexport type MutationUpdateHomeBannerArgs = {\n  input?: Maybe<UpdateHomeBannerInput>;\n};\n\n\nexport type MutationCreateHotelArgs = {\n  input?: Maybe<CreateHotelInput>;\n};\n\n\nexport type MutationUpdateHotelArgs = {\n  input?: Maybe<UpdateHotelInput>;\n};\n\n\nexport type MutationDeleteHotelArgs = {\n  input?: Maybe<DeleteHotelInput>;\n};\n\n\nexport type MutationCreateLocationArgs = {\n  input?: Maybe<CreateLocationInput>;\n};\n\n\nexport type MutationUpdateLocationArgs = {\n  input?: Maybe<UpdateLocationInput>;\n};\n\n\nexport type MutationDeleteLocationArgs = {\n  input?: Maybe<DeleteLocationInput>;\n};\n\n\nexport type MutationCreatePartnerArgs = {\n  input?: Maybe<CreatePartnerInput>;\n};\n\n\nexport type MutationUpdatePartnerArgs = {\n  input?: Maybe<UpdatePartnerInput>;\n};\n\n\nexport type MutationDeletePartnerArgs = {\n  input?: Maybe<DeletePartnerInput>;\n};\n\n\nexport type MutationCreateReviewArgs = {\n  input?: Maybe<CreateReviewInput>;\n};\n\n\nexport type MutationUpdateReviewArgs = {\n  input?: Maybe<UpdateReviewInput>;\n};\n\n\nexport type MutationDeleteReviewArgs = {\n  input?: Maybe<DeleteReviewInput>;\n};\n\n\nexport type MutationCreateSubscriberArgs = {\n  input?: Maybe<CreateSubscriberInput>;\n};\n\n\nexport type MutationUpdateSubscriberArgs = {\n  input?: Maybe<UpdateSubscriberInput>;\n};\n\n\nexport type MutationDeleteSubscriberArgs = {\n  input?: Maybe<DeleteSubscriberInput>;\n};\n\n\nexport type MutationCreateTripArgs = {\n  input?: Maybe<CreateTripInput>;\n};\n\n\nexport type MutationUpdateTripArgs = {\n  input?: Maybe<UpdateTripInput>;\n};\n\n\nexport type MutationDeleteTripArgs = {\n  input?: Maybe<DeleteTripInput>;\n};\n\n\nexport type MutationDeleteFileArgs = {\n  input?: Maybe<DeleteFileInput>;\n};\n\n\nexport type MutationCreateRoleArgs = {\n  input?: Maybe<CreateRoleInput>;\n};\n\n\nexport type MutationUpdateRoleArgs = {\n  input?: Maybe<UpdateRoleInput>;\n};\n\n\nexport type MutationDeleteRoleArgs = {\n  input?: Maybe<DeleteRoleInput>;\n};\n\n\nexport type MutationCreateUserArgs = {\n  input?: Maybe<CreateUserInput>;\n};\n\n\nexport type MutationUpdateUserArgs = {\n  input?: Maybe<UpdateUserInput>;\n};\n\n\nexport type MutationDeleteUserArgs = {\n  input?: Maybe<DeleteUserInput>;\n};\n\n\nexport type MutationCreateCityLocalizationArgs = {\n  input: UpdateCityInput;\n};\n\n\nexport type MutationCreateFeatureLocalizationArgs = {\n  input: UpdateFeatureInput;\n};\n\n\nexport type MutationCreateLocationLocalizationArgs = {\n  input: UpdateLocationInput;\n};\n\n\nexport type MutationCreateTripLocalizationArgs = {\n  input: UpdateTripInput;\n};\n\n\nexport type MutationUploadArgs = {\n  refId?: Maybe<Scalars['ID']>;\n  ref?: Maybe<Scalars['String']>;\n  field?: Maybe<Scalars['String']>;\n  source?: Maybe<Scalars['String']>;\n  info?: Maybe<FileInfoInput>;\n  file: Scalars['Upload'];\n};\n\n\nexport type MutationMultipleUploadArgs = {\n  refId?: Maybe<Scalars['ID']>;\n  ref?: Maybe<Scalars['String']>;\n  field?: Maybe<Scalars['String']>;\n  source?: Maybe<Scalars['String']>;\n  files: Array<Maybe<Scalars['Upload']>>;\n};\n\n\nexport type MutationUpdateFileInfoArgs = {\n  id: Scalars['ID'];\n  info: FileInfoInput;\n};\n\n\nexport type MutationLoginArgs = {\n  input: UsersPermissionsLoginInput;\n};\n\n\nexport type MutationRegisterArgs = {\n  input: UsersPermissionsRegisterInput;\n};\n\n\nexport type MutationForgotPasswordArgs = {\n  email: Scalars['String'];\n};\n\n\nexport type MutationResetPasswordArgs = {\n  password: Scalars['String'];\n  passwordConfirmation: Scalars['String'];\n  code: Scalars['String'];\n};\n\n\nexport type MutationEmailConfirmationArgs = {\n  confirmation: Scalars['String'];\n};\n\nexport type Partner = {\n  __typename?: 'Partner';\n  id: Scalars['ID'];\n  _id: Scalars['ID'];\n  createdAt: Scalars['DateTime'];\n  updatedAt: Scalars['DateTime'];\n  name: Scalars['String'];\n  phone: Scalars['String'];\n  address?: Maybe<Scalars['String']>;\n  email?: Maybe<Scalars['String']>;\n  agreement?: Maybe<Scalars['String']>;\n  commission: Scalars['Float'];\n  revenueSource: Enum_Partner_Revenuesource;\n  agreementStatus: Enum_Partner_Agreementstatus;\n  notes?: Maybe<Scalars['String']>;\n  phone2?: Maybe<Scalars['String']>;\n  published_at?: Maybe<Scalars['DateTime']>;\n  trips?: Maybe<Array<Maybe<Trips>>>;\n};\n\n\nexport type PartnerTripsArgs = {\n  sort?: Maybe<Scalars['String']>;\n  limit?: Maybe<Scalars['Int']>;\n  start?: Maybe<Scalars['Int']>;\n  where?: Maybe<Scalars['JSON']>;\n};\n\nexport type PartnerAggregator = {\n  __typename?: 'PartnerAggregator';\n  count?: Maybe<Scalars['Int']>;\n  totalCount?: Maybe<Scalars['Int']>;\n  sum?: Maybe<PartnerAggregatorSum>;\n  avg?: Maybe<PartnerAggregatorAvg>;\n  min?: Maybe<PartnerAggregatorMin>;\n  max?: Maybe<PartnerAggregatorMax>;\n};\n\nexport type PartnerAggregatorAvg = {\n  __typename?: 'PartnerAggregatorAvg';\n  commission?: Maybe<Scalars['Float']>;\n};\n\nexport type PartnerAggregatorMax = {\n  __typename?: 'PartnerAggregatorMax';\n  commission?: Maybe<Scalars['Float']>;\n};\n\nexport type PartnerAggregatorMin = {\n  __typename?: 'PartnerAggregatorMin';\n  commission?: Maybe<Scalars['Float']>;\n};\n\nexport type PartnerAggregatorSum = {\n  __typename?: 'PartnerAggregatorSum';\n  commission?: Maybe<Scalars['Float']>;\n};\n\nexport type PartnerConnection = {\n  __typename?: 'PartnerConnection';\n  values?: Maybe<Array<Maybe<Partner>>>;\n  groupBy?: Maybe<PartnerGroupBy>;\n  aggregate?: Maybe<PartnerAggregator>;\n};\n\nexport type PartnerConnectionAddress = {\n  __typename?: 'PartnerConnectionAddress';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<PartnerConnection>;\n};\n\nexport type PartnerConnectionAgreement = {\n  __typename?: 'PartnerConnectionAgreement';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<PartnerConnection>;\n};\n\nexport type PartnerConnectionAgreementStatus = {\n  __typename?: 'PartnerConnectionAgreementStatus';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<PartnerConnection>;\n};\n\nexport type PartnerConnectionCommission = {\n  __typename?: 'PartnerConnectionCommission';\n  key?: Maybe<Scalars['Float']>;\n  connection?: Maybe<PartnerConnection>;\n};\n\nexport type PartnerConnectionCreatedAt = {\n  __typename?: 'PartnerConnectionCreatedAt';\n  key?: Maybe<Scalars['DateTime']>;\n  connection?: Maybe<PartnerConnection>;\n};\n\nexport type PartnerConnectionEmail = {\n  __typename?: 'PartnerConnectionEmail';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<PartnerConnection>;\n};\n\nexport type PartnerConnectionId = {\n  __typename?: 'PartnerConnectionId';\n  key?: Maybe<Scalars['ID']>;\n  connection?: Maybe<PartnerConnection>;\n};\n\nexport type PartnerConnectionName = {\n  __typename?: 'PartnerConnectionName';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<PartnerConnection>;\n};\n\nexport type PartnerConnectionNotes = {\n  __typename?: 'PartnerConnectionNotes';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<PartnerConnection>;\n};\n\nexport type PartnerConnectionPhone = {\n  __typename?: 'PartnerConnectionPhone';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<PartnerConnection>;\n};\n\nexport type PartnerConnectionPhone2 = {\n  __typename?: 'PartnerConnectionPhone2';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<PartnerConnection>;\n};\n\nexport type PartnerConnectionPublished_At = {\n  __typename?: 'PartnerConnectionPublished_at';\n  key?: Maybe<Scalars['DateTime']>;\n  connection?: Maybe<PartnerConnection>;\n};\n\nexport type PartnerConnectionRevenueSource = {\n  __typename?: 'PartnerConnectionRevenueSource';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<PartnerConnection>;\n};\n\nexport type PartnerConnectionUpdatedAt = {\n  __typename?: 'PartnerConnectionUpdatedAt';\n  key?: Maybe<Scalars['DateTime']>;\n  connection?: Maybe<PartnerConnection>;\n};\n\nexport type PartnerConnection_Id = {\n  __typename?: 'PartnerConnection_id';\n  key?: Maybe<Scalars['ID']>;\n  connection?: Maybe<PartnerConnection>;\n};\n\nexport type PartnerGroupBy = {\n  __typename?: 'PartnerGroupBy';\n  id?: Maybe<Array<Maybe<PartnerConnectionId>>>;\n  _id?: Maybe<Array<Maybe<PartnerConnection_Id>>>;\n  createdAt?: Maybe<Array<Maybe<PartnerConnectionCreatedAt>>>;\n  updatedAt?: Maybe<Array<Maybe<PartnerConnectionUpdatedAt>>>;\n  name?: Maybe<Array<Maybe<PartnerConnectionName>>>;\n  phone?: Maybe<Array<Maybe<PartnerConnectionPhone>>>;\n  address?: Maybe<Array<Maybe<PartnerConnectionAddress>>>;\n  email?: Maybe<Array<Maybe<PartnerConnectionEmail>>>;\n  agreement?: Maybe<Array<Maybe<PartnerConnectionAgreement>>>;\n  commission?: Maybe<Array<Maybe<PartnerConnectionCommission>>>;\n  revenueSource?: Maybe<Array<Maybe<PartnerConnectionRevenueSource>>>;\n  agreementStatus?: Maybe<Array<Maybe<PartnerConnectionAgreementStatus>>>;\n  notes?: Maybe<Array<Maybe<PartnerConnectionNotes>>>;\n  phone2?: Maybe<Array<Maybe<PartnerConnectionPhone2>>>;\n  published_at?: Maybe<Array<Maybe<PartnerConnectionPublished_At>>>;\n};\n\nexport type PartnerInput = {\n  name: Scalars['String'];\n  phone: Scalars['String'];\n  address?: Maybe<Scalars['String']>;\n  email?: Maybe<Scalars['String']>;\n  trips?: Maybe<Array<Maybe<Scalars['ID']>>>;\n  agreement?: Maybe<Scalars['String']>;\n  commission: Scalars['Float'];\n  revenueSource: Enum_Partner_Revenuesource;\n  agreementStatus: Enum_Partner_Agreementstatus;\n  notes?: Maybe<Scalars['String']>;\n  phone2?: Maybe<Scalars['String']>;\n  published_at?: Maybe<Scalars['DateTime']>;\n  created_by?: Maybe<Scalars['ID']>;\n  updated_by?: Maybe<Scalars['ID']>;\n};\n\nexport enum PublicationState {\n  Live = 'LIVE',\n  Preview = 'PREVIEW'\n}\n\nexport type Query = {\n  __typename?: 'Query';\n  booking?: Maybe<Booking>;\n  bookings?: Maybe<Array<Maybe<Booking>>>;\n  bookingsConnection?: Maybe<BookingConnection>;\n  city?: Maybe<City>;\n  cities?: Maybe<Array<Maybe<City>>>;\n  citiesConnection?: Maybe<CityConnection>;\n  feature?: Maybe<Feature>;\n  features?: Maybe<Array<Maybe<Feature>>>;\n  featuresConnection?: Maybe<FeatureConnection>;\n  homeBanner?: Maybe<HomeBanner>;\n  hotel?: Maybe<Hotels>;\n  hotels?: Maybe<Array<Maybe<Hotels>>>;\n  hotelsConnection?: Maybe<HotelsConnection>;\n  location?: Maybe<Location>;\n  locations?: Maybe<Array<Maybe<Location>>>;\n  locationsConnection?: Maybe<LocationConnection>;\n  partner?: Maybe<Partner>;\n  partners?: Maybe<Array<Maybe<Partner>>>;\n  partnersConnection?: Maybe<PartnerConnection>;\n  review?: Maybe<Review>;\n  reviews?: Maybe<Array<Maybe<Review>>>;\n  reviewsConnection?: Maybe<ReviewConnection>;\n  subscriber?: Maybe<Subscribers>;\n  subscribers?: Maybe<Array<Maybe<Subscribers>>>;\n  subscribersConnection?: Maybe<SubscribersConnection>;\n  trip?: Maybe<Trips>;\n  trips?: Maybe<Array<Maybe<Trips>>>;\n  tripsConnection?: Maybe<TripsConnection>;\n  files?: Maybe<Array<Maybe<UploadFile>>>;\n  filesConnection?: Maybe<UploadFileConnection>;\n  role?: Maybe<UsersPermissionsRole>;\n  /** Retrieve all the existing roles. You can't apply filters on this query. */\n  roles?: Maybe<Array<Maybe<UsersPermissionsRole>>>;\n  rolesConnection?: Maybe<UsersPermissionsRoleConnection>;\n  user?: Maybe<UsersPermissionsUser>;\n  users?: Maybe<Array<Maybe<UsersPermissionsUser>>>;\n  usersConnection?: Maybe<UsersPermissionsUserConnection>;\n  me?: Maybe<UsersPermissionsMe>;\n};\n\n\nexport type QueryBookingArgs = {\n  id: Scalars['ID'];\n  publicationState?: Maybe<PublicationState>;\n};\n\n\nexport type QueryBookingsArgs = {\n  sort?: Maybe<Scalars['String']>;\n  limit?: Maybe<Scalars['Int']>;\n  start?: Maybe<Scalars['Int']>;\n  where?: Maybe<Scalars['JSON']>;\n  publicationState?: Maybe<PublicationState>;\n};\n\n\nexport type QueryBookingsConnectionArgs = {\n  sort?: Maybe<Scalars['String']>;\n  limit?: Maybe<Scalars['Int']>;\n  start?: Maybe<Scalars['Int']>;\n  where?: Maybe<Scalars['JSON']>;\n};\n\n\nexport type QueryCityArgs = {\n  id: Scalars['ID'];\n  publicationState?: Maybe<PublicationState>;\n};\n\n\nexport type QueryCitiesArgs = {\n  sort?: Maybe<Scalars['String']>;\n  limit?: Maybe<Scalars['Int']>;\n  start?: Maybe<Scalars['Int']>;\n  where?: Maybe<Scalars['JSON']>;\n  publicationState?: Maybe<PublicationState>;\n  locale?: Maybe<Scalars['String']>;\n};\n\n\nexport type QueryCitiesConnectionArgs = {\n  sort?: Maybe<Scalars['String']>;\n  limit?: Maybe<Scalars['Int']>;\n  start?: Maybe<Scalars['Int']>;\n  where?: Maybe<Scalars['JSON']>;\n  locale?: Maybe<Scalars['String']>;\n};\n\n\nexport type QueryFeatureArgs = {\n  id: Scalars['ID'];\n  publicationState?: Maybe<PublicationState>;\n};\n\n\nexport type QueryFeaturesArgs = {\n  sort?: Maybe<Scalars['String']>;\n  limit?: Maybe<Scalars['Int']>;\n  start?: Maybe<Scalars['Int']>;\n  where?: Maybe<Scalars['JSON']>;\n  publicationState?: Maybe<PublicationState>;\n  locale?: Maybe<Scalars['String']>;\n};\n\n\nexport type QueryFeaturesConnectionArgs = {\n  sort?: Maybe<Scalars['String']>;\n  limit?: Maybe<Scalars['Int']>;\n  start?: Maybe<Scalars['Int']>;\n  where?: Maybe<Scalars['JSON']>;\n  locale?: Maybe<Scalars['String']>;\n};\n\n\nexport type QueryHomeBannerArgs = {\n  publicationState?: Maybe<PublicationState>;\n};\n\n\nexport type QueryHotelArgs = {\n  id: Scalars['ID'];\n  publicationState?: Maybe<PublicationState>;\n};\n\n\nexport type QueryHotelsArgs = {\n  sort?: Maybe<Scalars['String']>;\n  limit?: Maybe<Scalars['Int']>;\n  start?: Maybe<Scalars['Int']>;\n  where?: Maybe<Scalars['JSON']>;\n  publicationState?: Maybe<PublicationState>;\n};\n\n\nexport type QueryHotelsConnectionArgs = {\n  sort?: Maybe<Scalars['String']>;\n  limit?: Maybe<Scalars['Int']>;\n  start?: Maybe<Scalars['Int']>;\n  where?: Maybe<Scalars['JSON']>;\n};\n\n\nexport type QueryLocationArgs = {\n  id: Scalars['ID'];\n  publicationState?: Maybe<PublicationState>;\n};\n\n\nexport type QueryLocationsArgs = {\n  sort?: Maybe<Scalars['String']>;\n  limit?: Maybe<Scalars['Int']>;\n  start?: Maybe<Scalars['Int']>;\n  where?: Maybe<Scalars['JSON']>;\n  publicationState?: Maybe<PublicationState>;\n  locale?: Maybe<Scalars['String']>;\n};\n\n\nexport type QueryLocationsConnectionArgs = {\n  sort?: Maybe<Scalars['String']>;\n  limit?: Maybe<Scalars['Int']>;\n  start?: Maybe<Scalars['Int']>;\n  where?: Maybe<Scalars['JSON']>;\n  locale?: Maybe<Scalars['String']>;\n};\n\n\nexport type QueryPartnerArgs = {\n  id: Scalars['ID'];\n  publicationState?: Maybe<PublicationState>;\n};\n\n\nexport type QueryPartnersArgs = {\n  sort?: Maybe<Scalars['String']>;\n  limit?: Maybe<Scalars['Int']>;\n  start?: Maybe<Scalars['Int']>;\n  where?: Maybe<Scalars['JSON']>;\n  publicationState?: Maybe<PublicationState>;\n};\n\n\nexport type QueryPartnersConnectionArgs = {\n  sort?: Maybe<Scalars['String']>;\n  limit?: Maybe<Scalars['Int']>;\n  start?: Maybe<Scalars['Int']>;\n  where?: Maybe<Scalars['JSON']>;\n};\n\n\nexport type QueryReviewArgs = {\n  id: Scalars['ID'];\n  publicationState?: Maybe<PublicationState>;\n};\n\n\nexport type QueryReviewsArgs = {\n  sort?: Maybe<Scalars['String']>;\n  limit?: Maybe<Scalars['Int']>;\n  start?: Maybe<Scalars['Int']>;\n  where?: Maybe<Scalars['JSON']>;\n  publicationState?: Maybe<PublicationState>;\n};\n\n\nexport type QueryReviewsConnectionArgs = {\n  sort?: Maybe<Scalars['String']>;\n  limit?: Maybe<Scalars['Int']>;\n  start?: Maybe<Scalars['Int']>;\n  where?: Maybe<Scalars['JSON']>;\n};\n\n\nexport type QuerySubscriberArgs = {\n  id: Scalars['ID'];\n  publicationState?: Maybe<PublicationState>;\n};\n\n\nexport type QuerySubscribersArgs = {\n  sort?: Maybe<Scalars['String']>;\n  limit?: Maybe<Scalars['Int']>;\n  start?: Maybe<Scalars['Int']>;\n  where?: Maybe<Scalars['JSON']>;\n  publicationState?: Maybe<PublicationState>;\n};\n\n\nexport type QuerySubscribersConnectionArgs = {\n  sort?: Maybe<Scalars['String']>;\n  limit?: Maybe<Scalars['Int']>;\n  start?: Maybe<Scalars['Int']>;\n  where?: Maybe<Scalars['JSON']>;\n};\n\n\nexport type QueryTripArgs = {\n  id: Scalars['ID'];\n  publicationState?: Maybe<PublicationState>;\n};\n\n\nexport type QueryTripsArgs = {\n  sort?: Maybe<Scalars['String']>;\n  limit?: Maybe<Scalars['Int']>;\n  start?: Maybe<Scalars['Int']>;\n  where?: Maybe<Scalars['JSON']>;\n  publicationState?: Maybe<PublicationState>;\n  locale?: Maybe<Scalars['String']>;\n};\n\n\nexport type QueryTripsConnectionArgs = {\n  sort?: Maybe<Scalars['String']>;\n  limit?: Maybe<Scalars['Int']>;\n  start?: Maybe<Scalars['Int']>;\n  where?: Maybe<Scalars['JSON']>;\n  locale?: Maybe<Scalars['String']>;\n};\n\n\nexport type QueryFilesArgs = {\n  sort?: Maybe<Scalars['String']>;\n  limit?: Maybe<Scalars['Int']>;\n  start?: Maybe<Scalars['Int']>;\n  where?: Maybe<Scalars['JSON']>;\n  publicationState?: Maybe<PublicationState>;\n};\n\n\nexport type QueryFilesConnectionArgs = {\n  sort?: Maybe<Scalars['String']>;\n  limit?: Maybe<Scalars['Int']>;\n  start?: Maybe<Scalars['Int']>;\n  where?: Maybe<Scalars['JSON']>;\n};\n\n\nexport type QueryRoleArgs = {\n  id: Scalars['ID'];\n  publicationState?: Maybe<PublicationState>;\n};\n\n\nexport type QueryRolesArgs = {\n  sort?: Maybe<Scalars['String']>;\n  limit?: Maybe<Scalars['Int']>;\n  start?: Maybe<Scalars['Int']>;\n  where?: Maybe<Scalars['JSON']>;\n  publicationState?: Maybe<PublicationState>;\n};\n\n\nexport type QueryRolesConnectionArgs = {\n  sort?: Maybe<Scalars['String']>;\n  limit?: Maybe<Scalars['Int']>;\n  start?: Maybe<Scalars['Int']>;\n  where?: Maybe<Scalars['JSON']>;\n};\n\n\nexport type QueryUserArgs = {\n  id: Scalars['ID'];\n  publicationState?: Maybe<PublicationState>;\n};\n\n\nexport type QueryUsersArgs = {\n  sort?: Maybe<Scalars['String']>;\n  limit?: Maybe<Scalars['Int']>;\n  start?: Maybe<Scalars['Int']>;\n  where?: Maybe<Scalars['JSON']>;\n  publicationState?: Maybe<PublicationState>;\n};\n\n\nexport type QueryUsersConnectionArgs = {\n  sort?: Maybe<Scalars['String']>;\n  limit?: Maybe<Scalars['Int']>;\n  start?: Maybe<Scalars['Int']>;\n  where?: Maybe<Scalars['JSON']>;\n};\n\nexport type Review = {\n  __typename?: 'Review';\n  id: Scalars['ID'];\n  _id: Scalars['ID'];\n  createdAt: Scalars['DateTime'];\n  updatedAt: Scalars['DateTime'];\n  text?: Maybe<Scalars['String']>;\n  rating: Scalars['Float'];\n  author?: Maybe<UsersPermissionsUser>;\n  active?: Maybe<Scalars['Boolean']>;\n  trip?: Maybe<Trips>;\n  published_at?: Maybe<Scalars['DateTime']>;\n};\n\nexport type ReviewAggregator = {\n  __typename?: 'ReviewAggregator';\n  count?: Maybe<Scalars['Int']>;\n  totalCount?: Maybe<Scalars['Int']>;\n  sum?: Maybe<ReviewAggregatorSum>;\n  avg?: Maybe<ReviewAggregatorAvg>;\n  min?: Maybe<ReviewAggregatorMin>;\n  max?: Maybe<ReviewAggregatorMax>;\n};\n\nexport type ReviewAggregatorAvg = {\n  __typename?: 'ReviewAggregatorAvg';\n  rating?: Maybe<Scalars['Float']>;\n};\n\nexport type ReviewAggregatorMax = {\n  __typename?: 'ReviewAggregatorMax';\n  rating?: Maybe<Scalars['Float']>;\n};\n\nexport type ReviewAggregatorMin = {\n  __typename?: 'ReviewAggregatorMin';\n  rating?: Maybe<Scalars['Float']>;\n};\n\nexport type ReviewAggregatorSum = {\n  __typename?: 'ReviewAggregatorSum';\n  rating?: Maybe<Scalars['Float']>;\n};\n\nexport type ReviewConnection = {\n  __typename?: 'ReviewConnection';\n  values?: Maybe<Array<Maybe<Review>>>;\n  groupBy?: Maybe<ReviewGroupBy>;\n  aggregate?: Maybe<ReviewAggregator>;\n};\n\nexport type ReviewConnectionActive = {\n  __typename?: 'ReviewConnectionActive';\n  key?: Maybe<Scalars['Boolean']>;\n  connection?: Maybe<ReviewConnection>;\n};\n\nexport type ReviewConnectionAuthor = {\n  __typename?: 'ReviewConnectionAuthor';\n  key?: Maybe<Scalars['ID']>;\n  connection?: Maybe<ReviewConnection>;\n};\n\nexport type ReviewConnectionCreatedAt = {\n  __typename?: 'ReviewConnectionCreatedAt';\n  key?: Maybe<Scalars['DateTime']>;\n  connection?: Maybe<ReviewConnection>;\n};\n\nexport type ReviewConnectionId = {\n  __typename?: 'ReviewConnectionId';\n  key?: Maybe<Scalars['ID']>;\n  connection?: Maybe<ReviewConnection>;\n};\n\nexport type ReviewConnectionPublished_At = {\n  __typename?: 'ReviewConnectionPublished_at';\n  key?: Maybe<Scalars['DateTime']>;\n  connection?: Maybe<ReviewConnection>;\n};\n\nexport type ReviewConnectionRating = {\n  __typename?: 'ReviewConnectionRating';\n  key?: Maybe<Scalars['Float']>;\n  connection?: Maybe<ReviewConnection>;\n};\n\nexport type ReviewConnectionText = {\n  __typename?: 'ReviewConnectionText';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<ReviewConnection>;\n};\n\nexport type ReviewConnectionTrip = {\n  __typename?: 'ReviewConnectionTrip';\n  key?: Maybe<Scalars['ID']>;\n  connection?: Maybe<ReviewConnection>;\n};\n\nexport type ReviewConnectionUpdatedAt = {\n  __typename?: 'ReviewConnectionUpdatedAt';\n  key?: Maybe<Scalars['DateTime']>;\n  connection?: Maybe<ReviewConnection>;\n};\n\nexport type ReviewConnection_Id = {\n  __typename?: 'ReviewConnection_id';\n  key?: Maybe<Scalars['ID']>;\n  connection?: Maybe<ReviewConnection>;\n};\n\nexport type ReviewGroupBy = {\n  __typename?: 'ReviewGroupBy';\n  id?: Maybe<Array<Maybe<ReviewConnectionId>>>;\n  _id?: Maybe<Array<Maybe<ReviewConnection_Id>>>;\n  createdAt?: Maybe<Array<Maybe<ReviewConnectionCreatedAt>>>;\n  updatedAt?: Maybe<Array<Maybe<ReviewConnectionUpdatedAt>>>;\n  text?: Maybe<Array<Maybe<ReviewConnectionText>>>;\n  rating?: Maybe<Array<Maybe<ReviewConnectionRating>>>;\n  author?: Maybe<Array<Maybe<ReviewConnectionAuthor>>>;\n  active?: Maybe<Array<Maybe<ReviewConnectionActive>>>;\n  trip?: Maybe<Array<Maybe<ReviewConnectionTrip>>>;\n  published_at?: Maybe<Array<Maybe<ReviewConnectionPublished_At>>>;\n};\n\nexport type ReviewInput = {\n  text?: Maybe<Scalars['String']>;\n  rating: Scalars['Float'];\n  author?: Maybe<Scalars['ID']>;\n  active?: Maybe<Scalars['Boolean']>;\n  trip?: Maybe<Scalars['ID']>;\n  published_at?: Maybe<Scalars['DateTime']>;\n  created_by?: Maybe<Scalars['ID']>;\n  updated_by?: Maybe<Scalars['ID']>;\n};\n\nexport type RoleInput = {\n  name: Scalars['String'];\n  description?: Maybe<Scalars['String']>;\n  type?: Maybe<Scalars['String']>;\n  permissions?: Maybe<Array<Maybe<Scalars['ID']>>>;\n  users?: Maybe<Array<Maybe<Scalars['ID']>>>;\n  created_by?: Maybe<Scalars['ID']>;\n  updated_by?: Maybe<Scalars['ID']>;\n};\n\nexport type SubscriberInput = {\n  email: Scalars['String'];\n  published_at?: Maybe<Scalars['DateTime']>;\n  created_by?: Maybe<Scalars['ID']>;\n  updated_by?: Maybe<Scalars['ID']>;\n};\n\nexport type Subscribers = {\n  __typename?: 'Subscribers';\n  id: Scalars['ID'];\n  _id: Scalars['ID'];\n  createdAt: Scalars['DateTime'];\n  updatedAt: Scalars['DateTime'];\n  email: Scalars['String'];\n  published_at?: Maybe<Scalars['DateTime']>;\n};\n\nexport type SubscribersAggregator = {\n  __typename?: 'SubscribersAggregator';\n  count?: Maybe<Scalars['Int']>;\n  totalCount?: Maybe<Scalars['Int']>;\n};\n\nexport type SubscribersConnection = {\n  __typename?: 'SubscribersConnection';\n  values?: Maybe<Array<Maybe<Subscribers>>>;\n  groupBy?: Maybe<SubscribersGroupBy>;\n  aggregate?: Maybe<SubscribersAggregator>;\n};\n\nexport type SubscribersConnectionCreatedAt = {\n  __typename?: 'SubscribersConnectionCreatedAt';\n  key?: Maybe<Scalars['DateTime']>;\n  connection?: Maybe<SubscribersConnection>;\n};\n\nexport type SubscribersConnectionEmail = {\n  __typename?: 'SubscribersConnectionEmail';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<SubscribersConnection>;\n};\n\nexport type SubscribersConnectionId = {\n  __typename?: 'SubscribersConnectionId';\n  key?: Maybe<Scalars['ID']>;\n  connection?: Maybe<SubscribersConnection>;\n};\n\nexport type SubscribersConnectionPublished_At = {\n  __typename?: 'SubscribersConnectionPublished_at';\n  key?: Maybe<Scalars['DateTime']>;\n  connection?: Maybe<SubscribersConnection>;\n};\n\nexport type SubscribersConnectionUpdatedAt = {\n  __typename?: 'SubscribersConnectionUpdatedAt';\n  key?: Maybe<Scalars['DateTime']>;\n  connection?: Maybe<SubscribersConnection>;\n};\n\nexport type SubscribersConnection_Id = {\n  __typename?: 'SubscribersConnection_id';\n  key?: Maybe<Scalars['ID']>;\n  connection?: Maybe<SubscribersConnection>;\n};\n\nexport type SubscribersGroupBy = {\n  __typename?: 'SubscribersGroupBy';\n  id?: Maybe<Array<Maybe<SubscribersConnectionId>>>;\n  _id?: Maybe<Array<Maybe<SubscribersConnection_Id>>>;\n  createdAt?: Maybe<Array<Maybe<SubscribersConnectionCreatedAt>>>;\n  updatedAt?: Maybe<Array<Maybe<SubscribersConnectionUpdatedAt>>>;\n  email?: Maybe<Array<Maybe<SubscribersConnectionEmail>>>;\n  published_at?: Maybe<Array<Maybe<SubscribersConnectionPublished_At>>>;\n};\n\n\nexport type TripInput = {\n  name: Scalars['String'];\n  previewImage?: Maybe<Scalars['ID']>;\n  active?: Maybe<Scalars['Boolean']>;\n  trip_type: Enum_Trips_Trip_Type;\n  description?: Maybe<Scalars['String']>;\n  duration: Scalars['Int'];\n  partner?: Maybe<Scalars['ID']>;\n  currency?: Maybe<Enum_Trips_Currency>;\n  city?: Maybe<Scalars['ID']>;\n  features?: Maybe<Array<ComponentFeatureFeatureInput>>;\n  basePrice: Scalars['Int'];\n  basePeopleCount: Scalars['Int'];\n  discount?: Maybe<Scalars['Float']>;\n  travelType: Enum_Trips_Traveltype;\n  hotel?: Maybe<Scalars['ID']>;\n  plan?: Maybe<Array<ComponentTimelineTimelineInput>>;\n  sequence: Scalars['String'];\n  localizations?: Maybe<Array<Maybe<Scalars['ID']>>>;\n  locale?: Maybe<Scalars['String']>;\n  published_at?: Maybe<Scalars['DateTime']>;\n  created_by?: Maybe<Scalars['ID']>;\n  updated_by?: Maybe<Scalars['ID']>;\n};\n\nexport type Trips = {\n  __typename?: 'Trips';\n  id: Scalars['ID'];\n  _id: Scalars['ID'];\n  createdAt: Scalars['DateTime'];\n  updatedAt: Scalars['DateTime'];\n  name: Scalars['String'];\n  previewImage?: Maybe<UploadFile>;\n  active?: Maybe<Scalars['Boolean']>;\n  trip_type: Enum_Trips_Trip_Type;\n  description?: Maybe<Scalars['String']>;\n  duration: Scalars['Int'];\n  partner?: Maybe<Partner>;\n  currency?: Maybe<Enum_Trips_Currency>;\n  city?: Maybe<City>;\n  features?: Maybe<Array<Maybe<ComponentFeatureFeature>>>;\n  basePrice: Scalars['Int'];\n  basePeopleCount: Scalars['Int'];\n  discount?: Maybe<Scalars['Float']>;\n  travelType: Enum_Trips_Traveltype;\n  hotel?: Maybe<Hotels>;\n  plan?: Maybe<Array<Maybe<ComponentTimelineTimeline>>>;\n  locale?: Maybe<Scalars['String']>;\n  published_at?: Maybe<Scalars['DateTime']>;\n  localizations?: Maybe<Array<Maybe<Trips>>>;\n};\n\n\nexport type TripsLocalizationsArgs = {\n  sort?: Maybe<Scalars['String']>;\n  limit?: Maybe<Scalars['Int']>;\n  start?: Maybe<Scalars['Int']>;\n  where?: Maybe<Scalars['JSON']>;\n};\n\nexport type TripsAggregator = {\n  __typename?: 'TripsAggregator';\n  count?: Maybe<Scalars['Int']>;\n  totalCount?: Maybe<Scalars['Int']>;\n  sum?: Maybe<TripsAggregatorSum>;\n  avg?: Maybe<TripsAggregatorAvg>;\n  min?: Maybe<TripsAggregatorMin>;\n  max?: Maybe<TripsAggregatorMax>;\n};\n\nexport type TripsAggregatorAvg = {\n  __typename?: 'TripsAggregatorAvg';\n  duration?: Maybe<Scalars['Float']>;\n  basePrice?: Maybe<Scalars['Float']>;\n  basePeopleCount?: Maybe<Scalars['Float']>;\n  discount?: Maybe<Scalars['Float']>;\n};\n\nexport type TripsAggregatorMax = {\n  __typename?: 'TripsAggregatorMax';\n  duration?: Maybe<Scalars['Float']>;\n  basePrice?: Maybe<Scalars['Float']>;\n  basePeopleCount?: Maybe<Scalars['Float']>;\n  discount?: Maybe<Scalars['Float']>;\n};\n\nexport type TripsAggregatorMin = {\n  __typename?: 'TripsAggregatorMin';\n  duration?: Maybe<Scalars['Float']>;\n  basePrice?: Maybe<Scalars['Float']>;\n  basePeopleCount?: Maybe<Scalars['Float']>;\n  discount?: Maybe<Scalars['Float']>;\n};\n\nexport type TripsAggregatorSum = {\n  __typename?: 'TripsAggregatorSum';\n  duration?: Maybe<Scalars['Float']>;\n  basePrice?: Maybe<Scalars['Float']>;\n  basePeopleCount?: Maybe<Scalars['Float']>;\n  discount?: Maybe<Scalars['Float']>;\n};\n\nexport type TripsConnection = {\n  __typename?: 'TripsConnection';\n  values?: Maybe<Array<Maybe<Trips>>>;\n  groupBy?: Maybe<TripsGroupBy>;\n  aggregate?: Maybe<TripsAggregator>;\n};\n\nexport type TripsConnectionActive = {\n  __typename?: 'TripsConnectionActive';\n  key?: Maybe<Scalars['Boolean']>;\n  connection?: Maybe<TripsConnection>;\n};\n\nexport type TripsConnectionBasePeopleCount = {\n  __typename?: 'TripsConnectionBasePeopleCount';\n  key?: Maybe<Scalars['Int']>;\n  connection?: Maybe<TripsConnection>;\n};\n\nexport type TripsConnectionBasePrice = {\n  __typename?: 'TripsConnectionBasePrice';\n  key?: Maybe<Scalars['Int']>;\n  connection?: Maybe<TripsConnection>;\n};\n\nexport type TripsConnectionCity = {\n  __typename?: 'TripsConnectionCity';\n  key?: Maybe<Scalars['ID']>;\n  connection?: Maybe<TripsConnection>;\n};\n\nexport type TripsConnectionCreatedAt = {\n  __typename?: 'TripsConnectionCreatedAt';\n  key?: Maybe<Scalars['DateTime']>;\n  connection?: Maybe<TripsConnection>;\n};\n\nexport type TripsConnectionCurrency = {\n  __typename?: 'TripsConnectionCurrency';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<TripsConnection>;\n};\n\nexport type TripsConnectionDescription = {\n  __typename?: 'TripsConnectionDescription';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<TripsConnection>;\n};\n\nexport type TripsConnectionDiscount = {\n  __typename?: 'TripsConnectionDiscount';\n  key?: Maybe<Scalars['Float']>;\n  connection?: Maybe<TripsConnection>;\n};\n\nexport type TripsConnectionDuration = {\n  __typename?: 'TripsConnectionDuration';\n  key?: Maybe<Scalars['Int']>;\n  connection?: Maybe<TripsConnection>;\n};\n\nexport type TripsConnectionHotel = {\n  __typename?: 'TripsConnectionHotel';\n  key?: Maybe<Scalars['ID']>;\n  connection?: Maybe<TripsConnection>;\n};\n\nexport type TripsConnectionId = {\n  __typename?: 'TripsConnectionId';\n  key?: Maybe<Scalars['ID']>;\n  connection?: Maybe<TripsConnection>;\n};\n\nexport type TripsConnectionLocale = {\n  __typename?: 'TripsConnectionLocale';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<TripsConnection>;\n};\n\nexport type TripsConnectionName = {\n  __typename?: 'TripsConnectionName';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<TripsConnection>;\n};\n\nexport type TripsConnectionPartner = {\n  __typename?: 'TripsConnectionPartner';\n  key?: Maybe<Scalars['ID']>;\n  connection?: Maybe<TripsConnection>;\n};\n\nexport type TripsConnectionPreviewImage = {\n  __typename?: 'TripsConnectionPreviewImage';\n  key?: Maybe<Scalars['ID']>;\n  connection?: Maybe<TripsConnection>;\n};\n\nexport type TripsConnectionPublished_At = {\n  __typename?: 'TripsConnectionPublished_at';\n  key?: Maybe<Scalars['DateTime']>;\n  connection?: Maybe<TripsConnection>;\n};\n\nexport type TripsConnectionTravelType = {\n  __typename?: 'TripsConnectionTravelType';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<TripsConnection>;\n};\n\nexport type TripsConnectionTrip_Type = {\n  __typename?: 'TripsConnectionTrip_type';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<TripsConnection>;\n};\n\nexport type TripsConnectionUpdatedAt = {\n  __typename?: 'TripsConnectionUpdatedAt';\n  key?: Maybe<Scalars['DateTime']>;\n  connection?: Maybe<TripsConnection>;\n};\n\nexport type TripsConnection_Id = {\n  __typename?: 'TripsConnection_id';\n  key?: Maybe<Scalars['ID']>;\n  connection?: Maybe<TripsConnection>;\n};\n\nexport type TripsGroupBy = {\n  __typename?: 'TripsGroupBy';\n  id?: Maybe<Array<Maybe<TripsConnectionId>>>;\n  _id?: Maybe<Array<Maybe<TripsConnection_Id>>>;\n  createdAt?: Maybe<Array<Maybe<TripsConnectionCreatedAt>>>;\n  updatedAt?: Maybe<Array<Maybe<TripsConnectionUpdatedAt>>>;\n  name?: Maybe<Array<Maybe<TripsConnectionName>>>;\n  previewImage?: Maybe<Array<Maybe<TripsConnectionPreviewImage>>>;\n  active?: Maybe<Array<Maybe<TripsConnectionActive>>>;\n  trip_type?: Maybe<Array<Maybe<TripsConnectionTrip_Type>>>;\n  description?: Maybe<Array<Maybe<TripsConnectionDescription>>>;\n  duration?: Maybe<Array<Maybe<TripsConnectionDuration>>>;\n  partner?: Maybe<Array<Maybe<TripsConnectionPartner>>>;\n  currency?: Maybe<Array<Maybe<TripsConnectionCurrency>>>;\n  city?: Maybe<Array<Maybe<TripsConnectionCity>>>;\n  basePrice?: Maybe<Array<Maybe<TripsConnectionBasePrice>>>;\n  basePeopleCount?: Maybe<Array<Maybe<TripsConnectionBasePeopleCount>>>;\n  discount?: Maybe<Array<Maybe<TripsConnectionDiscount>>>;\n  travelType?: Maybe<Array<Maybe<TripsConnectionTravelType>>>;\n  hotel?: Maybe<Array<Maybe<TripsConnectionHotel>>>;\n  locale?: Maybe<Array<Maybe<TripsConnectionLocale>>>;\n  published_at?: Maybe<Array<Maybe<TripsConnectionPublished_At>>>;\n};\n\n\nexport type UploadFile = {\n  __typename?: 'UploadFile';\n  id: Scalars['ID'];\n  _id: Scalars['ID'];\n  createdAt: Scalars['DateTime'];\n  updatedAt: Scalars['DateTime'];\n  name: Scalars['String'];\n  alternativeText?: Maybe<Scalars['String']>;\n  caption?: Maybe<Scalars['String']>;\n  width?: Maybe<Scalars['Int']>;\n  height?: Maybe<Scalars['Int']>;\n  formats?: Maybe<Scalars['JSON']>;\n  hash: Scalars['String'];\n  ext?: Maybe<Scalars['String']>;\n  mime: Scalars['String'];\n  size: Scalars['Float'];\n  url: Scalars['String'];\n  previewUrl?: Maybe<Scalars['String']>;\n  provider: Scalars['String'];\n  provider_metadata?: Maybe<Scalars['JSON']>;\n  related?: Maybe<Array<Maybe<Morph>>>;\n};\n\n\nexport type UploadFileRelatedArgs = {\n  sort?: Maybe<Scalars['String']>;\n  limit?: Maybe<Scalars['Int']>;\n  start?: Maybe<Scalars['Int']>;\n  where?: Maybe<Scalars['JSON']>;\n};\n\nexport type UploadFileAggregator = {\n  __typename?: 'UploadFileAggregator';\n  count?: Maybe<Scalars['Int']>;\n  totalCount?: Maybe<Scalars['Int']>;\n  sum?: Maybe<UploadFileAggregatorSum>;\n  avg?: Maybe<UploadFileAggregatorAvg>;\n  min?: Maybe<UploadFileAggregatorMin>;\n  max?: Maybe<UploadFileAggregatorMax>;\n};\n\nexport type UploadFileAggregatorAvg = {\n  __typename?: 'UploadFileAggregatorAvg';\n  width?: Maybe<Scalars['Float']>;\n  height?: Maybe<Scalars['Float']>;\n  size?: Maybe<Scalars['Float']>;\n};\n\nexport type UploadFileAggregatorMax = {\n  __typename?: 'UploadFileAggregatorMax';\n  width?: Maybe<Scalars['Float']>;\n  height?: Maybe<Scalars['Float']>;\n  size?: Maybe<Scalars['Float']>;\n};\n\nexport type UploadFileAggregatorMin = {\n  __typename?: 'UploadFileAggregatorMin';\n  width?: Maybe<Scalars['Float']>;\n  height?: Maybe<Scalars['Float']>;\n  size?: Maybe<Scalars['Float']>;\n};\n\nexport type UploadFileAggregatorSum = {\n  __typename?: 'UploadFileAggregatorSum';\n  width?: Maybe<Scalars['Float']>;\n  height?: Maybe<Scalars['Float']>;\n  size?: Maybe<Scalars['Float']>;\n};\n\nexport type UploadFileConnection = {\n  __typename?: 'UploadFileConnection';\n  values?: Maybe<Array<Maybe<UploadFile>>>;\n  groupBy?: Maybe<UploadFileGroupBy>;\n  aggregate?: Maybe<UploadFileAggregator>;\n};\n\nexport type UploadFileConnectionAlternativeText = {\n  __typename?: 'UploadFileConnectionAlternativeText';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<UploadFileConnection>;\n};\n\nexport type UploadFileConnectionCaption = {\n  __typename?: 'UploadFileConnectionCaption';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<UploadFileConnection>;\n};\n\nexport type UploadFileConnectionCreatedAt = {\n  __typename?: 'UploadFileConnectionCreatedAt';\n  key?: Maybe<Scalars['DateTime']>;\n  connection?: Maybe<UploadFileConnection>;\n};\n\nexport type UploadFileConnectionExt = {\n  __typename?: 'UploadFileConnectionExt';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<UploadFileConnection>;\n};\n\nexport type UploadFileConnectionFormats = {\n  __typename?: 'UploadFileConnectionFormats';\n  key?: Maybe<Scalars['JSON']>;\n  connection?: Maybe<UploadFileConnection>;\n};\n\nexport type UploadFileConnectionHash = {\n  __typename?: 'UploadFileConnectionHash';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<UploadFileConnection>;\n};\n\nexport type UploadFileConnectionHeight = {\n  __typename?: 'UploadFileConnectionHeight';\n  key?: Maybe<Scalars['Int']>;\n  connection?: Maybe<UploadFileConnection>;\n};\n\nexport type UploadFileConnectionId = {\n  __typename?: 'UploadFileConnectionId';\n  key?: Maybe<Scalars['ID']>;\n  connection?: Maybe<UploadFileConnection>;\n};\n\nexport type UploadFileConnectionMime = {\n  __typename?: 'UploadFileConnectionMime';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<UploadFileConnection>;\n};\n\nexport type UploadFileConnectionName = {\n  __typename?: 'UploadFileConnectionName';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<UploadFileConnection>;\n};\n\nexport type UploadFileConnectionPreviewUrl = {\n  __typename?: 'UploadFileConnectionPreviewUrl';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<UploadFileConnection>;\n};\n\nexport type UploadFileConnectionProvider = {\n  __typename?: 'UploadFileConnectionProvider';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<UploadFileConnection>;\n};\n\nexport type UploadFileConnectionProvider_Metadata = {\n  __typename?: 'UploadFileConnectionProvider_metadata';\n  key?: Maybe<Scalars['JSON']>;\n  connection?: Maybe<UploadFileConnection>;\n};\n\nexport type UploadFileConnectionSize = {\n  __typename?: 'UploadFileConnectionSize';\n  key?: Maybe<Scalars['Float']>;\n  connection?: Maybe<UploadFileConnection>;\n};\n\nexport type UploadFileConnectionUpdatedAt = {\n  __typename?: 'UploadFileConnectionUpdatedAt';\n  key?: Maybe<Scalars['DateTime']>;\n  connection?: Maybe<UploadFileConnection>;\n};\n\nexport type UploadFileConnectionUrl = {\n  __typename?: 'UploadFileConnectionUrl';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<UploadFileConnection>;\n};\n\nexport type UploadFileConnectionWidth = {\n  __typename?: 'UploadFileConnectionWidth';\n  key?: Maybe<Scalars['Int']>;\n  connection?: Maybe<UploadFileConnection>;\n};\n\nexport type UploadFileConnection_Id = {\n  __typename?: 'UploadFileConnection_id';\n  key?: Maybe<Scalars['ID']>;\n  connection?: Maybe<UploadFileConnection>;\n};\n\nexport type UploadFileGroupBy = {\n  __typename?: 'UploadFileGroupBy';\n  id?: Maybe<Array<Maybe<UploadFileConnectionId>>>;\n  _id?: Maybe<Array<Maybe<UploadFileConnection_Id>>>;\n  createdAt?: Maybe<Array<Maybe<UploadFileConnectionCreatedAt>>>;\n  updatedAt?: Maybe<Array<Maybe<UploadFileConnectionUpdatedAt>>>;\n  name?: Maybe<Array<Maybe<UploadFileConnectionName>>>;\n  alternativeText?: Maybe<Array<Maybe<UploadFileConnectionAlternativeText>>>;\n  caption?: Maybe<Array<Maybe<UploadFileConnectionCaption>>>;\n  width?: Maybe<Array<Maybe<UploadFileConnectionWidth>>>;\n  height?: Maybe<Array<Maybe<UploadFileConnectionHeight>>>;\n  formats?: Maybe<Array<Maybe<UploadFileConnectionFormats>>>;\n  hash?: Maybe<Array<Maybe<UploadFileConnectionHash>>>;\n  ext?: Maybe<Array<Maybe<UploadFileConnectionExt>>>;\n  mime?: Maybe<Array<Maybe<UploadFileConnectionMime>>>;\n  size?: Maybe<Array<Maybe<UploadFileConnectionSize>>>;\n  url?: Maybe<Array<Maybe<UploadFileConnectionUrl>>>;\n  previewUrl?: Maybe<Array<Maybe<UploadFileConnectionPreviewUrl>>>;\n  provider?: Maybe<Array<Maybe<UploadFileConnectionProvider>>>;\n  provider_metadata?: Maybe<Array<Maybe<UploadFileConnectionProvider_Metadata>>>;\n};\n\nexport type UserInput = {\n  username: Scalars['String'];\n  email: Scalars['String'];\n  provider?: Maybe<Scalars['String']>;\n  password?: Maybe<Scalars['String']>;\n  resetPasswordToken?: Maybe<Scalars['String']>;\n  confirmationToken?: Maybe<Scalars['String']>;\n  confirmed?: Maybe<Scalars['Boolean']>;\n  blocked?: Maybe<Scalars['Boolean']>;\n  role?: Maybe<Scalars['ID']>;\n  created_by?: Maybe<Scalars['ID']>;\n  updated_by?: Maybe<Scalars['ID']>;\n};\n\nexport type UserPermissionsPasswordPayload = {\n  __typename?: 'UserPermissionsPasswordPayload';\n  ok: Scalars['Boolean'];\n};\n\nexport type UsersPermissionsLoginInput = {\n  identifier: Scalars['String'];\n  password: Scalars['String'];\n  provider?: Maybe<Scalars['String']>;\n};\n\nexport type UsersPermissionsLoginPayload = {\n  __typename?: 'UsersPermissionsLoginPayload';\n  jwt?: Maybe<Scalars['String']>;\n  user: UsersPermissionsMe;\n};\n\nexport type UsersPermissionsMe = {\n  __typename?: 'UsersPermissionsMe';\n  id: Scalars['ID'];\n  username: Scalars['String'];\n  email: Scalars['String'];\n  confirmed?: Maybe<Scalars['Boolean']>;\n  blocked?: Maybe<Scalars['Boolean']>;\n  role?: Maybe<UsersPermissionsMeRole>;\n};\n\nexport type UsersPermissionsMeRole = {\n  __typename?: 'UsersPermissionsMeRole';\n  id: Scalars['ID'];\n  name: Scalars['String'];\n  description?: Maybe<Scalars['String']>;\n  type?: Maybe<Scalars['String']>;\n};\n\nexport type UsersPermissionsPermission = {\n  __typename?: 'UsersPermissionsPermission';\n  id: Scalars['ID'];\n  _id: Scalars['ID'];\n  type: Scalars['String'];\n  controller: Scalars['String'];\n  action: Scalars['String'];\n  enabled: Scalars['Boolean'];\n  policy?: Maybe<Scalars['String']>;\n  role?: Maybe<UsersPermissionsRole>;\n};\n\nexport type UsersPermissionsRegisterInput = {\n  username: Scalars['String'];\n  email: Scalars['String'];\n  password: Scalars['String'];\n};\n\nexport type UsersPermissionsRole = {\n  __typename?: 'UsersPermissionsRole';\n  id: Scalars['ID'];\n  _id: Scalars['ID'];\n  name: Scalars['String'];\n  description?: Maybe<Scalars['String']>;\n  type?: Maybe<Scalars['String']>;\n  permissions?: Maybe<Array<Maybe<UsersPermissionsPermission>>>;\n  users?: Maybe<Array<Maybe<UsersPermissionsUser>>>;\n};\n\n\nexport type UsersPermissionsRolePermissionsArgs = {\n  sort?: Maybe<Scalars['String']>;\n  limit?: Maybe<Scalars['Int']>;\n  start?: Maybe<Scalars['Int']>;\n  where?: Maybe<Scalars['JSON']>;\n};\n\n\nexport type UsersPermissionsRoleUsersArgs = {\n  sort?: Maybe<Scalars['String']>;\n  limit?: Maybe<Scalars['Int']>;\n  start?: Maybe<Scalars['Int']>;\n  where?: Maybe<Scalars['JSON']>;\n};\n\nexport type UsersPermissionsRoleAggregator = {\n  __typename?: 'UsersPermissionsRoleAggregator';\n  count?: Maybe<Scalars['Int']>;\n  totalCount?: Maybe<Scalars['Int']>;\n};\n\nexport type UsersPermissionsRoleConnection = {\n  __typename?: 'UsersPermissionsRoleConnection';\n  values?: Maybe<Array<Maybe<UsersPermissionsRole>>>;\n  groupBy?: Maybe<UsersPermissionsRoleGroupBy>;\n  aggregate?: Maybe<UsersPermissionsRoleAggregator>;\n};\n\nexport type UsersPermissionsRoleConnectionDescription = {\n  __typename?: 'UsersPermissionsRoleConnectionDescription';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<UsersPermissionsRoleConnection>;\n};\n\nexport type UsersPermissionsRoleConnectionId = {\n  __typename?: 'UsersPermissionsRoleConnectionId';\n  key?: Maybe<Scalars['ID']>;\n  connection?: Maybe<UsersPermissionsRoleConnection>;\n};\n\nexport type UsersPermissionsRoleConnectionName = {\n  __typename?: 'UsersPermissionsRoleConnectionName';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<UsersPermissionsRoleConnection>;\n};\n\nexport type UsersPermissionsRoleConnectionType = {\n  __typename?: 'UsersPermissionsRoleConnectionType';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<UsersPermissionsRoleConnection>;\n};\n\nexport type UsersPermissionsRoleConnection_Id = {\n  __typename?: 'UsersPermissionsRoleConnection_id';\n  key?: Maybe<Scalars['ID']>;\n  connection?: Maybe<UsersPermissionsRoleConnection>;\n};\n\nexport type UsersPermissionsRoleGroupBy = {\n  __typename?: 'UsersPermissionsRoleGroupBy';\n  id?: Maybe<Array<Maybe<UsersPermissionsRoleConnectionId>>>;\n  _id?: Maybe<Array<Maybe<UsersPermissionsRoleConnection_Id>>>;\n  name?: Maybe<Array<Maybe<UsersPermissionsRoleConnectionName>>>;\n  description?: Maybe<Array<Maybe<UsersPermissionsRoleConnectionDescription>>>;\n  type?: Maybe<Array<Maybe<UsersPermissionsRoleConnectionType>>>;\n};\n\nexport type UsersPermissionsUser = {\n  __typename?: 'UsersPermissionsUser';\n  id: Scalars['ID'];\n  _id: Scalars['ID'];\n  createdAt: Scalars['DateTime'];\n  updatedAt: Scalars['DateTime'];\n  username: Scalars['String'];\n  email: Scalars['String'];\n  provider?: Maybe<Scalars['String']>;\n  confirmed?: Maybe<Scalars['Boolean']>;\n  blocked?: Maybe<Scalars['Boolean']>;\n  role?: Maybe<UsersPermissionsRole>;\n};\n\nexport type UsersPermissionsUserAggregator = {\n  __typename?: 'UsersPermissionsUserAggregator';\n  count?: Maybe<Scalars['Int']>;\n  totalCount?: Maybe<Scalars['Int']>;\n};\n\nexport type UsersPermissionsUserConnection = {\n  __typename?: 'UsersPermissionsUserConnection';\n  values?: Maybe<Array<Maybe<UsersPermissionsUser>>>;\n  groupBy?: Maybe<UsersPermissionsUserGroupBy>;\n  aggregate?: Maybe<UsersPermissionsUserAggregator>;\n};\n\nexport type UsersPermissionsUserConnectionBlocked = {\n  __typename?: 'UsersPermissionsUserConnectionBlocked';\n  key?: Maybe<Scalars['Boolean']>;\n  connection?: Maybe<UsersPermissionsUserConnection>;\n};\n\nexport type UsersPermissionsUserConnectionConfirmed = {\n  __typename?: 'UsersPermissionsUserConnectionConfirmed';\n  key?: Maybe<Scalars['Boolean']>;\n  connection?: Maybe<UsersPermissionsUserConnection>;\n};\n\nexport type UsersPermissionsUserConnectionCreatedAt = {\n  __typename?: 'UsersPermissionsUserConnectionCreatedAt';\n  key?: Maybe<Scalars['DateTime']>;\n  connection?: Maybe<UsersPermissionsUserConnection>;\n};\n\nexport type UsersPermissionsUserConnectionEmail = {\n  __typename?: 'UsersPermissionsUserConnectionEmail';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<UsersPermissionsUserConnection>;\n};\n\nexport type UsersPermissionsUserConnectionId = {\n  __typename?: 'UsersPermissionsUserConnectionId';\n  key?: Maybe<Scalars['ID']>;\n  connection?: Maybe<UsersPermissionsUserConnection>;\n};\n\nexport type UsersPermissionsUserConnectionProvider = {\n  __typename?: 'UsersPermissionsUserConnectionProvider';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<UsersPermissionsUserConnection>;\n};\n\nexport type UsersPermissionsUserConnectionRole = {\n  __typename?: 'UsersPermissionsUserConnectionRole';\n  key?: Maybe<Scalars['ID']>;\n  connection?: Maybe<UsersPermissionsUserConnection>;\n};\n\nexport type UsersPermissionsUserConnectionUpdatedAt = {\n  __typename?: 'UsersPermissionsUserConnectionUpdatedAt';\n  key?: Maybe<Scalars['DateTime']>;\n  connection?: Maybe<UsersPermissionsUserConnection>;\n};\n\nexport type UsersPermissionsUserConnectionUsername = {\n  __typename?: 'UsersPermissionsUserConnectionUsername';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<UsersPermissionsUserConnection>;\n};\n\nexport type UsersPermissionsUserConnection_Id = {\n  __typename?: 'UsersPermissionsUserConnection_id';\n  key?: Maybe<Scalars['ID']>;\n  connection?: Maybe<UsersPermissionsUserConnection>;\n};\n\nexport type UsersPermissionsUserGroupBy = {\n  __typename?: 'UsersPermissionsUserGroupBy';\n  id?: Maybe<Array<Maybe<UsersPermissionsUserConnectionId>>>;\n  _id?: Maybe<Array<Maybe<UsersPermissionsUserConnection_Id>>>;\n  createdAt?: Maybe<Array<Maybe<UsersPermissionsUserConnectionCreatedAt>>>;\n  updatedAt?: Maybe<Array<Maybe<UsersPermissionsUserConnectionUpdatedAt>>>;\n  username?: Maybe<Array<Maybe<UsersPermissionsUserConnectionUsername>>>;\n  email?: Maybe<Array<Maybe<UsersPermissionsUserConnectionEmail>>>;\n  provider?: Maybe<Array<Maybe<UsersPermissionsUserConnectionProvider>>>;\n  confirmed?: Maybe<Array<Maybe<UsersPermissionsUserConnectionConfirmed>>>;\n  blocked?: Maybe<Array<Maybe<UsersPermissionsUserConnectionBlocked>>>;\n  role?: Maybe<Array<Maybe<UsersPermissionsUserConnectionRole>>>;\n};\n\nexport type CreateBookingInput = {\n  data?: Maybe<BookingInput>;\n};\n\nexport type CreateBookingPayload = {\n  __typename?: 'createBookingPayload';\n  booking?: Maybe<Booking>;\n};\n\nexport type CreateCityInput = {\n  data?: Maybe<CityInput>;\n};\n\nexport type CreateCityPayload = {\n  __typename?: 'createCityPayload';\n  city?: Maybe<City>;\n};\n\nexport type CreateFeatureInput = {\n  data?: Maybe<FeatureInput>;\n};\n\nexport type CreateFeaturePayload = {\n  __typename?: 'createFeaturePayload';\n  feature?: Maybe<Feature>;\n};\n\nexport type CreateHotelInput = {\n  data?: Maybe<HotelInput>;\n};\n\nexport type CreateHotelPayload = {\n  __typename?: 'createHotelPayload';\n  hotel?: Maybe<Hotels>;\n};\n\nexport type CreateLocationInput = {\n  data?: Maybe<LocationInput>;\n};\n\nexport type CreateLocationPayload = {\n  __typename?: 'createLocationPayload';\n  location?: Maybe<Location>;\n};\n\nexport type CreatePartnerInput = {\n  data?: Maybe<PartnerInput>;\n};\n\nexport type CreatePartnerPayload = {\n  __typename?: 'createPartnerPayload';\n  partner?: Maybe<Partner>;\n};\n\nexport type CreateReviewInput = {\n  data?: Maybe<ReviewInput>;\n};\n\nexport type CreateReviewPayload = {\n  __typename?: 'createReviewPayload';\n  review?: Maybe<Review>;\n};\n\nexport type CreateRoleInput = {\n  data?: Maybe<RoleInput>;\n};\n\nexport type CreateRolePayload = {\n  __typename?: 'createRolePayload';\n  role?: Maybe<UsersPermissionsRole>;\n};\n\nexport type CreateSubscriberInput = {\n  data?: Maybe<SubscriberInput>;\n};\n\nexport type CreateSubscriberPayload = {\n  __typename?: 'createSubscriberPayload';\n  subscriber?: Maybe<Subscribers>;\n};\n\nexport type CreateTripInput = {\n  data?: Maybe<TripInput>;\n};\n\nexport type CreateTripPayload = {\n  __typename?: 'createTripPayload';\n  trip?: Maybe<Trips>;\n};\n\nexport type CreateUserInput = {\n  data?: Maybe<UserInput>;\n};\n\nexport type CreateUserPayload = {\n  __typename?: 'createUserPayload';\n  user?: Maybe<UsersPermissionsUser>;\n};\n\nexport type DeleteBookingInput = {\n  where?: Maybe<InputId>;\n};\n\nexport type DeleteBookingPayload = {\n  __typename?: 'deleteBookingPayload';\n  booking?: Maybe<Booking>;\n};\n\nexport type DeleteCityInput = {\n  where?: Maybe<InputId>;\n};\n\nexport type DeleteCityPayload = {\n  __typename?: 'deleteCityPayload';\n  city?: Maybe<City>;\n};\n\nexport type DeleteFeatureInput = {\n  where?: Maybe<InputId>;\n};\n\nexport type DeleteFeaturePayload = {\n  __typename?: 'deleteFeaturePayload';\n  feature?: Maybe<Feature>;\n};\n\nexport type DeleteFileInput = {\n  where?: Maybe<InputId>;\n};\n\nexport type DeleteFilePayload = {\n  __typename?: 'deleteFilePayload';\n  file?: Maybe<UploadFile>;\n};\n\nexport type DeleteHomeBannerPayload = {\n  __typename?: 'deleteHomeBannerPayload';\n  homeBanner?: Maybe<HomeBanner>;\n};\n\nexport type DeleteHotelInput = {\n  where?: Maybe<InputId>;\n};\n\nexport type DeleteHotelPayload = {\n  __typename?: 'deleteHotelPayload';\n  hotel?: Maybe<Hotels>;\n};\n\nexport type DeleteLocationInput = {\n  where?: Maybe<InputId>;\n};\n\nexport type DeleteLocationPayload = {\n  __typename?: 'deleteLocationPayload';\n  location?: Maybe<Location>;\n};\n\nexport type DeletePartnerInput = {\n  where?: Maybe<InputId>;\n};\n\nexport type DeletePartnerPayload = {\n  __typename?: 'deletePartnerPayload';\n  partner?: Maybe<Partner>;\n};\n\nexport type DeleteReviewInput = {\n  where?: Maybe<InputId>;\n};\n\nexport type DeleteReviewPayload = {\n  __typename?: 'deleteReviewPayload';\n  review?: Maybe<Review>;\n};\n\nexport type DeleteRoleInput = {\n  where?: Maybe<InputId>;\n};\n\nexport type DeleteRolePayload = {\n  __typename?: 'deleteRolePayload';\n  role?: Maybe<UsersPermissionsRole>;\n};\n\nexport type DeleteSubscriberInput = {\n  where?: Maybe<InputId>;\n};\n\nexport type DeleteSubscriberPayload = {\n  __typename?: 'deleteSubscriberPayload';\n  subscriber?: Maybe<Subscribers>;\n};\n\nexport type DeleteTripInput = {\n  where?: Maybe<InputId>;\n};\n\nexport type DeleteTripPayload = {\n  __typename?: 'deleteTripPayload';\n  trip?: Maybe<Trips>;\n};\n\nexport type DeleteUserInput = {\n  where?: Maybe<InputId>;\n};\n\nexport type DeleteUserPayload = {\n  __typename?: 'deleteUserPayload';\n  user?: Maybe<UsersPermissionsUser>;\n};\n\nexport type EditBookingInput = {\n  trip?: Maybe<Scalars['ID']>;\n  approved?: Maybe<Scalars['Boolean']>;\n  basePrice?: Maybe<Scalars['Float']>;\n  currency?: Maybe<Enum_Booking_Currency>;\n  basePeopleCount?: Maybe<Scalars['Int']>;\n  discount?: Maybe<Scalars['Float']>;\n  fullName?: Maybe<Scalars['String']>;\n  phone?: Maybe<Scalars['String']>;\n  message?: Maybe<Scalars['String']>;\n  arrivalDate?: Maybe<Scalars['Date']>;\n  language?: Maybe<Scalars['String']>;\n  userBookingStatus?: Maybe<Enum_Booking_Userbookingstatus>;\n  email?: Maybe<Scalars['String']>;\n  adults?: Maybe<Scalars['Int']>;\n  children?: Maybe<Scalars['Int']>;\n  totalPrice?: Maybe<Scalars['Float']>;\n  published_at?: Maybe<Scalars['DateTime']>;\n  created_by?: Maybe<Scalars['ID']>;\n  updated_by?: Maybe<Scalars['ID']>;\n};\n\nexport type EditCityInput = {\n  name?: Maybe<Scalars['String']>;\n  description?: Maybe<Scalars['String']>;\n  image?: Maybe<Scalars['ID']>;\n  locations?: Maybe<Array<Maybe<Scalars['ID']>>>;\n  localizations?: Maybe<Array<Maybe<Scalars['ID']>>>;\n  locale?: Maybe<Scalars['String']>;\n  published_at?: Maybe<Scalars['DateTime']>;\n  created_by?: Maybe<Scalars['ID']>;\n  updated_by?: Maybe<Scalars['ID']>;\n};\n\nexport type EditComponentCoordinateCoordinateInput = {\n  id?: Maybe<Scalars['ID']>;\n  latitude?: Maybe<Scalars['Float']>;\n  longitude?: Maybe<Scalars['Float']>;\n};\n\nexport type EditComponentFeatureFeatureInput = {\n  id?: Maybe<Scalars['ID']>;\n  feature?: Maybe<Scalars['ID']>;\n  included?: Maybe<Scalars['Boolean']>;\n};\n\nexport type EditComponentPricePriceInput = {\n  id?: Maybe<Scalars['ID']>;\n  basePrice?: Maybe<Scalars['Float']>;\n  currency?: Maybe<Enum_Componentpriceprice_Currency>;\n  basePeopleCount?: Maybe<Scalars['Int']>;\n  extraAdultFee?: Maybe<Scalars['Float']>;\n  discount?: Maybe<Scalars['Float']>;\n};\n\nexport type EditComponentTimelineTimelineInput = {\n  id?: Maybe<Scalars['ID']>;\n  day?: Maybe<Scalars['Int']>;\n  description?: Maybe<Scalars['String']>;\n  locations?: Maybe<Array<Maybe<Scalars['ID']>>>;\n  travelTo?: Maybe<Scalars['ID']>;\n  transportationType?: Maybe<Enum_Componenttimelinetimeline_Transportationtype>;\n  restDay?: Maybe<Scalars['Boolean']>;\n};\n\nexport type EditFeatureInput = {\n  name?: Maybe<Scalars['String']>;\n  info?: Maybe<Scalars['String']>;\n  localizations?: Maybe<Array<Maybe<Scalars['ID']>>>;\n  locale?: Maybe<Scalars['String']>;\n  published_at?: Maybe<Scalars['DateTime']>;\n  created_by?: Maybe<Scalars['ID']>;\n  updated_by?: Maybe<Scalars['ID']>;\n};\n\nexport type EditFileInput = {\n  name?: Maybe<Scalars['String']>;\n  alternativeText?: Maybe<Scalars['String']>;\n  caption?: Maybe<Scalars['String']>;\n  width?: Maybe<Scalars['Int']>;\n  height?: Maybe<Scalars['Int']>;\n  formats?: Maybe<Scalars['JSON']>;\n  hash?: Maybe<Scalars['String']>;\n  ext?: Maybe<Scalars['String']>;\n  mime?: Maybe<Scalars['String']>;\n  size?: Maybe<Scalars['Float']>;\n  url?: Maybe<Scalars['String']>;\n  previewUrl?: Maybe<Scalars['String']>;\n  provider?: Maybe<Scalars['String']>;\n  provider_metadata?: Maybe<Scalars['JSON']>;\n  related?: Maybe<Array<Maybe<Scalars['ID']>>>;\n  created_by?: Maybe<Scalars['ID']>;\n  updated_by?: Maybe<Scalars['ID']>;\n};\n\nexport type EditHomeBannerInput = {\n  images?: Maybe<Array<Maybe<Scalars['ID']>>>;\n  published_at?: Maybe<Scalars['DateTime']>;\n  created_by?: Maybe<Scalars['ID']>;\n  updated_by?: Maybe<Scalars['ID']>;\n};\n\nexport type EditHotelInput = {\n  name?: Maybe<Scalars['String']>;\n  stars?: Maybe<Scalars['Int']>;\n  url?: Maybe<Scalars['String']>;\n  trips?: Maybe<Array<Maybe<Scalars['ID']>>>;\n  published_at?: Maybe<Scalars['DateTime']>;\n  created_by?: Maybe<Scalars['ID']>;\n  updated_by?: Maybe<Scalars['ID']>;\n};\n\nexport type EditLocaleInput = {\n  name?: Maybe<Scalars['String']>;\n  code?: Maybe<Scalars['String']>;\n  created_by?: Maybe<Scalars['ID']>;\n  updated_by?: Maybe<Scalars['ID']>;\n};\n\nexport type EditLocationInput = {\n  name?: Maybe<Scalars['String']>;\n  description?: Maybe<Scalars['String']>;\n  images?: Maybe<Array<Maybe<Scalars['ID']>>>;\n  city?: Maybe<Scalars['ID']>;\n  coordinate?: Maybe<EditComponentCoordinateCoordinateInput>;\n  localizations?: Maybe<Array<Maybe<Scalars['ID']>>>;\n  locale?: Maybe<Scalars['String']>;\n  published_at?: Maybe<Scalars['DateTime']>;\n  created_by?: Maybe<Scalars['ID']>;\n  updated_by?: Maybe<Scalars['ID']>;\n};\n\nexport type EditPartnerInput = {\n  name?: Maybe<Scalars['String']>;\n  phone?: Maybe<Scalars['String']>;\n  address?: Maybe<Scalars['String']>;\n  email?: Maybe<Scalars['String']>;\n  trips?: Maybe<Array<Maybe<Scalars['ID']>>>;\n  agreement?: Maybe<Scalars['String']>;\n  commission?: Maybe<Scalars['Float']>;\n  revenueSource?: Maybe<Enum_Partner_Revenuesource>;\n  agreementStatus?: Maybe<Enum_Partner_Agreementstatus>;\n  notes?: Maybe<Scalars['String']>;\n  phone2?: Maybe<Scalars['String']>;\n  published_at?: Maybe<Scalars['DateTime']>;\n  created_by?: Maybe<Scalars['ID']>;\n  updated_by?: Maybe<Scalars['ID']>;\n};\n\nexport type EditReviewInput = {\n  text?: Maybe<Scalars['String']>;\n  rating?: Maybe<Scalars['Float']>;\n  author?: Maybe<Scalars['ID']>;\n  active?: Maybe<Scalars['Boolean']>;\n  trip?: Maybe<Scalars['ID']>;\n  published_at?: Maybe<Scalars['DateTime']>;\n  created_by?: Maybe<Scalars['ID']>;\n  updated_by?: Maybe<Scalars['ID']>;\n};\n\nexport type EditRoleInput = {\n  name?: Maybe<Scalars['String']>;\n  description?: Maybe<Scalars['String']>;\n  type?: Maybe<Scalars['String']>;\n  permissions?: Maybe<Array<Maybe<Scalars['ID']>>>;\n  users?: Maybe<Array<Maybe<Scalars['ID']>>>;\n  created_by?: Maybe<Scalars['ID']>;\n  updated_by?: Maybe<Scalars['ID']>;\n};\n\nexport type EditSubscriberInput = {\n  email?: Maybe<Scalars['String']>;\n  published_at?: Maybe<Scalars['DateTime']>;\n  created_by?: Maybe<Scalars['ID']>;\n  updated_by?: Maybe<Scalars['ID']>;\n};\n\nexport type EditTripInput = {\n  name?: Maybe<Scalars['String']>;\n  previewImage?: Maybe<Scalars['ID']>;\n  active?: Maybe<Scalars['Boolean']>;\n  trip_type?: Maybe<Enum_Trips_Trip_Type>;\n  description?: Maybe<Scalars['String']>;\n  duration?: Maybe<Scalars['Int']>;\n  partner?: Maybe<Scalars['ID']>;\n  currency?: Maybe<Enum_Trips_Currency>;\n  city?: Maybe<Scalars['ID']>;\n  features?: Maybe<Array<Maybe<EditComponentFeatureFeatureInput>>>;\n  basePrice?: Maybe<Scalars['Int']>;\n  basePeopleCount?: Maybe<Scalars['Int']>;\n  discount?: Maybe<Scalars['Float']>;\n  travelType?: Maybe<Enum_Trips_Traveltype>;\n  hotel?: Maybe<Scalars['ID']>;\n  plan?: Maybe<Array<Maybe<EditComponentTimelineTimelineInput>>>;\n  sequence?: Maybe<Scalars['String']>;\n  localizations?: Maybe<Array<Maybe<Scalars['ID']>>>;\n  locale?: Maybe<Scalars['String']>;\n  published_at?: Maybe<Scalars['DateTime']>;\n  created_by?: Maybe<Scalars['ID']>;\n  updated_by?: Maybe<Scalars['ID']>;\n};\n\nexport type EditUserInput = {\n  username?: Maybe<Scalars['String']>;\n  email?: Maybe<Scalars['String']>;\n  provider?: Maybe<Scalars['String']>;\n  password?: Maybe<Scalars['String']>;\n  resetPasswordToken?: Maybe<Scalars['String']>;\n  confirmationToken?: Maybe<Scalars['String']>;\n  confirmed?: Maybe<Scalars['Boolean']>;\n  blocked?: Maybe<Scalars['Boolean']>;\n  role?: Maybe<Scalars['ID']>;\n  created_by?: Maybe<Scalars['ID']>;\n  updated_by?: Maybe<Scalars['ID']>;\n};\n\nexport type UpdateBookingInput = {\n  where?: Maybe<InputId>;\n  data?: Maybe<EditBookingInput>;\n};\n\nexport type UpdateBookingPayload = {\n  __typename?: 'updateBookingPayload';\n  booking?: Maybe<Booking>;\n};\n\nexport type UpdateCityInput = {\n  where?: Maybe<InputId>;\n  data?: Maybe<EditCityInput>;\n};\n\nexport type UpdateCityPayload = {\n  __typename?: 'updateCityPayload';\n  city?: Maybe<City>;\n};\n\nexport type UpdateFeatureInput = {\n  where?: Maybe<InputId>;\n  data?: Maybe<EditFeatureInput>;\n};\n\nexport type UpdateFeaturePayload = {\n  __typename?: 'updateFeaturePayload';\n  feature?: Maybe<Feature>;\n};\n\nexport type UpdateHomeBannerInput = {\n  data?: Maybe<EditHomeBannerInput>;\n};\n\nexport type UpdateHomeBannerPayload = {\n  __typename?: 'updateHomeBannerPayload';\n  homeBanner?: Maybe<HomeBanner>;\n};\n\nexport type UpdateHotelInput = {\n  where?: Maybe<InputId>;\n  data?: Maybe<EditHotelInput>;\n};\n\nexport type UpdateHotelPayload = {\n  __typename?: 'updateHotelPayload';\n  hotel?: Maybe<Hotels>;\n};\n\nexport type UpdateLocationInput = {\n  where?: Maybe<InputId>;\n  data?: Maybe<EditLocationInput>;\n};\n\nexport type UpdateLocationPayload = {\n  __typename?: 'updateLocationPayload';\n  location?: Maybe<Location>;\n};\n\nexport type UpdatePartnerInput = {\n  where?: Maybe<InputId>;\n  data?: Maybe<EditPartnerInput>;\n};\n\nexport type UpdatePartnerPayload = {\n  __typename?: 'updatePartnerPayload';\n  partner?: Maybe<Partner>;\n};\n\nexport type UpdateReviewInput = {\n  where?: Maybe<InputId>;\n  data?: Maybe<EditReviewInput>;\n};\n\nexport type UpdateReviewPayload = {\n  __typename?: 'updateReviewPayload';\n  review?: Maybe<Review>;\n};\n\nexport type UpdateRoleInput = {\n  where?: Maybe<InputId>;\n  data?: Maybe<EditRoleInput>;\n};\n\nexport type UpdateRolePayload = {\n  __typename?: 'updateRolePayload';\n  role?: Maybe<UsersPermissionsRole>;\n};\n\nexport type UpdateSubscriberInput = {\n  where?: Maybe<InputId>;\n  data?: Maybe<EditSubscriberInput>;\n};\n\nexport type UpdateSubscriberPayload = {\n  __typename?: 'updateSubscriberPayload';\n  subscriber?: Maybe<Subscribers>;\n};\n\nexport type UpdateTripInput = {\n  where?: Maybe<InputId>;\n  data?: Maybe<EditTripInput>;\n};\n\nexport type UpdateTripPayload = {\n  __typename?: 'updateTripPayload';\n  trip?: Maybe<Trips>;\n};\n\nexport type UpdateUserInput = {\n  where?: Maybe<InputId>;\n  data?: Maybe<EditUserInput>;\n};\n\nexport type UpdateUserPayload = {\n  __typename?: 'updateUserPayload';\n  user?: Maybe<UsersPermissionsUser>;\n};\n\nexport type CreateBookingQueryMutationVariables = Exact<{\n  tripId: Scalars['ID'];\n  fullName: Scalars['String'];\n  basePrice: Scalars['Float'];\n  discount?: Maybe<Scalars['Float']>;\n  basePeopleCount: Scalars['Int'];\n  phone: Scalars['String'];\n  arrivalDate: Scalars['Date'];\n  message?: Maybe<Scalars['String']>;\n  currency: Enum_Booking_Currency;\n  email: Scalars['String'];\n  language: Scalars['String'];\n  adults: Scalars['Int'];\n  children: Scalars['Int'];\n}>;\n\n\nexport type CreateBookingQueryMutation = (\n  { __typename?: 'Mutation' }\n  & { createBooking?: Maybe<(\n    { __typename?: 'createBookingPayload' }\n    & { booking?: Maybe<(\n      { __typename?: 'Booking' }\n      & Pick<Booking, 'message'>\n    )> }\n  )> }\n);\n\nexport type CitiesQueryVariables = Exact<{\n  limit?: Maybe<Scalars['Int']>;\n  locale?: Maybe<Scalars['String']>;\n}>;\n\n\nexport type CitiesQuery = (\n  { __typename?: 'Query' }\n  & { cities?: Maybe<Array<Maybe<(\n    { __typename?: 'City' }\n    & CityInfoFragment\n  )>>> }\n);\n\nexport type GetCityQueryVariables = Exact<{\n  id: Scalars['ID'];\n}>;\n\n\nexport type GetCityQuery = (\n  { __typename?: 'Query' }\n  & { city?: Maybe<(\n    { __typename?: 'City' }\n    & CityInfoFragment\n  )> }\n);\n\nexport type GetLocalizedCityQueryVariables = Exact<{\n  id: Scalars['ID'];\n  locale: Scalars['String'];\n}>;\n\n\nexport type GetLocalizedCityQuery = (\n  { __typename?: 'Query' }\n  & { cities?: Maybe<Array<Maybe<(\n    { __typename?: 'City' }\n    & CityInfoFragment\n  )>>> }\n);\n\nexport type CityInfoFragment = (\n  { __typename?: 'City' }\n  & Pick<City, 'id' | 'name' | 'description' | 'locale'>\n  & { localizations?: Maybe<Array<Maybe<(\n    { __typename?: 'City' }\n    & Pick<City, 'id' | 'locale'>\n  )>>>, image?: Maybe<(\n    { __typename?: 'UploadFile' }\n    & Pick<UploadFile, 'id' | 'width' | 'height' | 'url' | 'formats'>\n  )> }\n);\n\nexport type FeaturesQueryVariables = Exact<{\n  locale: Scalars['String'];\n}>;\n\n\nexport type FeaturesQuery = (\n  { __typename?: 'Query' }\n  & { features?: Maybe<Array<Maybe<(\n    { __typename?: 'Feature' }\n    & Pick<Feature, 'name'>\n  )>>> }\n);\n\nexport type HomeCarousellQueryVariables = Exact<{ [key: string]: never; }>;\n\n\nexport type HomeCarousellQuery = (\n  { __typename?: 'Query' }\n  & { homeBanner?: Maybe<(\n    { __typename?: 'HomeBanner' }\n    & { images?: Maybe<Array<Maybe<(\n      { __typename?: 'UploadFile' }\n      & Pick<UploadFile, 'id' | 'width' | 'height' | 'url' | 'formats'>\n    )>>> }\n  )> }\n);\n\nexport type GetLocationsQueryVariables = Exact<{\n  locale: Scalars['String'];\n  ids: Array<Scalars['String']> | Scalars['String'];\n}>;\n\n\nexport type GetLocationsQuery = (\n  { __typename?: 'Query' }\n  & { locations?: Maybe<Array<Maybe<(\n    { __typename?: 'Location' }\n    & Pick<Location, 'id' | 'name' | 'description' | 'locale'>\n    & { coordinate?: Maybe<(\n      { __typename?: 'ComponentCoordinateCoordinate' }\n      & Pick<ComponentCoordinateCoordinate, 'latitude' | 'longitude'>\n    )>, images?: Maybe<Array<Maybe<(\n      { __typename?: 'UploadFile' }\n      & Pick<UploadFile, 'id' | 'width' | 'height' | 'url' | 'formats'>\n    )>>>, city?: Maybe<(\n      { __typename?: 'City' }\n      & Pick<City, 'id' | 'name' | 'description' | 'locale'>\n      & { localizations?: Maybe<Array<Maybe<(\n        { __typename?: 'City' }\n        & Pick<City, 'id' | 'locale'>\n      )>>>, image?: Maybe<(\n        { __typename?: 'UploadFile' }\n        & Pick<UploadFile, 'id' | 'width' | 'height' | 'url' | 'formats'>\n      )> }\n    )> }\n  )>>> }\n);\n\nexport type AddToNewsLetterMutationVariables = Exact<{\n  email: Scalars['String'];\n}>;\n\n\nexport type AddToNewsLetterMutation = (\n  { __typename?: 'Mutation' }\n  & { createSubscriber?: Maybe<(\n    { __typename?: 'createSubscriberPayload' }\n    & { subscriber?: Maybe<(\n      { __typename?: 'Subscribers' }\n      & Pick<Subscribers, 'email'>\n    )> }\n  )> }\n);\n\nexport type TripsQueryVariables = Exact<{\n  limit?: Maybe<Scalars['Int']>;\n  locale?: Maybe<Scalars['String']>;\n  where?: Maybe<Scalars['JSON']>;\n}>;\n\n\nexport type TripsQuery = (\n  { __typename?: 'Query' }\n  & { trips?: Maybe<Array<Maybe<(\n    { __typename?: 'Trips' }\n    & TripInfoFragment\n  )>>> }\n);\n\nexport type GetTripQueryVariables = Exact<{\n  id: Scalars['ID'];\n}>;\n\n\nexport type GetTripQuery = (\n  { __typename?: 'Query' }\n  & { trip?: Maybe<(\n    { __typename?: 'Trips' }\n    & TripInfoFragment\n  )> }\n);\n\nexport type GetLocalizedTripQueryVariables = Exact<{\n  id: Scalars['ID'];\n  locale: Scalars['String'];\n}>;\n\n\nexport type GetLocalizedTripQuery = (\n  { __typename?: 'Query' }\n  & { trips?: Maybe<Array<Maybe<(\n    { __typename?: 'Trips' }\n    & TripInfoFragment\n  )>>> }\n);\n\nexport type TripInfoFragment = (\n  { __typename?: 'Trips' }\n  & Pick<Trips, 'id' | 'name' | 'active' | 'description' | 'locale' | 'trip_type' | 'duration' | 'travelType' | 'basePrice' | 'discount' | 'currency' | 'basePeopleCount'>\n  & { city?: Maybe<(\n    { __typename?: 'City' }\n    & Pick<City, 'id' | 'name'>\n  )>, hotel?: Maybe<(\n    { __typename?: 'Hotels' }\n    & Pick<Hotels, 'id' | 'name' | 'url' | 'stars'>\n  )>, plan?: Maybe<Array<Maybe<(\n    { __typename?: 'ComponentTimelineTimeline' }\n    & Pick<ComponentTimelineTimeline, 'day' | 'transportationType' | 'description' | 'restDay'>\n    & { locations?: Maybe<Array<Maybe<(\n      { __typename?: 'Location' }\n      & Pick<Location, 'id' | 'name'>\n      & { city?: Maybe<(\n        { __typename?: 'City' }\n        & Pick<City, 'id'>\n      )> }\n    )>>>, travelTo?: Maybe<(\n      { __typename?: 'City' }\n      & Pick<City, 'id' | 'name'>\n    )> }\n  )>>>, previewImage?: Maybe<(\n    { __typename?: 'UploadFile' }\n    & Pick<UploadFile, 'id' | 'width' | 'height' | 'url' | 'formats'>\n  )>, localizations?: Maybe<Array<Maybe<(\n    { __typename?: 'Trips' }\n    & Pick<Trips, 'id' | 'locale'>\n  )>>>, features?: Maybe<Array<Maybe<(\n    { __typename?: 'ComponentFeatureFeature' }\n    & Pick<ComponentFeatureFeature, 'included'>\n    & { feature?: Maybe<(\n      { __typename?: 'Feature' }\n      & Pick<Feature, 'name' | 'info'>\n    )> }\n  )>>> }\n);\n\nexport const CityInfoFragmentDoc = gql`\n    fragment CityInfo on City {\n  id\n  name\n  description\n  locale\n  localizations {\n    id\n    locale\n  }\n  image {\n    id\n    width\n    height\n    url\n    formats\n  }\n}\n    `;\nexport const TripInfoFragmentDoc = gql`\n    fragment tripInfo on Trips {\n  id\n  name\n  active\n  description\n  locale\n  trip_type\n  duration\n  travelType\n  city {\n    id\n    name\n  }\n  hotel {\n    id\n    name\n    url\n    stars\n  }\n  plan {\n    day\n    locations {\n      id\n      name\n      city {\n        id\n      }\n    }\n    transportationType\n    travelTo {\n      id\n      name\n    }\n    description\n    restDay\n  }\n  previewImage {\n    id\n    width\n    height\n    url\n    formats\n  }\n  localizations {\n    id\n    locale\n  }\n  basePrice\n  discount\n  currency\n  basePeopleCount\n  features {\n    included\n    feature {\n      name\n      info\n    }\n  }\n}\n    `;\nexport const CreateBookingQueryDocument = gql`\n    mutation createBookingQuery($tripId: ID!, $fullName: String!, $basePrice: Float!, $discount: Float = 0, $basePeopleCount: Int!, $phone: String!, $arrivalDate: Date!, $message: String, $currency: ENUM_BOOKING_CURRENCY!, $email: String!, $language: String!, $adults: Int!, $children: Int!) {\n  createBooking(\n    input: {data: {trip: $tripId, basePrice: $basePrice, discount: $discount, message: $message, fullName: $fullName, basePeopleCount: $basePeopleCount, phone: $phone, arrivalDate: $arrivalDate, currency: $currency, email: $email, language: $language, adults: $adults, children: $children}}\n  ) {\n    booking {\n      message\n    }\n  }\n}\n    `;\n\n  @Injectable({\n    providedIn: 'root'\n  })\n  export class CreateBookingQueryGQL extends Apollo.Mutation<CreateBookingQueryMutation, CreateBookingQueryMutationVariables> {\n    document = CreateBookingQueryDocument;\n    \n    constructor(apollo: Apollo.Apollo) {\n      super(apollo);\n    }\n  }\nexport const CitiesDocument = gql`\n    query cities($limit: Int, $locale: String) {\n  cities(limit: $limit, locale: $locale) {\n    ...CityInfo\n  }\n}\n    ${CityInfoFragmentDoc}`;\n\n  @Injectable({\n    providedIn: 'root'\n  })\n  export class CitiesGQL extends Apollo.Query<CitiesQuery, CitiesQueryVariables> {\n    document = CitiesDocument;\n    \n    constructor(apollo: Apollo.Apollo) {\n      super(apollo);\n    }\n  }\nexport const GetCityDocument = gql`\n    query getCity($id: ID!) {\n  city(id: $id) {\n    ...CityInfo\n  }\n}\n    ${CityInfoFragmentDoc}`;\n\n  @Injectable({\n    providedIn: 'root'\n  })\n  export class GetCityGQL extends Apollo.Query<GetCityQuery, GetCityQueryVariables> {\n    document = GetCityDocument;\n    \n    constructor(apollo: Apollo.Apollo) {\n      super(apollo);\n    }\n  }\nexport const GetLocalizedCityDocument = gql`\n    query getLocalizedCity($id: ID!, $locale: String!) {\n  cities(locale: $locale, where: {_or: [{localizations: {id: $id}}, {id: $id}]}) {\n    ...CityInfo\n  }\n}\n    ${CityInfoFragmentDoc}`;\n\n  @Injectable({\n    providedIn: 'root'\n  })\n  export class GetLocalizedCityGQL extends Apollo.Query<GetLocalizedCityQuery, GetLocalizedCityQueryVariables> {\n    document = GetLocalizedCityDocument;\n    \n    constructor(apollo: Apollo.Apollo) {\n      super(apollo);\n    }\n  }\nexport const FeaturesDocument = gql`\n    query features($locale: String!) {\n  features(locale: $locale) {\n    name\n  }\n}\n    `;\n\n  @Injectable({\n    providedIn: 'root'\n  })\n  export class FeaturesGQL extends Apollo.Query<FeaturesQuery, FeaturesQueryVariables> {\n    document = FeaturesDocument;\n    \n    constructor(apollo: Apollo.Apollo) {\n      super(apollo);\n    }\n  }\nexport const HomeCarousellDocument = gql`\n    query homeCarousell {\n  homeBanner {\n    images {\n      id\n      width\n      height\n      url\n      formats\n    }\n  }\n}\n    `;\n\n  @Injectable({\n    providedIn: 'root'\n  })\n  export class HomeCarousellGQL extends Apollo.Query<HomeCarousellQuery, HomeCarousellQueryVariables> {\n    document = HomeCarousellDocument;\n    \n    constructor(apollo: Apollo.Apollo) {\n      super(apollo);\n    }\n  }\nexport const GetLocationsDocument = gql`\n    query getLocations($locale: String!, $ids: [String!]!) {\n  locations(locale: $locale, where: {id_in: $ids}) {\n    id\n    name\n    description\n    coordinate {\n      latitude\n      longitude\n    }\n    locale\n    images {\n      id\n      width\n      height\n      url\n      formats\n    }\n    city {\n      id\n      name\n      description\n      locale\n      localizations {\n        id\n        locale\n      }\n      image {\n        id\n        width\n        height\n        url\n        formats\n      }\n    }\n  }\n}\n    `;\n\n  @Injectable({\n    providedIn: 'root'\n  })\n  export class GetLocationsGQL extends Apollo.Query<GetLocationsQuery, GetLocationsQueryVariables> {\n    document = GetLocationsDocument;\n    \n    constructor(apollo: Apollo.Apollo) {\n      super(apollo);\n    }\n  }\nexport const AddToNewsLetterDocument = gql`\n    mutation addToNewsLetter($email: String!) {\n  createSubscriber(input: {data: {email: $email}}) {\n    subscriber {\n      email\n    }\n  }\n}\n    `;\n\n  @Injectable({\n    providedIn: 'root'\n  })\n  export class AddToNewsLetterGQL extends Apollo.Mutation<AddToNewsLetterMutation, AddToNewsLetterMutationVariables> {\n    document = AddToNewsLetterDocument;\n    \n    constructor(apollo: Apollo.Apollo) {\n      super(apollo);\n    }\n  }\nexport const TripsDocument = gql`\n    query trips($limit: Int = 10, $locale: String = \"en\", $where: JSON) {\n  trips(limit: $limit, locale: $locale, where: $where) {\n    ...tripInfo\n  }\n}\n    ${TripInfoFragmentDoc}`;\n\n  @Injectable({\n    providedIn: 'root'\n  })\n  export class TripsGQL extends Apollo.Query<TripsQuery, TripsQueryVariables> {\n    document = TripsDocument;\n    \n    constructor(apollo: Apollo.Apollo) {\n      super(apollo);\n    }\n  }\nexport const GetTripDocument = gql`\n    query getTrip($id: ID!) {\n  trip(id: $id) {\n    ...tripInfo\n  }\n}\n    ${TripInfoFragmentDoc}`;\n\n  @Injectable({\n    providedIn: 'root'\n  })\n  export class GetTripGQL extends Apollo.Query<GetTripQuery, GetTripQueryVariables> {\n    document = GetTripDocument;\n    \n    constructor(apollo: Apollo.Apollo) {\n      super(apollo);\n    }\n  }\nexport const GetLocalizedTripDocument = gql`\n    query getLocalizedTrip($id: ID!, $locale: String!) {\n  trips(locale: $locale, where: {_or: [{localizations: {id: $id}}, {id: $id}]}) {\n    ...tripInfo\n  }\n}\n    ${TripInfoFragmentDoc}`;\n\n  @Injectable({\n    providedIn: 'root'\n  })\n  export class GetLocalizedTripGQL extends Apollo.Query<GetLocalizedTripQuery, GetLocalizedTripQueryVariables> {\n    document = GetLocalizedTripDocument;\n    \n    constructor(apollo: Apollo.Apollo) {\n      super(apollo);\n    }\n  }",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "apollo",
                        "type": "Apollo.Apollo"
                    }
                ],
                "line": 3820,
                "jsdoctags": [
                    {
                        "name": "apollo",
                        "type": "Apollo.Apollo",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "type": "injectable"
        },
        {
            "name": "HomeBannerService",
            "id": "injectable-HomeBannerService-173b9573605fe8db79c1934519862b95",
            "file": "src/app/data/services/home.banner.service.ts",
            "properties": [
                {
                    "name": "images",
                    "defaultValue": "[]",
                    "type": "string[]",
                    "optional": false,
                    "description": "",
                    "line": 12
                }
            ],
            "methods": [
                {
                    "name": "getCarouselImages",
                    "args": [],
                    "optional": false,
                    "returnType": "{}",
                    "typeParameters": [],
                    "line": 13,
                    "modifierKind": [
                        120
                    ]
                }
            ],
            "description": "",
            "sourceCode": "import { Injectable } from '@angular/core';\nimport { ImageModelAdapter } from '../models/ImageModel';\nimport { HomeCarousellGQL } from './saferniGraphql.service';\n\n@Injectable({ providedIn: 'root' })\nexport class HomeBannerService {\n  constructor(\n    private homeBannerGql: HomeCarousellGQL,\n    private imageAdapter: ImageModelAdapter\n  ) {}\n\n  images: string[] = [];\n  async getCarouselImages() {\n    if (this.images.length > 0) return this.images;\n    let apolloData = await this.homeBannerGql.fetch().toPromise();\n\n    const data = apolloData.data.homeBanner?.images?.map(\n      (image) => this.imageAdapter.adapt(image).url\n    );\n    if (data) this.images.push(...data);\n    return this.images;\n    // return apolloData;\n    // return this.homeBannerGql.fetch().pipe(\n    //   map((apolloRes) => {\n    //     let imageModels = apolloRes.data.homeBanner?.images?.map((image: any) =>\n    //       this.imageAdapter.adapt(image)\n    //     );\n    //     if (!imageModels) imageModels = [ImageModel.defaultImage()];\n    //     if (screenWidth > 800) return imageModels.map((model) => model.url);\n    //     else\n    //       return imageModels.map((model) => {\n    //         if (model.formats) {\n    //           return model.formats.medium.url;\n    //         } else return model.url;\n    //       });\n    //   }),\n    //   tap((data) => console.log(data))\n    // );\n  }\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "homeBannerGql",
                        "type": "HomeCarousellGQL"
                    },
                    {
                        "name": "imageAdapter",
                        "type": "ImageModelAdapter"
                    }
                ],
                "line": 6,
                "jsdoctags": [
                    {
                        "name": "homeBannerGql",
                        "type": "HomeCarousellGQL",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "imageAdapter",
                        "type": "ImageModelAdapter",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "type": "injectable"
        },
        {
            "name": "HomeCarousellGQL",
            "id": "injectable-HomeCarousellGQL-54bb7cbcdd682e4d53ca5e8a5c5399f6",
            "file": "src/app/data/services/saferniGraphql.service.ts",
            "properties": [
                {
                    "name": "document",
                    "defaultValue": "HomeCarousellDocument",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 3715
                }
            ],
            "methods": [],
            "description": "",
            "sourceCode": "import { gql } from 'apollo-angular';\nimport { Injectable } from '@angular/core';\nimport * as Apollo from 'apollo-angular';\nexport type Maybe<T> = T | null;\nexport type Exact<T extends { [key: string]: unknown }> = { [K in keyof T]: T[K] };\nexport type MakeOptional<T, K extends keyof T> = Omit<T, K> & { [SubKey in K]?: Maybe<T[SubKey]> };\nexport type MakeMaybe<T, K extends keyof T> = Omit<T, K> & { [SubKey in K]: Maybe<T[SubKey]> };\n/** All built-in and custom scalars, mapped to their actual values */\nexport type Scalars = {\n  ID: string;\n  String: string;\n  Boolean: boolean;\n  Int: number;\n  Float: number;\n  /** A date string, such as 2007-12-03, compliant with the `full-date` format outlined in section 5.6 of the RFC 3339 profile of the ISO 8601 standard for representation of dates and times using the Gregorian calendar. */\n  Date: any;\n  /** A date-time string at UTC, such as 2007-12-03T10:15:30Z, compliant with the `date-time` format outlined in section 5.6 of the RFC 3339 profile of the ISO 8601 standard for representation of dates and times using the Gregorian calendar. */\n  DateTime: any;\n  /** The `JSON` scalar type represents JSON values as specified by [ECMA-404](http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf). */\n  JSON: any;\n  /** The `Long` scalar type represents 52-bit integers */\n  Long: any;\n  /** A time string with format: HH:mm:ss.SSS */\n  Time: any;\n  /** The `Upload` scalar type represents a file upload. */\n  Upload: any;\n};\n\n\n\nexport type AdminUser = {\n  __typename?: 'AdminUser';\n  id: Scalars['ID'];\n  username?: Maybe<Scalars['String']>;\n  firstname: Scalars['String'];\n  lastname: Scalars['String'];\n};\n\nexport type Booking = {\n  __typename?: 'Booking';\n  id: Scalars['ID'];\n  _id: Scalars['ID'];\n  createdAt: Scalars['DateTime'];\n  updatedAt: Scalars['DateTime'];\n  trip?: Maybe<Trips>;\n  approved?: Maybe<Scalars['Boolean']>;\n  basePrice: Scalars['Float'];\n  currency: Enum_Booking_Currency;\n  basePeopleCount: Scalars['Int'];\n  discount?: Maybe<Scalars['Float']>;\n  fullName: Scalars['String'];\n  phone: Scalars['String'];\n  message?: Maybe<Scalars['String']>;\n  arrivalDate: Scalars['Date'];\n  language?: Maybe<Scalars['String']>;\n  userBookingStatus?: Maybe<Enum_Booking_Userbookingstatus>;\n  email: Scalars['String'];\n  adults: Scalars['Int'];\n  children?: Maybe<Scalars['Int']>;\n  totalPrice?: Maybe<Scalars['Float']>;\n  published_at?: Maybe<Scalars['DateTime']>;\n};\n\nexport type BookingAggregator = {\n  __typename?: 'BookingAggregator';\n  count?: Maybe<Scalars['Int']>;\n  totalCount?: Maybe<Scalars['Int']>;\n  sum?: Maybe<BookingAggregatorSum>;\n  avg?: Maybe<BookingAggregatorAvg>;\n  min?: Maybe<BookingAggregatorMin>;\n  max?: Maybe<BookingAggregatorMax>;\n};\n\nexport type BookingAggregatorAvg = {\n  __typename?: 'BookingAggregatorAvg';\n  basePrice?: Maybe<Scalars['Float']>;\n  basePeopleCount?: Maybe<Scalars['Float']>;\n  discount?: Maybe<Scalars['Float']>;\n  adults?: Maybe<Scalars['Float']>;\n  children?: Maybe<Scalars['Float']>;\n  totalPrice?: Maybe<Scalars['Float']>;\n};\n\nexport type BookingAggregatorMax = {\n  __typename?: 'BookingAggregatorMax';\n  basePrice?: Maybe<Scalars['Float']>;\n  basePeopleCount?: Maybe<Scalars['Float']>;\n  discount?: Maybe<Scalars['Float']>;\n  adults?: Maybe<Scalars['Float']>;\n  children?: Maybe<Scalars['Float']>;\n  totalPrice?: Maybe<Scalars['Float']>;\n};\n\nexport type BookingAggregatorMin = {\n  __typename?: 'BookingAggregatorMin';\n  basePrice?: Maybe<Scalars['Float']>;\n  basePeopleCount?: Maybe<Scalars['Float']>;\n  discount?: Maybe<Scalars['Float']>;\n  adults?: Maybe<Scalars['Float']>;\n  children?: Maybe<Scalars['Float']>;\n  totalPrice?: Maybe<Scalars['Float']>;\n};\n\nexport type BookingAggregatorSum = {\n  __typename?: 'BookingAggregatorSum';\n  basePrice?: Maybe<Scalars['Float']>;\n  basePeopleCount?: Maybe<Scalars['Float']>;\n  discount?: Maybe<Scalars['Float']>;\n  adults?: Maybe<Scalars['Float']>;\n  children?: Maybe<Scalars['Float']>;\n  totalPrice?: Maybe<Scalars['Float']>;\n};\n\nexport type BookingConnection = {\n  __typename?: 'BookingConnection';\n  values?: Maybe<Array<Maybe<Booking>>>;\n  groupBy?: Maybe<BookingGroupBy>;\n  aggregate?: Maybe<BookingAggregator>;\n};\n\nexport type BookingConnectionAdults = {\n  __typename?: 'BookingConnectionAdults';\n  key?: Maybe<Scalars['Int']>;\n  connection?: Maybe<BookingConnection>;\n};\n\nexport type BookingConnectionApproved = {\n  __typename?: 'BookingConnectionApproved';\n  key?: Maybe<Scalars['Boolean']>;\n  connection?: Maybe<BookingConnection>;\n};\n\nexport type BookingConnectionArrivalDate = {\n  __typename?: 'BookingConnectionArrivalDate';\n  key?: Maybe<Scalars['ID']>;\n  connection?: Maybe<BookingConnection>;\n};\n\nexport type BookingConnectionBasePeopleCount = {\n  __typename?: 'BookingConnectionBasePeopleCount';\n  key?: Maybe<Scalars['Int']>;\n  connection?: Maybe<BookingConnection>;\n};\n\nexport type BookingConnectionBasePrice = {\n  __typename?: 'BookingConnectionBasePrice';\n  key?: Maybe<Scalars['Float']>;\n  connection?: Maybe<BookingConnection>;\n};\n\nexport type BookingConnectionChildren = {\n  __typename?: 'BookingConnectionChildren';\n  key?: Maybe<Scalars['Int']>;\n  connection?: Maybe<BookingConnection>;\n};\n\nexport type BookingConnectionCreatedAt = {\n  __typename?: 'BookingConnectionCreatedAt';\n  key?: Maybe<Scalars['DateTime']>;\n  connection?: Maybe<BookingConnection>;\n};\n\nexport type BookingConnectionCurrency = {\n  __typename?: 'BookingConnectionCurrency';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<BookingConnection>;\n};\n\nexport type BookingConnectionDiscount = {\n  __typename?: 'BookingConnectionDiscount';\n  key?: Maybe<Scalars['Float']>;\n  connection?: Maybe<BookingConnection>;\n};\n\nexport type BookingConnectionEmail = {\n  __typename?: 'BookingConnectionEmail';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<BookingConnection>;\n};\n\nexport type BookingConnectionFullName = {\n  __typename?: 'BookingConnectionFullName';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<BookingConnection>;\n};\n\nexport type BookingConnectionId = {\n  __typename?: 'BookingConnectionId';\n  key?: Maybe<Scalars['ID']>;\n  connection?: Maybe<BookingConnection>;\n};\n\nexport type BookingConnectionLanguage = {\n  __typename?: 'BookingConnectionLanguage';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<BookingConnection>;\n};\n\nexport type BookingConnectionMessage = {\n  __typename?: 'BookingConnectionMessage';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<BookingConnection>;\n};\n\nexport type BookingConnectionPhone = {\n  __typename?: 'BookingConnectionPhone';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<BookingConnection>;\n};\n\nexport type BookingConnectionPublished_At = {\n  __typename?: 'BookingConnectionPublished_at';\n  key?: Maybe<Scalars['DateTime']>;\n  connection?: Maybe<BookingConnection>;\n};\n\nexport type BookingConnectionTotalPrice = {\n  __typename?: 'BookingConnectionTotalPrice';\n  key?: Maybe<Scalars['Float']>;\n  connection?: Maybe<BookingConnection>;\n};\n\nexport type BookingConnectionTrip = {\n  __typename?: 'BookingConnectionTrip';\n  key?: Maybe<Scalars['ID']>;\n  connection?: Maybe<BookingConnection>;\n};\n\nexport type BookingConnectionUpdatedAt = {\n  __typename?: 'BookingConnectionUpdatedAt';\n  key?: Maybe<Scalars['DateTime']>;\n  connection?: Maybe<BookingConnection>;\n};\n\nexport type BookingConnectionUserBookingStatus = {\n  __typename?: 'BookingConnectionUserBookingStatus';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<BookingConnection>;\n};\n\nexport type BookingConnection_Id = {\n  __typename?: 'BookingConnection_id';\n  key?: Maybe<Scalars['ID']>;\n  connection?: Maybe<BookingConnection>;\n};\n\nexport type BookingGroupBy = {\n  __typename?: 'BookingGroupBy';\n  id?: Maybe<Array<Maybe<BookingConnectionId>>>;\n  _id?: Maybe<Array<Maybe<BookingConnection_Id>>>;\n  createdAt?: Maybe<Array<Maybe<BookingConnectionCreatedAt>>>;\n  updatedAt?: Maybe<Array<Maybe<BookingConnectionUpdatedAt>>>;\n  trip?: Maybe<Array<Maybe<BookingConnectionTrip>>>;\n  approved?: Maybe<Array<Maybe<BookingConnectionApproved>>>;\n  basePrice?: Maybe<Array<Maybe<BookingConnectionBasePrice>>>;\n  currency?: Maybe<Array<Maybe<BookingConnectionCurrency>>>;\n  basePeopleCount?: Maybe<Array<Maybe<BookingConnectionBasePeopleCount>>>;\n  discount?: Maybe<Array<Maybe<BookingConnectionDiscount>>>;\n  fullName?: Maybe<Array<Maybe<BookingConnectionFullName>>>;\n  phone?: Maybe<Array<Maybe<BookingConnectionPhone>>>;\n  message?: Maybe<Array<Maybe<BookingConnectionMessage>>>;\n  arrivalDate?: Maybe<Array<Maybe<BookingConnectionArrivalDate>>>;\n  language?: Maybe<Array<Maybe<BookingConnectionLanguage>>>;\n  userBookingStatus?: Maybe<Array<Maybe<BookingConnectionUserBookingStatus>>>;\n  email?: Maybe<Array<Maybe<BookingConnectionEmail>>>;\n  adults?: Maybe<Array<Maybe<BookingConnectionAdults>>>;\n  children?: Maybe<Array<Maybe<BookingConnectionChildren>>>;\n  totalPrice?: Maybe<Array<Maybe<BookingConnectionTotalPrice>>>;\n  published_at?: Maybe<Array<Maybe<BookingConnectionPublished_At>>>;\n};\n\nexport type BookingInput = {\n  trip?: Maybe<Scalars['ID']>;\n  approved?: Maybe<Scalars['Boolean']>;\n  basePrice: Scalars['Float'];\n  currency: Enum_Booking_Currency;\n  basePeopleCount: Scalars['Int'];\n  discount?: Maybe<Scalars['Float']>;\n  fullName: Scalars['String'];\n  phone: Scalars['String'];\n  message?: Maybe<Scalars['String']>;\n  arrivalDate: Scalars['Date'];\n  language?: Maybe<Scalars['String']>;\n  userBookingStatus?: Maybe<Enum_Booking_Userbookingstatus>;\n  email: Scalars['String'];\n  adults: Scalars['Int'];\n  children?: Maybe<Scalars['Int']>;\n  totalPrice?: Maybe<Scalars['Float']>;\n  published_at?: Maybe<Scalars['DateTime']>;\n  created_by?: Maybe<Scalars['ID']>;\n  updated_by?: Maybe<Scalars['ID']>;\n};\n\nexport type City = {\n  __typename?: 'City';\n  id: Scalars['ID'];\n  _id: Scalars['ID'];\n  createdAt: Scalars['DateTime'];\n  updatedAt: Scalars['DateTime'];\n  name: Scalars['String'];\n  description?: Maybe<Scalars['String']>;\n  image?: Maybe<UploadFile>;\n  locale?: Maybe<Scalars['String']>;\n  published_at?: Maybe<Scalars['DateTime']>;\n  locations?: Maybe<Array<Maybe<Location>>>;\n  localizations?: Maybe<Array<Maybe<City>>>;\n};\n\n\nexport type CityLocationsArgs = {\n  sort?: Maybe<Scalars['String']>;\n  limit?: Maybe<Scalars['Int']>;\n  start?: Maybe<Scalars['Int']>;\n  where?: Maybe<Scalars['JSON']>;\n};\n\n\nexport type CityLocalizationsArgs = {\n  sort?: Maybe<Scalars['String']>;\n  limit?: Maybe<Scalars['Int']>;\n  start?: Maybe<Scalars['Int']>;\n  where?: Maybe<Scalars['JSON']>;\n};\n\nexport type CityAggregator = {\n  __typename?: 'CityAggregator';\n  count?: Maybe<Scalars['Int']>;\n  totalCount?: Maybe<Scalars['Int']>;\n};\n\nexport type CityConnection = {\n  __typename?: 'CityConnection';\n  values?: Maybe<Array<Maybe<City>>>;\n  groupBy?: Maybe<CityGroupBy>;\n  aggregate?: Maybe<CityAggregator>;\n};\n\nexport type CityConnectionCreatedAt = {\n  __typename?: 'CityConnectionCreatedAt';\n  key?: Maybe<Scalars['DateTime']>;\n  connection?: Maybe<CityConnection>;\n};\n\nexport type CityConnectionDescription = {\n  __typename?: 'CityConnectionDescription';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<CityConnection>;\n};\n\nexport type CityConnectionId = {\n  __typename?: 'CityConnectionId';\n  key?: Maybe<Scalars['ID']>;\n  connection?: Maybe<CityConnection>;\n};\n\nexport type CityConnectionImage = {\n  __typename?: 'CityConnectionImage';\n  key?: Maybe<Scalars['ID']>;\n  connection?: Maybe<CityConnection>;\n};\n\nexport type CityConnectionLocale = {\n  __typename?: 'CityConnectionLocale';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<CityConnection>;\n};\n\nexport type CityConnectionName = {\n  __typename?: 'CityConnectionName';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<CityConnection>;\n};\n\nexport type CityConnectionPublished_At = {\n  __typename?: 'CityConnectionPublished_at';\n  key?: Maybe<Scalars['DateTime']>;\n  connection?: Maybe<CityConnection>;\n};\n\nexport type CityConnectionUpdatedAt = {\n  __typename?: 'CityConnectionUpdatedAt';\n  key?: Maybe<Scalars['DateTime']>;\n  connection?: Maybe<CityConnection>;\n};\n\nexport type CityConnection_Id = {\n  __typename?: 'CityConnection_id';\n  key?: Maybe<Scalars['ID']>;\n  connection?: Maybe<CityConnection>;\n};\n\nexport type CityGroupBy = {\n  __typename?: 'CityGroupBy';\n  id?: Maybe<Array<Maybe<CityConnectionId>>>;\n  _id?: Maybe<Array<Maybe<CityConnection_Id>>>;\n  createdAt?: Maybe<Array<Maybe<CityConnectionCreatedAt>>>;\n  updatedAt?: Maybe<Array<Maybe<CityConnectionUpdatedAt>>>;\n  name?: Maybe<Array<Maybe<CityConnectionName>>>;\n  description?: Maybe<Array<Maybe<CityConnectionDescription>>>;\n  image?: Maybe<Array<Maybe<CityConnectionImage>>>;\n  locale?: Maybe<Array<Maybe<CityConnectionLocale>>>;\n  published_at?: Maybe<Array<Maybe<CityConnectionPublished_At>>>;\n};\n\nexport type CityInput = {\n  name: Scalars['String'];\n  description?: Maybe<Scalars['String']>;\n  image?: Maybe<Scalars['ID']>;\n  locations?: Maybe<Array<Maybe<Scalars['ID']>>>;\n  localizations?: Maybe<Array<Maybe<Scalars['ID']>>>;\n  locale?: Maybe<Scalars['String']>;\n  published_at?: Maybe<Scalars['DateTime']>;\n  created_by?: Maybe<Scalars['ID']>;\n  updated_by?: Maybe<Scalars['ID']>;\n};\n\nexport type ComponentCoordinateCoordinate = {\n  __typename?: 'ComponentCoordinateCoordinate';\n  id: Scalars['ID'];\n  _id: Scalars['ID'];\n  latitude: Scalars['Float'];\n  longitude: Scalars['Float'];\n};\n\nexport type ComponentCoordinateCoordinateInput = {\n  latitude: Scalars['Float'];\n  longitude: Scalars['Float'];\n};\n\nexport type ComponentFeatureFeature = {\n  __typename?: 'ComponentFeatureFeature';\n  id: Scalars['ID'];\n  _id: Scalars['ID'];\n  feature?: Maybe<Feature>;\n  included?: Maybe<Scalars['Boolean']>;\n};\n\nexport type ComponentFeatureFeatureInput = {\n  feature?: Maybe<Scalars['ID']>;\n  included?: Maybe<Scalars['Boolean']>;\n};\n\nexport type ComponentPricePrice = {\n  __typename?: 'ComponentPricePrice';\n  id: Scalars['ID'];\n  _id: Scalars['ID'];\n  basePrice: Scalars['Float'];\n  currency: Enum_Componentpriceprice_Currency;\n  basePeopleCount: Scalars['Int'];\n  extraAdultFee?: Maybe<Scalars['Float']>;\n  discount?: Maybe<Scalars['Float']>;\n};\n\nexport type ComponentPricePriceInput = {\n  basePrice: Scalars['Float'];\n  currency?: Maybe<Enum_Componentpriceprice_Currency>;\n  basePeopleCount: Scalars['Int'];\n  extraAdultFee?: Maybe<Scalars['Float']>;\n  discount?: Maybe<Scalars['Float']>;\n};\n\nexport type ComponentTimelineTimeline = {\n  __typename?: 'ComponentTimelineTimeline';\n  id: Scalars['ID'];\n  _id: Scalars['ID'];\n  day: Scalars['Int'];\n  description?: Maybe<Scalars['String']>;\n  travelTo?: Maybe<City>;\n  transportationType?: Maybe<Enum_Componenttimelinetimeline_Transportationtype>;\n  restDay?: Maybe<Scalars['Boolean']>;\n  locations?: Maybe<Array<Maybe<Location>>>;\n};\n\n\nexport type ComponentTimelineTimelineLocationsArgs = {\n  sort?: Maybe<Scalars['String']>;\n  limit?: Maybe<Scalars['Int']>;\n  start?: Maybe<Scalars['Int']>;\n  where?: Maybe<Scalars['JSON']>;\n};\n\nexport type ComponentTimelineTimelineInput = {\n  day: Scalars['Int'];\n  description?: Maybe<Scalars['String']>;\n  locations?: Maybe<Array<Maybe<Scalars['ID']>>>;\n  travelTo?: Maybe<Scalars['ID']>;\n  transportationType?: Maybe<Enum_Componenttimelinetimeline_Transportationtype>;\n  restDay?: Maybe<Scalars['Boolean']>;\n};\n\n\n\nexport enum Enum_Booking_Currency {\n  Dollar = 'dollar',\n  Lira = 'lira'\n}\n\nexport enum Enum_Booking_Userbookingstatus {\n  Initial = 'initial',\n  Confirmed = 'confirmed',\n  Canceled = 'canceled'\n}\n\nexport enum Enum_Componentpriceprice_Currency {\n  Dollar = 'dollar',\n  Lira = 'lira'\n}\n\nexport enum Enum_Componenttimelinetimeline_Transportationtype {\n  Arrival = 'arrival',\n  Departure = 'departure',\n  BetweenCities = 'betweenCities',\n  WithinCity = 'withinCity'\n}\n\nexport enum Enum_Partner_Agreementstatus {\n  Agreed = 'Agreed',\n  Discussing = 'discussing',\n  Termination = 'termination'\n}\n\nexport enum Enum_Partner_Revenuesource {\n  PricePercentage = 'pricePercentage',\n  InflatedPrice = 'inflatedPrice'\n}\n\nexport enum Enum_Trips_Currency {\n  Dollar = 'dollar',\n  Lira = 'lira'\n}\n\nexport enum Enum_Trips_Traveltype {\n  Private = 'private',\n  Public = 'public',\n  Both = 'both'\n}\n\nexport enum Enum_Trips_Trip_Type {\n  Touristic = 'touristic',\n  Medical = 'medical'\n}\n\nexport type Feature = {\n  __typename?: 'Feature';\n  id: Scalars['ID'];\n  _id: Scalars['ID'];\n  createdAt: Scalars['DateTime'];\n  updatedAt: Scalars['DateTime'];\n  name: Scalars['String'];\n  info?: Maybe<Scalars['String']>;\n  locale?: Maybe<Scalars['String']>;\n  published_at?: Maybe<Scalars['DateTime']>;\n  localizations?: Maybe<Array<Maybe<Feature>>>;\n};\n\n\nexport type FeatureLocalizationsArgs = {\n  sort?: Maybe<Scalars['String']>;\n  limit?: Maybe<Scalars['Int']>;\n  start?: Maybe<Scalars['Int']>;\n  where?: Maybe<Scalars['JSON']>;\n};\n\nexport type FeatureAggregator = {\n  __typename?: 'FeatureAggregator';\n  count?: Maybe<Scalars['Int']>;\n  totalCount?: Maybe<Scalars['Int']>;\n};\n\nexport type FeatureConnection = {\n  __typename?: 'FeatureConnection';\n  values?: Maybe<Array<Maybe<Feature>>>;\n  groupBy?: Maybe<FeatureGroupBy>;\n  aggregate?: Maybe<FeatureAggregator>;\n};\n\nexport type FeatureConnectionCreatedAt = {\n  __typename?: 'FeatureConnectionCreatedAt';\n  key?: Maybe<Scalars['DateTime']>;\n  connection?: Maybe<FeatureConnection>;\n};\n\nexport type FeatureConnectionId = {\n  __typename?: 'FeatureConnectionId';\n  key?: Maybe<Scalars['ID']>;\n  connection?: Maybe<FeatureConnection>;\n};\n\nexport type FeatureConnectionInfo = {\n  __typename?: 'FeatureConnectionInfo';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<FeatureConnection>;\n};\n\nexport type FeatureConnectionLocale = {\n  __typename?: 'FeatureConnectionLocale';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<FeatureConnection>;\n};\n\nexport type FeatureConnectionName = {\n  __typename?: 'FeatureConnectionName';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<FeatureConnection>;\n};\n\nexport type FeatureConnectionPublished_At = {\n  __typename?: 'FeatureConnectionPublished_at';\n  key?: Maybe<Scalars['DateTime']>;\n  connection?: Maybe<FeatureConnection>;\n};\n\nexport type FeatureConnectionUpdatedAt = {\n  __typename?: 'FeatureConnectionUpdatedAt';\n  key?: Maybe<Scalars['DateTime']>;\n  connection?: Maybe<FeatureConnection>;\n};\n\nexport type FeatureConnection_Id = {\n  __typename?: 'FeatureConnection_id';\n  key?: Maybe<Scalars['ID']>;\n  connection?: Maybe<FeatureConnection>;\n};\n\nexport type FeatureGroupBy = {\n  __typename?: 'FeatureGroupBy';\n  id?: Maybe<Array<Maybe<FeatureConnectionId>>>;\n  _id?: Maybe<Array<Maybe<FeatureConnection_Id>>>;\n  createdAt?: Maybe<Array<Maybe<FeatureConnectionCreatedAt>>>;\n  updatedAt?: Maybe<Array<Maybe<FeatureConnectionUpdatedAt>>>;\n  name?: Maybe<Array<Maybe<FeatureConnectionName>>>;\n  info?: Maybe<Array<Maybe<FeatureConnectionInfo>>>;\n  locale?: Maybe<Array<Maybe<FeatureConnectionLocale>>>;\n  published_at?: Maybe<Array<Maybe<FeatureConnectionPublished_At>>>;\n};\n\nexport type FeatureInput = {\n  name: Scalars['String'];\n  info?: Maybe<Scalars['String']>;\n  localizations?: Maybe<Array<Maybe<Scalars['ID']>>>;\n  locale?: Maybe<Scalars['String']>;\n  published_at?: Maybe<Scalars['DateTime']>;\n  created_by?: Maybe<Scalars['ID']>;\n  updated_by?: Maybe<Scalars['ID']>;\n};\n\nexport type FileInfoInput = {\n  name?: Maybe<Scalars['String']>;\n  alternativeText?: Maybe<Scalars['String']>;\n  caption?: Maybe<Scalars['String']>;\n};\n\nexport type FileInput = {\n  name: Scalars['String'];\n  alternativeText?: Maybe<Scalars['String']>;\n  caption?: Maybe<Scalars['String']>;\n  width?: Maybe<Scalars['Int']>;\n  height?: Maybe<Scalars['Int']>;\n  formats?: Maybe<Scalars['JSON']>;\n  hash: Scalars['String'];\n  ext?: Maybe<Scalars['String']>;\n  mime: Scalars['String'];\n  size: Scalars['Float'];\n  url: Scalars['String'];\n  previewUrl?: Maybe<Scalars['String']>;\n  provider: Scalars['String'];\n  provider_metadata?: Maybe<Scalars['JSON']>;\n  related?: Maybe<Array<Maybe<Scalars['ID']>>>;\n  created_by?: Maybe<Scalars['ID']>;\n  updated_by?: Maybe<Scalars['ID']>;\n};\n\nexport type HomeBanner = {\n  __typename?: 'HomeBanner';\n  id: Scalars['ID'];\n  _id: Scalars['ID'];\n  createdAt: Scalars['DateTime'];\n  updatedAt: Scalars['DateTime'];\n  published_at?: Maybe<Scalars['DateTime']>;\n  images?: Maybe<Array<Maybe<UploadFile>>>;\n};\n\n\nexport type HomeBannerImagesArgs = {\n  sort?: Maybe<Scalars['String']>;\n  limit?: Maybe<Scalars['Int']>;\n  start?: Maybe<Scalars['Int']>;\n  where?: Maybe<Scalars['JSON']>;\n};\n\nexport type HomeBannerInput = {\n  images?: Maybe<Array<Maybe<Scalars['ID']>>>;\n  published_at?: Maybe<Scalars['DateTime']>;\n  created_by?: Maybe<Scalars['ID']>;\n  updated_by?: Maybe<Scalars['ID']>;\n};\n\nexport type HotelInput = {\n  name: Scalars['String'];\n  stars: Scalars['Int'];\n  url?: Maybe<Scalars['String']>;\n  trips?: Maybe<Array<Maybe<Scalars['ID']>>>;\n  published_at?: Maybe<Scalars['DateTime']>;\n  created_by?: Maybe<Scalars['ID']>;\n  updated_by?: Maybe<Scalars['ID']>;\n};\n\nexport type Hotels = {\n  __typename?: 'Hotels';\n  id: Scalars['ID'];\n  _id: Scalars['ID'];\n  createdAt: Scalars['DateTime'];\n  updatedAt: Scalars['DateTime'];\n  name: Scalars['String'];\n  stars: Scalars['Int'];\n  url?: Maybe<Scalars['String']>;\n  published_at?: Maybe<Scalars['DateTime']>;\n  trips?: Maybe<Array<Maybe<Trips>>>;\n};\n\n\nexport type HotelsTripsArgs = {\n  sort?: Maybe<Scalars['String']>;\n  limit?: Maybe<Scalars['Int']>;\n  start?: Maybe<Scalars['Int']>;\n  where?: Maybe<Scalars['JSON']>;\n};\n\nexport type HotelsAggregator = {\n  __typename?: 'HotelsAggregator';\n  count?: Maybe<Scalars['Int']>;\n  totalCount?: Maybe<Scalars['Int']>;\n  sum?: Maybe<HotelsAggregatorSum>;\n  avg?: Maybe<HotelsAggregatorAvg>;\n  min?: Maybe<HotelsAggregatorMin>;\n  max?: Maybe<HotelsAggregatorMax>;\n};\n\nexport type HotelsAggregatorAvg = {\n  __typename?: 'HotelsAggregatorAvg';\n  stars?: Maybe<Scalars['Float']>;\n};\n\nexport type HotelsAggregatorMax = {\n  __typename?: 'HotelsAggregatorMax';\n  stars?: Maybe<Scalars['Float']>;\n};\n\nexport type HotelsAggregatorMin = {\n  __typename?: 'HotelsAggregatorMin';\n  stars?: Maybe<Scalars['Float']>;\n};\n\nexport type HotelsAggregatorSum = {\n  __typename?: 'HotelsAggregatorSum';\n  stars?: Maybe<Scalars['Float']>;\n};\n\nexport type HotelsConnection = {\n  __typename?: 'HotelsConnection';\n  values?: Maybe<Array<Maybe<Hotels>>>;\n  groupBy?: Maybe<HotelsGroupBy>;\n  aggregate?: Maybe<HotelsAggregator>;\n};\n\nexport type HotelsConnectionCreatedAt = {\n  __typename?: 'HotelsConnectionCreatedAt';\n  key?: Maybe<Scalars['DateTime']>;\n  connection?: Maybe<HotelsConnection>;\n};\n\nexport type HotelsConnectionId = {\n  __typename?: 'HotelsConnectionId';\n  key?: Maybe<Scalars['ID']>;\n  connection?: Maybe<HotelsConnection>;\n};\n\nexport type HotelsConnectionName = {\n  __typename?: 'HotelsConnectionName';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<HotelsConnection>;\n};\n\nexport type HotelsConnectionPublished_At = {\n  __typename?: 'HotelsConnectionPublished_at';\n  key?: Maybe<Scalars['DateTime']>;\n  connection?: Maybe<HotelsConnection>;\n};\n\nexport type HotelsConnectionStars = {\n  __typename?: 'HotelsConnectionStars';\n  key?: Maybe<Scalars['Int']>;\n  connection?: Maybe<HotelsConnection>;\n};\n\nexport type HotelsConnectionUpdatedAt = {\n  __typename?: 'HotelsConnectionUpdatedAt';\n  key?: Maybe<Scalars['DateTime']>;\n  connection?: Maybe<HotelsConnection>;\n};\n\nexport type HotelsConnectionUrl = {\n  __typename?: 'HotelsConnectionUrl';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<HotelsConnection>;\n};\n\nexport type HotelsConnection_Id = {\n  __typename?: 'HotelsConnection_id';\n  key?: Maybe<Scalars['ID']>;\n  connection?: Maybe<HotelsConnection>;\n};\n\nexport type HotelsGroupBy = {\n  __typename?: 'HotelsGroupBy';\n  id?: Maybe<Array<Maybe<HotelsConnectionId>>>;\n  _id?: Maybe<Array<Maybe<HotelsConnection_Id>>>;\n  createdAt?: Maybe<Array<Maybe<HotelsConnectionCreatedAt>>>;\n  updatedAt?: Maybe<Array<Maybe<HotelsConnectionUpdatedAt>>>;\n  name?: Maybe<Array<Maybe<HotelsConnectionName>>>;\n  stars?: Maybe<Array<Maybe<HotelsConnectionStars>>>;\n  url?: Maybe<Array<Maybe<HotelsConnectionUrl>>>;\n  published_at?: Maybe<Array<Maybe<HotelsConnectionPublished_At>>>;\n};\n\nexport type I18NLocale = {\n  __typename?: 'I18NLocale';\n  id: Scalars['ID'];\n  _id: Scalars['ID'];\n  createdAt: Scalars['DateTime'];\n  updatedAt: Scalars['DateTime'];\n  name?: Maybe<Scalars['String']>;\n  code?: Maybe<Scalars['String']>;\n};\n\nexport type InputId = {\n  id: Scalars['ID'];\n};\n\n\nexport type LocaleInput = {\n  name?: Maybe<Scalars['String']>;\n  code?: Maybe<Scalars['String']>;\n  created_by?: Maybe<Scalars['ID']>;\n  updated_by?: Maybe<Scalars['ID']>;\n};\n\nexport type Location = {\n  __typename?: 'Location';\n  id: Scalars['ID'];\n  _id: Scalars['ID'];\n  createdAt: Scalars['DateTime'];\n  updatedAt: Scalars['DateTime'];\n  name: Scalars['String'];\n  description?: Maybe<Scalars['String']>;\n  city?: Maybe<City>;\n  coordinate?: Maybe<ComponentCoordinateCoordinate>;\n  locale?: Maybe<Scalars['String']>;\n  published_at?: Maybe<Scalars['DateTime']>;\n  images?: Maybe<Array<Maybe<UploadFile>>>;\n  localizations?: Maybe<Array<Maybe<Location>>>;\n};\n\n\nexport type LocationImagesArgs = {\n  sort?: Maybe<Scalars['String']>;\n  limit?: Maybe<Scalars['Int']>;\n  start?: Maybe<Scalars['Int']>;\n  where?: Maybe<Scalars['JSON']>;\n};\n\n\nexport type LocationLocalizationsArgs = {\n  sort?: Maybe<Scalars['String']>;\n  limit?: Maybe<Scalars['Int']>;\n  start?: Maybe<Scalars['Int']>;\n  where?: Maybe<Scalars['JSON']>;\n};\n\nexport type LocationAggregator = {\n  __typename?: 'LocationAggregator';\n  count?: Maybe<Scalars['Int']>;\n  totalCount?: Maybe<Scalars['Int']>;\n};\n\nexport type LocationConnection = {\n  __typename?: 'LocationConnection';\n  values?: Maybe<Array<Maybe<Location>>>;\n  groupBy?: Maybe<LocationGroupBy>;\n  aggregate?: Maybe<LocationAggregator>;\n};\n\nexport type LocationConnectionCity = {\n  __typename?: 'LocationConnectionCity';\n  key?: Maybe<Scalars['ID']>;\n  connection?: Maybe<LocationConnection>;\n};\n\nexport type LocationConnectionCoordinate = {\n  __typename?: 'LocationConnectionCoordinate';\n  key?: Maybe<Scalars['ID']>;\n  connection?: Maybe<LocationConnection>;\n};\n\nexport type LocationConnectionCreatedAt = {\n  __typename?: 'LocationConnectionCreatedAt';\n  key?: Maybe<Scalars['DateTime']>;\n  connection?: Maybe<LocationConnection>;\n};\n\nexport type LocationConnectionDescription = {\n  __typename?: 'LocationConnectionDescription';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<LocationConnection>;\n};\n\nexport type LocationConnectionId = {\n  __typename?: 'LocationConnectionId';\n  key?: Maybe<Scalars['ID']>;\n  connection?: Maybe<LocationConnection>;\n};\n\nexport type LocationConnectionLocale = {\n  __typename?: 'LocationConnectionLocale';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<LocationConnection>;\n};\n\nexport type LocationConnectionName = {\n  __typename?: 'LocationConnectionName';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<LocationConnection>;\n};\n\nexport type LocationConnectionPublished_At = {\n  __typename?: 'LocationConnectionPublished_at';\n  key?: Maybe<Scalars['DateTime']>;\n  connection?: Maybe<LocationConnection>;\n};\n\nexport type LocationConnectionUpdatedAt = {\n  __typename?: 'LocationConnectionUpdatedAt';\n  key?: Maybe<Scalars['DateTime']>;\n  connection?: Maybe<LocationConnection>;\n};\n\nexport type LocationConnection_Id = {\n  __typename?: 'LocationConnection_id';\n  key?: Maybe<Scalars['ID']>;\n  connection?: Maybe<LocationConnection>;\n};\n\nexport type LocationGroupBy = {\n  __typename?: 'LocationGroupBy';\n  id?: Maybe<Array<Maybe<LocationConnectionId>>>;\n  _id?: Maybe<Array<Maybe<LocationConnection_Id>>>;\n  createdAt?: Maybe<Array<Maybe<LocationConnectionCreatedAt>>>;\n  updatedAt?: Maybe<Array<Maybe<LocationConnectionUpdatedAt>>>;\n  name?: Maybe<Array<Maybe<LocationConnectionName>>>;\n  description?: Maybe<Array<Maybe<LocationConnectionDescription>>>;\n  city?: Maybe<Array<Maybe<LocationConnectionCity>>>;\n  coordinate?: Maybe<Array<Maybe<LocationConnectionCoordinate>>>;\n  locale?: Maybe<Array<Maybe<LocationConnectionLocale>>>;\n  published_at?: Maybe<Array<Maybe<LocationConnectionPublished_At>>>;\n};\n\nexport type LocationInput = {\n  name: Scalars['String'];\n  description?: Maybe<Scalars['String']>;\n  images?: Maybe<Array<Maybe<Scalars['ID']>>>;\n  city?: Maybe<Scalars['ID']>;\n  coordinate?: Maybe<ComponentCoordinateCoordinateInput>;\n  localizations?: Maybe<Array<Maybe<Scalars['ID']>>>;\n  locale?: Maybe<Scalars['String']>;\n  published_at?: Maybe<Scalars['DateTime']>;\n  created_by?: Maybe<Scalars['ID']>;\n  updated_by?: Maybe<Scalars['ID']>;\n};\n\n\nexport type Morph = UsersPermissionsMe | UsersPermissionsMeRole | UsersPermissionsLoginPayload | UserPermissionsPasswordPayload | Booking | BookingConnection | BookingAggregator | BookingAggregatorSum | BookingAggregatorAvg | BookingAggregatorMin | BookingAggregatorMax | BookingGroupBy | BookingConnectionId | BookingConnection_Id | BookingConnectionCreatedAt | BookingConnectionUpdatedAt | BookingConnectionTrip | BookingConnectionApproved | BookingConnectionBasePrice | BookingConnectionCurrency | BookingConnectionBasePeopleCount | BookingConnectionDiscount | BookingConnectionFullName | BookingConnectionPhone | BookingConnectionMessage | BookingConnectionArrivalDate | BookingConnectionLanguage | BookingConnectionUserBookingStatus | BookingConnectionEmail | BookingConnectionAdults | BookingConnectionChildren | BookingConnectionTotalPrice | BookingConnectionPublished_At | CreateBookingPayload | UpdateBookingPayload | DeleteBookingPayload | City | CityConnection | CityAggregator | CityGroupBy | CityConnectionId | CityConnection_Id | CityConnectionCreatedAt | CityConnectionUpdatedAt | CityConnectionName | CityConnectionDescription | CityConnectionImage | CityConnectionLocale | CityConnectionPublished_At | CreateCityPayload | UpdateCityPayload | DeleteCityPayload | Feature | FeatureConnection | FeatureAggregator | FeatureGroupBy | FeatureConnectionId | FeatureConnection_Id | FeatureConnectionCreatedAt | FeatureConnectionUpdatedAt | FeatureConnectionName | FeatureConnectionInfo | FeatureConnectionLocale | FeatureConnectionPublished_At | CreateFeaturePayload | UpdateFeaturePayload | DeleteFeaturePayload | HomeBanner | UpdateHomeBannerPayload | DeleteHomeBannerPayload | Hotels | HotelsConnection | HotelsAggregator | HotelsAggregatorSum | HotelsAggregatorAvg | HotelsAggregatorMin | HotelsAggregatorMax | HotelsGroupBy | HotelsConnectionId | HotelsConnection_Id | HotelsConnectionCreatedAt | HotelsConnectionUpdatedAt | HotelsConnectionName | HotelsConnectionStars | HotelsConnectionUrl | HotelsConnectionPublished_At | CreateHotelPayload | UpdateHotelPayload | DeleteHotelPayload | Location | LocationConnection | LocationAggregator | LocationGroupBy | LocationConnectionId | LocationConnection_Id | LocationConnectionCreatedAt | LocationConnectionUpdatedAt | LocationConnectionName | LocationConnectionDescription | LocationConnectionCity | LocationConnectionCoordinate | LocationConnectionLocale | LocationConnectionPublished_At | CreateLocationPayload | UpdateLocationPayload | DeleteLocationPayload | Partner | PartnerConnection | PartnerAggregator | PartnerAggregatorSum | PartnerAggregatorAvg | PartnerAggregatorMin | PartnerAggregatorMax | PartnerGroupBy | PartnerConnectionId | PartnerConnection_Id | PartnerConnectionCreatedAt | PartnerConnectionUpdatedAt | PartnerConnectionName | PartnerConnectionPhone | PartnerConnectionAddress | PartnerConnectionEmail | PartnerConnectionAgreement | PartnerConnectionCommission | PartnerConnectionRevenueSource | PartnerConnectionAgreementStatus | PartnerConnectionNotes | PartnerConnectionPhone2 | PartnerConnectionPublished_At | CreatePartnerPayload | UpdatePartnerPayload | DeletePartnerPayload | Review | ReviewConnection | ReviewAggregator | ReviewAggregatorSum | ReviewAggregatorAvg | ReviewAggregatorMin | ReviewAggregatorMax | ReviewGroupBy | ReviewConnectionId | ReviewConnection_Id | ReviewConnectionCreatedAt | ReviewConnectionUpdatedAt | ReviewConnectionText | ReviewConnectionRating | ReviewConnectionAuthor | ReviewConnectionActive | ReviewConnectionTrip | ReviewConnectionPublished_At | CreateReviewPayload | UpdateReviewPayload | DeleteReviewPayload | Subscribers | SubscribersConnection | SubscribersAggregator | SubscribersGroupBy | SubscribersConnectionId | SubscribersConnection_Id | SubscribersConnectionCreatedAt | SubscribersConnectionUpdatedAt | SubscribersConnectionEmail | SubscribersConnectionPublished_At | CreateSubscriberPayload | UpdateSubscriberPayload | DeleteSubscriberPayload | Trips | TripsConnection | TripsAggregator | TripsAggregatorSum | TripsAggregatorAvg | TripsAggregatorMin | TripsAggregatorMax | TripsGroupBy | TripsConnectionId | TripsConnection_Id | TripsConnectionCreatedAt | TripsConnectionUpdatedAt | TripsConnectionName | TripsConnectionPreviewImage | TripsConnectionActive | TripsConnectionTrip_Type | TripsConnectionDescription | TripsConnectionDuration | TripsConnectionPartner | TripsConnectionCurrency | TripsConnectionCity | TripsConnectionBasePrice | TripsConnectionBasePeopleCount | TripsConnectionDiscount | TripsConnectionTravelType | TripsConnectionHotel | TripsConnectionLocale | TripsConnectionPublished_At | CreateTripPayload | UpdateTripPayload | DeleteTripPayload | I18NLocale | UploadFile | UploadFileConnection | UploadFileAggregator | UploadFileAggregatorSum | UploadFileAggregatorAvg | UploadFileAggregatorMin | UploadFileAggregatorMax | UploadFileGroupBy | UploadFileConnectionId | UploadFileConnection_Id | UploadFileConnectionCreatedAt | UploadFileConnectionUpdatedAt | UploadFileConnectionName | UploadFileConnectionAlternativeText | UploadFileConnectionCaption | UploadFileConnectionWidth | UploadFileConnectionHeight | UploadFileConnectionFormats | UploadFileConnectionHash | UploadFileConnectionExt | UploadFileConnectionMime | UploadFileConnectionSize | UploadFileConnectionUrl | UploadFileConnectionPreviewUrl | UploadFileConnectionProvider | UploadFileConnectionProvider_Metadata | DeleteFilePayload | UsersPermissionsPermission | UsersPermissionsRole | UsersPermissionsRoleConnection | UsersPermissionsRoleAggregator | UsersPermissionsRoleGroupBy | UsersPermissionsRoleConnectionId | UsersPermissionsRoleConnection_Id | UsersPermissionsRoleConnectionName | UsersPermissionsRoleConnectionDescription | UsersPermissionsRoleConnectionType | CreateRolePayload | UpdateRolePayload | DeleteRolePayload | UsersPermissionsUser | UsersPermissionsUserConnection | UsersPermissionsUserAggregator | UsersPermissionsUserGroupBy | UsersPermissionsUserConnectionId | UsersPermissionsUserConnection_Id | UsersPermissionsUserConnectionCreatedAt | UsersPermissionsUserConnectionUpdatedAt | UsersPermissionsUserConnectionUsername | UsersPermissionsUserConnectionEmail | UsersPermissionsUserConnectionProvider | UsersPermissionsUserConnectionConfirmed | UsersPermissionsUserConnectionBlocked | UsersPermissionsUserConnectionRole | CreateUserPayload | UpdateUserPayload | DeleteUserPayload | ComponentCoordinateCoordinate | ComponentFeatureFeature | ComponentPricePrice | ComponentTimelineTimeline;\n\nexport type Mutation = {\n  __typename?: 'Mutation';\n  createBooking?: Maybe<CreateBookingPayload>;\n  updateBooking?: Maybe<UpdateBookingPayload>;\n  deleteBooking?: Maybe<DeleteBookingPayload>;\n  createCity?: Maybe<CreateCityPayload>;\n  updateCity?: Maybe<UpdateCityPayload>;\n  deleteCity?: Maybe<DeleteCityPayload>;\n  createFeature?: Maybe<CreateFeaturePayload>;\n  updateFeature?: Maybe<UpdateFeaturePayload>;\n  deleteFeature?: Maybe<DeleteFeaturePayload>;\n  updateHomeBanner?: Maybe<UpdateHomeBannerPayload>;\n  deleteHomeBanner?: Maybe<DeleteHomeBannerPayload>;\n  createHotel?: Maybe<CreateHotelPayload>;\n  updateHotel?: Maybe<UpdateHotelPayload>;\n  deleteHotel?: Maybe<DeleteHotelPayload>;\n  createLocation?: Maybe<CreateLocationPayload>;\n  updateLocation?: Maybe<UpdateLocationPayload>;\n  deleteLocation?: Maybe<DeleteLocationPayload>;\n  createPartner?: Maybe<CreatePartnerPayload>;\n  updatePartner?: Maybe<UpdatePartnerPayload>;\n  deletePartner?: Maybe<DeletePartnerPayload>;\n  createReview?: Maybe<CreateReviewPayload>;\n  updateReview?: Maybe<UpdateReviewPayload>;\n  deleteReview?: Maybe<DeleteReviewPayload>;\n  createSubscriber?: Maybe<CreateSubscriberPayload>;\n  updateSubscriber?: Maybe<UpdateSubscriberPayload>;\n  deleteSubscriber?: Maybe<DeleteSubscriberPayload>;\n  createTrip?: Maybe<CreateTripPayload>;\n  updateTrip?: Maybe<UpdateTripPayload>;\n  deleteTrip?: Maybe<DeleteTripPayload>;\n  /** Delete one file */\n  deleteFile?: Maybe<DeleteFilePayload>;\n  /** Create a new role */\n  createRole?: Maybe<CreateRolePayload>;\n  /** Update an existing role */\n  updateRole?: Maybe<UpdateRolePayload>;\n  /** Delete an existing role */\n  deleteRole?: Maybe<DeleteRolePayload>;\n  /** Create a new user */\n  createUser?: Maybe<CreateUserPayload>;\n  /** Update an existing user */\n  updateUser?: Maybe<UpdateUserPayload>;\n  /** Delete an existing user */\n  deleteUser?: Maybe<DeleteUserPayload>;\n  createCityLocalization: City;\n  createFeatureLocalization: Feature;\n  createLocationLocalization: Location;\n  createTripLocalization: Trips;\n  upload: UploadFile;\n  multipleUpload: Array<Maybe<UploadFile>>;\n  updateFileInfo: UploadFile;\n  login: UsersPermissionsLoginPayload;\n  register: UsersPermissionsLoginPayload;\n  forgotPassword?: Maybe<UserPermissionsPasswordPayload>;\n  resetPassword?: Maybe<UsersPermissionsLoginPayload>;\n  emailConfirmation?: Maybe<UsersPermissionsLoginPayload>;\n};\n\n\nexport type MutationCreateBookingArgs = {\n  input?: Maybe<CreateBookingInput>;\n};\n\n\nexport type MutationUpdateBookingArgs = {\n  input?: Maybe<UpdateBookingInput>;\n};\n\n\nexport type MutationDeleteBookingArgs = {\n  input?: Maybe<DeleteBookingInput>;\n};\n\n\nexport type MutationCreateCityArgs = {\n  input?: Maybe<CreateCityInput>;\n};\n\n\nexport type MutationUpdateCityArgs = {\n  input?: Maybe<UpdateCityInput>;\n};\n\n\nexport type MutationDeleteCityArgs = {\n  input?: Maybe<DeleteCityInput>;\n};\n\n\nexport type MutationCreateFeatureArgs = {\n  input?: Maybe<CreateFeatureInput>;\n};\n\n\nexport type MutationUpdateFeatureArgs = {\n  input?: Maybe<UpdateFeatureInput>;\n};\n\n\nexport type MutationDeleteFeatureArgs = {\n  input?: Maybe<DeleteFeatureInput>;\n};\n\n\nexport type MutationUpdateHomeBannerArgs = {\n  input?: Maybe<UpdateHomeBannerInput>;\n};\n\n\nexport type MutationCreateHotelArgs = {\n  input?: Maybe<CreateHotelInput>;\n};\n\n\nexport type MutationUpdateHotelArgs = {\n  input?: Maybe<UpdateHotelInput>;\n};\n\n\nexport type MutationDeleteHotelArgs = {\n  input?: Maybe<DeleteHotelInput>;\n};\n\n\nexport type MutationCreateLocationArgs = {\n  input?: Maybe<CreateLocationInput>;\n};\n\n\nexport type MutationUpdateLocationArgs = {\n  input?: Maybe<UpdateLocationInput>;\n};\n\n\nexport type MutationDeleteLocationArgs = {\n  input?: Maybe<DeleteLocationInput>;\n};\n\n\nexport type MutationCreatePartnerArgs = {\n  input?: Maybe<CreatePartnerInput>;\n};\n\n\nexport type MutationUpdatePartnerArgs = {\n  input?: Maybe<UpdatePartnerInput>;\n};\n\n\nexport type MutationDeletePartnerArgs = {\n  input?: Maybe<DeletePartnerInput>;\n};\n\n\nexport type MutationCreateReviewArgs = {\n  input?: Maybe<CreateReviewInput>;\n};\n\n\nexport type MutationUpdateReviewArgs = {\n  input?: Maybe<UpdateReviewInput>;\n};\n\n\nexport type MutationDeleteReviewArgs = {\n  input?: Maybe<DeleteReviewInput>;\n};\n\n\nexport type MutationCreateSubscriberArgs = {\n  input?: Maybe<CreateSubscriberInput>;\n};\n\n\nexport type MutationUpdateSubscriberArgs = {\n  input?: Maybe<UpdateSubscriberInput>;\n};\n\n\nexport type MutationDeleteSubscriberArgs = {\n  input?: Maybe<DeleteSubscriberInput>;\n};\n\n\nexport type MutationCreateTripArgs = {\n  input?: Maybe<CreateTripInput>;\n};\n\n\nexport type MutationUpdateTripArgs = {\n  input?: Maybe<UpdateTripInput>;\n};\n\n\nexport type MutationDeleteTripArgs = {\n  input?: Maybe<DeleteTripInput>;\n};\n\n\nexport type MutationDeleteFileArgs = {\n  input?: Maybe<DeleteFileInput>;\n};\n\n\nexport type MutationCreateRoleArgs = {\n  input?: Maybe<CreateRoleInput>;\n};\n\n\nexport type MutationUpdateRoleArgs = {\n  input?: Maybe<UpdateRoleInput>;\n};\n\n\nexport type MutationDeleteRoleArgs = {\n  input?: Maybe<DeleteRoleInput>;\n};\n\n\nexport type MutationCreateUserArgs = {\n  input?: Maybe<CreateUserInput>;\n};\n\n\nexport type MutationUpdateUserArgs = {\n  input?: Maybe<UpdateUserInput>;\n};\n\n\nexport type MutationDeleteUserArgs = {\n  input?: Maybe<DeleteUserInput>;\n};\n\n\nexport type MutationCreateCityLocalizationArgs = {\n  input: UpdateCityInput;\n};\n\n\nexport type MutationCreateFeatureLocalizationArgs = {\n  input: UpdateFeatureInput;\n};\n\n\nexport type MutationCreateLocationLocalizationArgs = {\n  input: UpdateLocationInput;\n};\n\n\nexport type MutationCreateTripLocalizationArgs = {\n  input: UpdateTripInput;\n};\n\n\nexport type MutationUploadArgs = {\n  refId?: Maybe<Scalars['ID']>;\n  ref?: Maybe<Scalars['String']>;\n  field?: Maybe<Scalars['String']>;\n  source?: Maybe<Scalars['String']>;\n  info?: Maybe<FileInfoInput>;\n  file: Scalars['Upload'];\n};\n\n\nexport type MutationMultipleUploadArgs = {\n  refId?: Maybe<Scalars['ID']>;\n  ref?: Maybe<Scalars['String']>;\n  field?: Maybe<Scalars['String']>;\n  source?: Maybe<Scalars['String']>;\n  files: Array<Maybe<Scalars['Upload']>>;\n};\n\n\nexport type MutationUpdateFileInfoArgs = {\n  id: Scalars['ID'];\n  info: FileInfoInput;\n};\n\n\nexport type MutationLoginArgs = {\n  input: UsersPermissionsLoginInput;\n};\n\n\nexport type MutationRegisterArgs = {\n  input: UsersPermissionsRegisterInput;\n};\n\n\nexport type MutationForgotPasswordArgs = {\n  email: Scalars['String'];\n};\n\n\nexport type MutationResetPasswordArgs = {\n  password: Scalars['String'];\n  passwordConfirmation: Scalars['String'];\n  code: Scalars['String'];\n};\n\n\nexport type MutationEmailConfirmationArgs = {\n  confirmation: Scalars['String'];\n};\n\nexport type Partner = {\n  __typename?: 'Partner';\n  id: Scalars['ID'];\n  _id: Scalars['ID'];\n  createdAt: Scalars['DateTime'];\n  updatedAt: Scalars['DateTime'];\n  name: Scalars['String'];\n  phone: Scalars['String'];\n  address?: Maybe<Scalars['String']>;\n  email?: Maybe<Scalars['String']>;\n  agreement?: Maybe<Scalars['String']>;\n  commission: Scalars['Float'];\n  revenueSource: Enum_Partner_Revenuesource;\n  agreementStatus: Enum_Partner_Agreementstatus;\n  notes?: Maybe<Scalars['String']>;\n  phone2?: Maybe<Scalars['String']>;\n  published_at?: Maybe<Scalars['DateTime']>;\n  trips?: Maybe<Array<Maybe<Trips>>>;\n};\n\n\nexport type PartnerTripsArgs = {\n  sort?: Maybe<Scalars['String']>;\n  limit?: Maybe<Scalars['Int']>;\n  start?: Maybe<Scalars['Int']>;\n  where?: Maybe<Scalars['JSON']>;\n};\n\nexport type PartnerAggregator = {\n  __typename?: 'PartnerAggregator';\n  count?: Maybe<Scalars['Int']>;\n  totalCount?: Maybe<Scalars['Int']>;\n  sum?: Maybe<PartnerAggregatorSum>;\n  avg?: Maybe<PartnerAggregatorAvg>;\n  min?: Maybe<PartnerAggregatorMin>;\n  max?: Maybe<PartnerAggregatorMax>;\n};\n\nexport type PartnerAggregatorAvg = {\n  __typename?: 'PartnerAggregatorAvg';\n  commission?: Maybe<Scalars['Float']>;\n};\n\nexport type PartnerAggregatorMax = {\n  __typename?: 'PartnerAggregatorMax';\n  commission?: Maybe<Scalars['Float']>;\n};\n\nexport type PartnerAggregatorMin = {\n  __typename?: 'PartnerAggregatorMin';\n  commission?: Maybe<Scalars['Float']>;\n};\n\nexport type PartnerAggregatorSum = {\n  __typename?: 'PartnerAggregatorSum';\n  commission?: Maybe<Scalars['Float']>;\n};\n\nexport type PartnerConnection = {\n  __typename?: 'PartnerConnection';\n  values?: Maybe<Array<Maybe<Partner>>>;\n  groupBy?: Maybe<PartnerGroupBy>;\n  aggregate?: Maybe<PartnerAggregator>;\n};\n\nexport type PartnerConnectionAddress = {\n  __typename?: 'PartnerConnectionAddress';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<PartnerConnection>;\n};\n\nexport type PartnerConnectionAgreement = {\n  __typename?: 'PartnerConnectionAgreement';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<PartnerConnection>;\n};\n\nexport type PartnerConnectionAgreementStatus = {\n  __typename?: 'PartnerConnectionAgreementStatus';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<PartnerConnection>;\n};\n\nexport type PartnerConnectionCommission = {\n  __typename?: 'PartnerConnectionCommission';\n  key?: Maybe<Scalars['Float']>;\n  connection?: Maybe<PartnerConnection>;\n};\n\nexport type PartnerConnectionCreatedAt = {\n  __typename?: 'PartnerConnectionCreatedAt';\n  key?: Maybe<Scalars['DateTime']>;\n  connection?: Maybe<PartnerConnection>;\n};\n\nexport type PartnerConnectionEmail = {\n  __typename?: 'PartnerConnectionEmail';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<PartnerConnection>;\n};\n\nexport type PartnerConnectionId = {\n  __typename?: 'PartnerConnectionId';\n  key?: Maybe<Scalars['ID']>;\n  connection?: Maybe<PartnerConnection>;\n};\n\nexport type PartnerConnectionName = {\n  __typename?: 'PartnerConnectionName';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<PartnerConnection>;\n};\n\nexport type PartnerConnectionNotes = {\n  __typename?: 'PartnerConnectionNotes';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<PartnerConnection>;\n};\n\nexport type PartnerConnectionPhone = {\n  __typename?: 'PartnerConnectionPhone';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<PartnerConnection>;\n};\n\nexport type PartnerConnectionPhone2 = {\n  __typename?: 'PartnerConnectionPhone2';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<PartnerConnection>;\n};\n\nexport type PartnerConnectionPublished_At = {\n  __typename?: 'PartnerConnectionPublished_at';\n  key?: Maybe<Scalars['DateTime']>;\n  connection?: Maybe<PartnerConnection>;\n};\n\nexport type PartnerConnectionRevenueSource = {\n  __typename?: 'PartnerConnectionRevenueSource';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<PartnerConnection>;\n};\n\nexport type PartnerConnectionUpdatedAt = {\n  __typename?: 'PartnerConnectionUpdatedAt';\n  key?: Maybe<Scalars['DateTime']>;\n  connection?: Maybe<PartnerConnection>;\n};\n\nexport type PartnerConnection_Id = {\n  __typename?: 'PartnerConnection_id';\n  key?: Maybe<Scalars['ID']>;\n  connection?: Maybe<PartnerConnection>;\n};\n\nexport type PartnerGroupBy = {\n  __typename?: 'PartnerGroupBy';\n  id?: Maybe<Array<Maybe<PartnerConnectionId>>>;\n  _id?: Maybe<Array<Maybe<PartnerConnection_Id>>>;\n  createdAt?: Maybe<Array<Maybe<PartnerConnectionCreatedAt>>>;\n  updatedAt?: Maybe<Array<Maybe<PartnerConnectionUpdatedAt>>>;\n  name?: Maybe<Array<Maybe<PartnerConnectionName>>>;\n  phone?: Maybe<Array<Maybe<PartnerConnectionPhone>>>;\n  address?: Maybe<Array<Maybe<PartnerConnectionAddress>>>;\n  email?: Maybe<Array<Maybe<PartnerConnectionEmail>>>;\n  agreement?: Maybe<Array<Maybe<PartnerConnectionAgreement>>>;\n  commission?: Maybe<Array<Maybe<PartnerConnectionCommission>>>;\n  revenueSource?: Maybe<Array<Maybe<PartnerConnectionRevenueSource>>>;\n  agreementStatus?: Maybe<Array<Maybe<PartnerConnectionAgreementStatus>>>;\n  notes?: Maybe<Array<Maybe<PartnerConnectionNotes>>>;\n  phone2?: Maybe<Array<Maybe<PartnerConnectionPhone2>>>;\n  published_at?: Maybe<Array<Maybe<PartnerConnectionPublished_At>>>;\n};\n\nexport type PartnerInput = {\n  name: Scalars['String'];\n  phone: Scalars['String'];\n  address?: Maybe<Scalars['String']>;\n  email?: Maybe<Scalars['String']>;\n  trips?: Maybe<Array<Maybe<Scalars['ID']>>>;\n  agreement?: Maybe<Scalars['String']>;\n  commission: Scalars['Float'];\n  revenueSource: Enum_Partner_Revenuesource;\n  agreementStatus: Enum_Partner_Agreementstatus;\n  notes?: Maybe<Scalars['String']>;\n  phone2?: Maybe<Scalars['String']>;\n  published_at?: Maybe<Scalars['DateTime']>;\n  created_by?: Maybe<Scalars['ID']>;\n  updated_by?: Maybe<Scalars['ID']>;\n};\n\nexport enum PublicationState {\n  Live = 'LIVE',\n  Preview = 'PREVIEW'\n}\n\nexport type Query = {\n  __typename?: 'Query';\n  booking?: Maybe<Booking>;\n  bookings?: Maybe<Array<Maybe<Booking>>>;\n  bookingsConnection?: Maybe<BookingConnection>;\n  city?: Maybe<City>;\n  cities?: Maybe<Array<Maybe<City>>>;\n  citiesConnection?: Maybe<CityConnection>;\n  feature?: Maybe<Feature>;\n  features?: Maybe<Array<Maybe<Feature>>>;\n  featuresConnection?: Maybe<FeatureConnection>;\n  homeBanner?: Maybe<HomeBanner>;\n  hotel?: Maybe<Hotels>;\n  hotels?: Maybe<Array<Maybe<Hotels>>>;\n  hotelsConnection?: Maybe<HotelsConnection>;\n  location?: Maybe<Location>;\n  locations?: Maybe<Array<Maybe<Location>>>;\n  locationsConnection?: Maybe<LocationConnection>;\n  partner?: Maybe<Partner>;\n  partners?: Maybe<Array<Maybe<Partner>>>;\n  partnersConnection?: Maybe<PartnerConnection>;\n  review?: Maybe<Review>;\n  reviews?: Maybe<Array<Maybe<Review>>>;\n  reviewsConnection?: Maybe<ReviewConnection>;\n  subscriber?: Maybe<Subscribers>;\n  subscribers?: Maybe<Array<Maybe<Subscribers>>>;\n  subscribersConnection?: Maybe<SubscribersConnection>;\n  trip?: Maybe<Trips>;\n  trips?: Maybe<Array<Maybe<Trips>>>;\n  tripsConnection?: Maybe<TripsConnection>;\n  files?: Maybe<Array<Maybe<UploadFile>>>;\n  filesConnection?: Maybe<UploadFileConnection>;\n  role?: Maybe<UsersPermissionsRole>;\n  /** Retrieve all the existing roles. You can't apply filters on this query. */\n  roles?: Maybe<Array<Maybe<UsersPermissionsRole>>>;\n  rolesConnection?: Maybe<UsersPermissionsRoleConnection>;\n  user?: Maybe<UsersPermissionsUser>;\n  users?: Maybe<Array<Maybe<UsersPermissionsUser>>>;\n  usersConnection?: Maybe<UsersPermissionsUserConnection>;\n  me?: Maybe<UsersPermissionsMe>;\n};\n\n\nexport type QueryBookingArgs = {\n  id: Scalars['ID'];\n  publicationState?: Maybe<PublicationState>;\n};\n\n\nexport type QueryBookingsArgs = {\n  sort?: Maybe<Scalars['String']>;\n  limit?: Maybe<Scalars['Int']>;\n  start?: Maybe<Scalars['Int']>;\n  where?: Maybe<Scalars['JSON']>;\n  publicationState?: Maybe<PublicationState>;\n};\n\n\nexport type QueryBookingsConnectionArgs = {\n  sort?: Maybe<Scalars['String']>;\n  limit?: Maybe<Scalars['Int']>;\n  start?: Maybe<Scalars['Int']>;\n  where?: Maybe<Scalars['JSON']>;\n};\n\n\nexport type QueryCityArgs = {\n  id: Scalars['ID'];\n  publicationState?: Maybe<PublicationState>;\n};\n\n\nexport type QueryCitiesArgs = {\n  sort?: Maybe<Scalars['String']>;\n  limit?: Maybe<Scalars['Int']>;\n  start?: Maybe<Scalars['Int']>;\n  where?: Maybe<Scalars['JSON']>;\n  publicationState?: Maybe<PublicationState>;\n  locale?: Maybe<Scalars['String']>;\n};\n\n\nexport type QueryCitiesConnectionArgs = {\n  sort?: Maybe<Scalars['String']>;\n  limit?: Maybe<Scalars['Int']>;\n  start?: Maybe<Scalars['Int']>;\n  where?: Maybe<Scalars['JSON']>;\n  locale?: Maybe<Scalars['String']>;\n};\n\n\nexport type QueryFeatureArgs = {\n  id: Scalars['ID'];\n  publicationState?: Maybe<PublicationState>;\n};\n\n\nexport type QueryFeaturesArgs = {\n  sort?: Maybe<Scalars['String']>;\n  limit?: Maybe<Scalars['Int']>;\n  start?: Maybe<Scalars['Int']>;\n  where?: Maybe<Scalars['JSON']>;\n  publicationState?: Maybe<PublicationState>;\n  locale?: Maybe<Scalars['String']>;\n};\n\n\nexport type QueryFeaturesConnectionArgs = {\n  sort?: Maybe<Scalars['String']>;\n  limit?: Maybe<Scalars['Int']>;\n  start?: Maybe<Scalars['Int']>;\n  where?: Maybe<Scalars['JSON']>;\n  locale?: Maybe<Scalars['String']>;\n};\n\n\nexport type QueryHomeBannerArgs = {\n  publicationState?: Maybe<PublicationState>;\n};\n\n\nexport type QueryHotelArgs = {\n  id: Scalars['ID'];\n  publicationState?: Maybe<PublicationState>;\n};\n\n\nexport type QueryHotelsArgs = {\n  sort?: Maybe<Scalars['String']>;\n  limit?: Maybe<Scalars['Int']>;\n  start?: Maybe<Scalars['Int']>;\n  where?: Maybe<Scalars['JSON']>;\n  publicationState?: Maybe<PublicationState>;\n};\n\n\nexport type QueryHotelsConnectionArgs = {\n  sort?: Maybe<Scalars['String']>;\n  limit?: Maybe<Scalars['Int']>;\n  start?: Maybe<Scalars['Int']>;\n  where?: Maybe<Scalars['JSON']>;\n};\n\n\nexport type QueryLocationArgs = {\n  id: Scalars['ID'];\n  publicationState?: Maybe<PublicationState>;\n};\n\n\nexport type QueryLocationsArgs = {\n  sort?: Maybe<Scalars['String']>;\n  limit?: Maybe<Scalars['Int']>;\n  start?: Maybe<Scalars['Int']>;\n  where?: Maybe<Scalars['JSON']>;\n  publicationState?: Maybe<PublicationState>;\n  locale?: Maybe<Scalars['String']>;\n};\n\n\nexport type QueryLocationsConnectionArgs = {\n  sort?: Maybe<Scalars['String']>;\n  limit?: Maybe<Scalars['Int']>;\n  start?: Maybe<Scalars['Int']>;\n  where?: Maybe<Scalars['JSON']>;\n  locale?: Maybe<Scalars['String']>;\n};\n\n\nexport type QueryPartnerArgs = {\n  id: Scalars['ID'];\n  publicationState?: Maybe<PublicationState>;\n};\n\n\nexport type QueryPartnersArgs = {\n  sort?: Maybe<Scalars['String']>;\n  limit?: Maybe<Scalars['Int']>;\n  start?: Maybe<Scalars['Int']>;\n  where?: Maybe<Scalars['JSON']>;\n  publicationState?: Maybe<PublicationState>;\n};\n\n\nexport type QueryPartnersConnectionArgs = {\n  sort?: Maybe<Scalars['String']>;\n  limit?: Maybe<Scalars['Int']>;\n  start?: Maybe<Scalars['Int']>;\n  where?: Maybe<Scalars['JSON']>;\n};\n\n\nexport type QueryReviewArgs = {\n  id: Scalars['ID'];\n  publicationState?: Maybe<PublicationState>;\n};\n\n\nexport type QueryReviewsArgs = {\n  sort?: Maybe<Scalars['String']>;\n  limit?: Maybe<Scalars['Int']>;\n  start?: Maybe<Scalars['Int']>;\n  where?: Maybe<Scalars['JSON']>;\n  publicationState?: Maybe<PublicationState>;\n};\n\n\nexport type QueryReviewsConnectionArgs = {\n  sort?: Maybe<Scalars['String']>;\n  limit?: Maybe<Scalars['Int']>;\n  start?: Maybe<Scalars['Int']>;\n  where?: Maybe<Scalars['JSON']>;\n};\n\n\nexport type QuerySubscriberArgs = {\n  id: Scalars['ID'];\n  publicationState?: Maybe<PublicationState>;\n};\n\n\nexport type QuerySubscribersArgs = {\n  sort?: Maybe<Scalars['String']>;\n  limit?: Maybe<Scalars['Int']>;\n  start?: Maybe<Scalars['Int']>;\n  where?: Maybe<Scalars['JSON']>;\n  publicationState?: Maybe<PublicationState>;\n};\n\n\nexport type QuerySubscribersConnectionArgs = {\n  sort?: Maybe<Scalars['String']>;\n  limit?: Maybe<Scalars['Int']>;\n  start?: Maybe<Scalars['Int']>;\n  where?: Maybe<Scalars['JSON']>;\n};\n\n\nexport type QueryTripArgs = {\n  id: Scalars['ID'];\n  publicationState?: Maybe<PublicationState>;\n};\n\n\nexport type QueryTripsArgs = {\n  sort?: Maybe<Scalars['String']>;\n  limit?: Maybe<Scalars['Int']>;\n  start?: Maybe<Scalars['Int']>;\n  where?: Maybe<Scalars['JSON']>;\n  publicationState?: Maybe<PublicationState>;\n  locale?: Maybe<Scalars['String']>;\n};\n\n\nexport type QueryTripsConnectionArgs = {\n  sort?: Maybe<Scalars['String']>;\n  limit?: Maybe<Scalars['Int']>;\n  start?: Maybe<Scalars['Int']>;\n  where?: Maybe<Scalars['JSON']>;\n  locale?: Maybe<Scalars['String']>;\n};\n\n\nexport type QueryFilesArgs = {\n  sort?: Maybe<Scalars['String']>;\n  limit?: Maybe<Scalars['Int']>;\n  start?: Maybe<Scalars['Int']>;\n  where?: Maybe<Scalars['JSON']>;\n  publicationState?: Maybe<PublicationState>;\n};\n\n\nexport type QueryFilesConnectionArgs = {\n  sort?: Maybe<Scalars['String']>;\n  limit?: Maybe<Scalars['Int']>;\n  start?: Maybe<Scalars['Int']>;\n  where?: Maybe<Scalars['JSON']>;\n};\n\n\nexport type QueryRoleArgs = {\n  id: Scalars['ID'];\n  publicationState?: Maybe<PublicationState>;\n};\n\n\nexport type QueryRolesArgs = {\n  sort?: Maybe<Scalars['String']>;\n  limit?: Maybe<Scalars['Int']>;\n  start?: Maybe<Scalars['Int']>;\n  where?: Maybe<Scalars['JSON']>;\n  publicationState?: Maybe<PublicationState>;\n};\n\n\nexport type QueryRolesConnectionArgs = {\n  sort?: Maybe<Scalars['String']>;\n  limit?: Maybe<Scalars['Int']>;\n  start?: Maybe<Scalars['Int']>;\n  where?: Maybe<Scalars['JSON']>;\n};\n\n\nexport type QueryUserArgs = {\n  id: Scalars['ID'];\n  publicationState?: Maybe<PublicationState>;\n};\n\n\nexport type QueryUsersArgs = {\n  sort?: Maybe<Scalars['String']>;\n  limit?: Maybe<Scalars['Int']>;\n  start?: Maybe<Scalars['Int']>;\n  where?: Maybe<Scalars['JSON']>;\n  publicationState?: Maybe<PublicationState>;\n};\n\n\nexport type QueryUsersConnectionArgs = {\n  sort?: Maybe<Scalars['String']>;\n  limit?: Maybe<Scalars['Int']>;\n  start?: Maybe<Scalars['Int']>;\n  where?: Maybe<Scalars['JSON']>;\n};\n\nexport type Review = {\n  __typename?: 'Review';\n  id: Scalars['ID'];\n  _id: Scalars['ID'];\n  createdAt: Scalars['DateTime'];\n  updatedAt: Scalars['DateTime'];\n  text?: Maybe<Scalars['String']>;\n  rating: Scalars['Float'];\n  author?: Maybe<UsersPermissionsUser>;\n  active?: Maybe<Scalars['Boolean']>;\n  trip?: Maybe<Trips>;\n  published_at?: Maybe<Scalars['DateTime']>;\n};\n\nexport type ReviewAggregator = {\n  __typename?: 'ReviewAggregator';\n  count?: Maybe<Scalars['Int']>;\n  totalCount?: Maybe<Scalars['Int']>;\n  sum?: Maybe<ReviewAggregatorSum>;\n  avg?: Maybe<ReviewAggregatorAvg>;\n  min?: Maybe<ReviewAggregatorMin>;\n  max?: Maybe<ReviewAggregatorMax>;\n};\n\nexport type ReviewAggregatorAvg = {\n  __typename?: 'ReviewAggregatorAvg';\n  rating?: Maybe<Scalars['Float']>;\n};\n\nexport type ReviewAggregatorMax = {\n  __typename?: 'ReviewAggregatorMax';\n  rating?: Maybe<Scalars['Float']>;\n};\n\nexport type ReviewAggregatorMin = {\n  __typename?: 'ReviewAggregatorMin';\n  rating?: Maybe<Scalars['Float']>;\n};\n\nexport type ReviewAggregatorSum = {\n  __typename?: 'ReviewAggregatorSum';\n  rating?: Maybe<Scalars['Float']>;\n};\n\nexport type ReviewConnection = {\n  __typename?: 'ReviewConnection';\n  values?: Maybe<Array<Maybe<Review>>>;\n  groupBy?: Maybe<ReviewGroupBy>;\n  aggregate?: Maybe<ReviewAggregator>;\n};\n\nexport type ReviewConnectionActive = {\n  __typename?: 'ReviewConnectionActive';\n  key?: Maybe<Scalars['Boolean']>;\n  connection?: Maybe<ReviewConnection>;\n};\n\nexport type ReviewConnectionAuthor = {\n  __typename?: 'ReviewConnectionAuthor';\n  key?: Maybe<Scalars['ID']>;\n  connection?: Maybe<ReviewConnection>;\n};\n\nexport type ReviewConnectionCreatedAt = {\n  __typename?: 'ReviewConnectionCreatedAt';\n  key?: Maybe<Scalars['DateTime']>;\n  connection?: Maybe<ReviewConnection>;\n};\n\nexport type ReviewConnectionId = {\n  __typename?: 'ReviewConnectionId';\n  key?: Maybe<Scalars['ID']>;\n  connection?: Maybe<ReviewConnection>;\n};\n\nexport type ReviewConnectionPublished_At = {\n  __typename?: 'ReviewConnectionPublished_at';\n  key?: Maybe<Scalars['DateTime']>;\n  connection?: Maybe<ReviewConnection>;\n};\n\nexport type ReviewConnectionRating = {\n  __typename?: 'ReviewConnectionRating';\n  key?: Maybe<Scalars['Float']>;\n  connection?: Maybe<ReviewConnection>;\n};\n\nexport type ReviewConnectionText = {\n  __typename?: 'ReviewConnectionText';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<ReviewConnection>;\n};\n\nexport type ReviewConnectionTrip = {\n  __typename?: 'ReviewConnectionTrip';\n  key?: Maybe<Scalars['ID']>;\n  connection?: Maybe<ReviewConnection>;\n};\n\nexport type ReviewConnectionUpdatedAt = {\n  __typename?: 'ReviewConnectionUpdatedAt';\n  key?: Maybe<Scalars['DateTime']>;\n  connection?: Maybe<ReviewConnection>;\n};\n\nexport type ReviewConnection_Id = {\n  __typename?: 'ReviewConnection_id';\n  key?: Maybe<Scalars['ID']>;\n  connection?: Maybe<ReviewConnection>;\n};\n\nexport type ReviewGroupBy = {\n  __typename?: 'ReviewGroupBy';\n  id?: Maybe<Array<Maybe<ReviewConnectionId>>>;\n  _id?: Maybe<Array<Maybe<ReviewConnection_Id>>>;\n  createdAt?: Maybe<Array<Maybe<ReviewConnectionCreatedAt>>>;\n  updatedAt?: Maybe<Array<Maybe<ReviewConnectionUpdatedAt>>>;\n  text?: Maybe<Array<Maybe<ReviewConnectionText>>>;\n  rating?: Maybe<Array<Maybe<ReviewConnectionRating>>>;\n  author?: Maybe<Array<Maybe<ReviewConnectionAuthor>>>;\n  active?: Maybe<Array<Maybe<ReviewConnectionActive>>>;\n  trip?: Maybe<Array<Maybe<ReviewConnectionTrip>>>;\n  published_at?: Maybe<Array<Maybe<ReviewConnectionPublished_At>>>;\n};\n\nexport type ReviewInput = {\n  text?: Maybe<Scalars['String']>;\n  rating: Scalars['Float'];\n  author?: Maybe<Scalars['ID']>;\n  active?: Maybe<Scalars['Boolean']>;\n  trip?: Maybe<Scalars['ID']>;\n  published_at?: Maybe<Scalars['DateTime']>;\n  created_by?: Maybe<Scalars['ID']>;\n  updated_by?: Maybe<Scalars['ID']>;\n};\n\nexport type RoleInput = {\n  name: Scalars['String'];\n  description?: Maybe<Scalars['String']>;\n  type?: Maybe<Scalars['String']>;\n  permissions?: Maybe<Array<Maybe<Scalars['ID']>>>;\n  users?: Maybe<Array<Maybe<Scalars['ID']>>>;\n  created_by?: Maybe<Scalars['ID']>;\n  updated_by?: Maybe<Scalars['ID']>;\n};\n\nexport type SubscriberInput = {\n  email: Scalars['String'];\n  published_at?: Maybe<Scalars['DateTime']>;\n  created_by?: Maybe<Scalars['ID']>;\n  updated_by?: Maybe<Scalars['ID']>;\n};\n\nexport type Subscribers = {\n  __typename?: 'Subscribers';\n  id: Scalars['ID'];\n  _id: Scalars['ID'];\n  createdAt: Scalars['DateTime'];\n  updatedAt: Scalars['DateTime'];\n  email: Scalars['String'];\n  published_at?: Maybe<Scalars['DateTime']>;\n};\n\nexport type SubscribersAggregator = {\n  __typename?: 'SubscribersAggregator';\n  count?: Maybe<Scalars['Int']>;\n  totalCount?: Maybe<Scalars['Int']>;\n};\n\nexport type SubscribersConnection = {\n  __typename?: 'SubscribersConnection';\n  values?: Maybe<Array<Maybe<Subscribers>>>;\n  groupBy?: Maybe<SubscribersGroupBy>;\n  aggregate?: Maybe<SubscribersAggregator>;\n};\n\nexport type SubscribersConnectionCreatedAt = {\n  __typename?: 'SubscribersConnectionCreatedAt';\n  key?: Maybe<Scalars['DateTime']>;\n  connection?: Maybe<SubscribersConnection>;\n};\n\nexport type SubscribersConnectionEmail = {\n  __typename?: 'SubscribersConnectionEmail';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<SubscribersConnection>;\n};\n\nexport type SubscribersConnectionId = {\n  __typename?: 'SubscribersConnectionId';\n  key?: Maybe<Scalars['ID']>;\n  connection?: Maybe<SubscribersConnection>;\n};\n\nexport type SubscribersConnectionPublished_At = {\n  __typename?: 'SubscribersConnectionPublished_at';\n  key?: Maybe<Scalars['DateTime']>;\n  connection?: Maybe<SubscribersConnection>;\n};\n\nexport type SubscribersConnectionUpdatedAt = {\n  __typename?: 'SubscribersConnectionUpdatedAt';\n  key?: Maybe<Scalars['DateTime']>;\n  connection?: Maybe<SubscribersConnection>;\n};\n\nexport type SubscribersConnection_Id = {\n  __typename?: 'SubscribersConnection_id';\n  key?: Maybe<Scalars['ID']>;\n  connection?: Maybe<SubscribersConnection>;\n};\n\nexport type SubscribersGroupBy = {\n  __typename?: 'SubscribersGroupBy';\n  id?: Maybe<Array<Maybe<SubscribersConnectionId>>>;\n  _id?: Maybe<Array<Maybe<SubscribersConnection_Id>>>;\n  createdAt?: Maybe<Array<Maybe<SubscribersConnectionCreatedAt>>>;\n  updatedAt?: Maybe<Array<Maybe<SubscribersConnectionUpdatedAt>>>;\n  email?: Maybe<Array<Maybe<SubscribersConnectionEmail>>>;\n  published_at?: Maybe<Array<Maybe<SubscribersConnectionPublished_At>>>;\n};\n\n\nexport type TripInput = {\n  name: Scalars['String'];\n  previewImage?: Maybe<Scalars['ID']>;\n  active?: Maybe<Scalars['Boolean']>;\n  trip_type: Enum_Trips_Trip_Type;\n  description?: Maybe<Scalars['String']>;\n  duration: Scalars['Int'];\n  partner?: Maybe<Scalars['ID']>;\n  currency?: Maybe<Enum_Trips_Currency>;\n  city?: Maybe<Scalars['ID']>;\n  features?: Maybe<Array<ComponentFeatureFeatureInput>>;\n  basePrice: Scalars['Int'];\n  basePeopleCount: Scalars['Int'];\n  discount?: Maybe<Scalars['Float']>;\n  travelType: Enum_Trips_Traveltype;\n  hotel?: Maybe<Scalars['ID']>;\n  plan?: Maybe<Array<ComponentTimelineTimelineInput>>;\n  sequence: Scalars['String'];\n  localizations?: Maybe<Array<Maybe<Scalars['ID']>>>;\n  locale?: Maybe<Scalars['String']>;\n  published_at?: Maybe<Scalars['DateTime']>;\n  created_by?: Maybe<Scalars['ID']>;\n  updated_by?: Maybe<Scalars['ID']>;\n};\n\nexport type Trips = {\n  __typename?: 'Trips';\n  id: Scalars['ID'];\n  _id: Scalars['ID'];\n  createdAt: Scalars['DateTime'];\n  updatedAt: Scalars['DateTime'];\n  name: Scalars['String'];\n  previewImage?: Maybe<UploadFile>;\n  active?: Maybe<Scalars['Boolean']>;\n  trip_type: Enum_Trips_Trip_Type;\n  description?: Maybe<Scalars['String']>;\n  duration: Scalars['Int'];\n  partner?: Maybe<Partner>;\n  currency?: Maybe<Enum_Trips_Currency>;\n  city?: Maybe<City>;\n  features?: Maybe<Array<Maybe<ComponentFeatureFeature>>>;\n  basePrice: Scalars['Int'];\n  basePeopleCount: Scalars['Int'];\n  discount?: Maybe<Scalars['Float']>;\n  travelType: Enum_Trips_Traveltype;\n  hotel?: Maybe<Hotels>;\n  plan?: Maybe<Array<Maybe<ComponentTimelineTimeline>>>;\n  locale?: Maybe<Scalars['String']>;\n  published_at?: Maybe<Scalars['DateTime']>;\n  localizations?: Maybe<Array<Maybe<Trips>>>;\n};\n\n\nexport type TripsLocalizationsArgs = {\n  sort?: Maybe<Scalars['String']>;\n  limit?: Maybe<Scalars['Int']>;\n  start?: Maybe<Scalars['Int']>;\n  where?: Maybe<Scalars['JSON']>;\n};\n\nexport type TripsAggregator = {\n  __typename?: 'TripsAggregator';\n  count?: Maybe<Scalars['Int']>;\n  totalCount?: Maybe<Scalars['Int']>;\n  sum?: Maybe<TripsAggregatorSum>;\n  avg?: Maybe<TripsAggregatorAvg>;\n  min?: Maybe<TripsAggregatorMin>;\n  max?: Maybe<TripsAggregatorMax>;\n};\n\nexport type TripsAggregatorAvg = {\n  __typename?: 'TripsAggregatorAvg';\n  duration?: Maybe<Scalars['Float']>;\n  basePrice?: Maybe<Scalars['Float']>;\n  basePeopleCount?: Maybe<Scalars['Float']>;\n  discount?: Maybe<Scalars['Float']>;\n};\n\nexport type TripsAggregatorMax = {\n  __typename?: 'TripsAggregatorMax';\n  duration?: Maybe<Scalars['Float']>;\n  basePrice?: Maybe<Scalars['Float']>;\n  basePeopleCount?: Maybe<Scalars['Float']>;\n  discount?: Maybe<Scalars['Float']>;\n};\n\nexport type TripsAggregatorMin = {\n  __typename?: 'TripsAggregatorMin';\n  duration?: Maybe<Scalars['Float']>;\n  basePrice?: Maybe<Scalars['Float']>;\n  basePeopleCount?: Maybe<Scalars['Float']>;\n  discount?: Maybe<Scalars['Float']>;\n};\n\nexport type TripsAggregatorSum = {\n  __typename?: 'TripsAggregatorSum';\n  duration?: Maybe<Scalars['Float']>;\n  basePrice?: Maybe<Scalars['Float']>;\n  basePeopleCount?: Maybe<Scalars['Float']>;\n  discount?: Maybe<Scalars['Float']>;\n};\n\nexport type TripsConnection = {\n  __typename?: 'TripsConnection';\n  values?: Maybe<Array<Maybe<Trips>>>;\n  groupBy?: Maybe<TripsGroupBy>;\n  aggregate?: Maybe<TripsAggregator>;\n};\n\nexport type TripsConnectionActive = {\n  __typename?: 'TripsConnectionActive';\n  key?: Maybe<Scalars['Boolean']>;\n  connection?: Maybe<TripsConnection>;\n};\n\nexport type TripsConnectionBasePeopleCount = {\n  __typename?: 'TripsConnectionBasePeopleCount';\n  key?: Maybe<Scalars['Int']>;\n  connection?: Maybe<TripsConnection>;\n};\n\nexport type TripsConnectionBasePrice = {\n  __typename?: 'TripsConnectionBasePrice';\n  key?: Maybe<Scalars['Int']>;\n  connection?: Maybe<TripsConnection>;\n};\n\nexport type TripsConnectionCity = {\n  __typename?: 'TripsConnectionCity';\n  key?: Maybe<Scalars['ID']>;\n  connection?: Maybe<TripsConnection>;\n};\n\nexport type TripsConnectionCreatedAt = {\n  __typename?: 'TripsConnectionCreatedAt';\n  key?: Maybe<Scalars['DateTime']>;\n  connection?: Maybe<TripsConnection>;\n};\n\nexport type TripsConnectionCurrency = {\n  __typename?: 'TripsConnectionCurrency';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<TripsConnection>;\n};\n\nexport type TripsConnectionDescription = {\n  __typename?: 'TripsConnectionDescription';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<TripsConnection>;\n};\n\nexport type TripsConnectionDiscount = {\n  __typename?: 'TripsConnectionDiscount';\n  key?: Maybe<Scalars['Float']>;\n  connection?: Maybe<TripsConnection>;\n};\n\nexport type TripsConnectionDuration = {\n  __typename?: 'TripsConnectionDuration';\n  key?: Maybe<Scalars['Int']>;\n  connection?: Maybe<TripsConnection>;\n};\n\nexport type TripsConnectionHotel = {\n  __typename?: 'TripsConnectionHotel';\n  key?: Maybe<Scalars['ID']>;\n  connection?: Maybe<TripsConnection>;\n};\n\nexport type TripsConnectionId = {\n  __typename?: 'TripsConnectionId';\n  key?: Maybe<Scalars['ID']>;\n  connection?: Maybe<TripsConnection>;\n};\n\nexport type TripsConnectionLocale = {\n  __typename?: 'TripsConnectionLocale';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<TripsConnection>;\n};\n\nexport type TripsConnectionName = {\n  __typename?: 'TripsConnectionName';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<TripsConnection>;\n};\n\nexport type TripsConnectionPartner = {\n  __typename?: 'TripsConnectionPartner';\n  key?: Maybe<Scalars['ID']>;\n  connection?: Maybe<TripsConnection>;\n};\n\nexport type TripsConnectionPreviewImage = {\n  __typename?: 'TripsConnectionPreviewImage';\n  key?: Maybe<Scalars['ID']>;\n  connection?: Maybe<TripsConnection>;\n};\n\nexport type TripsConnectionPublished_At = {\n  __typename?: 'TripsConnectionPublished_at';\n  key?: Maybe<Scalars['DateTime']>;\n  connection?: Maybe<TripsConnection>;\n};\n\nexport type TripsConnectionTravelType = {\n  __typename?: 'TripsConnectionTravelType';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<TripsConnection>;\n};\n\nexport type TripsConnectionTrip_Type = {\n  __typename?: 'TripsConnectionTrip_type';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<TripsConnection>;\n};\n\nexport type TripsConnectionUpdatedAt = {\n  __typename?: 'TripsConnectionUpdatedAt';\n  key?: Maybe<Scalars['DateTime']>;\n  connection?: Maybe<TripsConnection>;\n};\n\nexport type TripsConnection_Id = {\n  __typename?: 'TripsConnection_id';\n  key?: Maybe<Scalars['ID']>;\n  connection?: Maybe<TripsConnection>;\n};\n\nexport type TripsGroupBy = {\n  __typename?: 'TripsGroupBy';\n  id?: Maybe<Array<Maybe<TripsConnectionId>>>;\n  _id?: Maybe<Array<Maybe<TripsConnection_Id>>>;\n  createdAt?: Maybe<Array<Maybe<TripsConnectionCreatedAt>>>;\n  updatedAt?: Maybe<Array<Maybe<TripsConnectionUpdatedAt>>>;\n  name?: Maybe<Array<Maybe<TripsConnectionName>>>;\n  previewImage?: Maybe<Array<Maybe<TripsConnectionPreviewImage>>>;\n  active?: Maybe<Array<Maybe<TripsConnectionActive>>>;\n  trip_type?: Maybe<Array<Maybe<TripsConnectionTrip_Type>>>;\n  description?: Maybe<Array<Maybe<TripsConnectionDescription>>>;\n  duration?: Maybe<Array<Maybe<TripsConnectionDuration>>>;\n  partner?: Maybe<Array<Maybe<TripsConnectionPartner>>>;\n  currency?: Maybe<Array<Maybe<TripsConnectionCurrency>>>;\n  city?: Maybe<Array<Maybe<TripsConnectionCity>>>;\n  basePrice?: Maybe<Array<Maybe<TripsConnectionBasePrice>>>;\n  basePeopleCount?: Maybe<Array<Maybe<TripsConnectionBasePeopleCount>>>;\n  discount?: Maybe<Array<Maybe<TripsConnectionDiscount>>>;\n  travelType?: Maybe<Array<Maybe<TripsConnectionTravelType>>>;\n  hotel?: Maybe<Array<Maybe<TripsConnectionHotel>>>;\n  locale?: Maybe<Array<Maybe<TripsConnectionLocale>>>;\n  published_at?: Maybe<Array<Maybe<TripsConnectionPublished_At>>>;\n};\n\n\nexport type UploadFile = {\n  __typename?: 'UploadFile';\n  id: Scalars['ID'];\n  _id: Scalars['ID'];\n  createdAt: Scalars['DateTime'];\n  updatedAt: Scalars['DateTime'];\n  name: Scalars['String'];\n  alternativeText?: Maybe<Scalars['String']>;\n  caption?: Maybe<Scalars['String']>;\n  width?: Maybe<Scalars['Int']>;\n  height?: Maybe<Scalars['Int']>;\n  formats?: Maybe<Scalars['JSON']>;\n  hash: Scalars['String'];\n  ext?: Maybe<Scalars['String']>;\n  mime: Scalars['String'];\n  size: Scalars['Float'];\n  url: Scalars['String'];\n  previewUrl?: Maybe<Scalars['String']>;\n  provider: Scalars['String'];\n  provider_metadata?: Maybe<Scalars['JSON']>;\n  related?: Maybe<Array<Maybe<Morph>>>;\n};\n\n\nexport type UploadFileRelatedArgs = {\n  sort?: Maybe<Scalars['String']>;\n  limit?: Maybe<Scalars['Int']>;\n  start?: Maybe<Scalars['Int']>;\n  where?: Maybe<Scalars['JSON']>;\n};\n\nexport type UploadFileAggregator = {\n  __typename?: 'UploadFileAggregator';\n  count?: Maybe<Scalars['Int']>;\n  totalCount?: Maybe<Scalars['Int']>;\n  sum?: Maybe<UploadFileAggregatorSum>;\n  avg?: Maybe<UploadFileAggregatorAvg>;\n  min?: Maybe<UploadFileAggregatorMin>;\n  max?: Maybe<UploadFileAggregatorMax>;\n};\n\nexport type UploadFileAggregatorAvg = {\n  __typename?: 'UploadFileAggregatorAvg';\n  width?: Maybe<Scalars['Float']>;\n  height?: Maybe<Scalars['Float']>;\n  size?: Maybe<Scalars['Float']>;\n};\n\nexport type UploadFileAggregatorMax = {\n  __typename?: 'UploadFileAggregatorMax';\n  width?: Maybe<Scalars['Float']>;\n  height?: Maybe<Scalars['Float']>;\n  size?: Maybe<Scalars['Float']>;\n};\n\nexport type UploadFileAggregatorMin = {\n  __typename?: 'UploadFileAggregatorMin';\n  width?: Maybe<Scalars['Float']>;\n  height?: Maybe<Scalars['Float']>;\n  size?: Maybe<Scalars['Float']>;\n};\n\nexport type UploadFileAggregatorSum = {\n  __typename?: 'UploadFileAggregatorSum';\n  width?: Maybe<Scalars['Float']>;\n  height?: Maybe<Scalars['Float']>;\n  size?: Maybe<Scalars['Float']>;\n};\n\nexport type UploadFileConnection = {\n  __typename?: 'UploadFileConnection';\n  values?: Maybe<Array<Maybe<UploadFile>>>;\n  groupBy?: Maybe<UploadFileGroupBy>;\n  aggregate?: Maybe<UploadFileAggregator>;\n};\n\nexport type UploadFileConnectionAlternativeText = {\n  __typename?: 'UploadFileConnectionAlternativeText';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<UploadFileConnection>;\n};\n\nexport type UploadFileConnectionCaption = {\n  __typename?: 'UploadFileConnectionCaption';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<UploadFileConnection>;\n};\n\nexport type UploadFileConnectionCreatedAt = {\n  __typename?: 'UploadFileConnectionCreatedAt';\n  key?: Maybe<Scalars['DateTime']>;\n  connection?: Maybe<UploadFileConnection>;\n};\n\nexport type UploadFileConnectionExt = {\n  __typename?: 'UploadFileConnectionExt';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<UploadFileConnection>;\n};\n\nexport type UploadFileConnectionFormats = {\n  __typename?: 'UploadFileConnectionFormats';\n  key?: Maybe<Scalars['JSON']>;\n  connection?: Maybe<UploadFileConnection>;\n};\n\nexport type UploadFileConnectionHash = {\n  __typename?: 'UploadFileConnectionHash';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<UploadFileConnection>;\n};\n\nexport type UploadFileConnectionHeight = {\n  __typename?: 'UploadFileConnectionHeight';\n  key?: Maybe<Scalars['Int']>;\n  connection?: Maybe<UploadFileConnection>;\n};\n\nexport type UploadFileConnectionId = {\n  __typename?: 'UploadFileConnectionId';\n  key?: Maybe<Scalars['ID']>;\n  connection?: Maybe<UploadFileConnection>;\n};\n\nexport type UploadFileConnectionMime = {\n  __typename?: 'UploadFileConnectionMime';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<UploadFileConnection>;\n};\n\nexport type UploadFileConnectionName = {\n  __typename?: 'UploadFileConnectionName';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<UploadFileConnection>;\n};\n\nexport type UploadFileConnectionPreviewUrl = {\n  __typename?: 'UploadFileConnectionPreviewUrl';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<UploadFileConnection>;\n};\n\nexport type UploadFileConnectionProvider = {\n  __typename?: 'UploadFileConnectionProvider';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<UploadFileConnection>;\n};\n\nexport type UploadFileConnectionProvider_Metadata = {\n  __typename?: 'UploadFileConnectionProvider_metadata';\n  key?: Maybe<Scalars['JSON']>;\n  connection?: Maybe<UploadFileConnection>;\n};\n\nexport type UploadFileConnectionSize = {\n  __typename?: 'UploadFileConnectionSize';\n  key?: Maybe<Scalars['Float']>;\n  connection?: Maybe<UploadFileConnection>;\n};\n\nexport type UploadFileConnectionUpdatedAt = {\n  __typename?: 'UploadFileConnectionUpdatedAt';\n  key?: Maybe<Scalars['DateTime']>;\n  connection?: Maybe<UploadFileConnection>;\n};\n\nexport type UploadFileConnectionUrl = {\n  __typename?: 'UploadFileConnectionUrl';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<UploadFileConnection>;\n};\n\nexport type UploadFileConnectionWidth = {\n  __typename?: 'UploadFileConnectionWidth';\n  key?: Maybe<Scalars['Int']>;\n  connection?: Maybe<UploadFileConnection>;\n};\n\nexport type UploadFileConnection_Id = {\n  __typename?: 'UploadFileConnection_id';\n  key?: Maybe<Scalars['ID']>;\n  connection?: Maybe<UploadFileConnection>;\n};\n\nexport type UploadFileGroupBy = {\n  __typename?: 'UploadFileGroupBy';\n  id?: Maybe<Array<Maybe<UploadFileConnectionId>>>;\n  _id?: Maybe<Array<Maybe<UploadFileConnection_Id>>>;\n  createdAt?: Maybe<Array<Maybe<UploadFileConnectionCreatedAt>>>;\n  updatedAt?: Maybe<Array<Maybe<UploadFileConnectionUpdatedAt>>>;\n  name?: Maybe<Array<Maybe<UploadFileConnectionName>>>;\n  alternativeText?: Maybe<Array<Maybe<UploadFileConnectionAlternativeText>>>;\n  caption?: Maybe<Array<Maybe<UploadFileConnectionCaption>>>;\n  width?: Maybe<Array<Maybe<UploadFileConnectionWidth>>>;\n  height?: Maybe<Array<Maybe<UploadFileConnectionHeight>>>;\n  formats?: Maybe<Array<Maybe<UploadFileConnectionFormats>>>;\n  hash?: Maybe<Array<Maybe<UploadFileConnectionHash>>>;\n  ext?: Maybe<Array<Maybe<UploadFileConnectionExt>>>;\n  mime?: Maybe<Array<Maybe<UploadFileConnectionMime>>>;\n  size?: Maybe<Array<Maybe<UploadFileConnectionSize>>>;\n  url?: Maybe<Array<Maybe<UploadFileConnectionUrl>>>;\n  previewUrl?: Maybe<Array<Maybe<UploadFileConnectionPreviewUrl>>>;\n  provider?: Maybe<Array<Maybe<UploadFileConnectionProvider>>>;\n  provider_metadata?: Maybe<Array<Maybe<UploadFileConnectionProvider_Metadata>>>;\n};\n\nexport type UserInput = {\n  username: Scalars['String'];\n  email: Scalars['String'];\n  provider?: Maybe<Scalars['String']>;\n  password?: Maybe<Scalars['String']>;\n  resetPasswordToken?: Maybe<Scalars['String']>;\n  confirmationToken?: Maybe<Scalars['String']>;\n  confirmed?: Maybe<Scalars['Boolean']>;\n  blocked?: Maybe<Scalars['Boolean']>;\n  role?: Maybe<Scalars['ID']>;\n  created_by?: Maybe<Scalars['ID']>;\n  updated_by?: Maybe<Scalars['ID']>;\n};\n\nexport type UserPermissionsPasswordPayload = {\n  __typename?: 'UserPermissionsPasswordPayload';\n  ok: Scalars['Boolean'];\n};\n\nexport type UsersPermissionsLoginInput = {\n  identifier: Scalars['String'];\n  password: Scalars['String'];\n  provider?: Maybe<Scalars['String']>;\n};\n\nexport type UsersPermissionsLoginPayload = {\n  __typename?: 'UsersPermissionsLoginPayload';\n  jwt?: Maybe<Scalars['String']>;\n  user: UsersPermissionsMe;\n};\n\nexport type UsersPermissionsMe = {\n  __typename?: 'UsersPermissionsMe';\n  id: Scalars['ID'];\n  username: Scalars['String'];\n  email: Scalars['String'];\n  confirmed?: Maybe<Scalars['Boolean']>;\n  blocked?: Maybe<Scalars['Boolean']>;\n  role?: Maybe<UsersPermissionsMeRole>;\n};\n\nexport type UsersPermissionsMeRole = {\n  __typename?: 'UsersPermissionsMeRole';\n  id: Scalars['ID'];\n  name: Scalars['String'];\n  description?: Maybe<Scalars['String']>;\n  type?: Maybe<Scalars['String']>;\n};\n\nexport type UsersPermissionsPermission = {\n  __typename?: 'UsersPermissionsPermission';\n  id: Scalars['ID'];\n  _id: Scalars['ID'];\n  type: Scalars['String'];\n  controller: Scalars['String'];\n  action: Scalars['String'];\n  enabled: Scalars['Boolean'];\n  policy?: Maybe<Scalars['String']>;\n  role?: Maybe<UsersPermissionsRole>;\n};\n\nexport type UsersPermissionsRegisterInput = {\n  username: Scalars['String'];\n  email: Scalars['String'];\n  password: Scalars['String'];\n};\n\nexport type UsersPermissionsRole = {\n  __typename?: 'UsersPermissionsRole';\n  id: Scalars['ID'];\n  _id: Scalars['ID'];\n  name: Scalars['String'];\n  description?: Maybe<Scalars['String']>;\n  type?: Maybe<Scalars['String']>;\n  permissions?: Maybe<Array<Maybe<UsersPermissionsPermission>>>;\n  users?: Maybe<Array<Maybe<UsersPermissionsUser>>>;\n};\n\n\nexport type UsersPermissionsRolePermissionsArgs = {\n  sort?: Maybe<Scalars['String']>;\n  limit?: Maybe<Scalars['Int']>;\n  start?: Maybe<Scalars['Int']>;\n  where?: Maybe<Scalars['JSON']>;\n};\n\n\nexport type UsersPermissionsRoleUsersArgs = {\n  sort?: Maybe<Scalars['String']>;\n  limit?: Maybe<Scalars['Int']>;\n  start?: Maybe<Scalars['Int']>;\n  where?: Maybe<Scalars['JSON']>;\n};\n\nexport type UsersPermissionsRoleAggregator = {\n  __typename?: 'UsersPermissionsRoleAggregator';\n  count?: Maybe<Scalars['Int']>;\n  totalCount?: Maybe<Scalars['Int']>;\n};\n\nexport type UsersPermissionsRoleConnection = {\n  __typename?: 'UsersPermissionsRoleConnection';\n  values?: Maybe<Array<Maybe<UsersPermissionsRole>>>;\n  groupBy?: Maybe<UsersPermissionsRoleGroupBy>;\n  aggregate?: Maybe<UsersPermissionsRoleAggregator>;\n};\n\nexport type UsersPermissionsRoleConnectionDescription = {\n  __typename?: 'UsersPermissionsRoleConnectionDescription';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<UsersPermissionsRoleConnection>;\n};\n\nexport type UsersPermissionsRoleConnectionId = {\n  __typename?: 'UsersPermissionsRoleConnectionId';\n  key?: Maybe<Scalars['ID']>;\n  connection?: Maybe<UsersPermissionsRoleConnection>;\n};\n\nexport type UsersPermissionsRoleConnectionName = {\n  __typename?: 'UsersPermissionsRoleConnectionName';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<UsersPermissionsRoleConnection>;\n};\n\nexport type UsersPermissionsRoleConnectionType = {\n  __typename?: 'UsersPermissionsRoleConnectionType';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<UsersPermissionsRoleConnection>;\n};\n\nexport type UsersPermissionsRoleConnection_Id = {\n  __typename?: 'UsersPermissionsRoleConnection_id';\n  key?: Maybe<Scalars['ID']>;\n  connection?: Maybe<UsersPermissionsRoleConnection>;\n};\n\nexport type UsersPermissionsRoleGroupBy = {\n  __typename?: 'UsersPermissionsRoleGroupBy';\n  id?: Maybe<Array<Maybe<UsersPermissionsRoleConnectionId>>>;\n  _id?: Maybe<Array<Maybe<UsersPermissionsRoleConnection_Id>>>;\n  name?: Maybe<Array<Maybe<UsersPermissionsRoleConnectionName>>>;\n  description?: Maybe<Array<Maybe<UsersPermissionsRoleConnectionDescription>>>;\n  type?: Maybe<Array<Maybe<UsersPermissionsRoleConnectionType>>>;\n};\n\nexport type UsersPermissionsUser = {\n  __typename?: 'UsersPermissionsUser';\n  id: Scalars['ID'];\n  _id: Scalars['ID'];\n  createdAt: Scalars['DateTime'];\n  updatedAt: Scalars['DateTime'];\n  username: Scalars['String'];\n  email: Scalars['String'];\n  provider?: Maybe<Scalars['String']>;\n  confirmed?: Maybe<Scalars['Boolean']>;\n  blocked?: Maybe<Scalars['Boolean']>;\n  role?: Maybe<UsersPermissionsRole>;\n};\n\nexport type UsersPermissionsUserAggregator = {\n  __typename?: 'UsersPermissionsUserAggregator';\n  count?: Maybe<Scalars['Int']>;\n  totalCount?: Maybe<Scalars['Int']>;\n};\n\nexport type UsersPermissionsUserConnection = {\n  __typename?: 'UsersPermissionsUserConnection';\n  values?: Maybe<Array<Maybe<UsersPermissionsUser>>>;\n  groupBy?: Maybe<UsersPermissionsUserGroupBy>;\n  aggregate?: Maybe<UsersPermissionsUserAggregator>;\n};\n\nexport type UsersPermissionsUserConnectionBlocked = {\n  __typename?: 'UsersPermissionsUserConnectionBlocked';\n  key?: Maybe<Scalars['Boolean']>;\n  connection?: Maybe<UsersPermissionsUserConnection>;\n};\n\nexport type UsersPermissionsUserConnectionConfirmed = {\n  __typename?: 'UsersPermissionsUserConnectionConfirmed';\n  key?: Maybe<Scalars['Boolean']>;\n  connection?: Maybe<UsersPermissionsUserConnection>;\n};\n\nexport type UsersPermissionsUserConnectionCreatedAt = {\n  __typename?: 'UsersPermissionsUserConnectionCreatedAt';\n  key?: Maybe<Scalars['DateTime']>;\n  connection?: Maybe<UsersPermissionsUserConnection>;\n};\n\nexport type UsersPermissionsUserConnectionEmail = {\n  __typename?: 'UsersPermissionsUserConnectionEmail';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<UsersPermissionsUserConnection>;\n};\n\nexport type UsersPermissionsUserConnectionId = {\n  __typename?: 'UsersPermissionsUserConnectionId';\n  key?: Maybe<Scalars['ID']>;\n  connection?: Maybe<UsersPermissionsUserConnection>;\n};\n\nexport type UsersPermissionsUserConnectionProvider = {\n  __typename?: 'UsersPermissionsUserConnectionProvider';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<UsersPermissionsUserConnection>;\n};\n\nexport type UsersPermissionsUserConnectionRole = {\n  __typename?: 'UsersPermissionsUserConnectionRole';\n  key?: Maybe<Scalars['ID']>;\n  connection?: Maybe<UsersPermissionsUserConnection>;\n};\n\nexport type UsersPermissionsUserConnectionUpdatedAt = {\n  __typename?: 'UsersPermissionsUserConnectionUpdatedAt';\n  key?: Maybe<Scalars['DateTime']>;\n  connection?: Maybe<UsersPermissionsUserConnection>;\n};\n\nexport type UsersPermissionsUserConnectionUsername = {\n  __typename?: 'UsersPermissionsUserConnectionUsername';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<UsersPermissionsUserConnection>;\n};\n\nexport type UsersPermissionsUserConnection_Id = {\n  __typename?: 'UsersPermissionsUserConnection_id';\n  key?: Maybe<Scalars['ID']>;\n  connection?: Maybe<UsersPermissionsUserConnection>;\n};\n\nexport type UsersPermissionsUserGroupBy = {\n  __typename?: 'UsersPermissionsUserGroupBy';\n  id?: Maybe<Array<Maybe<UsersPermissionsUserConnectionId>>>;\n  _id?: Maybe<Array<Maybe<UsersPermissionsUserConnection_Id>>>;\n  createdAt?: Maybe<Array<Maybe<UsersPermissionsUserConnectionCreatedAt>>>;\n  updatedAt?: Maybe<Array<Maybe<UsersPermissionsUserConnectionUpdatedAt>>>;\n  username?: Maybe<Array<Maybe<UsersPermissionsUserConnectionUsername>>>;\n  email?: Maybe<Array<Maybe<UsersPermissionsUserConnectionEmail>>>;\n  provider?: Maybe<Array<Maybe<UsersPermissionsUserConnectionProvider>>>;\n  confirmed?: Maybe<Array<Maybe<UsersPermissionsUserConnectionConfirmed>>>;\n  blocked?: Maybe<Array<Maybe<UsersPermissionsUserConnectionBlocked>>>;\n  role?: Maybe<Array<Maybe<UsersPermissionsUserConnectionRole>>>;\n};\n\nexport type CreateBookingInput = {\n  data?: Maybe<BookingInput>;\n};\n\nexport type CreateBookingPayload = {\n  __typename?: 'createBookingPayload';\n  booking?: Maybe<Booking>;\n};\n\nexport type CreateCityInput = {\n  data?: Maybe<CityInput>;\n};\n\nexport type CreateCityPayload = {\n  __typename?: 'createCityPayload';\n  city?: Maybe<City>;\n};\n\nexport type CreateFeatureInput = {\n  data?: Maybe<FeatureInput>;\n};\n\nexport type CreateFeaturePayload = {\n  __typename?: 'createFeaturePayload';\n  feature?: Maybe<Feature>;\n};\n\nexport type CreateHotelInput = {\n  data?: Maybe<HotelInput>;\n};\n\nexport type CreateHotelPayload = {\n  __typename?: 'createHotelPayload';\n  hotel?: Maybe<Hotels>;\n};\n\nexport type CreateLocationInput = {\n  data?: Maybe<LocationInput>;\n};\n\nexport type CreateLocationPayload = {\n  __typename?: 'createLocationPayload';\n  location?: Maybe<Location>;\n};\n\nexport type CreatePartnerInput = {\n  data?: Maybe<PartnerInput>;\n};\n\nexport type CreatePartnerPayload = {\n  __typename?: 'createPartnerPayload';\n  partner?: Maybe<Partner>;\n};\n\nexport type CreateReviewInput = {\n  data?: Maybe<ReviewInput>;\n};\n\nexport type CreateReviewPayload = {\n  __typename?: 'createReviewPayload';\n  review?: Maybe<Review>;\n};\n\nexport type CreateRoleInput = {\n  data?: Maybe<RoleInput>;\n};\n\nexport type CreateRolePayload = {\n  __typename?: 'createRolePayload';\n  role?: Maybe<UsersPermissionsRole>;\n};\n\nexport type CreateSubscriberInput = {\n  data?: Maybe<SubscriberInput>;\n};\n\nexport type CreateSubscriberPayload = {\n  __typename?: 'createSubscriberPayload';\n  subscriber?: Maybe<Subscribers>;\n};\n\nexport type CreateTripInput = {\n  data?: Maybe<TripInput>;\n};\n\nexport type CreateTripPayload = {\n  __typename?: 'createTripPayload';\n  trip?: Maybe<Trips>;\n};\n\nexport type CreateUserInput = {\n  data?: Maybe<UserInput>;\n};\n\nexport type CreateUserPayload = {\n  __typename?: 'createUserPayload';\n  user?: Maybe<UsersPermissionsUser>;\n};\n\nexport type DeleteBookingInput = {\n  where?: Maybe<InputId>;\n};\n\nexport type DeleteBookingPayload = {\n  __typename?: 'deleteBookingPayload';\n  booking?: Maybe<Booking>;\n};\n\nexport type DeleteCityInput = {\n  where?: Maybe<InputId>;\n};\n\nexport type DeleteCityPayload = {\n  __typename?: 'deleteCityPayload';\n  city?: Maybe<City>;\n};\n\nexport type DeleteFeatureInput = {\n  where?: Maybe<InputId>;\n};\n\nexport type DeleteFeaturePayload = {\n  __typename?: 'deleteFeaturePayload';\n  feature?: Maybe<Feature>;\n};\n\nexport type DeleteFileInput = {\n  where?: Maybe<InputId>;\n};\n\nexport type DeleteFilePayload = {\n  __typename?: 'deleteFilePayload';\n  file?: Maybe<UploadFile>;\n};\n\nexport type DeleteHomeBannerPayload = {\n  __typename?: 'deleteHomeBannerPayload';\n  homeBanner?: Maybe<HomeBanner>;\n};\n\nexport type DeleteHotelInput = {\n  where?: Maybe<InputId>;\n};\n\nexport type DeleteHotelPayload = {\n  __typename?: 'deleteHotelPayload';\n  hotel?: Maybe<Hotels>;\n};\n\nexport type DeleteLocationInput = {\n  where?: Maybe<InputId>;\n};\n\nexport type DeleteLocationPayload = {\n  __typename?: 'deleteLocationPayload';\n  location?: Maybe<Location>;\n};\n\nexport type DeletePartnerInput = {\n  where?: Maybe<InputId>;\n};\n\nexport type DeletePartnerPayload = {\n  __typename?: 'deletePartnerPayload';\n  partner?: Maybe<Partner>;\n};\n\nexport type DeleteReviewInput = {\n  where?: Maybe<InputId>;\n};\n\nexport type DeleteReviewPayload = {\n  __typename?: 'deleteReviewPayload';\n  review?: Maybe<Review>;\n};\n\nexport type DeleteRoleInput = {\n  where?: Maybe<InputId>;\n};\n\nexport type DeleteRolePayload = {\n  __typename?: 'deleteRolePayload';\n  role?: Maybe<UsersPermissionsRole>;\n};\n\nexport type DeleteSubscriberInput = {\n  where?: Maybe<InputId>;\n};\n\nexport type DeleteSubscriberPayload = {\n  __typename?: 'deleteSubscriberPayload';\n  subscriber?: Maybe<Subscribers>;\n};\n\nexport type DeleteTripInput = {\n  where?: Maybe<InputId>;\n};\n\nexport type DeleteTripPayload = {\n  __typename?: 'deleteTripPayload';\n  trip?: Maybe<Trips>;\n};\n\nexport type DeleteUserInput = {\n  where?: Maybe<InputId>;\n};\n\nexport type DeleteUserPayload = {\n  __typename?: 'deleteUserPayload';\n  user?: Maybe<UsersPermissionsUser>;\n};\n\nexport type EditBookingInput = {\n  trip?: Maybe<Scalars['ID']>;\n  approved?: Maybe<Scalars['Boolean']>;\n  basePrice?: Maybe<Scalars['Float']>;\n  currency?: Maybe<Enum_Booking_Currency>;\n  basePeopleCount?: Maybe<Scalars['Int']>;\n  discount?: Maybe<Scalars['Float']>;\n  fullName?: Maybe<Scalars['String']>;\n  phone?: Maybe<Scalars['String']>;\n  message?: Maybe<Scalars['String']>;\n  arrivalDate?: Maybe<Scalars['Date']>;\n  language?: Maybe<Scalars['String']>;\n  userBookingStatus?: Maybe<Enum_Booking_Userbookingstatus>;\n  email?: Maybe<Scalars['String']>;\n  adults?: Maybe<Scalars['Int']>;\n  children?: Maybe<Scalars['Int']>;\n  totalPrice?: Maybe<Scalars['Float']>;\n  published_at?: Maybe<Scalars['DateTime']>;\n  created_by?: Maybe<Scalars['ID']>;\n  updated_by?: Maybe<Scalars['ID']>;\n};\n\nexport type EditCityInput = {\n  name?: Maybe<Scalars['String']>;\n  description?: Maybe<Scalars['String']>;\n  image?: Maybe<Scalars['ID']>;\n  locations?: Maybe<Array<Maybe<Scalars['ID']>>>;\n  localizations?: Maybe<Array<Maybe<Scalars['ID']>>>;\n  locale?: Maybe<Scalars['String']>;\n  published_at?: Maybe<Scalars['DateTime']>;\n  created_by?: Maybe<Scalars['ID']>;\n  updated_by?: Maybe<Scalars['ID']>;\n};\n\nexport type EditComponentCoordinateCoordinateInput = {\n  id?: Maybe<Scalars['ID']>;\n  latitude?: Maybe<Scalars['Float']>;\n  longitude?: Maybe<Scalars['Float']>;\n};\n\nexport type EditComponentFeatureFeatureInput = {\n  id?: Maybe<Scalars['ID']>;\n  feature?: Maybe<Scalars['ID']>;\n  included?: Maybe<Scalars['Boolean']>;\n};\n\nexport type EditComponentPricePriceInput = {\n  id?: Maybe<Scalars['ID']>;\n  basePrice?: Maybe<Scalars['Float']>;\n  currency?: Maybe<Enum_Componentpriceprice_Currency>;\n  basePeopleCount?: Maybe<Scalars['Int']>;\n  extraAdultFee?: Maybe<Scalars['Float']>;\n  discount?: Maybe<Scalars['Float']>;\n};\n\nexport type EditComponentTimelineTimelineInput = {\n  id?: Maybe<Scalars['ID']>;\n  day?: Maybe<Scalars['Int']>;\n  description?: Maybe<Scalars['String']>;\n  locations?: Maybe<Array<Maybe<Scalars['ID']>>>;\n  travelTo?: Maybe<Scalars['ID']>;\n  transportationType?: Maybe<Enum_Componenttimelinetimeline_Transportationtype>;\n  restDay?: Maybe<Scalars['Boolean']>;\n};\n\nexport type EditFeatureInput = {\n  name?: Maybe<Scalars['String']>;\n  info?: Maybe<Scalars['String']>;\n  localizations?: Maybe<Array<Maybe<Scalars['ID']>>>;\n  locale?: Maybe<Scalars['String']>;\n  published_at?: Maybe<Scalars['DateTime']>;\n  created_by?: Maybe<Scalars['ID']>;\n  updated_by?: Maybe<Scalars['ID']>;\n};\n\nexport type EditFileInput = {\n  name?: Maybe<Scalars['String']>;\n  alternativeText?: Maybe<Scalars['String']>;\n  caption?: Maybe<Scalars['String']>;\n  width?: Maybe<Scalars['Int']>;\n  height?: Maybe<Scalars['Int']>;\n  formats?: Maybe<Scalars['JSON']>;\n  hash?: Maybe<Scalars['String']>;\n  ext?: Maybe<Scalars['String']>;\n  mime?: Maybe<Scalars['String']>;\n  size?: Maybe<Scalars['Float']>;\n  url?: Maybe<Scalars['String']>;\n  previewUrl?: Maybe<Scalars['String']>;\n  provider?: Maybe<Scalars['String']>;\n  provider_metadata?: Maybe<Scalars['JSON']>;\n  related?: Maybe<Array<Maybe<Scalars['ID']>>>;\n  created_by?: Maybe<Scalars['ID']>;\n  updated_by?: Maybe<Scalars['ID']>;\n};\n\nexport type EditHomeBannerInput = {\n  images?: Maybe<Array<Maybe<Scalars['ID']>>>;\n  published_at?: Maybe<Scalars['DateTime']>;\n  created_by?: Maybe<Scalars['ID']>;\n  updated_by?: Maybe<Scalars['ID']>;\n};\n\nexport type EditHotelInput = {\n  name?: Maybe<Scalars['String']>;\n  stars?: Maybe<Scalars['Int']>;\n  url?: Maybe<Scalars['String']>;\n  trips?: Maybe<Array<Maybe<Scalars['ID']>>>;\n  published_at?: Maybe<Scalars['DateTime']>;\n  created_by?: Maybe<Scalars['ID']>;\n  updated_by?: Maybe<Scalars['ID']>;\n};\n\nexport type EditLocaleInput = {\n  name?: Maybe<Scalars['String']>;\n  code?: Maybe<Scalars['String']>;\n  created_by?: Maybe<Scalars['ID']>;\n  updated_by?: Maybe<Scalars['ID']>;\n};\n\nexport type EditLocationInput = {\n  name?: Maybe<Scalars['String']>;\n  description?: Maybe<Scalars['String']>;\n  images?: Maybe<Array<Maybe<Scalars['ID']>>>;\n  city?: Maybe<Scalars['ID']>;\n  coordinate?: Maybe<EditComponentCoordinateCoordinateInput>;\n  localizations?: Maybe<Array<Maybe<Scalars['ID']>>>;\n  locale?: Maybe<Scalars['String']>;\n  published_at?: Maybe<Scalars['DateTime']>;\n  created_by?: Maybe<Scalars['ID']>;\n  updated_by?: Maybe<Scalars['ID']>;\n};\n\nexport type EditPartnerInput = {\n  name?: Maybe<Scalars['String']>;\n  phone?: Maybe<Scalars['String']>;\n  address?: Maybe<Scalars['String']>;\n  email?: Maybe<Scalars['String']>;\n  trips?: Maybe<Array<Maybe<Scalars['ID']>>>;\n  agreement?: Maybe<Scalars['String']>;\n  commission?: Maybe<Scalars['Float']>;\n  revenueSource?: Maybe<Enum_Partner_Revenuesource>;\n  agreementStatus?: Maybe<Enum_Partner_Agreementstatus>;\n  notes?: Maybe<Scalars['String']>;\n  phone2?: Maybe<Scalars['String']>;\n  published_at?: Maybe<Scalars['DateTime']>;\n  created_by?: Maybe<Scalars['ID']>;\n  updated_by?: Maybe<Scalars['ID']>;\n};\n\nexport type EditReviewInput = {\n  text?: Maybe<Scalars['String']>;\n  rating?: Maybe<Scalars['Float']>;\n  author?: Maybe<Scalars['ID']>;\n  active?: Maybe<Scalars['Boolean']>;\n  trip?: Maybe<Scalars['ID']>;\n  published_at?: Maybe<Scalars['DateTime']>;\n  created_by?: Maybe<Scalars['ID']>;\n  updated_by?: Maybe<Scalars['ID']>;\n};\n\nexport type EditRoleInput = {\n  name?: Maybe<Scalars['String']>;\n  description?: Maybe<Scalars['String']>;\n  type?: Maybe<Scalars['String']>;\n  permissions?: Maybe<Array<Maybe<Scalars['ID']>>>;\n  users?: Maybe<Array<Maybe<Scalars['ID']>>>;\n  created_by?: Maybe<Scalars['ID']>;\n  updated_by?: Maybe<Scalars['ID']>;\n};\n\nexport type EditSubscriberInput = {\n  email?: Maybe<Scalars['String']>;\n  published_at?: Maybe<Scalars['DateTime']>;\n  created_by?: Maybe<Scalars['ID']>;\n  updated_by?: Maybe<Scalars['ID']>;\n};\n\nexport type EditTripInput = {\n  name?: Maybe<Scalars['String']>;\n  previewImage?: Maybe<Scalars['ID']>;\n  active?: Maybe<Scalars['Boolean']>;\n  trip_type?: Maybe<Enum_Trips_Trip_Type>;\n  description?: Maybe<Scalars['String']>;\n  duration?: Maybe<Scalars['Int']>;\n  partner?: Maybe<Scalars['ID']>;\n  currency?: Maybe<Enum_Trips_Currency>;\n  city?: Maybe<Scalars['ID']>;\n  features?: Maybe<Array<Maybe<EditComponentFeatureFeatureInput>>>;\n  basePrice?: Maybe<Scalars['Int']>;\n  basePeopleCount?: Maybe<Scalars['Int']>;\n  discount?: Maybe<Scalars['Float']>;\n  travelType?: Maybe<Enum_Trips_Traveltype>;\n  hotel?: Maybe<Scalars['ID']>;\n  plan?: Maybe<Array<Maybe<EditComponentTimelineTimelineInput>>>;\n  sequence?: Maybe<Scalars['String']>;\n  localizations?: Maybe<Array<Maybe<Scalars['ID']>>>;\n  locale?: Maybe<Scalars['String']>;\n  published_at?: Maybe<Scalars['DateTime']>;\n  created_by?: Maybe<Scalars['ID']>;\n  updated_by?: Maybe<Scalars['ID']>;\n};\n\nexport type EditUserInput = {\n  username?: Maybe<Scalars['String']>;\n  email?: Maybe<Scalars['String']>;\n  provider?: Maybe<Scalars['String']>;\n  password?: Maybe<Scalars['String']>;\n  resetPasswordToken?: Maybe<Scalars['String']>;\n  confirmationToken?: Maybe<Scalars['String']>;\n  confirmed?: Maybe<Scalars['Boolean']>;\n  blocked?: Maybe<Scalars['Boolean']>;\n  role?: Maybe<Scalars['ID']>;\n  created_by?: Maybe<Scalars['ID']>;\n  updated_by?: Maybe<Scalars['ID']>;\n};\n\nexport type UpdateBookingInput = {\n  where?: Maybe<InputId>;\n  data?: Maybe<EditBookingInput>;\n};\n\nexport type UpdateBookingPayload = {\n  __typename?: 'updateBookingPayload';\n  booking?: Maybe<Booking>;\n};\n\nexport type UpdateCityInput = {\n  where?: Maybe<InputId>;\n  data?: Maybe<EditCityInput>;\n};\n\nexport type UpdateCityPayload = {\n  __typename?: 'updateCityPayload';\n  city?: Maybe<City>;\n};\n\nexport type UpdateFeatureInput = {\n  where?: Maybe<InputId>;\n  data?: Maybe<EditFeatureInput>;\n};\n\nexport type UpdateFeaturePayload = {\n  __typename?: 'updateFeaturePayload';\n  feature?: Maybe<Feature>;\n};\n\nexport type UpdateHomeBannerInput = {\n  data?: Maybe<EditHomeBannerInput>;\n};\n\nexport type UpdateHomeBannerPayload = {\n  __typename?: 'updateHomeBannerPayload';\n  homeBanner?: Maybe<HomeBanner>;\n};\n\nexport type UpdateHotelInput = {\n  where?: Maybe<InputId>;\n  data?: Maybe<EditHotelInput>;\n};\n\nexport type UpdateHotelPayload = {\n  __typename?: 'updateHotelPayload';\n  hotel?: Maybe<Hotels>;\n};\n\nexport type UpdateLocationInput = {\n  where?: Maybe<InputId>;\n  data?: Maybe<EditLocationInput>;\n};\n\nexport type UpdateLocationPayload = {\n  __typename?: 'updateLocationPayload';\n  location?: Maybe<Location>;\n};\n\nexport type UpdatePartnerInput = {\n  where?: Maybe<InputId>;\n  data?: Maybe<EditPartnerInput>;\n};\n\nexport type UpdatePartnerPayload = {\n  __typename?: 'updatePartnerPayload';\n  partner?: Maybe<Partner>;\n};\n\nexport type UpdateReviewInput = {\n  where?: Maybe<InputId>;\n  data?: Maybe<EditReviewInput>;\n};\n\nexport type UpdateReviewPayload = {\n  __typename?: 'updateReviewPayload';\n  review?: Maybe<Review>;\n};\n\nexport type UpdateRoleInput = {\n  where?: Maybe<InputId>;\n  data?: Maybe<EditRoleInput>;\n};\n\nexport type UpdateRolePayload = {\n  __typename?: 'updateRolePayload';\n  role?: Maybe<UsersPermissionsRole>;\n};\n\nexport type UpdateSubscriberInput = {\n  where?: Maybe<InputId>;\n  data?: Maybe<EditSubscriberInput>;\n};\n\nexport type UpdateSubscriberPayload = {\n  __typename?: 'updateSubscriberPayload';\n  subscriber?: Maybe<Subscribers>;\n};\n\nexport type UpdateTripInput = {\n  where?: Maybe<InputId>;\n  data?: Maybe<EditTripInput>;\n};\n\nexport type UpdateTripPayload = {\n  __typename?: 'updateTripPayload';\n  trip?: Maybe<Trips>;\n};\n\nexport type UpdateUserInput = {\n  where?: Maybe<InputId>;\n  data?: Maybe<EditUserInput>;\n};\n\nexport type UpdateUserPayload = {\n  __typename?: 'updateUserPayload';\n  user?: Maybe<UsersPermissionsUser>;\n};\n\nexport type CreateBookingQueryMutationVariables = Exact<{\n  tripId: Scalars['ID'];\n  fullName: Scalars['String'];\n  basePrice: Scalars['Float'];\n  discount?: Maybe<Scalars['Float']>;\n  basePeopleCount: Scalars['Int'];\n  phone: Scalars['String'];\n  arrivalDate: Scalars['Date'];\n  message?: Maybe<Scalars['String']>;\n  currency: Enum_Booking_Currency;\n  email: Scalars['String'];\n  language: Scalars['String'];\n  adults: Scalars['Int'];\n  children: Scalars['Int'];\n}>;\n\n\nexport type CreateBookingQueryMutation = (\n  { __typename?: 'Mutation' }\n  & { createBooking?: Maybe<(\n    { __typename?: 'createBookingPayload' }\n    & { booking?: Maybe<(\n      { __typename?: 'Booking' }\n      & Pick<Booking, 'message'>\n    )> }\n  )> }\n);\n\nexport type CitiesQueryVariables = Exact<{\n  limit?: Maybe<Scalars['Int']>;\n  locale?: Maybe<Scalars['String']>;\n}>;\n\n\nexport type CitiesQuery = (\n  { __typename?: 'Query' }\n  & { cities?: Maybe<Array<Maybe<(\n    { __typename?: 'City' }\n    & CityInfoFragment\n  )>>> }\n);\n\nexport type GetCityQueryVariables = Exact<{\n  id: Scalars['ID'];\n}>;\n\n\nexport type GetCityQuery = (\n  { __typename?: 'Query' }\n  & { city?: Maybe<(\n    { __typename?: 'City' }\n    & CityInfoFragment\n  )> }\n);\n\nexport type GetLocalizedCityQueryVariables = Exact<{\n  id: Scalars['ID'];\n  locale: Scalars['String'];\n}>;\n\n\nexport type GetLocalizedCityQuery = (\n  { __typename?: 'Query' }\n  & { cities?: Maybe<Array<Maybe<(\n    { __typename?: 'City' }\n    & CityInfoFragment\n  )>>> }\n);\n\nexport type CityInfoFragment = (\n  { __typename?: 'City' }\n  & Pick<City, 'id' | 'name' | 'description' | 'locale'>\n  & { localizations?: Maybe<Array<Maybe<(\n    { __typename?: 'City' }\n    & Pick<City, 'id' | 'locale'>\n  )>>>, image?: Maybe<(\n    { __typename?: 'UploadFile' }\n    & Pick<UploadFile, 'id' | 'width' | 'height' | 'url' | 'formats'>\n  )> }\n);\n\nexport type FeaturesQueryVariables = Exact<{\n  locale: Scalars['String'];\n}>;\n\n\nexport type FeaturesQuery = (\n  { __typename?: 'Query' }\n  & { features?: Maybe<Array<Maybe<(\n    { __typename?: 'Feature' }\n    & Pick<Feature, 'name'>\n  )>>> }\n);\n\nexport type HomeCarousellQueryVariables = Exact<{ [key: string]: never; }>;\n\n\nexport type HomeCarousellQuery = (\n  { __typename?: 'Query' }\n  & { homeBanner?: Maybe<(\n    { __typename?: 'HomeBanner' }\n    & { images?: Maybe<Array<Maybe<(\n      { __typename?: 'UploadFile' }\n      & Pick<UploadFile, 'id' | 'width' | 'height' | 'url' | 'formats'>\n    )>>> }\n  )> }\n);\n\nexport type GetLocationsQueryVariables = Exact<{\n  locale: Scalars['String'];\n  ids: Array<Scalars['String']> | Scalars['String'];\n}>;\n\n\nexport type GetLocationsQuery = (\n  { __typename?: 'Query' }\n  & { locations?: Maybe<Array<Maybe<(\n    { __typename?: 'Location' }\n    & Pick<Location, 'id' | 'name' | 'description' | 'locale'>\n    & { coordinate?: Maybe<(\n      { __typename?: 'ComponentCoordinateCoordinate' }\n      & Pick<ComponentCoordinateCoordinate, 'latitude' | 'longitude'>\n    )>, images?: Maybe<Array<Maybe<(\n      { __typename?: 'UploadFile' }\n      & Pick<UploadFile, 'id' | 'width' | 'height' | 'url' | 'formats'>\n    )>>>, city?: Maybe<(\n      { __typename?: 'City' }\n      & Pick<City, 'id' | 'name' | 'description' | 'locale'>\n      & { localizations?: Maybe<Array<Maybe<(\n        { __typename?: 'City' }\n        & Pick<City, 'id' | 'locale'>\n      )>>>, image?: Maybe<(\n        { __typename?: 'UploadFile' }\n        & Pick<UploadFile, 'id' | 'width' | 'height' | 'url' | 'formats'>\n      )> }\n    )> }\n  )>>> }\n);\n\nexport type AddToNewsLetterMutationVariables = Exact<{\n  email: Scalars['String'];\n}>;\n\n\nexport type AddToNewsLetterMutation = (\n  { __typename?: 'Mutation' }\n  & { createSubscriber?: Maybe<(\n    { __typename?: 'createSubscriberPayload' }\n    & { subscriber?: Maybe<(\n      { __typename?: 'Subscribers' }\n      & Pick<Subscribers, 'email'>\n    )> }\n  )> }\n);\n\nexport type TripsQueryVariables = Exact<{\n  limit?: Maybe<Scalars['Int']>;\n  locale?: Maybe<Scalars['String']>;\n  where?: Maybe<Scalars['JSON']>;\n}>;\n\n\nexport type TripsQuery = (\n  { __typename?: 'Query' }\n  & { trips?: Maybe<Array<Maybe<(\n    { __typename?: 'Trips' }\n    & TripInfoFragment\n  )>>> }\n);\n\nexport type GetTripQueryVariables = Exact<{\n  id: Scalars['ID'];\n}>;\n\n\nexport type GetTripQuery = (\n  { __typename?: 'Query' }\n  & { trip?: Maybe<(\n    { __typename?: 'Trips' }\n    & TripInfoFragment\n  )> }\n);\n\nexport type GetLocalizedTripQueryVariables = Exact<{\n  id: Scalars['ID'];\n  locale: Scalars['String'];\n}>;\n\n\nexport type GetLocalizedTripQuery = (\n  { __typename?: 'Query' }\n  & { trips?: Maybe<Array<Maybe<(\n    { __typename?: 'Trips' }\n    & TripInfoFragment\n  )>>> }\n);\n\nexport type TripInfoFragment = (\n  { __typename?: 'Trips' }\n  & Pick<Trips, 'id' | 'name' | 'active' | 'description' | 'locale' | 'trip_type' | 'duration' | 'travelType' | 'basePrice' | 'discount' | 'currency' | 'basePeopleCount'>\n  & { city?: Maybe<(\n    { __typename?: 'City' }\n    & Pick<City, 'id' | 'name'>\n  )>, hotel?: Maybe<(\n    { __typename?: 'Hotels' }\n    & Pick<Hotels, 'id' | 'name' | 'url' | 'stars'>\n  )>, plan?: Maybe<Array<Maybe<(\n    { __typename?: 'ComponentTimelineTimeline' }\n    & Pick<ComponentTimelineTimeline, 'day' | 'transportationType' | 'description' | 'restDay'>\n    & { locations?: Maybe<Array<Maybe<(\n      { __typename?: 'Location' }\n      & Pick<Location, 'id' | 'name'>\n      & { city?: Maybe<(\n        { __typename?: 'City' }\n        & Pick<City, 'id'>\n      )> }\n    )>>>, travelTo?: Maybe<(\n      { __typename?: 'City' }\n      & Pick<City, 'id' | 'name'>\n    )> }\n  )>>>, previewImage?: Maybe<(\n    { __typename?: 'UploadFile' }\n    & Pick<UploadFile, 'id' | 'width' | 'height' | 'url' | 'formats'>\n  )>, localizations?: Maybe<Array<Maybe<(\n    { __typename?: 'Trips' }\n    & Pick<Trips, 'id' | 'locale'>\n  )>>>, features?: Maybe<Array<Maybe<(\n    { __typename?: 'ComponentFeatureFeature' }\n    & Pick<ComponentFeatureFeature, 'included'>\n    & { feature?: Maybe<(\n      { __typename?: 'Feature' }\n      & Pick<Feature, 'name' | 'info'>\n    )> }\n  )>>> }\n);\n\nexport const CityInfoFragmentDoc = gql`\n    fragment CityInfo on City {\n  id\n  name\n  description\n  locale\n  localizations {\n    id\n    locale\n  }\n  image {\n    id\n    width\n    height\n    url\n    formats\n  }\n}\n    `;\nexport const TripInfoFragmentDoc = gql`\n    fragment tripInfo on Trips {\n  id\n  name\n  active\n  description\n  locale\n  trip_type\n  duration\n  travelType\n  city {\n    id\n    name\n  }\n  hotel {\n    id\n    name\n    url\n    stars\n  }\n  plan {\n    day\n    locations {\n      id\n      name\n      city {\n        id\n      }\n    }\n    transportationType\n    travelTo {\n      id\n      name\n    }\n    description\n    restDay\n  }\n  previewImage {\n    id\n    width\n    height\n    url\n    formats\n  }\n  localizations {\n    id\n    locale\n  }\n  basePrice\n  discount\n  currency\n  basePeopleCount\n  features {\n    included\n    feature {\n      name\n      info\n    }\n  }\n}\n    `;\nexport const CreateBookingQueryDocument = gql`\n    mutation createBookingQuery($tripId: ID!, $fullName: String!, $basePrice: Float!, $discount: Float = 0, $basePeopleCount: Int!, $phone: String!, $arrivalDate: Date!, $message: String, $currency: ENUM_BOOKING_CURRENCY!, $email: String!, $language: String!, $adults: Int!, $children: Int!) {\n  createBooking(\n    input: {data: {trip: $tripId, basePrice: $basePrice, discount: $discount, message: $message, fullName: $fullName, basePeopleCount: $basePeopleCount, phone: $phone, arrivalDate: $arrivalDate, currency: $currency, email: $email, language: $language, adults: $adults, children: $children}}\n  ) {\n    booking {\n      message\n    }\n  }\n}\n    `;\n\n  @Injectable({\n    providedIn: 'root'\n  })\n  export class CreateBookingQueryGQL extends Apollo.Mutation<CreateBookingQueryMutation, CreateBookingQueryMutationVariables> {\n    document = CreateBookingQueryDocument;\n    \n    constructor(apollo: Apollo.Apollo) {\n      super(apollo);\n    }\n  }\nexport const CitiesDocument = gql`\n    query cities($limit: Int, $locale: String) {\n  cities(limit: $limit, locale: $locale) {\n    ...CityInfo\n  }\n}\n    ${CityInfoFragmentDoc}`;\n\n  @Injectable({\n    providedIn: 'root'\n  })\n  export class CitiesGQL extends Apollo.Query<CitiesQuery, CitiesQueryVariables> {\n    document = CitiesDocument;\n    \n    constructor(apollo: Apollo.Apollo) {\n      super(apollo);\n    }\n  }\nexport const GetCityDocument = gql`\n    query getCity($id: ID!) {\n  city(id: $id) {\n    ...CityInfo\n  }\n}\n    ${CityInfoFragmentDoc}`;\n\n  @Injectable({\n    providedIn: 'root'\n  })\n  export class GetCityGQL extends Apollo.Query<GetCityQuery, GetCityQueryVariables> {\n    document = GetCityDocument;\n    \n    constructor(apollo: Apollo.Apollo) {\n      super(apollo);\n    }\n  }\nexport const GetLocalizedCityDocument = gql`\n    query getLocalizedCity($id: ID!, $locale: String!) {\n  cities(locale: $locale, where: {_or: [{localizations: {id: $id}}, {id: $id}]}) {\n    ...CityInfo\n  }\n}\n    ${CityInfoFragmentDoc}`;\n\n  @Injectable({\n    providedIn: 'root'\n  })\n  export class GetLocalizedCityGQL extends Apollo.Query<GetLocalizedCityQuery, GetLocalizedCityQueryVariables> {\n    document = GetLocalizedCityDocument;\n    \n    constructor(apollo: Apollo.Apollo) {\n      super(apollo);\n    }\n  }\nexport const FeaturesDocument = gql`\n    query features($locale: String!) {\n  features(locale: $locale) {\n    name\n  }\n}\n    `;\n\n  @Injectable({\n    providedIn: 'root'\n  })\n  export class FeaturesGQL extends Apollo.Query<FeaturesQuery, FeaturesQueryVariables> {\n    document = FeaturesDocument;\n    \n    constructor(apollo: Apollo.Apollo) {\n      super(apollo);\n    }\n  }\nexport const HomeCarousellDocument = gql`\n    query homeCarousell {\n  homeBanner {\n    images {\n      id\n      width\n      height\n      url\n      formats\n    }\n  }\n}\n    `;\n\n  @Injectable({\n    providedIn: 'root'\n  })\n  export class HomeCarousellGQL extends Apollo.Query<HomeCarousellQuery, HomeCarousellQueryVariables> {\n    document = HomeCarousellDocument;\n    \n    constructor(apollo: Apollo.Apollo) {\n      super(apollo);\n    }\n  }\nexport const GetLocationsDocument = gql`\n    query getLocations($locale: String!, $ids: [String!]!) {\n  locations(locale: $locale, where: {id_in: $ids}) {\n    id\n    name\n    description\n    coordinate {\n      latitude\n      longitude\n    }\n    locale\n    images {\n      id\n      width\n      height\n      url\n      formats\n    }\n    city {\n      id\n      name\n      description\n      locale\n      localizations {\n        id\n        locale\n      }\n      image {\n        id\n        width\n        height\n        url\n        formats\n      }\n    }\n  }\n}\n    `;\n\n  @Injectable({\n    providedIn: 'root'\n  })\n  export class GetLocationsGQL extends Apollo.Query<GetLocationsQuery, GetLocationsQueryVariables> {\n    document = GetLocationsDocument;\n    \n    constructor(apollo: Apollo.Apollo) {\n      super(apollo);\n    }\n  }\nexport const AddToNewsLetterDocument = gql`\n    mutation addToNewsLetter($email: String!) {\n  createSubscriber(input: {data: {email: $email}}) {\n    subscriber {\n      email\n    }\n  }\n}\n    `;\n\n  @Injectable({\n    providedIn: 'root'\n  })\n  export class AddToNewsLetterGQL extends Apollo.Mutation<AddToNewsLetterMutation, AddToNewsLetterMutationVariables> {\n    document = AddToNewsLetterDocument;\n    \n    constructor(apollo: Apollo.Apollo) {\n      super(apollo);\n    }\n  }\nexport const TripsDocument = gql`\n    query trips($limit: Int = 10, $locale: String = \"en\", $where: JSON) {\n  trips(limit: $limit, locale: $locale, where: $where) {\n    ...tripInfo\n  }\n}\n    ${TripInfoFragmentDoc}`;\n\n  @Injectable({\n    providedIn: 'root'\n  })\n  export class TripsGQL extends Apollo.Query<TripsQuery, TripsQueryVariables> {\n    document = TripsDocument;\n    \n    constructor(apollo: Apollo.Apollo) {\n      super(apollo);\n    }\n  }\nexport const GetTripDocument = gql`\n    query getTrip($id: ID!) {\n  trip(id: $id) {\n    ...tripInfo\n  }\n}\n    ${TripInfoFragmentDoc}`;\n\n  @Injectable({\n    providedIn: 'root'\n  })\n  export class GetTripGQL extends Apollo.Query<GetTripQuery, GetTripQueryVariables> {\n    document = GetTripDocument;\n    \n    constructor(apollo: Apollo.Apollo) {\n      super(apollo);\n    }\n  }\nexport const GetLocalizedTripDocument = gql`\n    query getLocalizedTrip($id: ID!, $locale: String!) {\n  trips(locale: $locale, where: {_or: [{localizations: {id: $id}}, {id: $id}]}) {\n    ...tripInfo\n  }\n}\n    ${TripInfoFragmentDoc}`;\n\n  @Injectable({\n    providedIn: 'root'\n  })\n  export class GetLocalizedTripGQL extends Apollo.Query<GetLocalizedTripQuery, GetLocalizedTripQueryVariables> {\n    document = GetLocalizedTripDocument;\n    \n    constructor(apollo: Apollo.Apollo) {\n      super(apollo);\n    }\n  }",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "apollo",
                        "type": "Apollo.Apollo"
                    }
                ],
                "line": 3715,
                "jsdoctags": [
                    {
                        "name": "apollo",
                        "type": "Apollo.Apollo",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "type": "injectable"
        },
        {
            "name": "HomePageService",
            "id": "injectable-HomePageService-807a1e66fa3d6848c33a4c15fe21a016",
            "file": "src/app/data/services/home-page.service.ts",
            "properties": [],
            "methods": [],
            "description": "",
            "sourceCode": "import { Injectable } from '@angular/core';\nimport { CityService } from './city.service';\nimport { TripService } from './trip.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class HomePageService {\n  constructor(private tripSer: TripService, private citySer: CityService) {}\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "tripSer",
                        "type": "TripService"
                    },
                    {
                        "name": "citySer",
                        "type": "CityService"
                    }
                ],
                "line": 8,
                "jsdoctags": [
                    {
                        "name": "tripSer",
                        "type": "TripService",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "citySer",
                        "type": "CityService",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "type": "injectable"
        },
        {
            "name": "ImageModelAdapter",
            "id": "injectable-ImageModelAdapter-3d718275c0d0d6fd28f4c66a8b8edcfd",
            "file": "src/app/data/models/ImageModel.ts",
            "properties": [],
            "methods": [
                {
                    "name": "adapt",
                    "args": [
                        {
                            "name": "item",
                            "type": "any"
                        }
                    ],
                    "optional": false,
                    "returnType": "ImageModel",
                    "typeParameters": [],
                    "line": 27,
                    "jsdoctags": [
                        {
                            "name": "item",
                            "type": "any",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "description": "",
            "sourceCode": "import { Injectable } from '@angular/core';\nimport { environment } from 'src/environments/environment.prod';\nimport { Adapter } from '../adapters/adapter';\nimport { StaticInfo } from '../static/main-info';\n\nexport class ImageModel {\n  get url(): string {\n    return this.isRemote\n      ? `${environment.api}${this.realtiveUrl}`\n      : this.realtiveUrl;\n  }\n  constructor(\n    public id: string,\n    public realtiveUrl: string,\n    public isRemote = true,\n    public width?: number,\n    public height?: number,\n    public formats?: ImageFormatsObject\n  ) {}\n\n  static defaultImage(): ImageModel {\n    return new ImageModel('', StaticInfo.defaultImage, false);\n  }\n}\n@Injectable({ providedIn: 'root' })\nexport class ImageModelAdapter implements Adapter<ImageModel> {\n  adapt(item: any): ImageModel {\n    if (!item) return new ImageModel('', StaticInfo.defaultImage, false);\n    else\n      return new ImageModel(item.id, item.url, true, item.width, item.height, {\n        thumbnail: item.formats.thumbnail\n          ? new ImageFormatAdapter().adapt(item.formats.thumbnail)\n          : ImageFormatModel.fromRelativeUrl(item.url),\n        large: item.formats.large\n          ? new ImageFormatAdapter().adapt(item.formats.large)\n          : ImageFormatModel.fromRelativeUrl(item.url),\n        medium: item.formats.medium\n          ? new ImageFormatAdapter().adapt(item.formats.medium)\n          : ImageFormatModel.fromRelativeUrl(item.url),\n        small: item.formats.small\n          ? new ImageFormatAdapter().adapt(item.formats.small)\n          : ImageFormatModel.fromRelativeUrl(item.url),\n      });\n  }\n}\n\nexport type ImageFormatsObject = {\n  thumbnail?: ImageFormatModel;\n  large?: ImageFormatModel;\n  medium?: ImageFormatModel;\n  small?: ImageFormatModel;\n};\n\nexport class ImageFormatModel {\n  constructor(\n    public relativeUrl: string,\n    public name?: string,\n    public width?: number,\n    public height?: number,\n    public size?: number\n  ) {}\n\n  get url(): string {\n    return `${environment.api}${this.relativeUrl}`;\n  }\n  static fromRelativeUrl(rUrl: string): ImageFormatModel {\n    return new ImageFormatModel(rUrl);\n  }\n}\nclass ImageFormatAdapter implements Adapter<ImageFormatModel> {\n  adapt(item: any): ImageFormatModel {\n    return new ImageFormatModel(\n      item?.url,\n      item?.name,\n      item?.width,\n      item?.height,\n      item?.size\n    );\n  }\n}\n",
            "type": "injectable"
        },
        {
            "name": "LandingService",
            "id": "injectable-LandingService-350050d5d05a2a8df523dc6926a9a9d2",
            "file": "src/app/data/services/landing.service.ts",
            "properties": [
                {
                    "name": "max",
                    "defaultValue": "7",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 21
                }
            ],
            "methods": [],
            "description": "",
            "sourceCode": "import { Injectable } from '@angular/core';\nimport { combineLatest } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { CityService } from './city.service';\nimport { LocalService } from './local.service';\nimport { TripService } from './trip.service';\n\n@Injectable({\n  providedIn: null,\n})\nexport class LandingService {\n  constructor(\n    private loc: LocalService,\n    private cityser: CityService,\n    private trip: TripService\n  ) {\n    this.cityser.init();\n    this.trip.init();\n  }\n\n  max = 7;\n  get homePageObservable() {\n    const x = combineLatest([\n      this.loc.isArabic$,\n      this.cityser.data$,\n      this.trip.data$,\n    ]).pipe(\n      map((f) => {\n        return {\n          isArabic: f[0],\n          cities: f[1],\n          trips: f[2],\n        };\n      })\n    );\n\n    return x;\n  }\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "loc",
                        "type": "LocalService"
                    },
                    {
                        "name": "cityser",
                        "type": "CityService"
                    },
                    {
                        "name": "trip",
                        "type": "TripService"
                    }
                ],
                "line": 11,
                "jsdoctags": [
                    {
                        "name": "loc",
                        "type": "LocalService",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "cityser",
                        "type": "CityService",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "trip",
                        "type": "TripService",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "accessors": {
                "homePageObservable": {
                    "name": "homePageObservable",
                    "getSignature": {
                        "name": "homePageObservable",
                        "type": "",
                        "returnType": "",
                        "line": 22
                    }
                }
            },
            "type": "injectable"
        },
        {
            "name": "LocalService",
            "id": "injectable-LocalService-c111fc40d32b225a99a29f4b6dc3286f",
            "file": "src/app/data/services/local.service.ts",
            "properties": [
                {
                    "name": "isArabic$",
                    "type": "Observable<boolean>",
                    "optional": false,
                    "description": "",
                    "line": 12
                }
            ],
            "methods": [
                {
                    "name": "changeLangTo",
                    "args": [
                        {
                            "name": "locale",
                            "type": "string"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 31,
                    "jsdoctags": [
                        {
                            "name": "locale",
                            "type": "string",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getTranslation",
                    "args": [
                        {
                            "name": "key",
                            "type": "string"
                        },
                        {
                            "name": "args",
                            "type": "HashMap<any> | undefined",
                            "defaultValue": "undefined"
                        }
                    ],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 40,
                    "jsdoctags": [
                        {
                            "name": "key",
                            "type": "string",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "args",
                            "type": "HashMap<any> | undefined",
                            "defaultValue": "undefined",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "description": "",
            "sourceCode": "import { Inject, Injectable } from '@angular/core';\nimport { HashMap, TranslocoService } from '@ngneat/transloco';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { DOCUMENT } from '@angular/common';\n\nconst LOCALE_KEY = 'locale';\n@Injectable({\n  providedIn: 'root',\n})\nexport class LocalService {\n  isArabic$: Observable<boolean>;\n\n  constructor(\n    private trans: TranslocoService,\n    @Inject(DOCUMENT) private document: Document\n  ) {\n    trans.setActiveLang(this.lastSaveLocale);\n    this.isArabic$ = trans.langChanges$.pipe(map((f) => f == 'ar'));\n    trans.langChanges$.subscribe((newLang) => {\n      this.document.documentElement.lang = newLang;\n      this.document.documentElement.dir = newLang === 'ar' ? 'rtl' : 'ltr';\n      if (this.lastSaveLocale != newLang) {\n        location.reload();\n      }\n    });\n  }\n  get lastSaveLocale(): any {\n    return (localStorage.getItem(LOCALE_KEY) as string) || 'en';\n  }\n  changeLangTo(locale: string): void {\n    this.trans.setActiveLang(locale);\n    localStorage.setItem(LOCALE_KEY, locale);\n  }\n\n  get locale() {\n    return this.trans.getActiveLang();\n  }\n\n  getTranslation(\n    key: string,\n    args: HashMap<any> | undefined = undefined\n  ): string {\n    return this.trans.translate(key, args);\n  }\n\n  get allLocales(): string[] {\n    return this.trans.getAvailableLangs().join(' ').split(' ');\n  }\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "trans",
                        "type": "TranslocoService"
                    },
                    {
                        "name": "document",
                        "type": "Document"
                    }
                ],
                "line": 12,
                "jsdoctags": [
                    {
                        "name": "trans",
                        "type": "TranslocoService",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "document",
                        "type": "Document",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "accessors": {
                "lastSaveLocale": {
                    "name": "lastSaveLocale",
                    "getSignature": {
                        "name": "lastSaveLocale",
                        "type": "any",
                        "returnType": "any",
                        "line": 28
                    }
                },
                "locale": {
                    "name": "locale",
                    "getSignature": {
                        "name": "locale",
                        "type": "",
                        "returnType": "",
                        "line": 36
                    }
                },
                "allLocales": {
                    "name": "allLocales",
                    "getSignature": {
                        "name": "allLocales",
                        "type": "[]",
                        "returnType": "string[]",
                        "line": 47
                    }
                }
            },
            "type": "injectable"
        },
        {
            "name": "LocationModelAdapter",
            "id": "injectable-LocationModelAdapter-385d2a1253873074d8bb9e08a169d34f",
            "file": "src/app/data/models/LocationModel.ts",
            "properties": [],
            "methods": [
                {
                    "name": "adapt",
                    "args": [
                        {
                            "name": "item",
                            "type": "any"
                        }
                    ],
                    "optional": false,
                    "returnType": "LocationModel",
                    "typeParameters": [],
                    "line": 21,
                    "jsdoctags": [
                        {
                            "name": "item",
                            "type": "any",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "description": "",
            "sourceCode": "import { Injectable } from '@angular/core';\nimport { Adapter } from '../adapters/adapter';\nimport { CityModel, CityModelAdapter } from './CityModel';\nimport { ImageModel, ImageModelAdapter } from './ImageModel';\n\nexport class LocationModel {\n  constructor(\n    public id: string,\n    public images: ImageModel[],\n    public name: string,\n    public desc: string,\n    public locale: string,\n    public geo: Coordinates,\n    public city: CityModel\n  ) {}\n}\nexport type Coordinates = { latitude: number; longitude: number };\n\n@Injectable({ providedIn: 'root' })\nexport class LocationModelAdapter implements Adapter<LocationModel> {\n  adapt(item: any): LocationModel {\n    let images: ImageModel[] = item.images.map((imageObject: any) => {\n      return new ImageModelAdapter().adapt(imageObject);\n    });\n    return new LocationModel(\n      item.id,\n      images,\n      item.name,\n      item.description,\n      item.locale,\n      {\n        latitude: item.coordinate.latitude,\n        longitude: item.coordinate.longitude,\n      },\n      new CityModelAdapter().adapt(item.city)\n    );\n  }\n}\n",
            "type": "injectable"
        },
        {
            "name": "MessagingService",
            "id": "injectable-MessagingService-0e1cf37c94b47a8e0b85bba91ac712fd",
            "file": "src/app/data/services/messaging.service.ts",
            "properties": [],
            "methods": [
                {
                    "name": "askForPermission",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 20
                }
            ],
            "description": "",
            "sourceCode": "import { Injectable } from '@angular/core';\nimport { AngularFireMessaging } from '@angular/fire/messaging';\nimport { snackType } from '../utils/enums';\nimport { SnackService } from './snack.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class MessagingService {\n  constructor(\n    private _ser: AngularFireMessaging,\n    private _snackBar: SnackService\n  ) {\n    _ser.onMessage((f) => {\n      const str = `${f?.notification?.title} ${f?.notification?.body}`;\n      _snackBar.showSnack(str, snackType.info);\n    });\n  }\n\n  askForPermission() {\n    this._ser.requestPermission.subscribe(\n      (p) => {\n        // this._snackBar.showSnack(\"Thanks for giving the permissions\")\n      },\n      (err) => {\n        //nothing to do\n        console.log(err);\n      }\n    );\n  }\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "_ser",
                        "type": "AngularFireMessaging"
                    },
                    {
                        "name": "_snackBar",
                        "type": "SnackService"
                    }
                ],
                "line": 9,
                "jsdoctags": [
                    {
                        "name": "_ser",
                        "type": "AngularFireMessaging",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "_snackBar",
                        "type": "SnackService",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "type": "injectable"
        },
        {
            "name": "MetaService",
            "id": "injectable-MetaService-0d6ad9958bc951da5519d7fcb63b193b",
            "file": "src/app/data/services/meta.service.ts",
            "properties": [],
            "methods": [
                {
                    "name": "addTags",
                    "args": [
                        {
                            "name": "metaModel",
                            "type": "MetaModel"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 17,
                    "jsdoctags": [
                        {
                            "name": "metaModel",
                            "type": "MetaModel",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "description": "",
            "sourceCode": "import { Injectable } from '@angular/core';\nimport { Meta, Title } from '@angular/platform-browser';\nimport { MetaModel } from '../models/MetaModel';\nimport { StaticInfo } from '../static/main-info';\nimport { LocalService } from './local.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class MetaService {\n  constructor(\n    private meta: Meta,\n    private title: Title,\n    private loc: LocalService\n  ) {}\n\n  addTags(metaModel: MetaModel) {\n    const prName = this.loc.getTranslation(StaticInfo.projectName);\n    const header = metaModel.title ? `${prName} - ${metaModel.title}` : prName;\n    this.title.setTitle(header);\n    const allLocales = this.loc.allLocales.map((f) => {\n      return { property: 'og:locale:alternate', content: f };\n    });\n    this.meta.addTags([\n      { property: 'og:title', content: header },\n      { property: 'og:type', content: metaModel?.type ?? 'page' },\n      { property: 'og:image', content: metaModel?.image ?? '' },\n      { property: 'og:url', content: location.href },\n      { property: 'og:description', content: metaModel?.description ?? '' },\n      { property: 'og:locale', content: this.loc.locale },\n      ...allLocales,\n    ]);\n  }\n\n  get metaTitle() {\n    return this.meta.getTags('og:title');\n  }\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "meta",
                        "type": "Meta"
                    },
                    {
                        "name": "title",
                        "type": "Title"
                    },
                    {
                        "name": "loc",
                        "type": "LocalService"
                    }
                ],
                "line": 10,
                "jsdoctags": [
                    {
                        "name": "meta",
                        "type": "Meta",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "title",
                        "type": "Title",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "loc",
                        "type": "LocalService",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "accessors": {
                "metaTitle": {
                    "name": "metaTitle",
                    "getSignature": {
                        "name": "metaTitle",
                        "type": "",
                        "returnType": "",
                        "line": 35
                    }
                }
            },
            "type": "injectable"
        },
        {
            "name": "NewsLetterService",
            "id": "injectable-NewsLetterService-8defb6b0eaa31fc68974ed6cfbe301fb",
            "file": "src/app/data/services/news-letter.service.ts",
            "properties": [],
            "methods": [
                {
                    "name": "addEmailToNewsLetter",
                    "args": [
                        {
                            "name": "email",
                            "type": "string"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 8,
                    "jsdoctags": [
                        {
                            "name": "email",
                            "type": "string",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "description": "",
            "sourceCode": "import { Injectable } from '@angular/core';\nimport { AddToNewsLetterGQL } from './saferniGraphql.service';\n\n@Injectable({ providedIn: 'root' })\nexport class NewsLetterService {\n  constructor(private newsQgl: AddToNewsLetterGQL) {}\n\n  addEmailToNewsLetter(email: string) {\n    this.newsQgl.mutate({ email: email });\n  }\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "newsQgl",
                        "type": "AddToNewsLetterGQL"
                    }
                ],
                "line": 5,
                "jsdoctags": [
                    {
                        "name": "newsQgl",
                        "type": "AddToNewsLetterGQL",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "type": "injectable"
        },
        {
            "name": "SnackService",
            "id": "injectable-SnackService-8025dd5bc6e09bdcf46cf0ec9c102d78",
            "file": "src/app/data/services/snack.service.ts",
            "properties": [],
            "methods": [
                {
                    "name": "showSnack",
                    "args": [
                        {
                            "name": "msg",
                            "type": "string"
                        },
                        {
                            "name": "type",
                            "type": "snackType",
                            "defaultValue": "snackType.succes"
                        },
                        {
                            "name": "handler",
                            "type": "string",
                            "optional": true
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 12,
                    "jsdoctags": [
                        {
                            "name": "msg",
                            "type": "string",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "type",
                            "type": "snackType",
                            "defaultValue": "snackType.succes",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "handler",
                            "type": "string",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "description": "",
            "sourceCode": "import { Injectable } from '@angular/core';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { SnackCompComponent } from 'src/app/common/widgets/snack-comp/snack-comp.component';\nimport { snackType } from '../utils/enums';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class SnackService {\n  constructor(private _snackBar: MatSnackBar) {}\n\n  showSnack(msg: string, type: snackType = snackType.succes, handler?: string) {\n    const ref = this._snackBar.openFromComponent(SnackCompComponent, {\n      duration: 5000,\n      data: {\n        msg: msg,\n        type: type,\n        preClose: () => {\n          console.log('clicked close');\n          ref.dismiss();\n        },\n      },\n      panelClass: ['snack', type],\n      politeness: 'polite',\n    });\n  }\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "_snackBar",
                        "type": "MatSnackBar"
                    }
                ],
                "line": 9,
                "jsdoctags": [
                    {
                        "name": "_snackBar",
                        "type": "MatSnackBar",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "type": "injectable"
        },
        {
            "name": "SplashScreenStateService",
            "id": "injectable-SplashScreenStateService-c223e91519d4060fa09c735e4df3ca91",
            "file": "src/app/data/services/splash-screen-state.service.ts",
            "properties": [
                {
                    "name": "lastShown",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 7
                },
                {
                    "name": "playing",
                    "defaultValue": "new BehaviorSubject<boolean>(false)",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 6
                }
            ],
            "methods": [
                {
                    "name": "start",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 8
                },
                {
                    "name": "stop",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 12
                }
            ],
            "description": "",
            "sourceCode": "import { Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\nimport { StaticInfo } from '../static/main-info';\n@Injectable({ providedIn: 'root' })\nexport class SplashScreenStateService {\n  playing = new BehaviorSubject<boolean>(false);\n  lastShown: number;\n  start() {\n    this.lastShown = Date.now();\n    this.playing.next(true);\n  }\n  stop() {\n    let timeDiff: number = 0;\n    timeDiff = Date.now() - this.lastShown;\n    if (timeDiff > StaticInfo.LOADER_MINIMUM_INTERVAL) this.playing.next(false);\n    else {\n      setTimeout(() => {\n        this.playing.next(false);\n      }, StaticInfo.LOADER_MINIMUM_INTERVAL - timeDiff);\n    }\n  }\n}\n",
            "type": "injectable"
        },
        {
            "name": "StrapiLocalizationsAdapter",
            "id": "injectable-StrapiLocalizationsAdapter-6ebdbe63456ec3d2a5594be687e2f7f2",
            "file": "src/app/data/models/localization.type.ts",
            "properties": [],
            "methods": [
                {
                    "name": "adapt",
                    "args": [
                        {
                            "name": "items",
                            "type": "any[]"
                        }
                    ],
                    "optional": false,
                    "returnType": "LocalizationType[]",
                    "typeParameters": [],
                    "line": 8,
                    "jsdoctags": [
                        {
                            "name": "items",
                            "type": "any[]",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "description": "",
            "sourceCode": "import { Injectable } from '@angular/core';\nimport { Adapter } from '../adapters/adapter';\n\nexport type LocalizationType = { id: string; locale: string };\n\n@Injectable({ providedIn: 'root' })\nexport class StrapiLocalizationsAdapter implements Adapter<LocalizationType[]> {\n  adapt(items: any[]): LocalizationType[] {\n    return items?.map((item) => {\n      return { id: item.id, locale: item.locale };\n    });\n  }\n}\n",
            "type": "injectable"
        },
        {
            "name": "TranslocoHttpLoader",
            "id": "injectable-TranslocoHttpLoader-efa38dc13412c995670ad19b73d3006a",
            "file": "src/app/transloco/transloco-root.module.ts",
            "properties": [],
            "methods": [
                {
                    "name": "getTranslation",
                    "args": [
                        {
                            "name": "lang",
                            "type": "string"
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 17,
                    "jsdoctags": [
                        {
                            "name": "lang",
                            "type": "string",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "description": "",
            "sourceCode": "import { HttpClient } from '@angular/common/http';\nimport {\n  TRANSLOCO_LOADER,\n  Translation,\n  TranslocoLoader,\n  TRANSLOCO_CONFIG,\n  translocoConfig,\n  TranslocoModule,\n} from '@ngneat/transloco';\nimport { Injectable, NgModule } from '@angular/core';\nimport { environment } from '../../environments/environment';\n\n@Injectable({ providedIn: 'root' })\nexport class TranslocoHttpLoader implements TranslocoLoader {\n  constructor(private http: HttpClient) {}\n\n  getTranslation(lang: string) {\n    // return this.http.get<Translation>(`${environment.baseUrl}/assets/i18n/${lang}.json`);\n    return this.http.get<Translation>(\n      `${environment.baseUrl}/assets/i18n/${lang}.json`\n    );\n    \n  }\n}\n\n@NgModule({\n  exports: [TranslocoModule],\n  providers: [\n    {\n      provide: TRANSLOCO_CONFIG,\n      useValue: translocoConfig({\n        availableLangs: ['en', 'ar'],\n        // defaultLang: navigator.language.slice(0, 2),\n        fallbackLang: 'en',\n        // Remove this option if your application doesn't support changing language in runtime.\n        reRenderOnLangChange: true,\n        prodMode: environment.production,\n      }),\n    },\n    { provide: TRANSLOCO_LOADER, useClass: TranslocoHttpLoader },\n  ],\n})\nexport class TranslocoRootModule {}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "http",
                        "type": "HttpClient"
                    }
                ],
                "line": 14,
                "jsdoctags": [
                    {
                        "name": "http",
                        "type": "HttpClient",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "type": "injectable"
        },
        {
            "name": "TripModelAdapter",
            "id": "injectable-TripModelAdapter-23f858c4acb8fc59345586f5702ea40a",
            "file": "src/app/data/models/TripModel.ts",
            "properties": [],
            "methods": [
                {
                    "name": "adapt",
                    "args": [
                        {
                            "name": "item",
                            "type": "any"
                        }
                    ],
                    "optional": false,
                    "returnType": "TripModel",
                    "typeParameters": [],
                    "line": 57,
                    "jsdoctags": [
                        {
                            "name": "item",
                            "type": "any",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "description": "",
            "sourceCode": "import { Injectable } from '@angular/core';\nimport { Adapter } from '../adapters/adapter';\nimport { priceData } from '../pipes/price-caculator.pipe';\nimport {\n  Enum_Componenttimelinetimeline_Transportationtype,\n  Enum_Trips_Currency,\n  Enum_Trips_Traveltype,\n  Enum_Trips_Trip_Type,\n} from '../services/saferniGraphql.service';\nimport { CityModel } from './CityModel';\nimport { FeatureModel, FeatureModelAdapter } from './FeatureModel';\nimport { ImageModel, ImageModelAdapter } from './ImageModel';\nimport {\n  LocalizationType,\n  StrapiLocalizationsAdapter,\n} from './localization.type';\n\nexport class TripModel {\n  public get allLocationsIds(): string[] {\n    let ids: string[] = [];\n    this.plan.forEach((plan) => {\n      ids.push(...(plan.dayLocations ?? []).map((loc) => loc.locationId));\n    });\n\n    return ids;\n  }\n  get priceData(): priceData {\n    return {\n      basePrice: this.basePrice,\n      currency: this.curreny,\n    };\n  }\n  constructor(\n    public id: string,\n    public name: string,\n    public description: string,\n    public locale: string,\n    public duration: number,\n    public tripType: Enum_Trips_Trip_Type,\n    public travelType: Enum_Trips_Traveltype,\n    public active: boolean,\n    public previewImage: ImageModel,\n    public city: CityModel,\n    public features: FeatureModel[],\n    public plan: TripDayPlan[],\n    public basePrice: number,\n    public discount: number,\n    public basePeopleCount: number,\n    public curreny: Enum_Trips_Currency,\n    public localizations: LocalizationType[],\n    public hotel?: Hotel\n  ) {}\n}\n\n@Injectable({ providedIn: 'root' })\nexport class TripModelAdapter implements Adapter<TripModel> {\n  adapt(item: any): TripModel {\n    let features: FeatureModel[] = item.features.map((feature: any) =>\n      new FeatureModelAdapter().adapt(feature)\n    );\n    let plan: TripDayPlan[] = item.plan.map((planItem: any) =>\n      new TripDayPlanAdapter().adapt(planItem)\n    );\n\n    return new TripModel(\n      item?.id,\n      item.name,\n      item.description,\n      item.locale,\n      item.duration,\n      item.trip_type,\n      item.travelType,\n      item.active,\n      new ImageModelAdapter().adapt(item.previewImage),\n      item.city,\n      features,\n      plan,\n      item.basePrice,\n      item.discount,\n      item.basePeopleCount,\n      item.currency,\n      new StrapiLocalizationsAdapter().adapt(item.localizations),\n      new HotelAdapter().adapt(item.hotel)\n    );\n  }\n}\n\nexport class TripDayPlan {\n  constructor(\n    public day: number,\n    public transportationType: Enum_Componenttimelinetimeline_Transportationtype,\n    public description?: string,\n    public dayLocations?: PlanLocation[],\n    //TODO something fishy going here\n    public travelTo?: CityModel,\n    public restDay?: boolean\n  ) {}\n}\nexport class TripDayPlanAdapter implements Adapter<TripDayPlan> {\n  adapt(item: any): TripDayPlan {\n    return new TripDayPlan(\n      item.day,\n      item.transportationType,\n      item.description,\n      item.locations.map((l: any) => {\n        //TODO some of the locations has no cities\n        return new PlanLocation(l.id, l?.city?.id, l.name);\n      }),\n      item.travelTo,\n      item.restDay\n    );\n  }\n}\nexport class PlanLocation {\n  constructor(\n    public locationId: string,\n    public cityId: string,\n    public locationName: string\n  ) {}\n}\nexport class Hotel {\n  constructor(\n    public id: string,\n    public name: string,\n    public stars: number,\n    public url: string\n  ) {}\n}\nexport class HotelAdapter implements Adapter<Hotel> {\n  adapt(item: any): Hotel | undefined {\n    if (!item) return undefined;\n    else return new Hotel(item.id, item.name, item.stars, item.url);\n  }\n}\n",
            "type": "injectable"
        },
        {
            "name": "TripService",
            "id": "injectable-TripService-ff00135ca3ab595025ad768f1aa3bd72",
            "file": "src/app/data/services/trip.service.ts",
            "properties": [
                {
                    "name": "data",
                    "defaultValue": "[]",
                    "type": "T[]",
                    "optional": false,
                    "description": "",
                    "line": 10,
                    "inheritance": {
                        "file": "BaseService"
                    }
                },
                {
                    "name": "data$",
                    "defaultValue": "new BehaviorSubject<T[]>([])",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 11,
                    "inheritance": {
                        "file": "BaseService"
                    }
                },
                {
                    "name": "loadingState$",
                    "defaultValue": "new BehaviorSubject<LoadingState>({\n    hasError: false,\n    isLoading: false,\n    msg: '',\n    handler: () => {},\n  })",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 15,
                    "inheritance": {
                        "file": "BaseService"
                    }
                }
            ],
            "methods": [
                {
                    "name": "_cachtrip",
                    "args": [
                        {
                            "name": "tripModels",
                            "type": "TripModel[]",
                            "optional": true
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 156,
                    "jsdoctags": [
                        {
                            "name": "tripModels",
                            "type": "TripModel[]",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "_getSavedTrip",
                    "args": [
                        {
                            "name": "id",
                            "type": "string"
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 139,
                    "jsdoctags": [
                        {
                            "name": "id",
                            "type": "string",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getLocalizedTrip",
                    "args": [
                        {
                            "name": "id",
                            "type": "string"
                        }
                    ],
                    "optional": false,
                    "returnType": "Promise<TripModel>",
                    "typeParameters": [],
                    "line": 146,
                    "modifierKind": [
                        120
                    ],
                    "jsdoctags": [
                        {
                            "name": "id",
                            "type": "string",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getLocations",
                    "args": [
                        {
                            "name": "ids",
                            "type": "string[]"
                        }
                    ],
                    "optional": false,
                    "returnType": "Promise<[] | undefined>",
                    "typeParameters": [],
                    "line": 163,
                    "modifierKind": [
                        120
                    ],
                    "jsdoctags": [
                        {
                            "name": "ids",
                            "type": "string[]",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getRelatedTrips",
                    "args": [
                        {
                            "name": "to",
                            "type": "TripModel"
                        }
                    ],
                    "optional": false,
                    "returnType": "Promise<TripModel[]>",
                    "typeParameters": [],
                    "line": 113,
                    "modifierKind": [
                        120
                    ],
                    "jsdoctags": [
                        {
                            "name": "to",
                            "type": "TripModel",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getTripById",
                    "args": [
                        {
                            "name": "id",
                            "type": "string"
                        }
                    ],
                    "optional": false,
                    "returnType": "Promise<TripModel>",
                    "typeParameters": [],
                    "line": 133,
                    "modifierKind": [
                        120
                    ],
                    "jsdoctags": [
                        {
                            "name": "id",
                            "type": "string",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "init",
                    "args": [],
                    "optional": false,
                    "returnType": "Promise<TripModel[]>",
                    "typeParameters": [],
                    "line": 37,
                    "modifierKind": [
                        120
                    ]
                },
                {
                    "name": "queryTrips",
                    "args": [
                        {
                            "name": "query",
                            "type": "FilterOptionsModel",
                            "defaultValue": "{\n      maxPrice: 0,\n      minPrice: 0,\n      tripType: Enum_Trips_Trip_Type.Touristic,\n      locale: this.loc.locale,\n      limit: 20,\n    }"
                        },
                        {
                            "name": "offset",
                            "type": "number",
                            "defaultValue": "0"
                        }
                    ],
                    "optional": false,
                    "returnType": "Promise<TripModel[]>",
                    "typeParameters": [],
                    "line": 44,
                    "modifierKind": [
                        120
                    ],
                    "jsdoctags": [
                        {
                            "name": "query",
                            "type": "FilterOptionsModel",
                            "defaultValue": "{\n      maxPrice: 0,\n      minPrice: 0,\n      tripType: Enum_Trips_Trip_Type.Touristic,\n      locale: this.loc.locale,\n      limit: 20,\n    }",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "offset",
                            "type": "number",
                            "defaultValue": "0",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "_doStuff",
                    "args": [
                        {
                            "name": "toDo",
                            "type": "Function"
                        }
                    ],
                    "optional": false,
                    "returnType": "Promise<T | undefined>",
                    "typeParameters": [
                        "T"
                    ],
                    "line": 43,
                    "modifierKind": [
                        120
                    ],
                    "jsdoctags": [
                        {
                            "name": "toDo",
                            "type": "Function",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "BaseService"
                    }
                },
                {
                    "name": "clearSub",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 39,
                    "inheritance": {
                        "file": "BaseService"
                    }
                },
                {
                    "name": "init",
                    "args": [
                        {
                            "name": "params",
                            "type": "any",
                            "optional": true
                        }
                    ],
                    "optional": false,
                    "returnType": "Promise<T[]>",
                    "typeParameters": [],
                    "line": 9,
                    "modifierKind": [
                        117
                    ],
                    "jsdoctags": [
                        {
                            "name": "params",
                            "type": "any",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "BaseService"
                    }
                },
                {
                    "name": "prepareData",
                    "args": [
                        {
                            "name": "data",
                            "type": "T[]"
                        }
                    ],
                    "optional": false,
                    "returnType": "{}",
                    "typeParameters": [],
                    "line": 33,
                    "jsdoctags": [
                        {
                            "name": "data",
                            "type": "T[]",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "BaseService"
                    }
                },
                {
                    "name": "setBusy",
                    "args": [
                        {
                            "name": "isBusy",
                            "type": "",
                            "defaultValue": "false"
                        },
                        {
                            "name": "err",
                            "type": "any | undefined",
                            "defaultValue": "undefined"
                        },
                        {
                            "name": "handler",
                            "type": "Function | undefined",
                            "defaultValue": "undefined"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 21,
                    "jsdoctags": [
                        {
                            "name": "isBusy",
                            "type": "",
                            "defaultValue": "false",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "err",
                            "type": "any | undefined",
                            "defaultValue": "undefined",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "handler",
                            "type": "Function | undefined",
                            "defaultValue": "undefined",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "BaseService"
                    }
                }
            ],
            "description": "",
            "sourceCode": "import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Params } from '@angular/router';\nimport { map } from 'rxjs/operators';\nimport { environment } from 'src/environments/environment.prod';\nimport urljoin from 'url-join';\nimport { FilterOptionsModel } from '../models/filterOptionModlel';\nimport { LocationModel, LocationModelAdapter } from '../models/LocationModel';\nimport { TripModel, TripModelAdapter } from '../models/TripModel';\nimport { BaseService } from './base.service';\nimport { ErrorService } from './error.service';\nimport { LocalService } from './local.service';\nimport {\n  Enum_Trips_Trip_Type,\n  GetLocalizedTripGQL,\n  GetLocationsGQL,\n  GetTripGQL,\n} from './saferniGraphql.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class TripService extends BaseService<TripModel> {\n  constructor(\n    private tripAdapter: TripModelAdapter,\n    private locationAdapter: LocationModelAdapter,\n    private locationsGql: GetLocationsGQL,\n    private localizedTripService: GetLocalizedTripGQL,\n    private getTrip: GetTripGQL,\n    private loc: LocalService,\n    errSer: ErrorService,\n    private http: HttpClient\n  ) {\n    super(errSer);\n  }\n\n  async init(): Promise<TripModel[]> {\n    if (this.data.length > 0) return this.data;\n    const data = await this.queryTrips();\n    this.prepareData(data);\n    return data;\n  }\n\n  async queryTrips(\n    query: FilterOptionsModel = {\n      maxPrice: 0,\n      minPrice: 0,\n      tripType: Enum_Trips_Trip_Type.Touristic,\n      locale: this.loc.locale,\n      limit: 20,\n    },\n    offset: number = 0\n  ): Promise<TripModel[]> {\n    let queryParams: Params = { ...query, offset };\n    //TODO add it later\n    delete queryParams['date'];\n    if (!query.cities || query.cities.length < 1) {\n      delete queryParams['cities'];\n    }\n    if (!query.hotel) {\n      delete queryParams['hotel'];\n    }\n\n    if (!query.travelType) {\n      delete queryParams['travelType'];\n    }\n    if (!query.tripType) {\n      delete queryParams['tripType'];\n    }\n    if (!query.minPrice || query.minPrice <= 0) {\n      delete queryParams['minPrice'];\n    }\n    if (!query.maxPrice || query.maxPrice <= 0) {\n      delete queryParams['maxPrice'];\n    }\n\n    if (!query.search) {\n      delete queryParams['search'];\n    }\n    if (!query.locale) {\n      queryParams = {\n        ...queryParams,\n        locale: this.loc.locale,\n      };\n    }\n    if (!query.limit) {\n      queryParams = {\n        ...queryParams,\n        limit: 20,\n      };\n    }\n    queryParams = {\n      ...queryParams,\n      active: true,\n    };\n    const data = await this._doStuff<TripModel[]>(async () => {\n      const baseUrl = urljoin(environment.api, 'queryTrips');\n\n      return await this.http\n        .get<any[]>(baseUrl, {\n          params: queryParams,\n        })\n        .pipe(\n          map((f) => {\n            const data = f.map((g: any) => this.tripAdapter.adapt(g));\n            return data;\n          })\n        )\n        .toPromise();\n    });\n    return data!;\n  }\n  async getRelatedTrips(to: TripModel): Promise<TripModel[]> {\n    let cityIds: string[] = [];\n    to.plan.forEach((p) => {\n      if (p.dayLocations) {\n        p.dayLocations.forEach((l) => {\n          cityIds.push(l.cityId);\n        });\n      }\n    });\n    let result = await this.queryTrips({\n      limit: 8,\n      maxPrice: 0,\n      minPrice: 0,\n      travelType: to.travelType,\n      tripType: to.tripType,\n      cities: cityIds,\n    });\n\n    return result!;\n  }\n  async getTripById(id: string): Promise<TripModel> {\n    let trip = this.tripAdapter.adapt(\n      (await this.getTrip.fetch({ id: id }).toPromise()).data.trip\n    );\n    return trip;\n  }\n  _getSavedTrip(id: string) {\n    const saved = this.data.filter((x) => x.id == id);\n    if (saved && saved.length > 0) {\n      return saved[0];\n    }\n    return null;\n  }\n  async getLocalizedTrip(id: string): Promise<TripModel> {\n    const saved = this._getSavedTrip(id);\n    if (saved) return saved;\n    let data = await this.localizedTripService\n      .fetch({ id: id, locale: this.loc.locale })\n      .toPromise();\n    const models = this.tripAdapter.adapt(data.data.trips![0]);\n    this._cachtrip([models]);\n    return models;\n  }\n  _cachtrip(tripModels?: TripModel[]) {\n    if (!tripModels) return;\n    const newTrips = tripModels.filter(\n      (f) => !this.data.some((x) => x.id == f.id)\n    );\n    this.data.push(...newTrips);\n  }\n  async getLocations(ids: string[]): Promise<LocationModel[] | undefined> {\n    const result = await this._doStuff<LocationModel[]>(async () => {\n      let apolloResponse = await this.locationsGql\n        .fetch({ locale: this.loc.locale, ids: ids })\n        .toPromise();\n      return apolloResponse.data.locations?.map((l: any) =>\n        this.locationAdapter.adapt(l)\n      );\n    });\n    return result;\n  }\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "tripAdapter",
                        "type": "TripModelAdapter"
                    },
                    {
                        "name": "locationAdapter",
                        "type": "LocationModelAdapter"
                    },
                    {
                        "name": "locationsGql",
                        "type": "GetLocationsGQL"
                    },
                    {
                        "name": "localizedTripService",
                        "type": "GetLocalizedTripGQL"
                    },
                    {
                        "name": "getTrip",
                        "type": "GetTripGQL"
                    },
                    {
                        "name": "loc",
                        "type": "LocalService"
                    },
                    {
                        "name": "errSer",
                        "type": "ErrorService"
                    },
                    {
                        "name": "http",
                        "type": "HttpClient"
                    }
                ],
                "line": 23,
                "jsdoctags": [
                    {
                        "name": "tripAdapter",
                        "type": "TripModelAdapter",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "locationAdapter",
                        "type": "LocationModelAdapter",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "locationsGql",
                        "type": "GetLocationsGQL",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "localizedTripService",
                        "type": "GetLocalizedTripGQL",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "getTrip",
                        "type": "GetTripGQL",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "loc",
                        "type": "LocalService",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "errSer",
                        "type": "ErrorService",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "http",
                        "type": "HttpClient",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": "BaseService",
            "type": "injectable"
        },
        {
            "name": "TripsGQL",
            "id": "injectable-TripsGQL-54bb7cbcdd682e4d53ca5e8a5c5399f6",
            "file": "src/app/data/services/saferniGraphql.service.ts",
            "properties": [
                {
                    "name": "document",
                    "defaultValue": "TripsDocument",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 3802
                }
            ],
            "methods": [],
            "description": "",
            "sourceCode": "import { gql } from 'apollo-angular';\nimport { Injectable } from '@angular/core';\nimport * as Apollo from 'apollo-angular';\nexport type Maybe<T> = T | null;\nexport type Exact<T extends { [key: string]: unknown }> = { [K in keyof T]: T[K] };\nexport type MakeOptional<T, K extends keyof T> = Omit<T, K> & { [SubKey in K]?: Maybe<T[SubKey]> };\nexport type MakeMaybe<T, K extends keyof T> = Omit<T, K> & { [SubKey in K]: Maybe<T[SubKey]> };\n/** All built-in and custom scalars, mapped to their actual values */\nexport type Scalars = {\n  ID: string;\n  String: string;\n  Boolean: boolean;\n  Int: number;\n  Float: number;\n  /** A date string, such as 2007-12-03, compliant with the `full-date` format outlined in section 5.6 of the RFC 3339 profile of the ISO 8601 standard for representation of dates and times using the Gregorian calendar. */\n  Date: any;\n  /** A date-time string at UTC, such as 2007-12-03T10:15:30Z, compliant with the `date-time` format outlined in section 5.6 of the RFC 3339 profile of the ISO 8601 standard for representation of dates and times using the Gregorian calendar. */\n  DateTime: any;\n  /** The `JSON` scalar type represents JSON values as specified by [ECMA-404](http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf). */\n  JSON: any;\n  /** The `Long` scalar type represents 52-bit integers */\n  Long: any;\n  /** A time string with format: HH:mm:ss.SSS */\n  Time: any;\n  /** The `Upload` scalar type represents a file upload. */\n  Upload: any;\n};\n\n\n\nexport type AdminUser = {\n  __typename?: 'AdminUser';\n  id: Scalars['ID'];\n  username?: Maybe<Scalars['String']>;\n  firstname: Scalars['String'];\n  lastname: Scalars['String'];\n};\n\nexport type Booking = {\n  __typename?: 'Booking';\n  id: Scalars['ID'];\n  _id: Scalars['ID'];\n  createdAt: Scalars['DateTime'];\n  updatedAt: Scalars['DateTime'];\n  trip?: Maybe<Trips>;\n  approved?: Maybe<Scalars['Boolean']>;\n  basePrice: Scalars['Float'];\n  currency: Enum_Booking_Currency;\n  basePeopleCount: Scalars['Int'];\n  discount?: Maybe<Scalars['Float']>;\n  fullName: Scalars['String'];\n  phone: Scalars['String'];\n  message?: Maybe<Scalars['String']>;\n  arrivalDate: Scalars['Date'];\n  language?: Maybe<Scalars['String']>;\n  userBookingStatus?: Maybe<Enum_Booking_Userbookingstatus>;\n  email: Scalars['String'];\n  adults: Scalars['Int'];\n  children?: Maybe<Scalars['Int']>;\n  totalPrice?: Maybe<Scalars['Float']>;\n  published_at?: Maybe<Scalars['DateTime']>;\n};\n\nexport type BookingAggregator = {\n  __typename?: 'BookingAggregator';\n  count?: Maybe<Scalars['Int']>;\n  totalCount?: Maybe<Scalars['Int']>;\n  sum?: Maybe<BookingAggregatorSum>;\n  avg?: Maybe<BookingAggregatorAvg>;\n  min?: Maybe<BookingAggregatorMin>;\n  max?: Maybe<BookingAggregatorMax>;\n};\n\nexport type BookingAggregatorAvg = {\n  __typename?: 'BookingAggregatorAvg';\n  basePrice?: Maybe<Scalars['Float']>;\n  basePeopleCount?: Maybe<Scalars['Float']>;\n  discount?: Maybe<Scalars['Float']>;\n  adults?: Maybe<Scalars['Float']>;\n  children?: Maybe<Scalars['Float']>;\n  totalPrice?: Maybe<Scalars['Float']>;\n};\n\nexport type BookingAggregatorMax = {\n  __typename?: 'BookingAggregatorMax';\n  basePrice?: Maybe<Scalars['Float']>;\n  basePeopleCount?: Maybe<Scalars['Float']>;\n  discount?: Maybe<Scalars['Float']>;\n  adults?: Maybe<Scalars['Float']>;\n  children?: Maybe<Scalars['Float']>;\n  totalPrice?: Maybe<Scalars['Float']>;\n};\n\nexport type BookingAggregatorMin = {\n  __typename?: 'BookingAggregatorMin';\n  basePrice?: Maybe<Scalars['Float']>;\n  basePeopleCount?: Maybe<Scalars['Float']>;\n  discount?: Maybe<Scalars['Float']>;\n  adults?: Maybe<Scalars['Float']>;\n  children?: Maybe<Scalars['Float']>;\n  totalPrice?: Maybe<Scalars['Float']>;\n};\n\nexport type BookingAggregatorSum = {\n  __typename?: 'BookingAggregatorSum';\n  basePrice?: Maybe<Scalars['Float']>;\n  basePeopleCount?: Maybe<Scalars['Float']>;\n  discount?: Maybe<Scalars['Float']>;\n  adults?: Maybe<Scalars['Float']>;\n  children?: Maybe<Scalars['Float']>;\n  totalPrice?: Maybe<Scalars['Float']>;\n};\n\nexport type BookingConnection = {\n  __typename?: 'BookingConnection';\n  values?: Maybe<Array<Maybe<Booking>>>;\n  groupBy?: Maybe<BookingGroupBy>;\n  aggregate?: Maybe<BookingAggregator>;\n};\n\nexport type BookingConnectionAdults = {\n  __typename?: 'BookingConnectionAdults';\n  key?: Maybe<Scalars['Int']>;\n  connection?: Maybe<BookingConnection>;\n};\n\nexport type BookingConnectionApproved = {\n  __typename?: 'BookingConnectionApproved';\n  key?: Maybe<Scalars['Boolean']>;\n  connection?: Maybe<BookingConnection>;\n};\n\nexport type BookingConnectionArrivalDate = {\n  __typename?: 'BookingConnectionArrivalDate';\n  key?: Maybe<Scalars['ID']>;\n  connection?: Maybe<BookingConnection>;\n};\n\nexport type BookingConnectionBasePeopleCount = {\n  __typename?: 'BookingConnectionBasePeopleCount';\n  key?: Maybe<Scalars['Int']>;\n  connection?: Maybe<BookingConnection>;\n};\n\nexport type BookingConnectionBasePrice = {\n  __typename?: 'BookingConnectionBasePrice';\n  key?: Maybe<Scalars['Float']>;\n  connection?: Maybe<BookingConnection>;\n};\n\nexport type BookingConnectionChildren = {\n  __typename?: 'BookingConnectionChildren';\n  key?: Maybe<Scalars['Int']>;\n  connection?: Maybe<BookingConnection>;\n};\n\nexport type BookingConnectionCreatedAt = {\n  __typename?: 'BookingConnectionCreatedAt';\n  key?: Maybe<Scalars['DateTime']>;\n  connection?: Maybe<BookingConnection>;\n};\n\nexport type BookingConnectionCurrency = {\n  __typename?: 'BookingConnectionCurrency';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<BookingConnection>;\n};\n\nexport type BookingConnectionDiscount = {\n  __typename?: 'BookingConnectionDiscount';\n  key?: Maybe<Scalars['Float']>;\n  connection?: Maybe<BookingConnection>;\n};\n\nexport type BookingConnectionEmail = {\n  __typename?: 'BookingConnectionEmail';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<BookingConnection>;\n};\n\nexport type BookingConnectionFullName = {\n  __typename?: 'BookingConnectionFullName';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<BookingConnection>;\n};\n\nexport type BookingConnectionId = {\n  __typename?: 'BookingConnectionId';\n  key?: Maybe<Scalars['ID']>;\n  connection?: Maybe<BookingConnection>;\n};\n\nexport type BookingConnectionLanguage = {\n  __typename?: 'BookingConnectionLanguage';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<BookingConnection>;\n};\n\nexport type BookingConnectionMessage = {\n  __typename?: 'BookingConnectionMessage';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<BookingConnection>;\n};\n\nexport type BookingConnectionPhone = {\n  __typename?: 'BookingConnectionPhone';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<BookingConnection>;\n};\n\nexport type BookingConnectionPublished_At = {\n  __typename?: 'BookingConnectionPublished_at';\n  key?: Maybe<Scalars['DateTime']>;\n  connection?: Maybe<BookingConnection>;\n};\n\nexport type BookingConnectionTotalPrice = {\n  __typename?: 'BookingConnectionTotalPrice';\n  key?: Maybe<Scalars['Float']>;\n  connection?: Maybe<BookingConnection>;\n};\n\nexport type BookingConnectionTrip = {\n  __typename?: 'BookingConnectionTrip';\n  key?: Maybe<Scalars['ID']>;\n  connection?: Maybe<BookingConnection>;\n};\n\nexport type BookingConnectionUpdatedAt = {\n  __typename?: 'BookingConnectionUpdatedAt';\n  key?: Maybe<Scalars['DateTime']>;\n  connection?: Maybe<BookingConnection>;\n};\n\nexport type BookingConnectionUserBookingStatus = {\n  __typename?: 'BookingConnectionUserBookingStatus';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<BookingConnection>;\n};\n\nexport type BookingConnection_Id = {\n  __typename?: 'BookingConnection_id';\n  key?: Maybe<Scalars['ID']>;\n  connection?: Maybe<BookingConnection>;\n};\n\nexport type BookingGroupBy = {\n  __typename?: 'BookingGroupBy';\n  id?: Maybe<Array<Maybe<BookingConnectionId>>>;\n  _id?: Maybe<Array<Maybe<BookingConnection_Id>>>;\n  createdAt?: Maybe<Array<Maybe<BookingConnectionCreatedAt>>>;\n  updatedAt?: Maybe<Array<Maybe<BookingConnectionUpdatedAt>>>;\n  trip?: Maybe<Array<Maybe<BookingConnectionTrip>>>;\n  approved?: Maybe<Array<Maybe<BookingConnectionApproved>>>;\n  basePrice?: Maybe<Array<Maybe<BookingConnectionBasePrice>>>;\n  currency?: Maybe<Array<Maybe<BookingConnectionCurrency>>>;\n  basePeopleCount?: Maybe<Array<Maybe<BookingConnectionBasePeopleCount>>>;\n  discount?: Maybe<Array<Maybe<BookingConnectionDiscount>>>;\n  fullName?: Maybe<Array<Maybe<BookingConnectionFullName>>>;\n  phone?: Maybe<Array<Maybe<BookingConnectionPhone>>>;\n  message?: Maybe<Array<Maybe<BookingConnectionMessage>>>;\n  arrivalDate?: Maybe<Array<Maybe<BookingConnectionArrivalDate>>>;\n  language?: Maybe<Array<Maybe<BookingConnectionLanguage>>>;\n  userBookingStatus?: Maybe<Array<Maybe<BookingConnectionUserBookingStatus>>>;\n  email?: Maybe<Array<Maybe<BookingConnectionEmail>>>;\n  adults?: Maybe<Array<Maybe<BookingConnectionAdults>>>;\n  children?: Maybe<Array<Maybe<BookingConnectionChildren>>>;\n  totalPrice?: Maybe<Array<Maybe<BookingConnectionTotalPrice>>>;\n  published_at?: Maybe<Array<Maybe<BookingConnectionPublished_At>>>;\n};\n\nexport type BookingInput = {\n  trip?: Maybe<Scalars['ID']>;\n  approved?: Maybe<Scalars['Boolean']>;\n  basePrice: Scalars['Float'];\n  currency: Enum_Booking_Currency;\n  basePeopleCount: Scalars['Int'];\n  discount?: Maybe<Scalars['Float']>;\n  fullName: Scalars['String'];\n  phone: Scalars['String'];\n  message?: Maybe<Scalars['String']>;\n  arrivalDate: Scalars['Date'];\n  language?: Maybe<Scalars['String']>;\n  userBookingStatus?: Maybe<Enum_Booking_Userbookingstatus>;\n  email: Scalars['String'];\n  adults: Scalars['Int'];\n  children?: Maybe<Scalars['Int']>;\n  totalPrice?: Maybe<Scalars['Float']>;\n  published_at?: Maybe<Scalars['DateTime']>;\n  created_by?: Maybe<Scalars['ID']>;\n  updated_by?: Maybe<Scalars['ID']>;\n};\n\nexport type City = {\n  __typename?: 'City';\n  id: Scalars['ID'];\n  _id: Scalars['ID'];\n  createdAt: Scalars['DateTime'];\n  updatedAt: Scalars['DateTime'];\n  name: Scalars['String'];\n  description?: Maybe<Scalars['String']>;\n  image?: Maybe<UploadFile>;\n  locale?: Maybe<Scalars['String']>;\n  published_at?: Maybe<Scalars['DateTime']>;\n  locations?: Maybe<Array<Maybe<Location>>>;\n  localizations?: Maybe<Array<Maybe<City>>>;\n};\n\n\nexport type CityLocationsArgs = {\n  sort?: Maybe<Scalars['String']>;\n  limit?: Maybe<Scalars['Int']>;\n  start?: Maybe<Scalars['Int']>;\n  where?: Maybe<Scalars['JSON']>;\n};\n\n\nexport type CityLocalizationsArgs = {\n  sort?: Maybe<Scalars['String']>;\n  limit?: Maybe<Scalars['Int']>;\n  start?: Maybe<Scalars['Int']>;\n  where?: Maybe<Scalars['JSON']>;\n};\n\nexport type CityAggregator = {\n  __typename?: 'CityAggregator';\n  count?: Maybe<Scalars['Int']>;\n  totalCount?: Maybe<Scalars['Int']>;\n};\n\nexport type CityConnection = {\n  __typename?: 'CityConnection';\n  values?: Maybe<Array<Maybe<City>>>;\n  groupBy?: Maybe<CityGroupBy>;\n  aggregate?: Maybe<CityAggregator>;\n};\n\nexport type CityConnectionCreatedAt = {\n  __typename?: 'CityConnectionCreatedAt';\n  key?: Maybe<Scalars['DateTime']>;\n  connection?: Maybe<CityConnection>;\n};\n\nexport type CityConnectionDescription = {\n  __typename?: 'CityConnectionDescription';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<CityConnection>;\n};\n\nexport type CityConnectionId = {\n  __typename?: 'CityConnectionId';\n  key?: Maybe<Scalars['ID']>;\n  connection?: Maybe<CityConnection>;\n};\n\nexport type CityConnectionImage = {\n  __typename?: 'CityConnectionImage';\n  key?: Maybe<Scalars['ID']>;\n  connection?: Maybe<CityConnection>;\n};\n\nexport type CityConnectionLocale = {\n  __typename?: 'CityConnectionLocale';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<CityConnection>;\n};\n\nexport type CityConnectionName = {\n  __typename?: 'CityConnectionName';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<CityConnection>;\n};\n\nexport type CityConnectionPublished_At = {\n  __typename?: 'CityConnectionPublished_at';\n  key?: Maybe<Scalars['DateTime']>;\n  connection?: Maybe<CityConnection>;\n};\n\nexport type CityConnectionUpdatedAt = {\n  __typename?: 'CityConnectionUpdatedAt';\n  key?: Maybe<Scalars['DateTime']>;\n  connection?: Maybe<CityConnection>;\n};\n\nexport type CityConnection_Id = {\n  __typename?: 'CityConnection_id';\n  key?: Maybe<Scalars['ID']>;\n  connection?: Maybe<CityConnection>;\n};\n\nexport type CityGroupBy = {\n  __typename?: 'CityGroupBy';\n  id?: Maybe<Array<Maybe<CityConnectionId>>>;\n  _id?: Maybe<Array<Maybe<CityConnection_Id>>>;\n  createdAt?: Maybe<Array<Maybe<CityConnectionCreatedAt>>>;\n  updatedAt?: Maybe<Array<Maybe<CityConnectionUpdatedAt>>>;\n  name?: Maybe<Array<Maybe<CityConnectionName>>>;\n  description?: Maybe<Array<Maybe<CityConnectionDescription>>>;\n  image?: Maybe<Array<Maybe<CityConnectionImage>>>;\n  locale?: Maybe<Array<Maybe<CityConnectionLocale>>>;\n  published_at?: Maybe<Array<Maybe<CityConnectionPublished_At>>>;\n};\n\nexport type CityInput = {\n  name: Scalars['String'];\n  description?: Maybe<Scalars['String']>;\n  image?: Maybe<Scalars['ID']>;\n  locations?: Maybe<Array<Maybe<Scalars['ID']>>>;\n  localizations?: Maybe<Array<Maybe<Scalars['ID']>>>;\n  locale?: Maybe<Scalars['String']>;\n  published_at?: Maybe<Scalars['DateTime']>;\n  created_by?: Maybe<Scalars['ID']>;\n  updated_by?: Maybe<Scalars['ID']>;\n};\n\nexport type ComponentCoordinateCoordinate = {\n  __typename?: 'ComponentCoordinateCoordinate';\n  id: Scalars['ID'];\n  _id: Scalars['ID'];\n  latitude: Scalars['Float'];\n  longitude: Scalars['Float'];\n};\n\nexport type ComponentCoordinateCoordinateInput = {\n  latitude: Scalars['Float'];\n  longitude: Scalars['Float'];\n};\n\nexport type ComponentFeatureFeature = {\n  __typename?: 'ComponentFeatureFeature';\n  id: Scalars['ID'];\n  _id: Scalars['ID'];\n  feature?: Maybe<Feature>;\n  included?: Maybe<Scalars['Boolean']>;\n};\n\nexport type ComponentFeatureFeatureInput = {\n  feature?: Maybe<Scalars['ID']>;\n  included?: Maybe<Scalars['Boolean']>;\n};\n\nexport type ComponentPricePrice = {\n  __typename?: 'ComponentPricePrice';\n  id: Scalars['ID'];\n  _id: Scalars['ID'];\n  basePrice: Scalars['Float'];\n  currency: Enum_Componentpriceprice_Currency;\n  basePeopleCount: Scalars['Int'];\n  extraAdultFee?: Maybe<Scalars['Float']>;\n  discount?: Maybe<Scalars['Float']>;\n};\n\nexport type ComponentPricePriceInput = {\n  basePrice: Scalars['Float'];\n  currency?: Maybe<Enum_Componentpriceprice_Currency>;\n  basePeopleCount: Scalars['Int'];\n  extraAdultFee?: Maybe<Scalars['Float']>;\n  discount?: Maybe<Scalars['Float']>;\n};\n\nexport type ComponentTimelineTimeline = {\n  __typename?: 'ComponentTimelineTimeline';\n  id: Scalars['ID'];\n  _id: Scalars['ID'];\n  day: Scalars['Int'];\n  description?: Maybe<Scalars['String']>;\n  travelTo?: Maybe<City>;\n  transportationType?: Maybe<Enum_Componenttimelinetimeline_Transportationtype>;\n  restDay?: Maybe<Scalars['Boolean']>;\n  locations?: Maybe<Array<Maybe<Location>>>;\n};\n\n\nexport type ComponentTimelineTimelineLocationsArgs = {\n  sort?: Maybe<Scalars['String']>;\n  limit?: Maybe<Scalars['Int']>;\n  start?: Maybe<Scalars['Int']>;\n  where?: Maybe<Scalars['JSON']>;\n};\n\nexport type ComponentTimelineTimelineInput = {\n  day: Scalars['Int'];\n  description?: Maybe<Scalars['String']>;\n  locations?: Maybe<Array<Maybe<Scalars['ID']>>>;\n  travelTo?: Maybe<Scalars['ID']>;\n  transportationType?: Maybe<Enum_Componenttimelinetimeline_Transportationtype>;\n  restDay?: Maybe<Scalars['Boolean']>;\n};\n\n\n\nexport enum Enum_Booking_Currency {\n  Dollar = 'dollar',\n  Lira = 'lira'\n}\n\nexport enum Enum_Booking_Userbookingstatus {\n  Initial = 'initial',\n  Confirmed = 'confirmed',\n  Canceled = 'canceled'\n}\n\nexport enum Enum_Componentpriceprice_Currency {\n  Dollar = 'dollar',\n  Lira = 'lira'\n}\n\nexport enum Enum_Componenttimelinetimeline_Transportationtype {\n  Arrival = 'arrival',\n  Departure = 'departure',\n  BetweenCities = 'betweenCities',\n  WithinCity = 'withinCity'\n}\n\nexport enum Enum_Partner_Agreementstatus {\n  Agreed = 'Agreed',\n  Discussing = 'discussing',\n  Termination = 'termination'\n}\n\nexport enum Enum_Partner_Revenuesource {\n  PricePercentage = 'pricePercentage',\n  InflatedPrice = 'inflatedPrice'\n}\n\nexport enum Enum_Trips_Currency {\n  Dollar = 'dollar',\n  Lira = 'lira'\n}\n\nexport enum Enum_Trips_Traveltype {\n  Private = 'private',\n  Public = 'public',\n  Both = 'both'\n}\n\nexport enum Enum_Trips_Trip_Type {\n  Touristic = 'touristic',\n  Medical = 'medical'\n}\n\nexport type Feature = {\n  __typename?: 'Feature';\n  id: Scalars['ID'];\n  _id: Scalars['ID'];\n  createdAt: Scalars['DateTime'];\n  updatedAt: Scalars['DateTime'];\n  name: Scalars['String'];\n  info?: Maybe<Scalars['String']>;\n  locale?: Maybe<Scalars['String']>;\n  published_at?: Maybe<Scalars['DateTime']>;\n  localizations?: Maybe<Array<Maybe<Feature>>>;\n};\n\n\nexport type FeatureLocalizationsArgs = {\n  sort?: Maybe<Scalars['String']>;\n  limit?: Maybe<Scalars['Int']>;\n  start?: Maybe<Scalars['Int']>;\n  where?: Maybe<Scalars['JSON']>;\n};\n\nexport type FeatureAggregator = {\n  __typename?: 'FeatureAggregator';\n  count?: Maybe<Scalars['Int']>;\n  totalCount?: Maybe<Scalars['Int']>;\n};\n\nexport type FeatureConnection = {\n  __typename?: 'FeatureConnection';\n  values?: Maybe<Array<Maybe<Feature>>>;\n  groupBy?: Maybe<FeatureGroupBy>;\n  aggregate?: Maybe<FeatureAggregator>;\n};\n\nexport type FeatureConnectionCreatedAt = {\n  __typename?: 'FeatureConnectionCreatedAt';\n  key?: Maybe<Scalars['DateTime']>;\n  connection?: Maybe<FeatureConnection>;\n};\n\nexport type FeatureConnectionId = {\n  __typename?: 'FeatureConnectionId';\n  key?: Maybe<Scalars['ID']>;\n  connection?: Maybe<FeatureConnection>;\n};\n\nexport type FeatureConnectionInfo = {\n  __typename?: 'FeatureConnectionInfo';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<FeatureConnection>;\n};\n\nexport type FeatureConnectionLocale = {\n  __typename?: 'FeatureConnectionLocale';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<FeatureConnection>;\n};\n\nexport type FeatureConnectionName = {\n  __typename?: 'FeatureConnectionName';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<FeatureConnection>;\n};\n\nexport type FeatureConnectionPublished_At = {\n  __typename?: 'FeatureConnectionPublished_at';\n  key?: Maybe<Scalars['DateTime']>;\n  connection?: Maybe<FeatureConnection>;\n};\n\nexport type FeatureConnectionUpdatedAt = {\n  __typename?: 'FeatureConnectionUpdatedAt';\n  key?: Maybe<Scalars['DateTime']>;\n  connection?: Maybe<FeatureConnection>;\n};\n\nexport type FeatureConnection_Id = {\n  __typename?: 'FeatureConnection_id';\n  key?: Maybe<Scalars['ID']>;\n  connection?: Maybe<FeatureConnection>;\n};\n\nexport type FeatureGroupBy = {\n  __typename?: 'FeatureGroupBy';\n  id?: Maybe<Array<Maybe<FeatureConnectionId>>>;\n  _id?: Maybe<Array<Maybe<FeatureConnection_Id>>>;\n  createdAt?: Maybe<Array<Maybe<FeatureConnectionCreatedAt>>>;\n  updatedAt?: Maybe<Array<Maybe<FeatureConnectionUpdatedAt>>>;\n  name?: Maybe<Array<Maybe<FeatureConnectionName>>>;\n  info?: Maybe<Array<Maybe<FeatureConnectionInfo>>>;\n  locale?: Maybe<Array<Maybe<FeatureConnectionLocale>>>;\n  published_at?: Maybe<Array<Maybe<FeatureConnectionPublished_At>>>;\n};\n\nexport type FeatureInput = {\n  name: Scalars['String'];\n  info?: Maybe<Scalars['String']>;\n  localizations?: Maybe<Array<Maybe<Scalars['ID']>>>;\n  locale?: Maybe<Scalars['String']>;\n  published_at?: Maybe<Scalars['DateTime']>;\n  created_by?: Maybe<Scalars['ID']>;\n  updated_by?: Maybe<Scalars['ID']>;\n};\n\nexport type FileInfoInput = {\n  name?: Maybe<Scalars['String']>;\n  alternativeText?: Maybe<Scalars['String']>;\n  caption?: Maybe<Scalars['String']>;\n};\n\nexport type FileInput = {\n  name: Scalars['String'];\n  alternativeText?: Maybe<Scalars['String']>;\n  caption?: Maybe<Scalars['String']>;\n  width?: Maybe<Scalars['Int']>;\n  height?: Maybe<Scalars['Int']>;\n  formats?: Maybe<Scalars['JSON']>;\n  hash: Scalars['String'];\n  ext?: Maybe<Scalars['String']>;\n  mime: Scalars['String'];\n  size: Scalars['Float'];\n  url: Scalars['String'];\n  previewUrl?: Maybe<Scalars['String']>;\n  provider: Scalars['String'];\n  provider_metadata?: Maybe<Scalars['JSON']>;\n  related?: Maybe<Array<Maybe<Scalars['ID']>>>;\n  created_by?: Maybe<Scalars['ID']>;\n  updated_by?: Maybe<Scalars['ID']>;\n};\n\nexport type HomeBanner = {\n  __typename?: 'HomeBanner';\n  id: Scalars['ID'];\n  _id: Scalars['ID'];\n  createdAt: Scalars['DateTime'];\n  updatedAt: Scalars['DateTime'];\n  published_at?: Maybe<Scalars['DateTime']>;\n  images?: Maybe<Array<Maybe<UploadFile>>>;\n};\n\n\nexport type HomeBannerImagesArgs = {\n  sort?: Maybe<Scalars['String']>;\n  limit?: Maybe<Scalars['Int']>;\n  start?: Maybe<Scalars['Int']>;\n  where?: Maybe<Scalars['JSON']>;\n};\n\nexport type HomeBannerInput = {\n  images?: Maybe<Array<Maybe<Scalars['ID']>>>;\n  published_at?: Maybe<Scalars['DateTime']>;\n  created_by?: Maybe<Scalars['ID']>;\n  updated_by?: Maybe<Scalars['ID']>;\n};\n\nexport type HotelInput = {\n  name: Scalars['String'];\n  stars: Scalars['Int'];\n  url?: Maybe<Scalars['String']>;\n  trips?: Maybe<Array<Maybe<Scalars['ID']>>>;\n  published_at?: Maybe<Scalars['DateTime']>;\n  created_by?: Maybe<Scalars['ID']>;\n  updated_by?: Maybe<Scalars['ID']>;\n};\n\nexport type Hotels = {\n  __typename?: 'Hotels';\n  id: Scalars['ID'];\n  _id: Scalars['ID'];\n  createdAt: Scalars['DateTime'];\n  updatedAt: Scalars['DateTime'];\n  name: Scalars['String'];\n  stars: Scalars['Int'];\n  url?: Maybe<Scalars['String']>;\n  published_at?: Maybe<Scalars['DateTime']>;\n  trips?: Maybe<Array<Maybe<Trips>>>;\n};\n\n\nexport type HotelsTripsArgs = {\n  sort?: Maybe<Scalars['String']>;\n  limit?: Maybe<Scalars['Int']>;\n  start?: Maybe<Scalars['Int']>;\n  where?: Maybe<Scalars['JSON']>;\n};\n\nexport type HotelsAggregator = {\n  __typename?: 'HotelsAggregator';\n  count?: Maybe<Scalars['Int']>;\n  totalCount?: Maybe<Scalars['Int']>;\n  sum?: Maybe<HotelsAggregatorSum>;\n  avg?: Maybe<HotelsAggregatorAvg>;\n  min?: Maybe<HotelsAggregatorMin>;\n  max?: Maybe<HotelsAggregatorMax>;\n};\n\nexport type HotelsAggregatorAvg = {\n  __typename?: 'HotelsAggregatorAvg';\n  stars?: Maybe<Scalars['Float']>;\n};\n\nexport type HotelsAggregatorMax = {\n  __typename?: 'HotelsAggregatorMax';\n  stars?: Maybe<Scalars['Float']>;\n};\n\nexport type HotelsAggregatorMin = {\n  __typename?: 'HotelsAggregatorMin';\n  stars?: Maybe<Scalars['Float']>;\n};\n\nexport type HotelsAggregatorSum = {\n  __typename?: 'HotelsAggregatorSum';\n  stars?: Maybe<Scalars['Float']>;\n};\n\nexport type HotelsConnection = {\n  __typename?: 'HotelsConnection';\n  values?: Maybe<Array<Maybe<Hotels>>>;\n  groupBy?: Maybe<HotelsGroupBy>;\n  aggregate?: Maybe<HotelsAggregator>;\n};\n\nexport type HotelsConnectionCreatedAt = {\n  __typename?: 'HotelsConnectionCreatedAt';\n  key?: Maybe<Scalars['DateTime']>;\n  connection?: Maybe<HotelsConnection>;\n};\n\nexport type HotelsConnectionId = {\n  __typename?: 'HotelsConnectionId';\n  key?: Maybe<Scalars['ID']>;\n  connection?: Maybe<HotelsConnection>;\n};\n\nexport type HotelsConnectionName = {\n  __typename?: 'HotelsConnectionName';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<HotelsConnection>;\n};\n\nexport type HotelsConnectionPublished_At = {\n  __typename?: 'HotelsConnectionPublished_at';\n  key?: Maybe<Scalars['DateTime']>;\n  connection?: Maybe<HotelsConnection>;\n};\n\nexport type HotelsConnectionStars = {\n  __typename?: 'HotelsConnectionStars';\n  key?: Maybe<Scalars['Int']>;\n  connection?: Maybe<HotelsConnection>;\n};\n\nexport type HotelsConnectionUpdatedAt = {\n  __typename?: 'HotelsConnectionUpdatedAt';\n  key?: Maybe<Scalars['DateTime']>;\n  connection?: Maybe<HotelsConnection>;\n};\n\nexport type HotelsConnectionUrl = {\n  __typename?: 'HotelsConnectionUrl';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<HotelsConnection>;\n};\n\nexport type HotelsConnection_Id = {\n  __typename?: 'HotelsConnection_id';\n  key?: Maybe<Scalars['ID']>;\n  connection?: Maybe<HotelsConnection>;\n};\n\nexport type HotelsGroupBy = {\n  __typename?: 'HotelsGroupBy';\n  id?: Maybe<Array<Maybe<HotelsConnectionId>>>;\n  _id?: Maybe<Array<Maybe<HotelsConnection_Id>>>;\n  createdAt?: Maybe<Array<Maybe<HotelsConnectionCreatedAt>>>;\n  updatedAt?: Maybe<Array<Maybe<HotelsConnectionUpdatedAt>>>;\n  name?: Maybe<Array<Maybe<HotelsConnectionName>>>;\n  stars?: Maybe<Array<Maybe<HotelsConnectionStars>>>;\n  url?: Maybe<Array<Maybe<HotelsConnectionUrl>>>;\n  published_at?: Maybe<Array<Maybe<HotelsConnectionPublished_At>>>;\n};\n\nexport type I18NLocale = {\n  __typename?: 'I18NLocale';\n  id: Scalars['ID'];\n  _id: Scalars['ID'];\n  createdAt: Scalars['DateTime'];\n  updatedAt: Scalars['DateTime'];\n  name?: Maybe<Scalars['String']>;\n  code?: Maybe<Scalars['String']>;\n};\n\nexport type InputId = {\n  id: Scalars['ID'];\n};\n\n\nexport type LocaleInput = {\n  name?: Maybe<Scalars['String']>;\n  code?: Maybe<Scalars['String']>;\n  created_by?: Maybe<Scalars['ID']>;\n  updated_by?: Maybe<Scalars['ID']>;\n};\n\nexport type Location = {\n  __typename?: 'Location';\n  id: Scalars['ID'];\n  _id: Scalars['ID'];\n  createdAt: Scalars['DateTime'];\n  updatedAt: Scalars['DateTime'];\n  name: Scalars['String'];\n  description?: Maybe<Scalars['String']>;\n  city?: Maybe<City>;\n  coordinate?: Maybe<ComponentCoordinateCoordinate>;\n  locale?: Maybe<Scalars['String']>;\n  published_at?: Maybe<Scalars['DateTime']>;\n  images?: Maybe<Array<Maybe<UploadFile>>>;\n  localizations?: Maybe<Array<Maybe<Location>>>;\n};\n\n\nexport type LocationImagesArgs = {\n  sort?: Maybe<Scalars['String']>;\n  limit?: Maybe<Scalars['Int']>;\n  start?: Maybe<Scalars['Int']>;\n  where?: Maybe<Scalars['JSON']>;\n};\n\n\nexport type LocationLocalizationsArgs = {\n  sort?: Maybe<Scalars['String']>;\n  limit?: Maybe<Scalars['Int']>;\n  start?: Maybe<Scalars['Int']>;\n  where?: Maybe<Scalars['JSON']>;\n};\n\nexport type LocationAggregator = {\n  __typename?: 'LocationAggregator';\n  count?: Maybe<Scalars['Int']>;\n  totalCount?: Maybe<Scalars['Int']>;\n};\n\nexport type LocationConnection = {\n  __typename?: 'LocationConnection';\n  values?: Maybe<Array<Maybe<Location>>>;\n  groupBy?: Maybe<LocationGroupBy>;\n  aggregate?: Maybe<LocationAggregator>;\n};\n\nexport type LocationConnectionCity = {\n  __typename?: 'LocationConnectionCity';\n  key?: Maybe<Scalars['ID']>;\n  connection?: Maybe<LocationConnection>;\n};\n\nexport type LocationConnectionCoordinate = {\n  __typename?: 'LocationConnectionCoordinate';\n  key?: Maybe<Scalars['ID']>;\n  connection?: Maybe<LocationConnection>;\n};\n\nexport type LocationConnectionCreatedAt = {\n  __typename?: 'LocationConnectionCreatedAt';\n  key?: Maybe<Scalars['DateTime']>;\n  connection?: Maybe<LocationConnection>;\n};\n\nexport type LocationConnectionDescription = {\n  __typename?: 'LocationConnectionDescription';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<LocationConnection>;\n};\n\nexport type LocationConnectionId = {\n  __typename?: 'LocationConnectionId';\n  key?: Maybe<Scalars['ID']>;\n  connection?: Maybe<LocationConnection>;\n};\n\nexport type LocationConnectionLocale = {\n  __typename?: 'LocationConnectionLocale';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<LocationConnection>;\n};\n\nexport type LocationConnectionName = {\n  __typename?: 'LocationConnectionName';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<LocationConnection>;\n};\n\nexport type LocationConnectionPublished_At = {\n  __typename?: 'LocationConnectionPublished_at';\n  key?: Maybe<Scalars['DateTime']>;\n  connection?: Maybe<LocationConnection>;\n};\n\nexport type LocationConnectionUpdatedAt = {\n  __typename?: 'LocationConnectionUpdatedAt';\n  key?: Maybe<Scalars['DateTime']>;\n  connection?: Maybe<LocationConnection>;\n};\n\nexport type LocationConnection_Id = {\n  __typename?: 'LocationConnection_id';\n  key?: Maybe<Scalars['ID']>;\n  connection?: Maybe<LocationConnection>;\n};\n\nexport type LocationGroupBy = {\n  __typename?: 'LocationGroupBy';\n  id?: Maybe<Array<Maybe<LocationConnectionId>>>;\n  _id?: Maybe<Array<Maybe<LocationConnection_Id>>>;\n  createdAt?: Maybe<Array<Maybe<LocationConnectionCreatedAt>>>;\n  updatedAt?: Maybe<Array<Maybe<LocationConnectionUpdatedAt>>>;\n  name?: Maybe<Array<Maybe<LocationConnectionName>>>;\n  description?: Maybe<Array<Maybe<LocationConnectionDescription>>>;\n  city?: Maybe<Array<Maybe<LocationConnectionCity>>>;\n  coordinate?: Maybe<Array<Maybe<LocationConnectionCoordinate>>>;\n  locale?: Maybe<Array<Maybe<LocationConnectionLocale>>>;\n  published_at?: Maybe<Array<Maybe<LocationConnectionPublished_At>>>;\n};\n\nexport type LocationInput = {\n  name: Scalars['String'];\n  description?: Maybe<Scalars['String']>;\n  images?: Maybe<Array<Maybe<Scalars['ID']>>>;\n  city?: Maybe<Scalars['ID']>;\n  coordinate?: Maybe<ComponentCoordinateCoordinateInput>;\n  localizations?: Maybe<Array<Maybe<Scalars['ID']>>>;\n  locale?: Maybe<Scalars['String']>;\n  published_at?: Maybe<Scalars['DateTime']>;\n  created_by?: Maybe<Scalars['ID']>;\n  updated_by?: Maybe<Scalars['ID']>;\n};\n\n\nexport type Morph = UsersPermissionsMe | UsersPermissionsMeRole | UsersPermissionsLoginPayload | UserPermissionsPasswordPayload | Booking | BookingConnection | BookingAggregator | BookingAggregatorSum | BookingAggregatorAvg | BookingAggregatorMin | BookingAggregatorMax | BookingGroupBy | BookingConnectionId | BookingConnection_Id | BookingConnectionCreatedAt | BookingConnectionUpdatedAt | BookingConnectionTrip | BookingConnectionApproved | BookingConnectionBasePrice | BookingConnectionCurrency | BookingConnectionBasePeopleCount | BookingConnectionDiscount | BookingConnectionFullName | BookingConnectionPhone | BookingConnectionMessage | BookingConnectionArrivalDate | BookingConnectionLanguage | BookingConnectionUserBookingStatus | BookingConnectionEmail | BookingConnectionAdults | BookingConnectionChildren | BookingConnectionTotalPrice | BookingConnectionPublished_At | CreateBookingPayload | UpdateBookingPayload | DeleteBookingPayload | City | CityConnection | CityAggregator | CityGroupBy | CityConnectionId | CityConnection_Id | CityConnectionCreatedAt | CityConnectionUpdatedAt | CityConnectionName | CityConnectionDescription | CityConnectionImage | CityConnectionLocale | CityConnectionPublished_At | CreateCityPayload | UpdateCityPayload | DeleteCityPayload | Feature | FeatureConnection | FeatureAggregator | FeatureGroupBy | FeatureConnectionId | FeatureConnection_Id | FeatureConnectionCreatedAt | FeatureConnectionUpdatedAt | FeatureConnectionName | FeatureConnectionInfo | FeatureConnectionLocale | FeatureConnectionPublished_At | CreateFeaturePayload | UpdateFeaturePayload | DeleteFeaturePayload | HomeBanner | UpdateHomeBannerPayload | DeleteHomeBannerPayload | Hotels | HotelsConnection | HotelsAggregator | HotelsAggregatorSum | HotelsAggregatorAvg | HotelsAggregatorMin | HotelsAggregatorMax | HotelsGroupBy | HotelsConnectionId | HotelsConnection_Id | HotelsConnectionCreatedAt | HotelsConnectionUpdatedAt | HotelsConnectionName | HotelsConnectionStars | HotelsConnectionUrl | HotelsConnectionPublished_At | CreateHotelPayload | UpdateHotelPayload | DeleteHotelPayload | Location | LocationConnection | LocationAggregator | LocationGroupBy | LocationConnectionId | LocationConnection_Id | LocationConnectionCreatedAt | LocationConnectionUpdatedAt | LocationConnectionName | LocationConnectionDescription | LocationConnectionCity | LocationConnectionCoordinate | LocationConnectionLocale | LocationConnectionPublished_At | CreateLocationPayload | UpdateLocationPayload | DeleteLocationPayload | Partner | PartnerConnection | PartnerAggregator | PartnerAggregatorSum | PartnerAggregatorAvg | PartnerAggregatorMin | PartnerAggregatorMax | PartnerGroupBy | PartnerConnectionId | PartnerConnection_Id | PartnerConnectionCreatedAt | PartnerConnectionUpdatedAt | PartnerConnectionName | PartnerConnectionPhone | PartnerConnectionAddress | PartnerConnectionEmail | PartnerConnectionAgreement | PartnerConnectionCommission | PartnerConnectionRevenueSource | PartnerConnectionAgreementStatus | PartnerConnectionNotes | PartnerConnectionPhone2 | PartnerConnectionPublished_At | CreatePartnerPayload | UpdatePartnerPayload | DeletePartnerPayload | Review | ReviewConnection | ReviewAggregator | ReviewAggregatorSum | ReviewAggregatorAvg | ReviewAggregatorMin | ReviewAggregatorMax | ReviewGroupBy | ReviewConnectionId | ReviewConnection_Id | ReviewConnectionCreatedAt | ReviewConnectionUpdatedAt | ReviewConnectionText | ReviewConnectionRating | ReviewConnectionAuthor | ReviewConnectionActive | ReviewConnectionTrip | ReviewConnectionPublished_At | CreateReviewPayload | UpdateReviewPayload | DeleteReviewPayload | Subscribers | SubscribersConnection | SubscribersAggregator | SubscribersGroupBy | SubscribersConnectionId | SubscribersConnection_Id | SubscribersConnectionCreatedAt | SubscribersConnectionUpdatedAt | SubscribersConnectionEmail | SubscribersConnectionPublished_At | CreateSubscriberPayload | UpdateSubscriberPayload | DeleteSubscriberPayload | Trips | TripsConnection | TripsAggregator | TripsAggregatorSum | TripsAggregatorAvg | TripsAggregatorMin | TripsAggregatorMax | TripsGroupBy | TripsConnectionId | TripsConnection_Id | TripsConnectionCreatedAt | TripsConnectionUpdatedAt | TripsConnectionName | TripsConnectionPreviewImage | TripsConnectionActive | TripsConnectionTrip_Type | TripsConnectionDescription | TripsConnectionDuration | TripsConnectionPartner | TripsConnectionCurrency | TripsConnectionCity | TripsConnectionBasePrice | TripsConnectionBasePeopleCount | TripsConnectionDiscount | TripsConnectionTravelType | TripsConnectionHotel | TripsConnectionLocale | TripsConnectionPublished_At | CreateTripPayload | UpdateTripPayload | DeleteTripPayload | I18NLocale | UploadFile | UploadFileConnection | UploadFileAggregator | UploadFileAggregatorSum | UploadFileAggregatorAvg | UploadFileAggregatorMin | UploadFileAggregatorMax | UploadFileGroupBy | UploadFileConnectionId | UploadFileConnection_Id | UploadFileConnectionCreatedAt | UploadFileConnectionUpdatedAt | UploadFileConnectionName | UploadFileConnectionAlternativeText | UploadFileConnectionCaption | UploadFileConnectionWidth | UploadFileConnectionHeight | UploadFileConnectionFormats | UploadFileConnectionHash | UploadFileConnectionExt | UploadFileConnectionMime | UploadFileConnectionSize | UploadFileConnectionUrl | UploadFileConnectionPreviewUrl | UploadFileConnectionProvider | UploadFileConnectionProvider_Metadata | DeleteFilePayload | UsersPermissionsPermission | UsersPermissionsRole | UsersPermissionsRoleConnection | UsersPermissionsRoleAggregator | UsersPermissionsRoleGroupBy | UsersPermissionsRoleConnectionId | UsersPermissionsRoleConnection_Id | UsersPermissionsRoleConnectionName | UsersPermissionsRoleConnectionDescription | UsersPermissionsRoleConnectionType | CreateRolePayload | UpdateRolePayload | DeleteRolePayload | UsersPermissionsUser | UsersPermissionsUserConnection | UsersPermissionsUserAggregator | UsersPermissionsUserGroupBy | UsersPermissionsUserConnectionId | UsersPermissionsUserConnection_Id | UsersPermissionsUserConnectionCreatedAt | UsersPermissionsUserConnectionUpdatedAt | UsersPermissionsUserConnectionUsername | UsersPermissionsUserConnectionEmail | UsersPermissionsUserConnectionProvider | UsersPermissionsUserConnectionConfirmed | UsersPermissionsUserConnectionBlocked | UsersPermissionsUserConnectionRole | CreateUserPayload | UpdateUserPayload | DeleteUserPayload | ComponentCoordinateCoordinate | ComponentFeatureFeature | ComponentPricePrice | ComponentTimelineTimeline;\n\nexport type Mutation = {\n  __typename?: 'Mutation';\n  createBooking?: Maybe<CreateBookingPayload>;\n  updateBooking?: Maybe<UpdateBookingPayload>;\n  deleteBooking?: Maybe<DeleteBookingPayload>;\n  createCity?: Maybe<CreateCityPayload>;\n  updateCity?: Maybe<UpdateCityPayload>;\n  deleteCity?: Maybe<DeleteCityPayload>;\n  createFeature?: Maybe<CreateFeaturePayload>;\n  updateFeature?: Maybe<UpdateFeaturePayload>;\n  deleteFeature?: Maybe<DeleteFeaturePayload>;\n  updateHomeBanner?: Maybe<UpdateHomeBannerPayload>;\n  deleteHomeBanner?: Maybe<DeleteHomeBannerPayload>;\n  createHotel?: Maybe<CreateHotelPayload>;\n  updateHotel?: Maybe<UpdateHotelPayload>;\n  deleteHotel?: Maybe<DeleteHotelPayload>;\n  createLocation?: Maybe<CreateLocationPayload>;\n  updateLocation?: Maybe<UpdateLocationPayload>;\n  deleteLocation?: Maybe<DeleteLocationPayload>;\n  createPartner?: Maybe<CreatePartnerPayload>;\n  updatePartner?: Maybe<UpdatePartnerPayload>;\n  deletePartner?: Maybe<DeletePartnerPayload>;\n  createReview?: Maybe<CreateReviewPayload>;\n  updateReview?: Maybe<UpdateReviewPayload>;\n  deleteReview?: Maybe<DeleteReviewPayload>;\n  createSubscriber?: Maybe<CreateSubscriberPayload>;\n  updateSubscriber?: Maybe<UpdateSubscriberPayload>;\n  deleteSubscriber?: Maybe<DeleteSubscriberPayload>;\n  createTrip?: Maybe<CreateTripPayload>;\n  updateTrip?: Maybe<UpdateTripPayload>;\n  deleteTrip?: Maybe<DeleteTripPayload>;\n  /** Delete one file */\n  deleteFile?: Maybe<DeleteFilePayload>;\n  /** Create a new role */\n  createRole?: Maybe<CreateRolePayload>;\n  /** Update an existing role */\n  updateRole?: Maybe<UpdateRolePayload>;\n  /** Delete an existing role */\n  deleteRole?: Maybe<DeleteRolePayload>;\n  /** Create a new user */\n  createUser?: Maybe<CreateUserPayload>;\n  /** Update an existing user */\n  updateUser?: Maybe<UpdateUserPayload>;\n  /** Delete an existing user */\n  deleteUser?: Maybe<DeleteUserPayload>;\n  createCityLocalization: City;\n  createFeatureLocalization: Feature;\n  createLocationLocalization: Location;\n  createTripLocalization: Trips;\n  upload: UploadFile;\n  multipleUpload: Array<Maybe<UploadFile>>;\n  updateFileInfo: UploadFile;\n  login: UsersPermissionsLoginPayload;\n  register: UsersPermissionsLoginPayload;\n  forgotPassword?: Maybe<UserPermissionsPasswordPayload>;\n  resetPassword?: Maybe<UsersPermissionsLoginPayload>;\n  emailConfirmation?: Maybe<UsersPermissionsLoginPayload>;\n};\n\n\nexport type MutationCreateBookingArgs = {\n  input?: Maybe<CreateBookingInput>;\n};\n\n\nexport type MutationUpdateBookingArgs = {\n  input?: Maybe<UpdateBookingInput>;\n};\n\n\nexport type MutationDeleteBookingArgs = {\n  input?: Maybe<DeleteBookingInput>;\n};\n\n\nexport type MutationCreateCityArgs = {\n  input?: Maybe<CreateCityInput>;\n};\n\n\nexport type MutationUpdateCityArgs = {\n  input?: Maybe<UpdateCityInput>;\n};\n\n\nexport type MutationDeleteCityArgs = {\n  input?: Maybe<DeleteCityInput>;\n};\n\n\nexport type MutationCreateFeatureArgs = {\n  input?: Maybe<CreateFeatureInput>;\n};\n\n\nexport type MutationUpdateFeatureArgs = {\n  input?: Maybe<UpdateFeatureInput>;\n};\n\n\nexport type MutationDeleteFeatureArgs = {\n  input?: Maybe<DeleteFeatureInput>;\n};\n\n\nexport type MutationUpdateHomeBannerArgs = {\n  input?: Maybe<UpdateHomeBannerInput>;\n};\n\n\nexport type MutationCreateHotelArgs = {\n  input?: Maybe<CreateHotelInput>;\n};\n\n\nexport type MutationUpdateHotelArgs = {\n  input?: Maybe<UpdateHotelInput>;\n};\n\n\nexport type MutationDeleteHotelArgs = {\n  input?: Maybe<DeleteHotelInput>;\n};\n\n\nexport type MutationCreateLocationArgs = {\n  input?: Maybe<CreateLocationInput>;\n};\n\n\nexport type MutationUpdateLocationArgs = {\n  input?: Maybe<UpdateLocationInput>;\n};\n\n\nexport type MutationDeleteLocationArgs = {\n  input?: Maybe<DeleteLocationInput>;\n};\n\n\nexport type MutationCreatePartnerArgs = {\n  input?: Maybe<CreatePartnerInput>;\n};\n\n\nexport type MutationUpdatePartnerArgs = {\n  input?: Maybe<UpdatePartnerInput>;\n};\n\n\nexport type MutationDeletePartnerArgs = {\n  input?: Maybe<DeletePartnerInput>;\n};\n\n\nexport type MutationCreateReviewArgs = {\n  input?: Maybe<CreateReviewInput>;\n};\n\n\nexport type MutationUpdateReviewArgs = {\n  input?: Maybe<UpdateReviewInput>;\n};\n\n\nexport type MutationDeleteReviewArgs = {\n  input?: Maybe<DeleteReviewInput>;\n};\n\n\nexport type MutationCreateSubscriberArgs = {\n  input?: Maybe<CreateSubscriberInput>;\n};\n\n\nexport type MutationUpdateSubscriberArgs = {\n  input?: Maybe<UpdateSubscriberInput>;\n};\n\n\nexport type MutationDeleteSubscriberArgs = {\n  input?: Maybe<DeleteSubscriberInput>;\n};\n\n\nexport type MutationCreateTripArgs = {\n  input?: Maybe<CreateTripInput>;\n};\n\n\nexport type MutationUpdateTripArgs = {\n  input?: Maybe<UpdateTripInput>;\n};\n\n\nexport type MutationDeleteTripArgs = {\n  input?: Maybe<DeleteTripInput>;\n};\n\n\nexport type MutationDeleteFileArgs = {\n  input?: Maybe<DeleteFileInput>;\n};\n\n\nexport type MutationCreateRoleArgs = {\n  input?: Maybe<CreateRoleInput>;\n};\n\n\nexport type MutationUpdateRoleArgs = {\n  input?: Maybe<UpdateRoleInput>;\n};\n\n\nexport type MutationDeleteRoleArgs = {\n  input?: Maybe<DeleteRoleInput>;\n};\n\n\nexport type MutationCreateUserArgs = {\n  input?: Maybe<CreateUserInput>;\n};\n\n\nexport type MutationUpdateUserArgs = {\n  input?: Maybe<UpdateUserInput>;\n};\n\n\nexport type MutationDeleteUserArgs = {\n  input?: Maybe<DeleteUserInput>;\n};\n\n\nexport type MutationCreateCityLocalizationArgs = {\n  input: UpdateCityInput;\n};\n\n\nexport type MutationCreateFeatureLocalizationArgs = {\n  input: UpdateFeatureInput;\n};\n\n\nexport type MutationCreateLocationLocalizationArgs = {\n  input: UpdateLocationInput;\n};\n\n\nexport type MutationCreateTripLocalizationArgs = {\n  input: UpdateTripInput;\n};\n\n\nexport type MutationUploadArgs = {\n  refId?: Maybe<Scalars['ID']>;\n  ref?: Maybe<Scalars['String']>;\n  field?: Maybe<Scalars['String']>;\n  source?: Maybe<Scalars['String']>;\n  info?: Maybe<FileInfoInput>;\n  file: Scalars['Upload'];\n};\n\n\nexport type MutationMultipleUploadArgs = {\n  refId?: Maybe<Scalars['ID']>;\n  ref?: Maybe<Scalars['String']>;\n  field?: Maybe<Scalars['String']>;\n  source?: Maybe<Scalars['String']>;\n  files: Array<Maybe<Scalars['Upload']>>;\n};\n\n\nexport type MutationUpdateFileInfoArgs = {\n  id: Scalars['ID'];\n  info: FileInfoInput;\n};\n\n\nexport type MutationLoginArgs = {\n  input: UsersPermissionsLoginInput;\n};\n\n\nexport type MutationRegisterArgs = {\n  input: UsersPermissionsRegisterInput;\n};\n\n\nexport type MutationForgotPasswordArgs = {\n  email: Scalars['String'];\n};\n\n\nexport type MutationResetPasswordArgs = {\n  password: Scalars['String'];\n  passwordConfirmation: Scalars['String'];\n  code: Scalars['String'];\n};\n\n\nexport type MutationEmailConfirmationArgs = {\n  confirmation: Scalars['String'];\n};\n\nexport type Partner = {\n  __typename?: 'Partner';\n  id: Scalars['ID'];\n  _id: Scalars['ID'];\n  createdAt: Scalars['DateTime'];\n  updatedAt: Scalars['DateTime'];\n  name: Scalars['String'];\n  phone: Scalars['String'];\n  address?: Maybe<Scalars['String']>;\n  email?: Maybe<Scalars['String']>;\n  agreement?: Maybe<Scalars['String']>;\n  commission: Scalars['Float'];\n  revenueSource: Enum_Partner_Revenuesource;\n  agreementStatus: Enum_Partner_Agreementstatus;\n  notes?: Maybe<Scalars['String']>;\n  phone2?: Maybe<Scalars['String']>;\n  published_at?: Maybe<Scalars['DateTime']>;\n  trips?: Maybe<Array<Maybe<Trips>>>;\n};\n\n\nexport type PartnerTripsArgs = {\n  sort?: Maybe<Scalars['String']>;\n  limit?: Maybe<Scalars['Int']>;\n  start?: Maybe<Scalars['Int']>;\n  where?: Maybe<Scalars['JSON']>;\n};\n\nexport type PartnerAggregator = {\n  __typename?: 'PartnerAggregator';\n  count?: Maybe<Scalars['Int']>;\n  totalCount?: Maybe<Scalars['Int']>;\n  sum?: Maybe<PartnerAggregatorSum>;\n  avg?: Maybe<PartnerAggregatorAvg>;\n  min?: Maybe<PartnerAggregatorMin>;\n  max?: Maybe<PartnerAggregatorMax>;\n};\n\nexport type PartnerAggregatorAvg = {\n  __typename?: 'PartnerAggregatorAvg';\n  commission?: Maybe<Scalars['Float']>;\n};\n\nexport type PartnerAggregatorMax = {\n  __typename?: 'PartnerAggregatorMax';\n  commission?: Maybe<Scalars['Float']>;\n};\n\nexport type PartnerAggregatorMin = {\n  __typename?: 'PartnerAggregatorMin';\n  commission?: Maybe<Scalars['Float']>;\n};\n\nexport type PartnerAggregatorSum = {\n  __typename?: 'PartnerAggregatorSum';\n  commission?: Maybe<Scalars['Float']>;\n};\n\nexport type PartnerConnection = {\n  __typename?: 'PartnerConnection';\n  values?: Maybe<Array<Maybe<Partner>>>;\n  groupBy?: Maybe<PartnerGroupBy>;\n  aggregate?: Maybe<PartnerAggregator>;\n};\n\nexport type PartnerConnectionAddress = {\n  __typename?: 'PartnerConnectionAddress';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<PartnerConnection>;\n};\n\nexport type PartnerConnectionAgreement = {\n  __typename?: 'PartnerConnectionAgreement';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<PartnerConnection>;\n};\n\nexport type PartnerConnectionAgreementStatus = {\n  __typename?: 'PartnerConnectionAgreementStatus';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<PartnerConnection>;\n};\n\nexport type PartnerConnectionCommission = {\n  __typename?: 'PartnerConnectionCommission';\n  key?: Maybe<Scalars['Float']>;\n  connection?: Maybe<PartnerConnection>;\n};\n\nexport type PartnerConnectionCreatedAt = {\n  __typename?: 'PartnerConnectionCreatedAt';\n  key?: Maybe<Scalars['DateTime']>;\n  connection?: Maybe<PartnerConnection>;\n};\n\nexport type PartnerConnectionEmail = {\n  __typename?: 'PartnerConnectionEmail';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<PartnerConnection>;\n};\n\nexport type PartnerConnectionId = {\n  __typename?: 'PartnerConnectionId';\n  key?: Maybe<Scalars['ID']>;\n  connection?: Maybe<PartnerConnection>;\n};\n\nexport type PartnerConnectionName = {\n  __typename?: 'PartnerConnectionName';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<PartnerConnection>;\n};\n\nexport type PartnerConnectionNotes = {\n  __typename?: 'PartnerConnectionNotes';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<PartnerConnection>;\n};\n\nexport type PartnerConnectionPhone = {\n  __typename?: 'PartnerConnectionPhone';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<PartnerConnection>;\n};\n\nexport type PartnerConnectionPhone2 = {\n  __typename?: 'PartnerConnectionPhone2';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<PartnerConnection>;\n};\n\nexport type PartnerConnectionPublished_At = {\n  __typename?: 'PartnerConnectionPublished_at';\n  key?: Maybe<Scalars['DateTime']>;\n  connection?: Maybe<PartnerConnection>;\n};\n\nexport type PartnerConnectionRevenueSource = {\n  __typename?: 'PartnerConnectionRevenueSource';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<PartnerConnection>;\n};\n\nexport type PartnerConnectionUpdatedAt = {\n  __typename?: 'PartnerConnectionUpdatedAt';\n  key?: Maybe<Scalars['DateTime']>;\n  connection?: Maybe<PartnerConnection>;\n};\n\nexport type PartnerConnection_Id = {\n  __typename?: 'PartnerConnection_id';\n  key?: Maybe<Scalars['ID']>;\n  connection?: Maybe<PartnerConnection>;\n};\n\nexport type PartnerGroupBy = {\n  __typename?: 'PartnerGroupBy';\n  id?: Maybe<Array<Maybe<PartnerConnectionId>>>;\n  _id?: Maybe<Array<Maybe<PartnerConnection_Id>>>;\n  createdAt?: Maybe<Array<Maybe<PartnerConnectionCreatedAt>>>;\n  updatedAt?: Maybe<Array<Maybe<PartnerConnectionUpdatedAt>>>;\n  name?: Maybe<Array<Maybe<PartnerConnectionName>>>;\n  phone?: Maybe<Array<Maybe<PartnerConnectionPhone>>>;\n  address?: Maybe<Array<Maybe<PartnerConnectionAddress>>>;\n  email?: Maybe<Array<Maybe<PartnerConnectionEmail>>>;\n  agreement?: Maybe<Array<Maybe<PartnerConnectionAgreement>>>;\n  commission?: Maybe<Array<Maybe<PartnerConnectionCommission>>>;\n  revenueSource?: Maybe<Array<Maybe<PartnerConnectionRevenueSource>>>;\n  agreementStatus?: Maybe<Array<Maybe<PartnerConnectionAgreementStatus>>>;\n  notes?: Maybe<Array<Maybe<PartnerConnectionNotes>>>;\n  phone2?: Maybe<Array<Maybe<PartnerConnectionPhone2>>>;\n  published_at?: Maybe<Array<Maybe<PartnerConnectionPublished_At>>>;\n};\n\nexport type PartnerInput = {\n  name: Scalars['String'];\n  phone: Scalars['String'];\n  address?: Maybe<Scalars['String']>;\n  email?: Maybe<Scalars['String']>;\n  trips?: Maybe<Array<Maybe<Scalars['ID']>>>;\n  agreement?: Maybe<Scalars['String']>;\n  commission: Scalars['Float'];\n  revenueSource: Enum_Partner_Revenuesource;\n  agreementStatus: Enum_Partner_Agreementstatus;\n  notes?: Maybe<Scalars['String']>;\n  phone2?: Maybe<Scalars['String']>;\n  published_at?: Maybe<Scalars['DateTime']>;\n  created_by?: Maybe<Scalars['ID']>;\n  updated_by?: Maybe<Scalars['ID']>;\n};\n\nexport enum PublicationState {\n  Live = 'LIVE',\n  Preview = 'PREVIEW'\n}\n\nexport type Query = {\n  __typename?: 'Query';\n  booking?: Maybe<Booking>;\n  bookings?: Maybe<Array<Maybe<Booking>>>;\n  bookingsConnection?: Maybe<BookingConnection>;\n  city?: Maybe<City>;\n  cities?: Maybe<Array<Maybe<City>>>;\n  citiesConnection?: Maybe<CityConnection>;\n  feature?: Maybe<Feature>;\n  features?: Maybe<Array<Maybe<Feature>>>;\n  featuresConnection?: Maybe<FeatureConnection>;\n  homeBanner?: Maybe<HomeBanner>;\n  hotel?: Maybe<Hotels>;\n  hotels?: Maybe<Array<Maybe<Hotels>>>;\n  hotelsConnection?: Maybe<HotelsConnection>;\n  location?: Maybe<Location>;\n  locations?: Maybe<Array<Maybe<Location>>>;\n  locationsConnection?: Maybe<LocationConnection>;\n  partner?: Maybe<Partner>;\n  partners?: Maybe<Array<Maybe<Partner>>>;\n  partnersConnection?: Maybe<PartnerConnection>;\n  review?: Maybe<Review>;\n  reviews?: Maybe<Array<Maybe<Review>>>;\n  reviewsConnection?: Maybe<ReviewConnection>;\n  subscriber?: Maybe<Subscribers>;\n  subscribers?: Maybe<Array<Maybe<Subscribers>>>;\n  subscribersConnection?: Maybe<SubscribersConnection>;\n  trip?: Maybe<Trips>;\n  trips?: Maybe<Array<Maybe<Trips>>>;\n  tripsConnection?: Maybe<TripsConnection>;\n  files?: Maybe<Array<Maybe<UploadFile>>>;\n  filesConnection?: Maybe<UploadFileConnection>;\n  role?: Maybe<UsersPermissionsRole>;\n  /** Retrieve all the existing roles. You can't apply filters on this query. */\n  roles?: Maybe<Array<Maybe<UsersPermissionsRole>>>;\n  rolesConnection?: Maybe<UsersPermissionsRoleConnection>;\n  user?: Maybe<UsersPermissionsUser>;\n  users?: Maybe<Array<Maybe<UsersPermissionsUser>>>;\n  usersConnection?: Maybe<UsersPermissionsUserConnection>;\n  me?: Maybe<UsersPermissionsMe>;\n};\n\n\nexport type QueryBookingArgs = {\n  id: Scalars['ID'];\n  publicationState?: Maybe<PublicationState>;\n};\n\n\nexport type QueryBookingsArgs = {\n  sort?: Maybe<Scalars['String']>;\n  limit?: Maybe<Scalars['Int']>;\n  start?: Maybe<Scalars['Int']>;\n  where?: Maybe<Scalars['JSON']>;\n  publicationState?: Maybe<PublicationState>;\n};\n\n\nexport type QueryBookingsConnectionArgs = {\n  sort?: Maybe<Scalars['String']>;\n  limit?: Maybe<Scalars['Int']>;\n  start?: Maybe<Scalars['Int']>;\n  where?: Maybe<Scalars['JSON']>;\n};\n\n\nexport type QueryCityArgs = {\n  id: Scalars['ID'];\n  publicationState?: Maybe<PublicationState>;\n};\n\n\nexport type QueryCitiesArgs = {\n  sort?: Maybe<Scalars['String']>;\n  limit?: Maybe<Scalars['Int']>;\n  start?: Maybe<Scalars['Int']>;\n  where?: Maybe<Scalars['JSON']>;\n  publicationState?: Maybe<PublicationState>;\n  locale?: Maybe<Scalars['String']>;\n};\n\n\nexport type QueryCitiesConnectionArgs = {\n  sort?: Maybe<Scalars['String']>;\n  limit?: Maybe<Scalars['Int']>;\n  start?: Maybe<Scalars['Int']>;\n  where?: Maybe<Scalars['JSON']>;\n  locale?: Maybe<Scalars['String']>;\n};\n\n\nexport type QueryFeatureArgs = {\n  id: Scalars['ID'];\n  publicationState?: Maybe<PublicationState>;\n};\n\n\nexport type QueryFeaturesArgs = {\n  sort?: Maybe<Scalars['String']>;\n  limit?: Maybe<Scalars['Int']>;\n  start?: Maybe<Scalars['Int']>;\n  where?: Maybe<Scalars['JSON']>;\n  publicationState?: Maybe<PublicationState>;\n  locale?: Maybe<Scalars['String']>;\n};\n\n\nexport type QueryFeaturesConnectionArgs = {\n  sort?: Maybe<Scalars['String']>;\n  limit?: Maybe<Scalars['Int']>;\n  start?: Maybe<Scalars['Int']>;\n  where?: Maybe<Scalars['JSON']>;\n  locale?: Maybe<Scalars['String']>;\n};\n\n\nexport type QueryHomeBannerArgs = {\n  publicationState?: Maybe<PublicationState>;\n};\n\n\nexport type QueryHotelArgs = {\n  id: Scalars['ID'];\n  publicationState?: Maybe<PublicationState>;\n};\n\n\nexport type QueryHotelsArgs = {\n  sort?: Maybe<Scalars['String']>;\n  limit?: Maybe<Scalars['Int']>;\n  start?: Maybe<Scalars['Int']>;\n  where?: Maybe<Scalars['JSON']>;\n  publicationState?: Maybe<PublicationState>;\n};\n\n\nexport type QueryHotelsConnectionArgs = {\n  sort?: Maybe<Scalars['String']>;\n  limit?: Maybe<Scalars['Int']>;\n  start?: Maybe<Scalars['Int']>;\n  where?: Maybe<Scalars['JSON']>;\n};\n\n\nexport type QueryLocationArgs = {\n  id: Scalars['ID'];\n  publicationState?: Maybe<PublicationState>;\n};\n\n\nexport type QueryLocationsArgs = {\n  sort?: Maybe<Scalars['String']>;\n  limit?: Maybe<Scalars['Int']>;\n  start?: Maybe<Scalars['Int']>;\n  where?: Maybe<Scalars['JSON']>;\n  publicationState?: Maybe<PublicationState>;\n  locale?: Maybe<Scalars['String']>;\n};\n\n\nexport type QueryLocationsConnectionArgs = {\n  sort?: Maybe<Scalars['String']>;\n  limit?: Maybe<Scalars['Int']>;\n  start?: Maybe<Scalars['Int']>;\n  where?: Maybe<Scalars['JSON']>;\n  locale?: Maybe<Scalars['String']>;\n};\n\n\nexport type QueryPartnerArgs = {\n  id: Scalars['ID'];\n  publicationState?: Maybe<PublicationState>;\n};\n\n\nexport type QueryPartnersArgs = {\n  sort?: Maybe<Scalars['String']>;\n  limit?: Maybe<Scalars['Int']>;\n  start?: Maybe<Scalars['Int']>;\n  where?: Maybe<Scalars['JSON']>;\n  publicationState?: Maybe<PublicationState>;\n};\n\n\nexport type QueryPartnersConnectionArgs = {\n  sort?: Maybe<Scalars['String']>;\n  limit?: Maybe<Scalars['Int']>;\n  start?: Maybe<Scalars['Int']>;\n  where?: Maybe<Scalars['JSON']>;\n};\n\n\nexport type QueryReviewArgs = {\n  id: Scalars['ID'];\n  publicationState?: Maybe<PublicationState>;\n};\n\n\nexport type QueryReviewsArgs = {\n  sort?: Maybe<Scalars['String']>;\n  limit?: Maybe<Scalars['Int']>;\n  start?: Maybe<Scalars['Int']>;\n  where?: Maybe<Scalars['JSON']>;\n  publicationState?: Maybe<PublicationState>;\n};\n\n\nexport type QueryReviewsConnectionArgs = {\n  sort?: Maybe<Scalars['String']>;\n  limit?: Maybe<Scalars['Int']>;\n  start?: Maybe<Scalars['Int']>;\n  where?: Maybe<Scalars['JSON']>;\n};\n\n\nexport type QuerySubscriberArgs = {\n  id: Scalars['ID'];\n  publicationState?: Maybe<PublicationState>;\n};\n\n\nexport type QuerySubscribersArgs = {\n  sort?: Maybe<Scalars['String']>;\n  limit?: Maybe<Scalars['Int']>;\n  start?: Maybe<Scalars['Int']>;\n  where?: Maybe<Scalars['JSON']>;\n  publicationState?: Maybe<PublicationState>;\n};\n\n\nexport type QuerySubscribersConnectionArgs = {\n  sort?: Maybe<Scalars['String']>;\n  limit?: Maybe<Scalars['Int']>;\n  start?: Maybe<Scalars['Int']>;\n  where?: Maybe<Scalars['JSON']>;\n};\n\n\nexport type QueryTripArgs = {\n  id: Scalars['ID'];\n  publicationState?: Maybe<PublicationState>;\n};\n\n\nexport type QueryTripsArgs = {\n  sort?: Maybe<Scalars['String']>;\n  limit?: Maybe<Scalars['Int']>;\n  start?: Maybe<Scalars['Int']>;\n  where?: Maybe<Scalars['JSON']>;\n  publicationState?: Maybe<PublicationState>;\n  locale?: Maybe<Scalars['String']>;\n};\n\n\nexport type QueryTripsConnectionArgs = {\n  sort?: Maybe<Scalars['String']>;\n  limit?: Maybe<Scalars['Int']>;\n  start?: Maybe<Scalars['Int']>;\n  where?: Maybe<Scalars['JSON']>;\n  locale?: Maybe<Scalars['String']>;\n};\n\n\nexport type QueryFilesArgs = {\n  sort?: Maybe<Scalars['String']>;\n  limit?: Maybe<Scalars['Int']>;\n  start?: Maybe<Scalars['Int']>;\n  where?: Maybe<Scalars['JSON']>;\n  publicationState?: Maybe<PublicationState>;\n};\n\n\nexport type QueryFilesConnectionArgs = {\n  sort?: Maybe<Scalars['String']>;\n  limit?: Maybe<Scalars['Int']>;\n  start?: Maybe<Scalars['Int']>;\n  where?: Maybe<Scalars['JSON']>;\n};\n\n\nexport type QueryRoleArgs = {\n  id: Scalars['ID'];\n  publicationState?: Maybe<PublicationState>;\n};\n\n\nexport type QueryRolesArgs = {\n  sort?: Maybe<Scalars['String']>;\n  limit?: Maybe<Scalars['Int']>;\n  start?: Maybe<Scalars['Int']>;\n  where?: Maybe<Scalars['JSON']>;\n  publicationState?: Maybe<PublicationState>;\n};\n\n\nexport type QueryRolesConnectionArgs = {\n  sort?: Maybe<Scalars['String']>;\n  limit?: Maybe<Scalars['Int']>;\n  start?: Maybe<Scalars['Int']>;\n  where?: Maybe<Scalars['JSON']>;\n};\n\n\nexport type QueryUserArgs = {\n  id: Scalars['ID'];\n  publicationState?: Maybe<PublicationState>;\n};\n\n\nexport type QueryUsersArgs = {\n  sort?: Maybe<Scalars['String']>;\n  limit?: Maybe<Scalars['Int']>;\n  start?: Maybe<Scalars['Int']>;\n  where?: Maybe<Scalars['JSON']>;\n  publicationState?: Maybe<PublicationState>;\n};\n\n\nexport type QueryUsersConnectionArgs = {\n  sort?: Maybe<Scalars['String']>;\n  limit?: Maybe<Scalars['Int']>;\n  start?: Maybe<Scalars['Int']>;\n  where?: Maybe<Scalars['JSON']>;\n};\n\nexport type Review = {\n  __typename?: 'Review';\n  id: Scalars['ID'];\n  _id: Scalars['ID'];\n  createdAt: Scalars['DateTime'];\n  updatedAt: Scalars['DateTime'];\n  text?: Maybe<Scalars['String']>;\n  rating: Scalars['Float'];\n  author?: Maybe<UsersPermissionsUser>;\n  active?: Maybe<Scalars['Boolean']>;\n  trip?: Maybe<Trips>;\n  published_at?: Maybe<Scalars['DateTime']>;\n};\n\nexport type ReviewAggregator = {\n  __typename?: 'ReviewAggregator';\n  count?: Maybe<Scalars['Int']>;\n  totalCount?: Maybe<Scalars['Int']>;\n  sum?: Maybe<ReviewAggregatorSum>;\n  avg?: Maybe<ReviewAggregatorAvg>;\n  min?: Maybe<ReviewAggregatorMin>;\n  max?: Maybe<ReviewAggregatorMax>;\n};\n\nexport type ReviewAggregatorAvg = {\n  __typename?: 'ReviewAggregatorAvg';\n  rating?: Maybe<Scalars['Float']>;\n};\n\nexport type ReviewAggregatorMax = {\n  __typename?: 'ReviewAggregatorMax';\n  rating?: Maybe<Scalars['Float']>;\n};\n\nexport type ReviewAggregatorMin = {\n  __typename?: 'ReviewAggregatorMin';\n  rating?: Maybe<Scalars['Float']>;\n};\n\nexport type ReviewAggregatorSum = {\n  __typename?: 'ReviewAggregatorSum';\n  rating?: Maybe<Scalars['Float']>;\n};\n\nexport type ReviewConnection = {\n  __typename?: 'ReviewConnection';\n  values?: Maybe<Array<Maybe<Review>>>;\n  groupBy?: Maybe<ReviewGroupBy>;\n  aggregate?: Maybe<ReviewAggregator>;\n};\n\nexport type ReviewConnectionActive = {\n  __typename?: 'ReviewConnectionActive';\n  key?: Maybe<Scalars['Boolean']>;\n  connection?: Maybe<ReviewConnection>;\n};\n\nexport type ReviewConnectionAuthor = {\n  __typename?: 'ReviewConnectionAuthor';\n  key?: Maybe<Scalars['ID']>;\n  connection?: Maybe<ReviewConnection>;\n};\n\nexport type ReviewConnectionCreatedAt = {\n  __typename?: 'ReviewConnectionCreatedAt';\n  key?: Maybe<Scalars['DateTime']>;\n  connection?: Maybe<ReviewConnection>;\n};\n\nexport type ReviewConnectionId = {\n  __typename?: 'ReviewConnectionId';\n  key?: Maybe<Scalars['ID']>;\n  connection?: Maybe<ReviewConnection>;\n};\n\nexport type ReviewConnectionPublished_At = {\n  __typename?: 'ReviewConnectionPublished_at';\n  key?: Maybe<Scalars['DateTime']>;\n  connection?: Maybe<ReviewConnection>;\n};\n\nexport type ReviewConnectionRating = {\n  __typename?: 'ReviewConnectionRating';\n  key?: Maybe<Scalars['Float']>;\n  connection?: Maybe<ReviewConnection>;\n};\n\nexport type ReviewConnectionText = {\n  __typename?: 'ReviewConnectionText';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<ReviewConnection>;\n};\n\nexport type ReviewConnectionTrip = {\n  __typename?: 'ReviewConnectionTrip';\n  key?: Maybe<Scalars['ID']>;\n  connection?: Maybe<ReviewConnection>;\n};\n\nexport type ReviewConnectionUpdatedAt = {\n  __typename?: 'ReviewConnectionUpdatedAt';\n  key?: Maybe<Scalars['DateTime']>;\n  connection?: Maybe<ReviewConnection>;\n};\n\nexport type ReviewConnection_Id = {\n  __typename?: 'ReviewConnection_id';\n  key?: Maybe<Scalars['ID']>;\n  connection?: Maybe<ReviewConnection>;\n};\n\nexport type ReviewGroupBy = {\n  __typename?: 'ReviewGroupBy';\n  id?: Maybe<Array<Maybe<ReviewConnectionId>>>;\n  _id?: Maybe<Array<Maybe<ReviewConnection_Id>>>;\n  createdAt?: Maybe<Array<Maybe<ReviewConnectionCreatedAt>>>;\n  updatedAt?: Maybe<Array<Maybe<ReviewConnectionUpdatedAt>>>;\n  text?: Maybe<Array<Maybe<ReviewConnectionText>>>;\n  rating?: Maybe<Array<Maybe<ReviewConnectionRating>>>;\n  author?: Maybe<Array<Maybe<ReviewConnectionAuthor>>>;\n  active?: Maybe<Array<Maybe<ReviewConnectionActive>>>;\n  trip?: Maybe<Array<Maybe<ReviewConnectionTrip>>>;\n  published_at?: Maybe<Array<Maybe<ReviewConnectionPublished_At>>>;\n};\n\nexport type ReviewInput = {\n  text?: Maybe<Scalars['String']>;\n  rating: Scalars['Float'];\n  author?: Maybe<Scalars['ID']>;\n  active?: Maybe<Scalars['Boolean']>;\n  trip?: Maybe<Scalars['ID']>;\n  published_at?: Maybe<Scalars['DateTime']>;\n  created_by?: Maybe<Scalars['ID']>;\n  updated_by?: Maybe<Scalars['ID']>;\n};\n\nexport type RoleInput = {\n  name: Scalars['String'];\n  description?: Maybe<Scalars['String']>;\n  type?: Maybe<Scalars['String']>;\n  permissions?: Maybe<Array<Maybe<Scalars['ID']>>>;\n  users?: Maybe<Array<Maybe<Scalars['ID']>>>;\n  created_by?: Maybe<Scalars['ID']>;\n  updated_by?: Maybe<Scalars['ID']>;\n};\n\nexport type SubscriberInput = {\n  email: Scalars['String'];\n  published_at?: Maybe<Scalars['DateTime']>;\n  created_by?: Maybe<Scalars['ID']>;\n  updated_by?: Maybe<Scalars['ID']>;\n};\n\nexport type Subscribers = {\n  __typename?: 'Subscribers';\n  id: Scalars['ID'];\n  _id: Scalars['ID'];\n  createdAt: Scalars['DateTime'];\n  updatedAt: Scalars['DateTime'];\n  email: Scalars['String'];\n  published_at?: Maybe<Scalars['DateTime']>;\n};\n\nexport type SubscribersAggregator = {\n  __typename?: 'SubscribersAggregator';\n  count?: Maybe<Scalars['Int']>;\n  totalCount?: Maybe<Scalars['Int']>;\n};\n\nexport type SubscribersConnection = {\n  __typename?: 'SubscribersConnection';\n  values?: Maybe<Array<Maybe<Subscribers>>>;\n  groupBy?: Maybe<SubscribersGroupBy>;\n  aggregate?: Maybe<SubscribersAggregator>;\n};\n\nexport type SubscribersConnectionCreatedAt = {\n  __typename?: 'SubscribersConnectionCreatedAt';\n  key?: Maybe<Scalars['DateTime']>;\n  connection?: Maybe<SubscribersConnection>;\n};\n\nexport type SubscribersConnectionEmail = {\n  __typename?: 'SubscribersConnectionEmail';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<SubscribersConnection>;\n};\n\nexport type SubscribersConnectionId = {\n  __typename?: 'SubscribersConnectionId';\n  key?: Maybe<Scalars['ID']>;\n  connection?: Maybe<SubscribersConnection>;\n};\n\nexport type SubscribersConnectionPublished_At = {\n  __typename?: 'SubscribersConnectionPublished_at';\n  key?: Maybe<Scalars['DateTime']>;\n  connection?: Maybe<SubscribersConnection>;\n};\n\nexport type SubscribersConnectionUpdatedAt = {\n  __typename?: 'SubscribersConnectionUpdatedAt';\n  key?: Maybe<Scalars['DateTime']>;\n  connection?: Maybe<SubscribersConnection>;\n};\n\nexport type SubscribersConnection_Id = {\n  __typename?: 'SubscribersConnection_id';\n  key?: Maybe<Scalars['ID']>;\n  connection?: Maybe<SubscribersConnection>;\n};\n\nexport type SubscribersGroupBy = {\n  __typename?: 'SubscribersGroupBy';\n  id?: Maybe<Array<Maybe<SubscribersConnectionId>>>;\n  _id?: Maybe<Array<Maybe<SubscribersConnection_Id>>>;\n  createdAt?: Maybe<Array<Maybe<SubscribersConnectionCreatedAt>>>;\n  updatedAt?: Maybe<Array<Maybe<SubscribersConnectionUpdatedAt>>>;\n  email?: Maybe<Array<Maybe<SubscribersConnectionEmail>>>;\n  published_at?: Maybe<Array<Maybe<SubscribersConnectionPublished_At>>>;\n};\n\n\nexport type TripInput = {\n  name: Scalars['String'];\n  previewImage?: Maybe<Scalars['ID']>;\n  active?: Maybe<Scalars['Boolean']>;\n  trip_type: Enum_Trips_Trip_Type;\n  description?: Maybe<Scalars['String']>;\n  duration: Scalars['Int'];\n  partner?: Maybe<Scalars['ID']>;\n  currency?: Maybe<Enum_Trips_Currency>;\n  city?: Maybe<Scalars['ID']>;\n  features?: Maybe<Array<ComponentFeatureFeatureInput>>;\n  basePrice: Scalars['Int'];\n  basePeopleCount: Scalars['Int'];\n  discount?: Maybe<Scalars['Float']>;\n  travelType: Enum_Trips_Traveltype;\n  hotel?: Maybe<Scalars['ID']>;\n  plan?: Maybe<Array<ComponentTimelineTimelineInput>>;\n  sequence: Scalars['String'];\n  localizations?: Maybe<Array<Maybe<Scalars['ID']>>>;\n  locale?: Maybe<Scalars['String']>;\n  published_at?: Maybe<Scalars['DateTime']>;\n  created_by?: Maybe<Scalars['ID']>;\n  updated_by?: Maybe<Scalars['ID']>;\n};\n\nexport type Trips = {\n  __typename?: 'Trips';\n  id: Scalars['ID'];\n  _id: Scalars['ID'];\n  createdAt: Scalars['DateTime'];\n  updatedAt: Scalars['DateTime'];\n  name: Scalars['String'];\n  previewImage?: Maybe<UploadFile>;\n  active?: Maybe<Scalars['Boolean']>;\n  trip_type: Enum_Trips_Trip_Type;\n  description?: Maybe<Scalars['String']>;\n  duration: Scalars['Int'];\n  partner?: Maybe<Partner>;\n  currency?: Maybe<Enum_Trips_Currency>;\n  city?: Maybe<City>;\n  features?: Maybe<Array<Maybe<ComponentFeatureFeature>>>;\n  basePrice: Scalars['Int'];\n  basePeopleCount: Scalars['Int'];\n  discount?: Maybe<Scalars['Float']>;\n  travelType: Enum_Trips_Traveltype;\n  hotel?: Maybe<Hotels>;\n  plan?: Maybe<Array<Maybe<ComponentTimelineTimeline>>>;\n  locale?: Maybe<Scalars['String']>;\n  published_at?: Maybe<Scalars['DateTime']>;\n  localizations?: Maybe<Array<Maybe<Trips>>>;\n};\n\n\nexport type TripsLocalizationsArgs = {\n  sort?: Maybe<Scalars['String']>;\n  limit?: Maybe<Scalars['Int']>;\n  start?: Maybe<Scalars['Int']>;\n  where?: Maybe<Scalars['JSON']>;\n};\n\nexport type TripsAggregator = {\n  __typename?: 'TripsAggregator';\n  count?: Maybe<Scalars['Int']>;\n  totalCount?: Maybe<Scalars['Int']>;\n  sum?: Maybe<TripsAggregatorSum>;\n  avg?: Maybe<TripsAggregatorAvg>;\n  min?: Maybe<TripsAggregatorMin>;\n  max?: Maybe<TripsAggregatorMax>;\n};\n\nexport type TripsAggregatorAvg = {\n  __typename?: 'TripsAggregatorAvg';\n  duration?: Maybe<Scalars['Float']>;\n  basePrice?: Maybe<Scalars['Float']>;\n  basePeopleCount?: Maybe<Scalars['Float']>;\n  discount?: Maybe<Scalars['Float']>;\n};\n\nexport type TripsAggregatorMax = {\n  __typename?: 'TripsAggregatorMax';\n  duration?: Maybe<Scalars['Float']>;\n  basePrice?: Maybe<Scalars['Float']>;\n  basePeopleCount?: Maybe<Scalars['Float']>;\n  discount?: Maybe<Scalars['Float']>;\n};\n\nexport type TripsAggregatorMin = {\n  __typename?: 'TripsAggregatorMin';\n  duration?: Maybe<Scalars['Float']>;\n  basePrice?: Maybe<Scalars['Float']>;\n  basePeopleCount?: Maybe<Scalars['Float']>;\n  discount?: Maybe<Scalars['Float']>;\n};\n\nexport type TripsAggregatorSum = {\n  __typename?: 'TripsAggregatorSum';\n  duration?: Maybe<Scalars['Float']>;\n  basePrice?: Maybe<Scalars['Float']>;\n  basePeopleCount?: Maybe<Scalars['Float']>;\n  discount?: Maybe<Scalars['Float']>;\n};\n\nexport type TripsConnection = {\n  __typename?: 'TripsConnection';\n  values?: Maybe<Array<Maybe<Trips>>>;\n  groupBy?: Maybe<TripsGroupBy>;\n  aggregate?: Maybe<TripsAggregator>;\n};\n\nexport type TripsConnectionActive = {\n  __typename?: 'TripsConnectionActive';\n  key?: Maybe<Scalars['Boolean']>;\n  connection?: Maybe<TripsConnection>;\n};\n\nexport type TripsConnectionBasePeopleCount = {\n  __typename?: 'TripsConnectionBasePeopleCount';\n  key?: Maybe<Scalars['Int']>;\n  connection?: Maybe<TripsConnection>;\n};\n\nexport type TripsConnectionBasePrice = {\n  __typename?: 'TripsConnectionBasePrice';\n  key?: Maybe<Scalars['Int']>;\n  connection?: Maybe<TripsConnection>;\n};\n\nexport type TripsConnectionCity = {\n  __typename?: 'TripsConnectionCity';\n  key?: Maybe<Scalars['ID']>;\n  connection?: Maybe<TripsConnection>;\n};\n\nexport type TripsConnectionCreatedAt = {\n  __typename?: 'TripsConnectionCreatedAt';\n  key?: Maybe<Scalars['DateTime']>;\n  connection?: Maybe<TripsConnection>;\n};\n\nexport type TripsConnectionCurrency = {\n  __typename?: 'TripsConnectionCurrency';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<TripsConnection>;\n};\n\nexport type TripsConnectionDescription = {\n  __typename?: 'TripsConnectionDescription';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<TripsConnection>;\n};\n\nexport type TripsConnectionDiscount = {\n  __typename?: 'TripsConnectionDiscount';\n  key?: Maybe<Scalars['Float']>;\n  connection?: Maybe<TripsConnection>;\n};\n\nexport type TripsConnectionDuration = {\n  __typename?: 'TripsConnectionDuration';\n  key?: Maybe<Scalars['Int']>;\n  connection?: Maybe<TripsConnection>;\n};\n\nexport type TripsConnectionHotel = {\n  __typename?: 'TripsConnectionHotel';\n  key?: Maybe<Scalars['ID']>;\n  connection?: Maybe<TripsConnection>;\n};\n\nexport type TripsConnectionId = {\n  __typename?: 'TripsConnectionId';\n  key?: Maybe<Scalars['ID']>;\n  connection?: Maybe<TripsConnection>;\n};\n\nexport type TripsConnectionLocale = {\n  __typename?: 'TripsConnectionLocale';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<TripsConnection>;\n};\n\nexport type TripsConnectionName = {\n  __typename?: 'TripsConnectionName';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<TripsConnection>;\n};\n\nexport type TripsConnectionPartner = {\n  __typename?: 'TripsConnectionPartner';\n  key?: Maybe<Scalars['ID']>;\n  connection?: Maybe<TripsConnection>;\n};\n\nexport type TripsConnectionPreviewImage = {\n  __typename?: 'TripsConnectionPreviewImage';\n  key?: Maybe<Scalars['ID']>;\n  connection?: Maybe<TripsConnection>;\n};\n\nexport type TripsConnectionPublished_At = {\n  __typename?: 'TripsConnectionPublished_at';\n  key?: Maybe<Scalars['DateTime']>;\n  connection?: Maybe<TripsConnection>;\n};\n\nexport type TripsConnectionTravelType = {\n  __typename?: 'TripsConnectionTravelType';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<TripsConnection>;\n};\n\nexport type TripsConnectionTrip_Type = {\n  __typename?: 'TripsConnectionTrip_type';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<TripsConnection>;\n};\n\nexport type TripsConnectionUpdatedAt = {\n  __typename?: 'TripsConnectionUpdatedAt';\n  key?: Maybe<Scalars['DateTime']>;\n  connection?: Maybe<TripsConnection>;\n};\n\nexport type TripsConnection_Id = {\n  __typename?: 'TripsConnection_id';\n  key?: Maybe<Scalars['ID']>;\n  connection?: Maybe<TripsConnection>;\n};\n\nexport type TripsGroupBy = {\n  __typename?: 'TripsGroupBy';\n  id?: Maybe<Array<Maybe<TripsConnectionId>>>;\n  _id?: Maybe<Array<Maybe<TripsConnection_Id>>>;\n  createdAt?: Maybe<Array<Maybe<TripsConnectionCreatedAt>>>;\n  updatedAt?: Maybe<Array<Maybe<TripsConnectionUpdatedAt>>>;\n  name?: Maybe<Array<Maybe<TripsConnectionName>>>;\n  previewImage?: Maybe<Array<Maybe<TripsConnectionPreviewImage>>>;\n  active?: Maybe<Array<Maybe<TripsConnectionActive>>>;\n  trip_type?: Maybe<Array<Maybe<TripsConnectionTrip_Type>>>;\n  description?: Maybe<Array<Maybe<TripsConnectionDescription>>>;\n  duration?: Maybe<Array<Maybe<TripsConnectionDuration>>>;\n  partner?: Maybe<Array<Maybe<TripsConnectionPartner>>>;\n  currency?: Maybe<Array<Maybe<TripsConnectionCurrency>>>;\n  city?: Maybe<Array<Maybe<TripsConnectionCity>>>;\n  basePrice?: Maybe<Array<Maybe<TripsConnectionBasePrice>>>;\n  basePeopleCount?: Maybe<Array<Maybe<TripsConnectionBasePeopleCount>>>;\n  discount?: Maybe<Array<Maybe<TripsConnectionDiscount>>>;\n  travelType?: Maybe<Array<Maybe<TripsConnectionTravelType>>>;\n  hotel?: Maybe<Array<Maybe<TripsConnectionHotel>>>;\n  locale?: Maybe<Array<Maybe<TripsConnectionLocale>>>;\n  published_at?: Maybe<Array<Maybe<TripsConnectionPublished_At>>>;\n};\n\n\nexport type UploadFile = {\n  __typename?: 'UploadFile';\n  id: Scalars['ID'];\n  _id: Scalars['ID'];\n  createdAt: Scalars['DateTime'];\n  updatedAt: Scalars['DateTime'];\n  name: Scalars['String'];\n  alternativeText?: Maybe<Scalars['String']>;\n  caption?: Maybe<Scalars['String']>;\n  width?: Maybe<Scalars['Int']>;\n  height?: Maybe<Scalars['Int']>;\n  formats?: Maybe<Scalars['JSON']>;\n  hash: Scalars['String'];\n  ext?: Maybe<Scalars['String']>;\n  mime: Scalars['String'];\n  size: Scalars['Float'];\n  url: Scalars['String'];\n  previewUrl?: Maybe<Scalars['String']>;\n  provider: Scalars['String'];\n  provider_metadata?: Maybe<Scalars['JSON']>;\n  related?: Maybe<Array<Maybe<Morph>>>;\n};\n\n\nexport type UploadFileRelatedArgs = {\n  sort?: Maybe<Scalars['String']>;\n  limit?: Maybe<Scalars['Int']>;\n  start?: Maybe<Scalars['Int']>;\n  where?: Maybe<Scalars['JSON']>;\n};\n\nexport type UploadFileAggregator = {\n  __typename?: 'UploadFileAggregator';\n  count?: Maybe<Scalars['Int']>;\n  totalCount?: Maybe<Scalars['Int']>;\n  sum?: Maybe<UploadFileAggregatorSum>;\n  avg?: Maybe<UploadFileAggregatorAvg>;\n  min?: Maybe<UploadFileAggregatorMin>;\n  max?: Maybe<UploadFileAggregatorMax>;\n};\n\nexport type UploadFileAggregatorAvg = {\n  __typename?: 'UploadFileAggregatorAvg';\n  width?: Maybe<Scalars['Float']>;\n  height?: Maybe<Scalars['Float']>;\n  size?: Maybe<Scalars['Float']>;\n};\n\nexport type UploadFileAggregatorMax = {\n  __typename?: 'UploadFileAggregatorMax';\n  width?: Maybe<Scalars['Float']>;\n  height?: Maybe<Scalars['Float']>;\n  size?: Maybe<Scalars['Float']>;\n};\n\nexport type UploadFileAggregatorMin = {\n  __typename?: 'UploadFileAggregatorMin';\n  width?: Maybe<Scalars['Float']>;\n  height?: Maybe<Scalars['Float']>;\n  size?: Maybe<Scalars['Float']>;\n};\n\nexport type UploadFileAggregatorSum = {\n  __typename?: 'UploadFileAggregatorSum';\n  width?: Maybe<Scalars['Float']>;\n  height?: Maybe<Scalars['Float']>;\n  size?: Maybe<Scalars['Float']>;\n};\n\nexport type UploadFileConnection = {\n  __typename?: 'UploadFileConnection';\n  values?: Maybe<Array<Maybe<UploadFile>>>;\n  groupBy?: Maybe<UploadFileGroupBy>;\n  aggregate?: Maybe<UploadFileAggregator>;\n};\n\nexport type UploadFileConnectionAlternativeText = {\n  __typename?: 'UploadFileConnectionAlternativeText';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<UploadFileConnection>;\n};\n\nexport type UploadFileConnectionCaption = {\n  __typename?: 'UploadFileConnectionCaption';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<UploadFileConnection>;\n};\n\nexport type UploadFileConnectionCreatedAt = {\n  __typename?: 'UploadFileConnectionCreatedAt';\n  key?: Maybe<Scalars['DateTime']>;\n  connection?: Maybe<UploadFileConnection>;\n};\n\nexport type UploadFileConnectionExt = {\n  __typename?: 'UploadFileConnectionExt';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<UploadFileConnection>;\n};\n\nexport type UploadFileConnectionFormats = {\n  __typename?: 'UploadFileConnectionFormats';\n  key?: Maybe<Scalars['JSON']>;\n  connection?: Maybe<UploadFileConnection>;\n};\n\nexport type UploadFileConnectionHash = {\n  __typename?: 'UploadFileConnectionHash';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<UploadFileConnection>;\n};\n\nexport type UploadFileConnectionHeight = {\n  __typename?: 'UploadFileConnectionHeight';\n  key?: Maybe<Scalars['Int']>;\n  connection?: Maybe<UploadFileConnection>;\n};\n\nexport type UploadFileConnectionId = {\n  __typename?: 'UploadFileConnectionId';\n  key?: Maybe<Scalars['ID']>;\n  connection?: Maybe<UploadFileConnection>;\n};\n\nexport type UploadFileConnectionMime = {\n  __typename?: 'UploadFileConnectionMime';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<UploadFileConnection>;\n};\n\nexport type UploadFileConnectionName = {\n  __typename?: 'UploadFileConnectionName';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<UploadFileConnection>;\n};\n\nexport type UploadFileConnectionPreviewUrl = {\n  __typename?: 'UploadFileConnectionPreviewUrl';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<UploadFileConnection>;\n};\n\nexport type UploadFileConnectionProvider = {\n  __typename?: 'UploadFileConnectionProvider';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<UploadFileConnection>;\n};\n\nexport type UploadFileConnectionProvider_Metadata = {\n  __typename?: 'UploadFileConnectionProvider_metadata';\n  key?: Maybe<Scalars['JSON']>;\n  connection?: Maybe<UploadFileConnection>;\n};\n\nexport type UploadFileConnectionSize = {\n  __typename?: 'UploadFileConnectionSize';\n  key?: Maybe<Scalars['Float']>;\n  connection?: Maybe<UploadFileConnection>;\n};\n\nexport type UploadFileConnectionUpdatedAt = {\n  __typename?: 'UploadFileConnectionUpdatedAt';\n  key?: Maybe<Scalars['DateTime']>;\n  connection?: Maybe<UploadFileConnection>;\n};\n\nexport type UploadFileConnectionUrl = {\n  __typename?: 'UploadFileConnectionUrl';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<UploadFileConnection>;\n};\n\nexport type UploadFileConnectionWidth = {\n  __typename?: 'UploadFileConnectionWidth';\n  key?: Maybe<Scalars['Int']>;\n  connection?: Maybe<UploadFileConnection>;\n};\n\nexport type UploadFileConnection_Id = {\n  __typename?: 'UploadFileConnection_id';\n  key?: Maybe<Scalars['ID']>;\n  connection?: Maybe<UploadFileConnection>;\n};\n\nexport type UploadFileGroupBy = {\n  __typename?: 'UploadFileGroupBy';\n  id?: Maybe<Array<Maybe<UploadFileConnectionId>>>;\n  _id?: Maybe<Array<Maybe<UploadFileConnection_Id>>>;\n  createdAt?: Maybe<Array<Maybe<UploadFileConnectionCreatedAt>>>;\n  updatedAt?: Maybe<Array<Maybe<UploadFileConnectionUpdatedAt>>>;\n  name?: Maybe<Array<Maybe<UploadFileConnectionName>>>;\n  alternativeText?: Maybe<Array<Maybe<UploadFileConnectionAlternativeText>>>;\n  caption?: Maybe<Array<Maybe<UploadFileConnectionCaption>>>;\n  width?: Maybe<Array<Maybe<UploadFileConnectionWidth>>>;\n  height?: Maybe<Array<Maybe<UploadFileConnectionHeight>>>;\n  formats?: Maybe<Array<Maybe<UploadFileConnectionFormats>>>;\n  hash?: Maybe<Array<Maybe<UploadFileConnectionHash>>>;\n  ext?: Maybe<Array<Maybe<UploadFileConnectionExt>>>;\n  mime?: Maybe<Array<Maybe<UploadFileConnectionMime>>>;\n  size?: Maybe<Array<Maybe<UploadFileConnectionSize>>>;\n  url?: Maybe<Array<Maybe<UploadFileConnectionUrl>>>;\n  previewUrl?: Maybe<Array<Maybe<UploadFileConnectionPreviewUrl>>>;\n  provider?: Maybe<Array<Maybe<UploadFileConnectionProvider>>>;\n  provider_metadata?: Maybe<Array<Maybe<UploadFileConnectionProvider_Metadata>>>;\n};\n\nexport type UserInput = {\n  username: Scalars['String'];\n  email: Scalars['String'];\n  provider?: Maybe<Scalars['String']>;\n  password?: Maybe<Scalars['String']>;\n  resetPasswordToken?: Maybe<Scalars['String']>;\n  confirmationToken?: Maybe<Scalars['String']>;\n  confirmed?: Maybe<Scalars['Boolean']>;\n  blocked?: Maybe<Scalars['Boolean']>;\n  role?: Maybe<Scalars['ID']>;\n  created_by?: Maybe<Scalars['ID']>;\n  updated_by?: Maybe<Scalars['ID']>;\n};\n\nexport type UserPermissionsPasswordPayload = {\n  __typename?: 'UserPermissionsPasswordPayload';\n  ok: Scalars['Boolean'];\n};\n\nexport type UsersPermissionsLoginInput = {\n  identifier: Scalars['String'];\n  password: Scalars['String'];\n  provider?: Maybe<Scalars['String']>;\n};\n\nexport type UsersPermissionsLoginPayload = {\n  __typename?: 'UsersPermissionsLoginPayload';\n  jwt?: Maybe<Scalars['String']>;\n  user: UsersPermissionsMe;\n};\n\nexport type UsersPermissionsMe = {\n  __typename?: 'UsersPermissionsMe';\n  id: Scalars['ID'];\n  username: Scalars['String'];\n  email: Scalars['String'];\n  confirmed?: Maybe<Scalars['Boolean']>;\n  blocked?: Maybe<Scalars['Boolean']>;\n  role?: Maybe<UsersPermissionsMeRole>;\n};\n\nexport type UsersPermissionsMeRole = {\n  __typename?: 'UsersPermissionsMeRole';\n  id: Scalars['ID'];\n  name: Scalars['String'];\n  description?: Maybe<Scalars['String']>;\n  type?: Maybe<Scalars['String']>;\n};\n\nexport type UsersPermissionsPermission = {\n  __typename?: 'UsersPermissionsPermission';\n  id: Scalars['ID'];\n  _id: Scalars['ID'];\n  type: Scalars['String'];\n  controller: Scalars['String'];\n  action: Scalars['String'];\n  enabled: Scalars['Boolean'];\n  policy?: Maybe<Scalars['String']>;\n  role?: Maybe<UsersPermissionsRole>;\n};\n\nexport type UsersPermissionsRegisterInput = {\n  username: Scalars['String'];\n  email: Scalars['String'];\n  password: Scalars['String'];\n};\n\nexport type UsersPermissionsRole = {\n  __typename?: 'UsersPermissionsRole';\n  id: Scalars['ID'];\n  _id: Scalars['ID'];\n  name: Scalars['String'];\n  description?: Maybe<Scalars['String']>;\n  type?: Maybe<Scalars['String']>;\n  permissions?: Maybe<Array<Maybe<UsersPermissionsPermission>>>;\n  users?: Maybe<Array<Maybe<UsersPermissionsUser>>>;\n};\n\n\nexport type UsersPermissionsRolePermissionsArgs = {\n  sort?: Maybe<Scalars['String']>;\n  limit?: Maybe<Scalars['Int']>;\n  start?: Maybe<Scalars['Int']>;\n  where?: Maybe<Scalars['JSON']>;\n};\n\n\nexport type UsersPermissionsRoleUsersArgs = {\n  sort?: Maybe<Scalars['String']>;\n  limit?: Maybe<Scalars['Int']>;\n  start?: Maybe<Scalars['Int']>;\n  where?: Maybe<Scalars['JSON']>;\n};\n\nexport type UsersPermissionsRoleAggregator = {\n  __typename?: 'UsersPermissionsRoleAggregator';\n  count?: Maybe<Scalars['Int']>;\n  totalCount?: Maybe<Scalars['Int']>;\n};\n\nexport type UsersPermissionsRoleConnection = {\n  __typename?: 'UsersPermissionsRoleConnection';\n  values?: Maybe<Array<Maybe<UsersPermissionsRole>>>;\n  groupBy?: Maybe<UsersPermissionsRoleGroupBy>;\n  aggregate?: Maybe<UsersPermissionsRoleAggregator>;\n};\n\nexport type UsersPermissionsRoleConnectionDescription = {\n  __typename?: 'UsersPermissionsRoleConnectionDescription';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<UsersPermissionsRoleConnection>;\n};\n\nexport type UsersPermissionsRoleConnectionId = {\n  __typename?: 'UsersPermissionsRoleConnectionId';\n  key?: Maybe<Scalars['ID']>;\n  connection?: Maybe<UsersPermissionsRoleConnection>;\n};\n\nexport type UsersPermissionsRoleConnectionName = {\n  __typename?: 'UsersPermissionsRoleConnectionName';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<UsersPermissionsRoleConnection>;\n};\n\nexport type UsersPermissionsRoleConnectionType = {\n  __typename?: 'UsersPermissionsRoleConnectionType';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<UsersPermissionsRoleConnection>;\n};\n\nexport type UsersPermissionsRoleConnection_Id = {\n  __typename?: 'UsersPermissionsRoleConnection_id';\n  key?: Maybe<Scalars['ID']>;\n  connection?: Maybe<UsersPermissionsRoleConnection>;\n};\n\nexport type UsersPermissionsRoleGroupBy = {\n  __typename?: 'UsersPermissionsRoleGroupBy';\n  id?: Maybe<Array<Maybe<UsersPermissionsRoleConnectionId>>>;\n  _id?: Maybe<Array<Maybe<UsersPermissionsRoleConnection_Id>>>;\n  name?: Maybe<Array<Maybe<UsersPermissionsRoleConnectionName>>>;\n  description?: Maybe<Array<Maybe<UsersPermissionsRoleConnectionDescription>>>;\n  type?: Maybe<Array<Maybe<UsersPermissionsRoleConnectionType>>>;\n};\n\nexport type UsersPermissionsUser = {\n  __typename?: 'UsersPermissionsUser';\n  id: Scalars['ID'];\n  _id: Scalars['ID'];\n  createdAt: Scalars['DateTime'];\n  updatedAt: Scalars['DateTime'];\n  username: Scalars['String'];\n  email: Scalars['String'];\n  provider?: Maybe<Scalars['String']>;\n  confirmed?: Maybe<Scalars['Boolean']>;\n  blocked?: Maybe<Scalars['Boolean']>;\n  role?: Maybe<UsersPermissionsRole>;\n};\n\nexport type UsersPermissionsUserAggregator = {\n  __typename?: 'UsersPermissionsUserAggregator';\n  count?: Maybe<Scalars['Int']>;\n  totalCount?: Maybe<Scalars['Int']>;\n};\n\nexport type UsersPermissionsUserConnection = {\n  __typename?: 'UsersPermissionsUserConnection';\n  values?: Maybe<Array<Maybe<UsersPermissionsUser>>>;\n  groupBy?: Maybe<UsersPermissionsUserGroupBy>;\n  aggregate?: Maybe<UsersPermissionsUserAggregator>;\n};\n\nexport type UsersPermissionsUserConnectionBlocked = {\n  __typename?: 'UsersPermissionsUserConnectionBlocked';\n  key?: Maybe<Scalars['Boolean']>;\n  connection?: Maybe<UsersPermissionsUserConnection>;\n};\n\nexport type UsersPermissionsUserConnectionConfirmed = {\n  __typename?: 'UsersPermissionsUserConnectionConfirmed';\n  key?: Maybe<Scalars['Boolean']>;\n  connection?: Maybe<UsersPermissionsUserConnection>;\n};\n\nexport type UsersPermissionsUserConnectionCreatedAt = {\n  __typename?: 'UsersPermissionsUserConnectionCreatedAt';\n  key?: Maybe<Scalars['DateTime']>;\n  connection?: Maybe<UsersPermissionsUserConnection>;\n};\n\nexport type UsersPermissionsUserConnectionEmail = {\n  __typename?: 'UsersPermissionsUserConnectionEmail';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<UsersPermissionsUserConnection>;\n};\n\nexport type UsersPermissionsUserConnectionId = {\n  __typename?: 'UsersPermissionsUserConnectionId';\n  key?: Maybe<Scalars['ID']>;\n  connection?: Maybe<UsersPermissionsUserConnection>;\n};\n\nexport type UsersPermissionsUserConnectionProvider = {\n  __typename?: 'UsersPermissionsUserConnectionProvider';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<UsersPermissionsUserConnection>;\n};\n\nexport type UsersPermissionsUserConnectionRole = {\n  __typename?: 'UsersPermissionsUserConnectionRole';\n  key?: Maybe<Scalars['ID']>;\n  connection?: Maybe<UsersPermissionsUserConnection>;\n};\n\nexport type UsersPermissionsUserConnectionUpdatedAt = {\n  __typename?: 'UsersPermissionsUserConnectionUpdatedAt';\n  key?: Maybe<Scalars['DateTime']>;\n  connection?: Maybe<UsersPermissionsUserConnection>;\n};\n\nexport type UsersPermissionsUserConnectionUsername = {\n  __typename?: 'UsersPermissionsUserConnectionUsername';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<UsersPermissionsUserConnection>;\n};\n\nexport type UsersPermissionsUserConnection_Id = {\n  __typename?: 'UsersPermissionsUserConnection_id';\n  key?: Maybe<Scalars['ID']>;\n  connection?: Maybe<UsersPermissionsUserConnection>;\n};\n\nexport type UsersPermissionsUserGroupBy = {\n  __typename?: 'UsersPermissionsUserGroupBy';\n  id?: Maybe<Array<Maybe<UsersPermissionsUserConnectionId>>>;\n  _id?: Maybe<Array<Maybe<UsersPermissionsUserConnection_Id>>>;\n  createdAt?: Maybe<Array<Maybe<UsersPermissionsUserConnectionCreatedAt>>>;\n  updatedAt?: Maybe<Array<Maybe<UsersPermissionsUserConnectionUpdatedAt>>>;\n  username?: Maybe<Array<Maybe<UsersPermissionsUserConnectionUsername>>>;\n  email?: Maybe<Array<Maybe<UsersPermissionsUserConnectionEmail>>>;\n  provider?: Maybe<Array<Maybe<UsersPermissionsUserConnectionProvider>>>;\n  confirmed?: Maybe<Array<Maybe<UsersPermissionsUserConnectionConfirmed>>>;\n  blocked?: Maybe<Array<Maybe<UsersPermissionsUserConnectionBlocked>>>;\n  role?: Maybe<Array<Maybe<UsersPermissionsUserConnectionRole>>>;\n};\n\nexport type CreateBookingInput = {\n  data?: Maybe<BookingInput>;\n};\n\nexport type CreateBookingPayload = {\n  __typename?: 'createBookingPayload';\n  booking?: Maybe<Booking>;\n};\n\nexport type CreateCityInput = {\n  data?: Maybe<CityInput>;\n};\n\nexport type CreateCityPayload = {\n  __typename?: 'createCityPayload';\n  city?: Maybe<City>;\n};\n\nexport type CreateFeatureInput = {\n  data?: Maybe<FeatureInput>;\n};\n\nexport type CreateFeaturePayload = {\n  __typename?: 'createFeaturePayload';\n  feature?: Maybe<Feature>;\n};\n\nexport type CreateHotelInput = {\n  data?: Maybe<HotelInput>;\n};\n\nexport type CreateHotelPayload = {\n  __typename?: 'createHotelPayload';\n  hotel?: Maybe<Hotels>;\n};\n\nexport type CreateLocationInput = {\n  data?: Maybe<LocationInput>;\n};\n\nexport type CreateLocationPayload = {\n  __typename?: 'createLocationPayload';\n  location?: Maybe<Location>;\n};\n\nexport type CreatePartnerInput = {\n  data?: Maybe<PartnerInput>;\n};\n\nexport type CreatePartnerPayload = {\n  __typename?: 'createPartnerPayload';\n  partner?: Maybe<Partner>;\n};\n\nexport type CreateReviewInput = {\n  data?: Maybe<ReviewInput>;\n};\n\nexport type CreateReviewPayload = {\n  __typename?: 'createReviewPayload';\n  review?: Maybe<Review>;\n};\n\nexport type CreateRoleInput = {\n  data?: Maybe<RoleInput>;\n};\n\nexport type CreateRolePayload = {\n  __typename?: 'createRolePayload';\n  role?: Maybe<UsersPermissionsRole>;\n};\n\nexport type CreateSubscriberInput = {\n  data?: Maybe<SubscriberInput>;\n};\n\nexport type CreateSubscriberPayload = {\n  __typename?: 'createSubscriberPayload';\n  subscriber?: Maybe<Subscribers>;\n};\n\nexport type CreateTripInput = {\n  data?: Maybe<TripInput>;\n};\n\nexport type CreateTripPayload = {\n  __typename?: 'createTripPayload';\n  trip?: Maybe<Trips>;\n};\n\nexport type CreateUserInput = {\n  data?: Maybe<UserInput>;\n};\n\nexport type CreateUserPayload = {\n  __typename?: 'createUserPayload';\n  user?: Maybe<UsersPermissionsUser>;\n};\n\nexport type DeleteBookingInput = {\n  where?: Maybe<InputId>;\n};\n\nexport type DeleteBookingPayload = {\n  __typename?: 'deleteBookingPayload';\n  booking?: Maybe<Booking>;\n};\n\nexport type DeleteCityInput = {\n  where?: Maybe<InputId>;\n};\n\nexport type DeleteCityPayload = {\n  __typename?: 'deleteCityPayload';\n  city?: Maybe<City>;\n};\n\nexport type DeleteFeatureInput = {\n  where?: Maybe<InputId>;\n};\n\nexport type DeleteFeaturePayload = {\n  __typename?: 'deleteFeaturePayload';\n  feature?: Maybe<Feature>;\n};\n\nexport type DeleteFileInput = {\n  where?: Maybe<InputId>;\n};\n\nexport type DeleteFilePayload = {\n  __typename?: 'deleteFilePayload';\n  file?: Maybe<UploadFile>;\n};\n\nexport type DeleteHomeBannerPayload = {\n  __typename?: 'deleteHomeBannerPayload';\n  homeBanner?: Maybe<HomeBanner>;\n};\n\nexport type DeleteHotelInput = {\n  where?: Maybe<InputId>;\n};\n\nexport type DeleteHotelPayload = {\n  __typename?: 'deleteHotelPayload';\n  hotel?: Maybe<Hotels>;\n};\n\nexport type DeleteLocationInput = {\n  where?: Maybe<InputId>;\n};\n\nexport type DeleteLocationPayload = {\n  __typename?: 'deleteLocationPayload';\n  location?: Maybe<Location>;\n};\n\nexport type DeletePartnerInput = {\n  where?: Maybe<InputId>;\n};\n\nexport type DeletePartnerPayload = {\n  __typename?: 'deletePartnerPayload';\n  partner?: Maybe<Partner>;\n};\n\nexport type DeleteReviewInput = {\n  where?: Maybe<InputId>;\n};\n\nexport type DeleteReviewPayload = {\n  __typename?: 'deleteReviewPayload';\n  review?: Maybe<Review>;\n};\n\nexport type DeleteRoleInput = {\n  where?: Maybe<InputId>;\n};\n\nexport type DeleteRolePayload = {\n  __typename?: 'deleteRolePayload';\n  role?: Maybe<UsersPermissionsRole>;\n};\n\nexport type DeleteSubscriberInput = {\n  where?: Maybe<InputId>;\n};\n\nexport type DeleteSubscriberPayload = {\n  __typename?: 'deleteSubscriberPayload';\n  subscriber?: Maybe<Subscribers>;\n};\n\nexport type DeleteTripInput = {\n  where?: Maybe<InputId>;\n};\n\nexport type DeleteTripPayload = {\n  __typename?: 'deleteTripPayload';\n  trip?: Maybe<Trips>;\n};\n\nexport type DeleteUserInput = {\n  where?: Maybe<InputId>;\n};\n\nexport type DeleteUserPayload = {\n  __typename?: 'deleteUserPayload';\n  user?: Maybe<UsersPermissionsUser>;\n};\n\nexport type EditBookingInput = {\n  trip?: Maybe<Scalars['ID']>;\n  approved?: Maybe<Scalars['Boolean']>;\n  basePrice?: Maybe<Scalars['Float']>;\n  currency?: Maybe<Enum_Booking_Currency>;\n  basePeopleCount?: Maybe<Scalars['Int']>;\n  discount?: Maybe<Scalars['Float']>;\n  fullName?: Maybe<Scalars['String']>;\n  phone?: Maybe<Scalars['String']>;\n  message?: Maybe<Scalars['String']>;\n  arrivalDate?: Maybe<Scalars['Date']>;\n  language?: Maybe<Scalars['String']>;\n  userBookingStatus?: Maybe<Enum_Booking_Userbookingstatus>;\n  email?: Maybe<Scalars['String']>;\n  adults?: Maybe<Scalars['Int']>;\n  children?: Maybe<Scalars['Int']>;\n  totalPrice?: Maybe<Scalars['Float']>;\n  published_at?: Maybe<Scalars['DateTime']>;\n  created_by?: Maybe<Scalars['ID']>;\n  updated_by?: Maybe<Scalars['ID']>;\n};\n\nexport type EditCityInput = {\n  name?: Maybe<Scalars['String']>;\n  description?: Maybe<Scalars['String']>;\n  image?: Maybe<Scalars['ID']>;\n  locations?: Maybe<Array<Maybe<Scalars['ID']>>>;\n  localizations?: Maybe<Array<Maybe<Scalars['ID']>>>;\n  locale?: Maybe<Scalars['String']>;\n  published_at?: Maybe<Scalars['DateTime']>;\n  created_by?: Maybe<Scalars['ID']>;\n  updated_by?: Maybe<Scalars['ID']>;\n};\n\nexport type EditComponentCoordinateCoordinateInput = {\n  id?: Maybe<Scalars['ID']>;\n  latitude?: Maybe<Scalars['Float']>;\n  longitude?: Maybe<Scalars['Float']>;\n};\n\nexport type EditComponentFeatureFeatureInput = {\n  id?: Maybe<Scalars['ID']>;\n  feature?: Maybe<Scalars['ID']>;\n  included?: Maybe<Scalars['Boolean']>;\n};\n\nexport type EditComponentPricePriceInput = {\n  id?: Maybe<Scalars['ID']>;\n  basePrice?: Maybe<Scalars['Float']>;\n  currency?: Maybe<Enum_Componentpriceprice_Currency>;\n  basePeopleCount?: Maybe<Scalars['Int']>;\n  extraAdultFee?: Maybe<Scalars['Float']>;\n  discount?: Maybe<Scalars['Float']>;\n};\n\nexport type EditComponentTimelineTimelineInput = {\n  id?: Maybe<Scalars['ID']>;\n  day?: Maybe<Scalars['Int']>;\n  description?: Maybe<Scalars['String']>;\n  locations?: Maybe<Array<Maybe<Scalars['ID']>>>;\n  travelTo?: Maybe<Scalars['ID']>;\n  transportationType?: Maybe<Enum_Componenttimelinetimeline_Transportationtype>;\n  restDay?: Maybe<Scalars['Boolean']>;\n};\n\nexport type EditFeatureInput = {\n  name?: Maybe<Scalars['String']>;\n  info?: Maybe<Scalars['String']>;\n  localizations?: Maybe<Array<Maybe<Scalars['ID']>>>;\n  locale?: Maybe<Scalars['String']>;\n  published_at?: Maybe<Scalars['DateTime']>;\n  created_by?: Maybe<Scalars['ID']>;\n  updated_by?: Maybe<Scalars['ID']>;\n};\n\nexport type EditFileInput = {\n  name?: Maybe<Scalars['String']>;\n  alternativeText?: Maybe<Scalars['String']>;\n  caption?: Maybe<Scalars['String']>;\n  width?: Maybe<Scalars['Int']>;\n  height?: Maybe<Scalars['Int']>;\n  formats?: Maybe<Scalars['JSON']>;\n  hash?: Maybe<Scalars['String']>;\n  ext?: Maybe<Scalars['String']>;\n  mime?: Maybe<Scalars['String']>;\n  size?: Maybe<Scalars['Float']>;\n  url?: Maybe<Scalars['String']>;\n  previewUrl?: Maybe<Scalars['String']>;\n  provider?: Maybe<Scalars['String']>;\n  provider_metadata?: Maybe<Scalars['JSON']>;\n  related?: Maybe<Array<Maybe<Scalars['ID']>>>;\n  created_by?: Maybe<Scalars['ID']>;\n  updated_by?: Maybe<Scalars['ID']>;\n};\n\nexport type EditHomeBannerInput = {\n  images?: Maybe<Array<Maybe<Scalars['ID']>>>;\n  published_at?: Maybe<Scalars['DateTime']>;\n  created_by?: Maybe<Scalars['ID']>;\n  updated_by?: Maybe<Scalars['ID']>;\n};\n\nexport type EditHotelInput = {\n  name?: Maybe<Scalars['String']>;\n  stars?: Maybe<Scalars['Int']>;\n  url?: Maybe<Scalars['String']>;\n  trips?: Maybe<Array<Maybe<Scalars['ID']>>>;\n  published_at?: Maybe<Scalars['DateTime']>;\n  created_by?: Maybe<Scalars['ID']>;\n  updated_by?: Maybe<Scalars['ID']>;\n};\n\nexport type EditLocaleInput = {\n  name?: Maybe<Scalars['String']>;\n  code?: Maybe<Scalars['String']>;\n  created_by?: Maybe<Scalars['ID']>;\n  updated_by?: Maybe<Scalars['ID']>;\n};\n\nexport type EditLocationInput = {\n  name?: Maybe<Scalars['String']>;\n  description?: Maybe<Scalars['String']>;\n  images?: Maybe<Array<Maybe<Scalars['ID']>>>;\n  city?: Maybe<Scalars['ID']>;\n  coordinate?: Maybe<EditComponentCoordinateCoordinateInput>;\n  localizations?: Maybe<Array<Maybe<Scalars['ID']>>>;\n  locale?: Maybe<Scalars['String']>;\n  published_at?: Maybe<Scalars['DateTime']>;\n  created_by?: Maybe<Scalars['ID']>;\n  updated_by?: Maybe<Scalars['ID']>;\n};\n\nexport type EditPartnerInput = {\n  name?: Maybe<Scalars['String']>;\n  phone?: Maybe<Scalars['String']>;\n  address?: Maybe<Scalars['String']>;\n  email?: Maybe<Scalars['String']>;\n  trips?: Maybe<Array<Maybe<Scalars['ID']>>>;\n  agreement?: Maybe<Scalars['String']>;\n  commission?: Maybe<Scalars['Float']>;\n  revenueSource?: Maybe<Enum_Partner_Revenuesource>;\n  agreementStatus?: Maybe<Enum_Partner_Agreementstatus>;\n  notes?: Maybe<Scalars['String']>;\n  phone2?: Maybe<Scalars['String']>;\n  published_at?: Maybe<Scalars['DateTime']>;\n  created_by?: Maybe<Scalars['ID']>;\n  updated_by?: Maybe<Scalars['ID']>;\n};\n\nexport type EditReviewInput = {\n  text?: Maybe<Scalars['String']>;\n  rating?: Maybe<Scalars['Float']>;\n  author?: Maybe<Scalars['ID']>;\n  active?: Maybe<Scalars['Boolean']>;\n  trip?: Maybe<Scalars['ID']>;\n  published_at?: Maybe<Scalars['DateTime']>;\n  created_by?: Maybe<Scalars['ID']>;\n  updated_by?: Maybe<Scalars['ID']>;\n};\n\nexport type EditRoleInput = {\n  name?: Maybe<Scalars['String']>;\n  description?: Maybe<Scalars['String']>;\n  type?: Maybe<Scalars['String']>;\n  permissions?: Maybe<Array<Maybe<Scalars['ID']>>>;\n  users?: Maybe<Array<Maybe<Scalars['ID']>>>;\n  created_by?: Maybe<Scalars['ID']>;\n  updated_by?: Maybe<Scalars['ID']>;\n};\n\nexport type EditSubscriberInput = {\n  email?: Maybe<Scalars['String']>;\n  published_at?: Maybe<Scalars['DateTime']>;\n  created_by?: Maybe<Scalars['ID']>;\n  updated_by?: Maybe<Scalars['ID']>;\n};\n\nexport type EditTripInput = {\n  name?: Maybe<Scalars['String']>;\n  previewImage?: Maybe<Scalars['ID']>;\n  active?: Maybe<Scalars['Boolean']>;\n  trip_type?: Maybe<Enum_Trips_Trip_Type>;\n  description?: Maybe<Scalars['String']>;\n  duration?: Maybe<Scalars['Int']>;\n  partner?: Maybe<Scalars['ID']>;\n  currency?: Maybe<Enum_Trips_Currency>;\n  city?: Maybe<Scalars['ID']>;\n  features?: Maybe<Array<Maybe<EditComponentFeatureFeatureInput>>>;\n  basePrice?: Maybe<Scalars['Int']>;\n  basePeopleCount?: Maybe<Scalars['Int']>;\n  discount?: Maybe<Scalars['Float']>;\n  travelType?: Maybe<Enum_Trips_Traveltype>;\n  hotel?: Maybe<Scalars['ID']>;\n  plan?: Maybe<Array<Maybe<EditComponentTimelineTimelineInput>>>;\n  sequence?: Maybe<Scalars['String']>;\n  localizations?: Maybe<Array<Maybe<Scalars['ID']>>>;\n  locale?: Maybe<Scalars['String']>;\n  published_at?: Maybe<Scalars['DateTime']>;\n  created_by?: Maybe<Scalars['ID']>;\n  updated_by?: Maybe<Scalars['ID']>;\n};\n\nexport type EditUserInput = {\n  username?: Maybe<Scalars['String']>;\n  email?: Maybe<Scalars['String']>;\n  provider?: Maybe<Scalars['String']>;\n  password?: Maybe<Scalars['String']>;\n  resetPasswordToken?: Maybe<Scalars['String']>;\n  confirmationToken?: Maybe<Scalars['String']>;\n  confirmed?: Maybe<Scalars['Boolean']>;\n  blocked?: Maybe<Scalars['Boolean']>;\n  role?: Maybe<Scalars['ID']>;\n  created_by?: Maybe<Scalars['ID']>;\n  updated_by?: Maybe<Scalars['ID']>;\n};\n\nexport type UpdateBookingInput = {\n  where?: Maybe<InputId>;\n  data?: Maybe<EditBookingInput>;\n};\n\nexport type UpdateBookingPayload = {\n  __typename?: 'updateBookingPayload';\n  booking?: Maybe<Booking>;\n};\n\nexport type UpdateCityInput = {\n  where?: Maybe<InputId>;\n  data?: Maybe<EditCityInput>;\n};\n\nexport type UpdateCityPayload = {\n  __typename?: 'updateCityPayload';\n  city?: Maybe<City>;\n};\n\nexport type UpdateFeatureInput = {\n  where?: Maybe<InputId>;\n  data?: Maybe<EditFeatureInput>;\n};\n\nexport type UpdateFeaturePayload = {\n  __typename?: 'updateFeaturePayload';\n  feature?: Maybe<Feature>;\n};\n\nexport type UpdateHomeBannerInput = {\n  data?: Maybe<EditHomeBannerInput>;\n};\n\nexport type UpdateHomeBannerPayload = {\n  __typename?: 'updateHomeBannerPayload';\n  homeBanner?: Maybe<HomeBanner>;\n};\n\nexport type UpdateHotelInput = {\n  where?: Maybe<InputId>;\n  data?: Maybe<EditHotelInput>;\n};\n\nexport type UpdateHotelPayload = {\n  __typename?: 'updateHotelPayload';\n  hotel?: Maybe<Hotels>;\n};\n\nexport type UpdateLocationInput = {\n  where?: Maybe<InputId>;\n  data?: Maybe<EditLocationInput>;\n};\n\nexport type UpdateLocationPayload = {\n  __typename?: 'updateLocationPayload';\n  location?: Maybe<Location>;\n};\n\nexport type UpdatePartnerInput = {\n  where?: Maybe<InputId>;\n  data?: Maybe<EditPartnerInput>;\n};\n\nexport type UpdatePartnerPayload = {\n  __typename?: 'updatePartnerPayload';\n  partner?: Maybe<Partner>;\n};\n\nexport type UpdateReviewInput = {\n  where?: Maybe<InputId>;\n  data?: Maybe<EditReviewInput>;\n};\n\nexport type UpdateReviewPayload = {\n  __typename?: 'updateReviewPayload';\n  review?: Maybe<Review>;\n};\n\nexport type UpdateRoleInput = {\n  where?: Maybe<InputId>;\n  data?: Maybe<EditRoleInput>;\n};\n\nexport type UpdateRolePayload = {\n  __typename?: 'updateRolePayload';\n  role?: Maybe<UsersPermissionsRole>;\n};\n\nexport type UpdateSubscriberInput = {\n  where?: Maybe<InputId>;\n  data?: Maybe<EditSubscriberInput>;\n};\n\nexport type UpdateSubscriberPayload = {\n  __typename?: 'updateSubscriberPayload';\n  subscriber?: Maybe<Subscribers>;\n};\n\nexport type UpdateTripInput = {\n  where?: Maybe<InputId>;\n  data?: Maybe<EditTripInput>;\n};\n\nexport type UpdateTripPayload = {\n  __typename?: 'updateTripPayload';\n  trip?: Maybe<Trips>;\n};\n\nexport type UpdateUserInput = {\n  where?: Maybe<InputId>;\n  data?: Maybe<EditUserInput>;\n};\n\nexport type UpdateUserPayload = {\n  __typename?: 'updateUserPayload';\n  user?: Maybe<UsersPermissionsUser>;\n};\n\nexport type CreateBookingQueryMutationVariables = Exact<{\n  tripId: Scalars['ID'];\n  fullName: Scalars['String'];\n  basePrice: Scalars['Float'];\n  discount?: Maybe<Scalars['Float']>;\n  basePeopleCount: Scalars['Int'];\n  phone: Scalars['String'];\n  arrivalDate: Scalars['Date'];\n  message?: Maybe<Scalars['String']>;\n  currency: Enum_Booking_Currency;\n  email: Scalars['String'];\n  language: Scalars['String'];\n  adults: Scalars['Int'];\n  children: Scalars['Int'];\n}>;\n\n\nexport type CreateBookingQueryMutation = (\n  { __typename?: 'Mutation' }\n  & { createBooking?: Maybe<(\n    { __typename?: 'createBookingPayload' }\n    & { booking?: Maybe<(\n      { __typename?: 'Booking' }\n      & Pick<Booking, 'message'>\n    )> }\n  )> }\n);\n\nexport type CitiesQueryVariables = Exact<{\n  limit?: Maybe<Scalars['Int']>;\n  locale?: Maybe<Scalars['String']>;\n}>;\n\n\nexport type CitiesQuery = (\n  { __typename?: 'Query' }\n  & { cities?: Maybe<Array<Maybe<(\n    { __typename?: 'City' }\n    & CityInfoFragment\n  )>>> }\n);\n\nexport type GetCityQueryVariables = Exact<{\n  id: Scalars['ID'];\n}>;\n\n\nexport type GetCityQuery = (\n  { __typename?: 'Query' }\n  & { city?: Maybe<(\n    { __typename?: 'City' }\n    & CityInfoFragment\n  )> }\n);\n\nexport type GetLocalizedCityQueryVariables = Exact<{\n  id: Scalars['ID'];\n  locale: Scalars['String'];\n}>;\n\n\nexport type GetLocalizedCityQuery = (\n  { __typename?: 'Query' }\n  & { cities?: Maybe<Array<Maybe<(\n    { __typename?: 'City' }\n    & CityInfoFragment\n  )>>> }\n);\n\nexport type CityInfoFragment = (\n  { __typename?: 'City' }\n  & Pick<City, 'id' | 'name' | 'description' | 'locale'>\n  & { localizations?: Maybe<Array<Maybe<(\n    { __typename?: 'City' }\n    & Pick<City, 'id' | 'locale'>\n  )>>>, image?: Maybe<(\n    { __typename?: 'UploadFile' }\n    & Pick<UploadFile, 'id' | 'width' | 'height' | 'url' | 'formats'>\n  )> }\n);\n\nexport type FeaturesQueryVariables = Exact<{\n  locale: Scalars['String'];\n}>;\n\n\nexport type FeaturesQuery = (\n  { __typename?: 'Query' }\n  & { features?: Maybe<Array<Maybe<(\n    { __typename?: 'Feature' }\n    & Pick<Feature, 'name'>\n  )>>> }\n);\n\nexport type HomeCarousellQueryVariables = Exact<{ [key: string]: never; }>;\n\n\nexport type HomeCarousellQuery = (\n  { __typename?: 'Query' }\n  & { homeBanner?: Maybe<(\n    { __typename?: 'HomeBanner' }\n    & { images?: Maybe<Array<Maybe<(\n      { __typename?: 'UploadFile' }\n      & Pick<UploadFile, 'id' | 'width' | 'height' | 'url' | 'formats'>\n    )>>> }\n  )> }\n);\n\nexport type GetLocationsQueryVariables = Exact<{\n  locale: Scalars['String'];\n  ids: Array<Scalars['String']> | Scalars['String'];\n}>;\n\n\nexport type GetLocationsQuery = (\n  { __typename?: 'Query' }\n  & { locations?: Maybe<Array<Maybe<(\n    { __typename?: 'Location' }\n    & Pick<Location, 'id' | 'name' | 'description' | 'locale'>\n    & { coordinate?: Maybe<(\n      { __typename?: 'ComponentCoordinateCoordinate' }\n      & Pick<ComponentCoordinateCoordinate, 'latitude' | 'longitude'>\n    )>, images?: Maybe<Array<Maybe<(\n      { __typename?: 'UploadFile' }\n      & Pick<UploadFile, 'id' | 'width' | 'height' | 'url' | 'formats'>\n    )>>>, city?: Maybe<(\n      { __typename?: 'City' }\n      & Pick<City, 'id' | 'name' | 'description' | 'locale'>\n      & { localizations?: Maybe<Array<Maybe<(\n        { __typename?: 'City' }\n        & Pick<City, 'id' | 'locale'>\n      )>>>, image?: Maybe<(\n        { __typename?: 'UploadFile' }\n        & Pick<UploadFile, 'id' | 'width' | 'height' | 'url' | 'formats'>\n      )> }\n    )> }\n  )>>> }\n);\n\nexport type AddToNewsLetterMutationVariables = Exact<{\n  email: Scalars['String'];\n}>;\n\n\nexport type AddToNewsLetterMutation = (\n  { __typename?: 'Mutation' }\n  & { createSubscriber?: Maybe<(\n    { __typename?: 'createSubscriberPayload' }\n    & { subscriber?: Maybe<(\n      { __typename?: 'Subscribers' }\n      & Pick<Subscribers, 'email'>\n    )> }\n  )> }\n);\n\nexport type TripsQueryVariables = Exact<{\n  limit?: Maybe<Scalars['Int']>;\n  locale?: Maybe<Scalars['String']>;\n  where?: Maybe<Scalars['JSON']>;\n}>;\n\n\nexport type TripsQuery = (\n  { __typename?: 'Query' }\n  & { trips?: Maybe<Array<Maybe<(\n    { __typename?: 'Trips' }\n    & TripInfoFragment\n  )>>> }\n);\n\nexport type GetTripQueryVariables = Exact<{\n  id: Scalars['ID'];\n}>;\n\n\nexport type GetTripQuery = (\n  { __typename?: 'Query' }\n  & { trip?: Maybe<(\n    { __typename?: 'Trips' }\n    & TripInfoFragment\n  )> }\n);\n\nexport type GetLocalizedTripQueryVariables = Exact<{\n  id: Scalars['ID'];\n  locale: Scalars['String'];\n}>;\n\n\nexport type GetLocalizedTripQuery = (\n  { __typename?: 'Query' }\n  & { trips?: Maybe<Array<Maybe<(\n    { __typename?: 'Trips' }\n    & TripInfoFragment\n  )>>> }\n);\n\nexport type TripInfoFragment = (\n  { __typename?: 'Trips' }\n  & Pick<Trips, 'id' | 'name' | 'active' | 'description' | 'locale' | 'trip_type' | 'duration' | 'travelType' | 'basePrice' | 'discount' | 'currency' | 'basePeopleCount'>\n  & { city?: Maybe<(\n    { __typename?: 'City' }\n    & Pick<City, 'id' | 'name'>\n  )>, hotel?: Maybe<(\n    { __typename?: 'Hotels' }\n    & Pick<Hotels, 'id' | 'name' | 'url' | 'stars'>\n  )>, plan?: Maybe<Array<Maybe<(\n    { __typename?: 'ComponentTimelineTimeline' }\n    & Pick<ComponentTimelineTimeline, 'day' | 'transportationType' | 'description' | 'restDay'>\n    & { locations?: Maybe<Array<Maybe<(\n      { __typename?: 'Location' }\n      & Pick<Location, 'id' | 'name'>\n      & { city?: Maybe<(\n        { __typename?: 'City' }\n        & Pick<City, 'id'>\n      )> }\n    )>>>, travelTo?: Maybe<(\n      { __typename?: 'City' }\n      & Pick<City, 'id' | 'name'>\n    )> }\n  )>>>, previewImage?: Maybe<(\n    { __typename?: 'UploadFile' }\n    & Pick<UploadFile, 'id' | 'width' | 'height' | 'url' | 'formats'>\n  )>, localizations?: Maybe<Array<Maybe<(\n    { __typename?: 'Trips' }\n    & Pick<Trips, 'id' | 'locale'>\n  )>>>, features?: Maybe<Array<Maybe<(\n    { __typename?: 'ComponentFeatureFeature' }\n    & Pick<ComponentFeatureFeature, 'included'>\n    & { feature?: Maybe<(\n      { __typename?: 'Feature' }\n      & Pick<Feature, 'name' | 'info'>\n    )> }\n  )>>> }\n);\n\nexport const CityInfoFragmentDoc = gql`\n    fragment CityInfo on City {\n  id\n  name\n  description\n  locale\n  localizations {\n    id\n    locale\n  }\n  image {\n    id\n    width\n    height\n    url\n    formats\n  }\n}\n    `;\nexport const TripInfoFragmentDoc = gql`\n    fragment tripInfo on Trips {\n  id\n  name\n  active\n  description\n  locale\n  trip_type\n  duration\n  travelType\n  city {\n    id\n    name\n  }\n  hotel {\n    id\n    name\n    url\n    stars\n  }\n  plan {\n    day\n    locations {\n      id\n      name\n      city {\n        id\n      }\n    }\n    transportationType\n    travelTo {\n      id\n      name\n    }\n    description\n    restDay\n  }\n  previewImage {\n    id\n    width\n    height\n    url\n    formats\n  }\n  localizations {\n    id\n    locale\n  }\n  basePrice\n  discount\n  currency\n  basePeopleCount\n  features {\n    included\n    feature {\n      name\n      info\n    }\n  }\n}\n    `;\nexport const CreateBookingQueryDocument = gql`\n    mutation createBookingQuery($tripId: ID!, $fullName: String!, $basePrice: Float!, $discount: Float = 0, $basePeopleCount: Int!, $phone: String!, $arrivalDate: Date!, $message: String, $currency: ENUM_BOOKING_CURRENCY!, $email: String!, $language: String!, $adults: Int!, $children: Int!) {\n  createBooking(\n    input: {data: {trip: $tripId, basePrice: $basePrice, discount: $discount, message: $message, fullName: $fullName, basePeopleCount: $basePeopleCount, phone: $phone, arrivalDate: $arrivalDate, currency: $currency, email: $email, language: $language, adults: $adults, children: $children}}\n  ) {\n    booking {\n      message\n    }\n  }\n}\n    `;\n\n  @Injectable({\n    providedIn: 'root'\n  })\n  export class CreateBookingQueryGQL extends Apollo.Mutation<CreateBookingQueryMutation, CreateBookingQueryMutationVariables> {\n    document = CreateBookingQueryDocument;\n    \n    constructor(apollo: Apollo.Apollo) {\n      super(apollo);\n    }\n  }\nexport const CitiesDocument = gql`\n    query cities($limit: Int, $locale: String) {\n  cities(limit: $limit, locale: $locale) {\n    ...CityInfo\n  }\n}\n    ${CityInfoFragmentDoc}`;\n\n  @Injectable({\n    providedIn: 'root'\n  })\n  export class CitiesGQL extends Apollo.Query<CitiesQuery, CitiesQueryVariables> {\n    document = CitiesDocument;\n    \n    constructor(apollo: Apollo.Apollo) {\n      super(apollo);\n    }\n  }\nexport const GetCityDocument = gql`\n    query getCity($id: ID!) {\n  city(id: $id) {\n    ...CityInfo\n  }\n}\n    ${CityInfoFragmentDoc}`;\n\n  @Injectable({\n    providedIn: 'root'\n  })\n  export class GetCityGQL extends Apollo.Query<GetCityQuery, GetCityQueryVariables> {\n    document = GetCityDocument;\n    \n    constructor(apollo: Apollo.Apollo) {\n      super(apollo);\n    }\n  }\nexport const GetLocalizedCityDocument = gql`\n    query getLocalizedCity($id: ID!, $locale: String!) {\n  cities(locale: $locale, where: {_or: [{localizations: {id: $id}}, {id: $id}]}) {\n    ...CityInfo\n  }\n}\n    ${CityInfoFragmentDoc}`;\n\n  @Injectable({\n    providedIn: 'root'\n  })\n  export class GetLocalizedCityGQL extends Apollo.Query<GetLocalizedCityQuery, GetLocalizedCityQueryVariables> {\n    document = GetLocalizedCityDocument;\n    \n    constructor(apollo: Apollo.Apollo) {\n      super(apollo);\n    }\n  }\nexport const FeaturesDocument = gql`\n    query features($locale: String!) {\n  features(locale: $locale) {\n    name\n  }\n}\n    `;\n\n  @Injectable({\n    providedIn: 'root'\n  })\n  export class FeaturesGQL extends Apollo.Query<FeaturesQuery, FeaturesQueryVariables> {\n    document = FeaturesDocument;\n    \n    constructor(apollo: Apollo.Apollo) {\n      super(apollo);\n    }\n  }\nexport const HomeCarousellDocument = gql`\n    query homeCarousell {\n  homeBanner {\n    images {\n      id\n      width\n      height\n      url\n      formats\n    }\n  }\n}\n    `;\n\n  @Injectable({\n    providedIn: 'root'\n  })\n  export class HomeCarousellGQL extends Apollo.Query<HomeCarousellQuery, HomeCarousellQueryVariables> {\n    document = HomeCarousellDocument;\n    \n    constructor(apollo: Apollo.Apollo) {\n      super(apollo);\n    }\n  }\nexport const GetLocationsDocument = gql`\n    query getLocations($locale: String!, $ids: [String!]!) {\n  locations(locale: $locale, where: {id_in: $ids}) {\n    id\n    name\n    description\n    coordinate {\n      latitude\n      longitude\n    }\n    locale\n    images {\n      id\n      width\n      height\n      url\n      formats\n    }\n    city {\n      id\n      name\n      description\n      locale\n      localizations {\n        id\n        locale\n      }\n      image {\n        id\n        width\n        height\n        url\n        formats\n      }\n    }\n  }\n}\n    `;\n\n  @Injectable({\n    providedIn: 'root'\n  })\n  export class GetLocationsGQL extends Apollo.Query<GetLocationsQuery, GetLocationsQueryVariables> {\n    document = GetLocationsDocument;\n    \n    constructor(apollo: Apollo.Apollo) {\n      super(apollo);\n    }\n  }\nexport const AddToNewsLetterDocument = gql`\n    mutation addToNewsLetter($email: String!) {\n  createSubscriber(input: {data: {email: $email}}) {\n    subscriber {\n      email\n    }\n  }\n}\n    `;\n\n  @Injectable({\n    providedIn: 'root'\n  })\n  export class AddToNewsLetterGQL extends Apollo.Mutation<AddToNewsLetterMutation, AddToNewsLetterMutationVariables> {\n    document = AddToNewsLetterDocument;\n    \n    constructor(apollo: Apollo.Apollo) {\n      super(apollo);\n    }\n  }\nexport const TripsDocument = gql`\n    query trips($limit: Int = 10, $locale: String = \"en\", $where: JSON) {\n  trips(limit: $limit, locale: $locale, where: $where) {\n    ...tripInfo\n  }\n}\n    ${TripInfoFragmentDoc}`;\n\n  @Injectable({\n    providedIn: 'root'\n  })\n  export class TripsGQL extends Apollo.Query<TripsQuery, TripsQueryVariables> {\n    document = TripsDocument;\n    \n    constructor(apollo: Apollo.Apollo) {\n      super(apollo);\n    }\n  }\nexport const GetTripDocument = gql`\n    query getTrip($id: ID!) {\n  trip(id: $id) {\n    ...tripInfo\n  }\n}\n    ${TripInfoFragmentDoc}`;\n\n  @Injectable({\n    providedIn: 'root'\n  })\n  export class GetTripGQL extends Apollo.Query<GetTripQuery, GetTripQueryVariables> {\n    document = GetTripDocument;\n    \n    constructor(apollo: Apollo.Apollo) {\n      super(apollo);\n    }\n  }\nexport const GetLocalizedTripDocument = gql`\n    query getLocalizedTrip($id: ID!, $locale: String!) {\n  trips(locale: $locale, where: {_or: [{localizations: {id: $id}}, {id: $id}]}) {\n    ...tripInfo\n  }\n}\n    ${TripInfoFragmentDoc}`;\n\n  @Injectable({\n    providedIn: 'root'\n  })\n  export class GetLocalizedTripGQL extends Apollo.Query<GetLocalizedTripQuery, GetLocalizedTripQueryVariables> {\n    document = GetLocalizedTripDocument;\n    \n    constructor(apollo: Apollo.Apollo) {\n      super(apollo);\n    }\n  }",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "apollo",
                        "type": "Apollo.Apollo"
                    }
                ],
                "line": 3802,
                "jsdoctags": [
                    {
                        "name": "apollo",
                        "type": "Apollo.Apollo",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "type": "injectable"
        },
        {
            "name": "UserService",
            "id": "injectable-UserService-d232963059289fa7d79c36930053c9d6",
            "file": "src/app/data/services/user.service.ts",
            "properties": [
                {
                    "name": "_ser",
                    "type": "TripService",
                    "optional": false,
                    "description": "",
                    "line": 54,
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "_userTrips",
                    "defaultValue": "[\n    new UserTripsModel(\n      '111',\n      'sss',\n      'https://i.guim.co.uk/img/media/208d00c732eeed823ec55afe35faf252843e0c59/0_47_2520_1512/master/2520.jpg?width=1200&height=900&quality=85&auto=format&fit=crop&s=2afc817c2c585aa9342fa808b7b4decd',\n      10,\n      'istanbul',\n      200,\n      '$',\n      0\n    ),\n    new UserTripsModel(\n      '111',\n      'sss',\n      'https://i.guim.co.uk/img/media/208d00c732eeed823ec55afe35faf252843e0c59/0_47_2520_1512/master/2520.jpg?width=1200&height=900&quality=85&auto=format&fit=crop&s=2afc817c2c585aa9342fa808b7b4decd',\n      10,\n      'istanbul',\n      200,\n      '$',\n      0\n    ),\n    new UserTripsModel(\n      '111',\n      'sss',\n      'https://i.guim.co.uk/img/media/208d00c732eeed823ec55afe35faf252843e0c59/0_47_2520_1512/master/2520.jpg?width=1200&height=900&quality=85&auto=format&fit=crop&s=2afc817c2c585aa9342fa808b7b4decd',\n      10,\n      'istanbul',\n      200,\n      '$',\n      0\n    ),\n    new UserTripsModel(\n      '111',\n      'sss',\n      'https://i.guim.co.uk/img/media/208d00c732eeed823ec55afe35faf252843e0c59/0_47_2520_1512/master/2520.jpg?width=1200&height=900&quality=85&auto=format&fit=crop&s=2afc817c2c585aa9342fa808b7b4decd',\n      10,\n      'istanbul',\n      200,\n      '$',\n      0\n    ),\n  ]",
                    "type": "UserTripsModel[]",
                    "optional": false,
                    "description": "",
                    "line": 9
                }
            ],
            "methods": [
                {
                    "name": "initUserTrips",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 58
                }
            ],
            "description": "",
            "sourceCode": "import { Injectable } from '@angular/core';\nimport { UserTripsModel } from '../models/UserTripsModel';\nimport { TripService } from './trip.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class UserService {\n  _userTrips: UserTripsModel[] = [\n    new UserTripsModel(\n      '111',\n      'sss',\n      'https://i.guim.co.uk/img/media/208d00c732eeed823ec55afe35faf252843e0c59/0_47_2520_1512/master/2520.jpg?width=1200&height=900&quality=85&auto=format&fit=crop&s=2afc817c2c585aa9342fa808b7b4decd',\n      10,\n      'istanbul',\n      200,\n      '$',\n      0\n    ),\n    new UserTripsModel(\n      '111',\n      'sss',\n      'https://i.guim.co.uk/img/media/208d00c732eeed823ec55afe35faf252843e0c59/0_47_2520_1512/master/2520.jpg?width=1200&height=900&quality=85&auto=format&fit=crop&s=2afc817c2c585aa9342fa808b7b4decd',\n      10,\n      'istanbul',\n      200,\n      '$',\n      0\n    ),\n    new UserTripsModel(\n      '111',\n      'sss',\n      'https://i.guim.co.uk/img/media/208d00c732eeed823ec55afe35faf252843e0c59/0_47_2520_1512/master/2520.jpg?width=1200&height=900&quality=85&auto=format&fit=crop&s=2afc817c2c585aa9342fa808b7b4decd',\n      10,\n      'istanbul',\n      200,\n      '$',\n      0\n    ),\n    new UserTripsModel(\n      '111',\n      'sss',\n      'https://i.guim.co.uk/img/media/208d00c732eeed823ec55afe35faf252843e0c59/0_47_2520_1512/master/2520.jpg?width=1200&height=900&quality=85&auto=format&fit=crop&s=2afc817c2c585aa9342fa808b7b4decd',\n      10,\n      'istanbul',\n      200,\n      '$',\n      0\n    ),\n  ];\n  get trips(): UserTripsModel[] {\n    return this._userTrips;\n  }\n  constructor(public _ser: TripService) {\n    this.initUserTrips();\n  }\n\n  initUserTrips() {\n    //TODO fetch from http\n    // this._trips.push(...this._ser.offers);\n  }\n\n  get pasTrips(): UserTripsModel[] {\n    return this.trips.filter((d) => d.isPastTrip);\n  }\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "_ser",
                        "type": "TripService"
                    }
                ],
                "line": 53,
                "jsdoctags": [
                    {
                        "name": "_ser",
                        "type": "TripService",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "accessors": {
                "trips": {
                    "name": "trips",
                    "getSignature": {
                        "name": "trips",
                        "type": "[]",
                        "returnType": "UserTripsModel[]",
                        "line": 51
                    }
                },
                "pasTrips": {
                    "name": "pasTrips",
                    "getSignature": {
                        "name": "pasTrips",
                        "type": "[]",
                        "returnType": "UserTripsModel[]",
                        "line": 63
                    }
                }
            },
            "type": "injectable"
        },
        {
            "name": "WindowService",
            "id": "injectable-WindowService-fabde6ab4c707ec0c552323e9e521185",
            "file": "src/app/data/services/window.service.ts",
            "properties": [],
            "methods": [
                {
                    "name": "getWidthByElementWidth",
                    "args": [
                        {
                            "name": "wdth",
                            "type": "number"
                        }
                    ],
                    "optional": false,
                    "returnType": "WINDOW_SIZE",
                    "typeParameters": [],
                    "line": 24,
                    "jsdoctags": [
                        {
                            "name": "wdth",
                            "type": "number",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "description": "",
            "sourceCode": "import { Injectable } from '@angular/core';\nimport { WINDOW_SIZE } from '../utils/enums';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class WindowService {\n  constructor() {}\n  //large 1000\n  // medium 750\n  // small 500\n  //thum\n\n  // get windowSize(): WINDOW_SIZE {\n  //   const wdth = window.innerWidth;\n  //   if (wdth >= WINDOW_SIZE.large) return WINDOW_SIZE.large;\n  //   if (wdth >= WINDOW_SIZE.medium) return WINDOW_SIZE.medium;\n  //   if (wdth >= WINDOW_SIZE.small) return WINDOW_SIZE.small;\n  //   if (wdth < 250) {\n  //     return WINDOW_SIZE.thumb;\n  //   } else return WINDOW_SIZE.small;\n  // }\n\n  getWidthByElementWidth(wdth: number): WINDOW_SIZE {\n    if (wdth >= WINDOW_SIZE.large) return WINDOW_SIZE.large;\n    if (wdth >= WINDOW_SIZE.medium) return WINDOW_SIZE.medium;\n    if (wdth >= WINDOW_SIZE.small) return WINDOW_SIZE.small;\n    if (wdth < 250) {\n      return WINDOW_SIZE.thumb;\n    } else return WINDOW_SIZE.small;\n  }\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [],
                "line": 7
            },
            "type": "injectable"
        }
    ],
    "classes": [
        {
            "name": "AccordionListItem",
            "id": "class-AccordionListItem-db3cd6bc16baf623a5fb1837bac19c38",
            "file": "src/app/common/widgets/accordion-list/accordion-list-item.ts",
            "type": "class",
            "sourceCode": "export class AccordionListItem {\n  options: AccordionListItemOption[];\n\n  constructor(options: AccordionListItemOption[]) {\n    this.options = options;\n  }\n}\n\nexport class AccordionListItemOption {\n  label: string;\n  id: string;\n\n  constructor(id: string, label: string) {\n    this.id = id;\n    this.label = label;\n  }\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "options",
                        "type": "AccordionListItemOption[]"
                    }
                ],
                "line": 2,
                "jsdoctags": [
                    {
                        "name": "options",
                        "type": "AccordionListItemOption[]",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "properties": [
                {
                    "name": "options",
                    "type": "AccordionListItemOption[]",
                    "optional": false,
                    "description": "",
                    "line": 2
                }
            ],
            "methods": [],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        },
        {
            "name": "AccordionListItemOption",
            "id": "class-AccordionListItemOption-db3cd6bc16baf623a5fb1837bac19c38",
            "file": "src/app/common/widgets/accordion-list/accordion-list-item.ts",
            "type": "class",
            "sourceCode": "export class AccordionListItem {\n  options: AccordionListItemOption[];\n\n  constructor(options: AccordionListItemOption[]) {\n    this.options = options;\n  }\n}\n\nexport class AccordionListItemOption {\n  label: string;\n  id: string;\n\n  constructor(id: string, label: string) {\n    this.id = id;\n    this.label = label;\n  }\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "id",
                        "type": "string"
                    },
                    {
                        "name": "label",
                        "type": "string"
                    }
                ],
                "line": 11,
                "jsdoctags": [
                    {
                        "name": "id",
                        "type": "string",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "label",
                        "type": "string",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "properties": [
                {
                    "name": "id",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 11
                },
                {
                    "name": "label",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 10
                }
            ],
            "methods": [],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        },
        {
            "name": "Adapter",
            "id": "class-Adapter-d3778eb78c503f74940ee369ebaff2d3",
            "file": "src/app/data/adapters/adapter.ts",
            "type": "class",
            "sourceCode": "export abstract class Adapter<T> {\n  adapt = (item: any): any => {};\n}\n",
            "properties": [
                {
                    "name": "adapt",
                    "defaultValue": "() => {...}",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 2
                }
            ],
            "methods": [],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        },
        {
            "name": "AppPage",
            "id": "class-AppPage-ee2067dfb1c303f41003aea7d82d51e0",
            "file": "e2e/src/app.po.ts",
            "type": "class",
            "sourceCode": "import { browser, by, element } from 'protractor';\n\nexport class AppPage {\n  async navigateTo(): Promise<unknown> {\n    return browser.get(browser.baseUrl);\n  }\n\n  async getTitleText(): Promise<string> {\n    return element(by.css('app-root .content span')).getText();\n  }\n}\n",
            "properties": [],
            "methods": [
                {
                    "name": "getTitleText",
                    "args": [],
                    "optional": false,
                    "returnType": "Promise<string>",
                    "typeParameters": [],
                    "line": 8,
                    "modifierKind": [
                        120
                    ]
                },
                {
                    "name": "navigateTo",
                    "args": [],
                    "optional": false,
                    "returnType": "Promise<unknown>",
                    "typeParameters": [],
                    "line": 4,
                    "modifierKind": [
                        120
                    ]
                }
            ],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        },
        {
            "name": "BaseService",
            "id": "class-BaseService-e224eba0255c4f617fc406e920ae4ef7",
            "file": "src/app/data/services/base.service.ts",
            "type": "class",
            "sourceCode": "import { isDevMode } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { BehaviorSubject, throwError } from 'rxjs';\nimport { ErrorDlgComponent } from 'src/app/common/widgets/error-dlg/error-dlg.component';\nimport { LoadingState } from '../static/main-info';\nimport { ErrorService } from './error.service';\n\nexport abstract class BaseService<T> {\n  abstract init(params?: any): Promise<T[]>;\n  data: T[] = [];\n  data$ = new BehaviorSubject<T[]>([]);\n  constructor(ser: ErrorService) {\n    // ser.observeError$(this.loadingState$);\n  }\n  loadingState$ = new BehaviorSubject<LoadingState>({\n    hasError: false,\n    isLoading: false,\n    msg: '',\n    handler: () => {},\n  });\n  setBusy(\n    isBusy = false,\n    err: any | undefined = undefined,\n    handler: Function | undefined = undefined\n  ) {\n    this.loadingState$.next({\n      isLoading: isBusy,\n      hasError: !!err,\n      msg: err || '',\n      handler: handler,\n    });\n  }\n  prepareData(data: T[]) {\n    this.data = [];\n    this.data.push(...data);\n    this.data$.next(data);\n    return this.data;\n  }\n  clearSub() {\n    this.loadingState$.subscribe();\n  }\n\n  async _doStuff<T>(toDo: Function): Promise<T | undefined> {\n    try {\n      this.setBusy(true);\n      const data: T = await toDo();\n      this.setBusy(false);\n      return data;\n    } catch (error) {\n      console.error(error);\n\n      this.setBusy(false, error, toDo);\n      if (isDevMode()) throwError(error);\n      return undefined;\n    }\n  }\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "ser",
                        "type": "ErrorService"
                    }
                ],
                "line": 11,
                "jsdoctags": [
                    {
                        "name": "ser",
                        "type": "ErrorService",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "properties": [
                {
                    "name": "data",
                    "defaultValue": "[]",
                    "type": "T[]",
                    "optional": false,
                    "description": "",
                    "line": 10
                },
                {
                    "name": "data$",
                    "defaultValue": "new BehaviorSubject<T[]>([])",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 11
                },
                {
                    "name": "loadingState$",
                    "defaultValue": "new BehaviorSubject<LoadingState>({\n    hasError: false,\n    isLoading: false,\n    msg: '',\n    handler: () => {},\n  })",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 15
                }
            ],
            "methods": [
                {
                    "name": "_doStuff",
                    "args": [
                        {
                            "name": "toDo",
                            "type": "Function"
                        }
                    ],
                    "optional": false,
                    "returnType": "Promise<T | undefined>",
                    "typeParameters": [
                        "T"
                    ],
                    "line": 43,
                    "modifierKind": [
                        120
                    ],
                    "jsdoctags": [
                        {
                            "name": "toDo",
                            "type": "Function",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "clearSub",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 39
                },
                {
                    "name": "init",
                    "args": [
                        {
                            "name": "params",
                            "type": "any",
                            "optional": true
                        }
                    ],
                    "optional": false,
                    "returnType": "Promise<T[]>",
                    "typeParameters": [],
                    "line": 9,
                    "modifierKind": [
                        117
                    ],
                    "jsdoctags": [
                        {
                            "name": "params",
                            "type": "any",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "prepareData",
                    "args": [
                        {
                            "name": "data",
                            "type": "T[]"
                        }
                    ],
                    "optional": false,
                    "returnType": "{}",
                    "typeParameters": [],
                    "line": 33,
                    "jsdoctags": [
                        {
                            "name": "data",
                            "type": "T[]",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "setBusy",
                    "args": [
                        {
                            "name": "isBusy",
                            "type": "",
                            "defaultValue": "false"
                        },
                        {
                            "name": "err",
                            "type": "any | undefined",
                            "defaultValue": "undefined"
                        },
                        {
                            "name": "handler",
                            "type": "Function | undefined",
                            "defaultValue": "undefined"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 21,
                    "jsdoctags": [
                        {
                            "name": "isBusy",
                            "type": "",
                            "defaultValue": "false",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "err",
                            "type": "any | undefined",
                            "defaultValue": "undefined",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "handler",
                            "type": "Function | undefined",
                            "defaultValue": "undefined",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        },
        {
            "name": "BookingModel",
            "id": "class-BookingModel-9291c8411adaf84f764565c8dcf8c9a6",
            "file": "src/app/data/models/bookingModel.ts",
            "type": "class",
            "sourceCode": "export class BookingModel {\n  constructor(\n    public id: string = '',\n    public image: string = '',\n    public duration: number = 0,\n    public price: number = 0,\n    public currency: string = '',\n    public fullName: string = '',\n    public email: string = '',\n    public phoneNumber: string = '',\n    public startDate: number = Date.now(),\n    public ticketCount: number = 0,\n    public message: string = '',\n    public ticketImage: string = '',\n    public isApproved: boolean = false\n  ) {}\n}\nexport interface BookingInterface {\n  image: string;\n  id: string;\n  duration: number;\n  price: number;\n  currency: string;\n  fullName: string;\n  email: string;\n  phoneNumber: string;\n  startDate: number;\n  ticketCount: number;\n  message: string;\n  ticketImage: string;\n  isApproved: boolean;\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "id",
                        "type": "string",
                        "defaultValue": "''"
                    },
                    {
                        "name": "image",
                        "type": "string",
                        "defaultValue": "''"
                    },
                    {
                        "name": "duration",
                        "type": "number",
                        "defaultValue": "0"
                    },
                    {
                        "name": "price",
                        "type": "number",
                        "defaultValue": "0"
                    },
                    {
                        "name": "currency",
                        "type": "string",
                        "defaultValue": "''"
                    },
                    {
                        "name": "fullName",
                        "type": "string",
                        "defaultValue": "''"
                    },
                    {
                        "name": "email",
                        "type": "string",
                        "defaultValue": "''"
                    },
                    {
                        "name": "phoneNumber",
                        "type": "string",
                        "defaultValue": "''"
                    },
                    {
                        "name": "startDate",
                        "type": "number",
                        "defaultValue": "Date.now()"
                    },
                    {
                        "name": "ticketCount",
                        "type": "number",
                        "defaultValue": "0"
                    },
                    {
                        "name": "message",
                        "type": "string",
                        "defaultValue": "''"
                    },
                    {
                        "name": "ticketImage",
                        "type": "string",
                        "defaultValue": "''"
                    },
                    {
                        "name": "isApproved",
                        "type": "boolean",
                        "defaultValue": "false"
                    }
                ],
                "line": 1,
                "jsdoctags": [
                    {
                        "name": "id",
                        "type": "string",
                        "defaultValue": "''",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "image",
                        "type": "string",
                        "defaultValue": "''",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "duration",
                        "type": "number",
                        "defaultValue": "0",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "price",
                        "type": "number",
                        "defaultValue": "0",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "currency",
                        "type": "string",
                        "defaultValue": "''",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "fullName",
                        "type": "string",
                        "defaultValue": "''",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "email",
                        "type": "string",
                        "defaultValue": "''",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "phoneNumber",
                        "type": "string",
                        "defaultValue": "''",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "startDate",
                        "type": "number",
                        "defaultValue": "Date.now()",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "ticketCount",
                        "type": "number",
                        "defaultValue": "0",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "message",
                        "type": "string",
                        "defaultValue": "''",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "ticketImage",
                        "type": "string",
                        "defaultValue": "''",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "isApproved",
                        "type": "boolean",
                        "defaultValue": "false",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "properties": [
                {
                    "name": "currency",
                    "defaultValue": "''",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 7,
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "duration",
                    "defaultValue": "0",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 5,
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "email",
                    "defaultValue": "''",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 9,
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "fullName",
                    "defaultValue": "''",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 8,
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "id",
                    "defaultValue": "''",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 3,
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "image",
                    "defaultValue": "''",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 4,
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "isApproved",
                    "defaultValue": "false",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 15,
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "message",
                    "defaultValue": "''",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 13,
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "phoneNumber",
                    "defaultValue": "''",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 10,
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "price",
                    "defaultValue": "0",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 6,
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "startDate",
                    "defaultValue": "Date.now()",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 11,
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "ticketCount",
                    "defaultValue": "0",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 12,
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "ticketImage",
                    "defaultValue": "''",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 14,
                    "modifierKind": [
                        114
                    ]
                }
            ],
            "methods": [],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        },
        {
            "name": "CityModel",
            "id": "class-CityModel-c60a41a4c8b4cc52f711551158a03537",
            "file": "src/app/data/models/CityModel.ts",
            "type": "class",
            "sourceCode": "import { Injectable } from '@angular/core';\nimport { Adapter } from '../adapters/adapter';\nimport { ImageModel, ImageModelAdapter } from './ImageModel';\nimport {\n  LocalizationType,\n  StrapiLocalizationsAdapter,\n} from './localization.type';\n\nexport class CityModel {\n  constructor(\n    public id: string,\n    public name: string,\n    public description?: string,\n    public locale?: string,\n    public image?: ImageModel,\n    public localizations?: LocalizationType[]\n  ) {}\n}\n\n@Injectable({ providedIn: 'root' })\nexport class CityModelAdapter implements Adapter<CityModel> {\n  adapt(item: any): CityModel {\n    return new CityModel(\n      item?.id,\n      item?.name,\n      item?.description,\n      item?.locale,\n      new ImageModelAdapter().adapt(item?.image),\n      new StrapiLocalizationsAdapter().adapt(item?.localizations)\n    );\n  }\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "id",
                        "type": "string"
                    },
                    {
                        "name": "name",
                        "type": "string"
                    },
                    {
                        "name": "description",
                        "type": "string",
                        "optional": true
                    },
                    {
                        "name": "locale",
                        "type": "string",
                        "optional": true
                    },
                    {
                        "name": "image",
                        "type": "ImageModel",
                        "optional": true
                    },
                    {
                        "name": "localizations",
                        "type": "LocalizationType[]",
                        "optional": true
                    }
                ],
                "line": 9,
                "jsdoctags": [
                    {
                        "name": "id",
                        "type": "string",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "name",
                        "type": "string",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "description",
                        "type": "string",
                        "optional": true,
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "locale",
                        "type": "string",
                        "optional": true,
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "image",
                        "type": "ImageModel",
                        "optional": true,
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "localizations",
                        "type": "LocalizationType[]",
                        "optional": true,
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "properties": [
                {
                    "name": "description",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 13,
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "id",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 11,
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "image",
                    "type": "ImageModel",
                    "optional": true,
                    "description": "",
                    "line": 15,
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "locale",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 14,
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "localizations",
                    "type": "LocalizationType[]",
                    "optional": true,
                    "description": "",
                    "line": 16,
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "name",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 12,
                    "modifierKind": [
                        114
                    ]
                }
            ],
            "methods": [],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        },
        {
            "name": "DevData",
            "id": "class-DevData-0f484ece069f49b452de8c4f582c06de",
            "file": "src/app/data/static/main-info.ts",
            "type": "class",
            "sourceCode": "export class StaticInfo {\n  static projectName = 'prName';\n  static phoneNumber = '+90 539 961 0531';\n  static email = 'safernit@emali.com';\n  static defaultImage = '/assets/images/placeholder/default.jpeg';\n  static insta = 'safernit';\n  static facebook = 'Saferni-104348928523570';\n  static twitter = 'safernit@emali.com';\n\n  static location = 'Istanbul - Turkey';\n\n  //settings\n  static LOADER_MINIMUM_INTERVAL = 0;\n  //routing\n  static offersRoute = 'offers';\n  static bookingRoute = 'booking';\n  static tourInfoRoute = 'tours';\n}\nexport class DevData {\n  static errMsgs = [\n    {\n      name: 'required',\n      msg: 'this field is required',\n    },\n  ];\n}\n\nexport interface LoadingState {\n  msg: any;\n  isLoading: boolean;\n  hasError: boolean;\n  handler?: Function;\n}\n",
            "properties": [
                {
                    "name": "errMsgs",
                    "defaultValue": "[\n    {\n      name: 'required',\n      msg: 'this field is required',\n    },\n  ]",
                    "type": "[]",
                    "optional": false,
                    "description": "",
                    "line": 20,
                    "modifierKind": [
                        115
                    ]
                }
            ],
            "methods": [],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        },
        {
            "name": "FeatureModel",
            "id": "class-FeatureModel-a5cd31a6237bf29a8fd2e5d22fe534e6",
            "file": "src/app/data/models/FeatureModel.ts",
            "type": "class",
            "sourceCode": "import { Adapter } from '../adapters/adapter';\n\nexport class FeatureModel {\n  constructor(\n    public name: string,\n    public info: string,\n    public included: boolean\n  ) {}\n}\nexport class FeatureModelAdapter implements Adapter<FeatureModel> {\n  adapt(item: any): FeatureModel {\n    return new FeatureModel(\n      item.feature?.name,\n      item.feature?.info,\n      item?.included\n    );\n  }\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "name",
                        "type": "string"
                    },
                    {
                        "name": "info",
                        "type": "string"
                    },
                    {
                        "name": "included",
                        "type": "boolean"
                    }
                ],
                "line": 3,
                "jsdoctags": [
                    {
                        "name": "name",
                        "type": "string",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "info",
                        "type": "string",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "included",
                        "type": "boolean",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "properties": [
                {
                    "name": "included",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 7,
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "info",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 6,
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "name",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 5,
                    "modifierKind": [
                        114
                    ]
                }
            ],
            "methods": [],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        },
        {
            "name": "FeatureModelAdapter",
            "id": "class-FeatureModelAdapter-a5cd31a6237bf29a8fd2e5d22fe534e6",
            "file": "src/app/data/models/FeatureModel.ts",
            "type": "class",
            "sourceCode": "import { Adapter } from '../adapters/adapter';\n\nexport class FeatureModel {\n  constructor(\n    public name: string,\n    public info: string,\n    public included: boolean\n  ) {}\n}\nexport class FeatureModelAdapter implements Adapter<FeatureModel> {\n  adapt(item: any): FeatureModel {\n    return new FeatureModel(\n      item.feature?.name,\n      item.feature?.info,\n      item?.included\n    );\n  }\n}\n",
            "properties": [],
            "methods": [
                {
                    "name": "adapt",
                    "args": [
                        {
                            "name": "item",
                            "type": "any"
                        }
                    ],
                    "optional": false,
                    "returnType": "FeatureModel",
                    "typeParameters": [],
                    "line": 11,
                    "jsdoctags": [
                        {
                            "name": "item",
                            "type": "any",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "implements": [
                "Adapter"
            ]
        },
        {
            "name": "FeaturesService",
            "id": "class-FeaturesService-d2fa64b1bd9a5cdb406d8d62a8bb36d0",
            "file": "src/app/data/services/features.service.ts",
            "type": "class",
            "sourceCode": "import { map } from 'rxjs/operators';\nimport { FeatureModelAdapter } from '../models/FeatureModel';\nimport { LocalService } from './local.service';\nimport { FeaturesGQL } from './saferniGraphql.service';\n\nexport class FeaturesService {\n  constructor(\n    private featuresQgl: FeaturesGQL,\n    private localeService: LocalService,\n    private adapter: FeatureModelAdapter\n  ) {}\n\n  getAllFeatures() {\n    return this.featuresQgl\n      .fetch({ locale: this.localeService.locale })\n      .pipe(\n        map((response) =>\n          response.data.features?.map((f) => this.adapter.adapt(f))\n        )\n      );\n  }\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "featuresQgl",
                        "type": "FeaturesGQL"
                    },
                    {
                        "name": "localeService",
                        "type": "LocalService"
                    },
                    {
                        "name": "adapter",
                        "type": "FeatureModelAdapter"
                    }
                ],
                "line": 6,
                "jsdoctags": [
                    {
                        "name": "featuresQgl",
                        "type": "FeaturesGQL",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "localeService",
                        "type": "LocalService",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "adapter",
                        "type": "FeatureModelAdapter",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "properties": [],
            "methods": [
                {
                    "name": "getAllFeatures",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 13
                }
            ],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        },
        {
            "name": "Hotel",
            "id": "class-Hotel-23f858c4acb8fc59345586f5702ea40a",
            "file": "src/app/data/models/TripModel.ts",
            "type": "class",
            "sourceCode": "import { Injectable } from '@angular/core';\nimport { Adapter } from '../adapters/adapter';\nimport { priceData } from '../pipes/price-caculator.pipe';\nimport {\n  Enum_Componenttimelinetimeline_Transportationtype,\n  Enum_Trips_Currency,\n  Enum_Trips_Traveltype,\n  Enum_Trips_Trip_Type,\n} from '../services/saferniGraphql.service';\nimport { CityModel } from './CityModel';\nimport { FeatureModel, FeatureModelAdapter } from './FeatureModel';\nimport { ImageModel, ImageModelAdapter } from './ImageModel';\nimport {\n  LocalizationType,\n  StrapiLocalizationsAdapter,\n} from './localization.type';\n\nexport class TripModel {\n  public get allLocationsIds(): string[] {\n    let ids: string[] = [];\n    this.plan.forEach((plan) => {\n      ids.push(...(plan.dayLocations ?? []).map((loc) => loc.locationId));\n    });\n\n    return ids;\n  }\n  get priceData(): priceData {\n    return {\n      basePrice: this.basePrice,\n      currency: this.curreny,\n    };\n  }\n  constructor(\n    public id: string,\n    public name: string,\n    public description: string,\n    public locale: string,\n    public duration: number,\n    public tripType: Enum_Trips_Trip_Type,\n    public travelType: Enum_Trips_Traveltype,\n    public active: boolean,\n    public previewImage: ImageModel,\n    public city: CityModel,\n    public features: FeatureModel[],\n    public plan: TripDayPlan[],\n    public basePrice: number,\n    public discount: number,\n    public basePeopleCount: number,\n    public curreny: Enum_Trips_Currency,\n    public localizations: LocalizationType[],\n    public hotel?: Hotel\n  ) {}\n}\n\n@Injectable({ providedIn: 'root' })\nexport class TripModelAdapter implements Adapter<TripModel> {\n  adapt(item: any): TripModel {\n    let features: FeatureModel[] = item.features.map((feature: any) =>\n      new FeatureModelAdapter().adapt(feature)\n    );\n    let plan: TripDayPlan[] = item.plan.map((planItem: any) =>\n      new TripDayPlanAdapter().adapt(planItem)\n    );\n\n    return new TripModel(\n      item?.id,\n      item.name,\n      item.description,\n      item.locale,\n      item.duration,\n      item.trip_type,\n      item.travelType,\n      item.active,\n      new ImageModelAdapter().adapt(item.previewImage),\n      item.city,\n      features,\n      plan,\n      item.basePrice,\n      item.discount,\n      item.basePeopleCount,\n      item.currency,\n      new StrapiLocalizationsAdapter().adapt(item.localizations),\n      new HotelAdapter().adapt(item.hotel)\n    );\n  }\n}\n\nexport class TripDayPlan {\n  constructor(\n    public day: number,\n    public transportationType: Enum_Componenttimelinetimeline_Transportationtype,\n    public description?: string,\n    public dayLocations?: PlanLocation[],\n    //TODO something fishy going here\n    public travelTo?: CityModel,\n    public restDay?: boolean\n  ) {}\n}\nexport class TripDayPlanAdapter implements Adapter<TripDayPlan> {\n  adapt(item: any): TripDayPlan {\n    return new TripDayPlan(\n      item.day,\n      item.transportationType,\n      item.description,\n      item.locations.map((l: any) => {\n        //TODO some of the locations has no cities\n        return new PlanLocation(l.id, l?.city?.id, l.name);\n      }),\n      item.travelTo,\n      item.restDay\n    );\n  }\n}\nexport class PlanLocation {\n  constructor(\n    public locationId: string,\n    public cityId: string,\n    public locationName: string\n  ) {}\n}\nexport class Hotel {\n  constructor(\n    public id: string,\n    public name: string,\n    public stars: number,\n    public url: string\n  ) {}\n}\nexport class HotelAdapter implements Adapter<Hotel> {\n  adapt(item: any): Hotel | undefined {\n    if (!item) return undefined;\n    else return new Hotel(item.id, item.name, item.stars, item.url);\n  }\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "id",
                        "type": "string"
                    },
                    {
                        "name": "name",
                        "type": "string"
                    },
                    {
                        "name": "stars",
                        "type": "number"
                    },
                    {
                        "name": "url",
                        "type": "string"
                    }
                ],
                "line": 121,
                "jsdoctags": [
                    {
                        "name": "id",
                        "type": "string",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "name",
                        "type": "string",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "stars",
                        "type": "number",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "url",
                        "type": "string",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "properties": [
                {
                    "name": "id",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 123,
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "name",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 124,
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "stars",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 125,
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "url",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 126,
                    "modifierKind": [
                        114
                    ]
                }
            ],
            "methods": [],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        },
        {
            "name": "HotelAdapter",
            "id": "class-HotelAdapter-23f858c4acb8fc59345586f5702ea40a",
            "file": "src/app/data/models/TripModel.ts",
            "type": "class",
            "sourceCode": "import { Injectable } from '@angular/core';\nimport { Adapter } from '../adapters/adapter';\nimport { priceData } from '../pipes/price-caculator.pipe';\nimport {\n  Enum_Componenttimelinetimeline_Transportationtype,\n  Enum_Trips_Currency,\n  Enum_Trips_Traveltype,\n  Enum_Trips_Trip_Type,\n} from '../services/saferniGraphql.service';\nimport { CityModel } from './CityModel';\nimport { FeatureModel, FeatureModelAdapter } from './FeatureModel';\nimport { ImageModel, ImageModelAdapter } from './ImageModel';\nimport {\n  LocalizationType,\n  StrapiLocalizationsAdapter,\n} from './localization.type';\n\nexport class TripModel {\n  public get allLocationsIds(): string[] {\n    let ids: string[] = [];\n    this.plan.forEach((plan) => {\n      ids.push(...(plan.dayLocations ?? []).map((loc) => loc.locationId));\n    });\n\n    return ids;\n  }\n  get priceData(): priceData {\n    return {\n      basePrice: this.basePrice,\n      currency: this.curreny,\n    };\n  }\n  constructor(\n    public id: string,\n    public name: string,\n    public description: string,\n    public locale: string,\n    public duration: number,\n    public tripType: Enum_Trips_Trip_Type,\n    public travelType: Enum_Trips_Traveltype,\n    public active: boolean,\n    public previewImage: ImageModel,\n    public city: CityModel,\n    public features: FeatureModel[],\n    public plan: TripDayPlan[],\n    public basePrice: number,\n    public discount: number,\n    public basePeopleCount: number,\n    public curreny: Enum_Trips_Currency,\n    public localizations: LocalizationType[],\n    public hotel?: Hotel\n  ) {}\n}\n\n@Injectable({ providedIn: 'root' })\nexport class TripModelAdapter implements Adapter<TripModel> {\n  adapt(item: any): TripModel {\n    let features: FeatureModel[] = item.features.map((feature: any) =>\n      new FeatureModelAdapter().adapt(feature)\n    );\n    let plan: TripDayPlan[] = item.plan.map((planItem: any) =>\n      new TripDayPlanAdapter().adapt(planItem)\n    );\n\n    return new TripModel(\n      item?.id,\n      item.name,\n      item.description,\n      item.locale,\n      item.duration,\n      item.trip_type,\n      item.travelType,\n      item.active,\n      new ImageModelAdapter().adapt(item.previewImage),\n      item.city,\n      features,\n      plan,\n      item.basePrice,\n      item.discount,\n      item.basePeopleCount,\n      item.currency,\n      new StrapiLocalizationsAdapter().adapt(item.localizations),\n      new HotelAdapter().adapt(item.hotel)\n    );\n  }\n}\n\nexport class TripDayPlan {\n  constructor(\n    public day: number,\n    public transportationType: Enum_Componenttimelinetimeline_Transportationtype,\n    public description?: string,\n    public dayLocations?: PlanLocation[],\n    //TODO something fishy going here\n    public travelTo?: CityModel,\n    public restDay?: boolean\n  ) {}\n}\nexport class TripDayPlanAdapter implements Adapter<TripDayPlan> {\n  adapt(item: any): TripDayPlan {\n    return new TripDayPlan(\n      item.day,\n      item.transportationType,\n      item.description,\n      item.locations.map((l: any) => {\n        //TODO some of the locations has no cities\n        return new PlanLocation(l.id, l?.city?.id, l.name);\n      }),\n      item.travelTo,\n      item.restDay\n    );\n  }\n}\nexport class PlanLocation {\n  constructor(\n    public locationId: string,\n    public cityId: string,\n    public locationName: string\n  ) {}\n}\nexport class Hotel {\n  constructor(\n    public id: string,\n    public name: string,\n    public stars: number,\n    public url: string\n  ) {}\n}\nexport class HotelAdapter implements Adapter<Hotel> {\n  adapt(item: any): Hotel | undefined {\n    if (!item) return undefined;\n    else return new Hotel(item.id, item.name, item.stars, item.url);\n  }\n}\n",
            "properties": [],
            "methods": [
                {
                    "name": "adapt",
                    "args": [
                        {
                            "name": "item",
                            "type": "any"
                        }
                    ],
                    "optional": false,
                    "returnType": "Hotel | undefined",
                    "typeParameters": [],
                    "line": 130,
                    "jsdoctags": [
                        {
                            "name": "item",
                            "type": "any",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "implements": [
                "Adapter"
            ]
        },
        {
            "name": "ImageFormatAdapter",
            "id": "class-ImageFormatAdapter-3d718275c0d0d6fd28f4c66a8b8edcfd",
            "file": "src/app/data/models/ImageModel.ts",
            "type": "class",
            "sourceCode": "import { Injectable } from '@angular/core';\nimport { environment } from 'src/environments/environment.prod';\nimport { Adapter } from '../adapters/adapter';\nimport { StaticInfo } from '../static/main-info';\n\nexport class ImageModel {\n  get url(): string {\n    return this.isRemote\n      ? `${environment.api}${this.realtiveUrl}`\n      : this.realtiveUrl;\n  }\n  constructor(\n    public id: string,\n    public realtiveUrl: string,\n    public isRemote = true,\n    public width?: number,\n    public height?: number,\n    public formats?: ImageFormatsObject\n  ) {}\n\n  static defaultImage(): ImageModel {\n    return new ImageModel('', StaticInfo.defaultImage, false);\n  }\n}\n@Injectable({ providedIn: 'root' })\nexport class ImageModelAdapter implements Adapter<ImageModel> {\n  adapt(item: any): ImageModel {\n    if (!item) return new ImageModel('', StaticInfo.defaultImage, false);\n    else\n      return new ImageModel(item.id, item.url, true, item.width, item.height, {\n        thumbnail: item.formats.thumbnail\n          ? new ImageFormatAdapter().adapt(item.formats.thumbnail)\n          : ImageFormatModel.fromRelativeUrl(item.url),\n        large: item.formats.large\n          ? new ImageFormatAdapter().adapt(item.formats.large)\n          : ImageFormatModel.fromRelativeUrl(item.url),\n        medium: item.formats.medium\n          ? new ImageFormatAdapter().adapt(item.formats.medium)\n          : ImageFormatModel.fromRelativeUrl(item.url),\n        small: item.formats.small\n          ? new ImageFormatAdapter().adapt(item.formats.small)\n          : ImageFormatModel.fromRelativeUrl(item.url),\n      });\n  }\n}\n\nexport type ImageFormatsObject = {\n  thumbnail?: ImageFormatModel;\n  large?: ImageFormatModel;\n  medium?: ImageFormatModel;\n  small?: ImageFormatModel;\n};\n\nexport class ImageFormatModel {\n  constructor(\n    public relativeUrl: string,\n    public name?: string,\n    public width?: number,\n    public height?: number,\n    public size?: number\n  ) {}\n\n  get url(): string {\n    return `${environment.api}${this.relativeUrl}`;\n  }\n  static fromRelativeUrl(rUrl: string): ImageFormatModel {\n    return new ImageFormatModel(rUrl);\n  }\n}\nclass ImageFormatAdapter implements Adapter<ImageFormatModel> {\n  adapt(item: any): ImageFormatModel {\n    return new ImageFormatModel(\n      item?.url,\n      item?.name,\n      item?.width,\n      item?.height,\n      item?.size\n    );\n  }\n}\n",
            "properties": [],
            "methods": [
                {
                    "name": "adapt",
                    "args": [
                        {
                            "name": "item",
                            "type": "any"
                        }
                    ],
                    "optional": false,
                    "returnType": "ImageFormatModel",
                    "typeParameters": [],
                    "line": 71,
                    "jsdoctags": [
                        {
                            "name": "item",
                            "type": "any",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "implements": [
                "Adapter"
            ]
        },
        {
            "name": "ImageFormatModel",
            "id": "class-ImageFormatModel-3d718275c0d0d6fd28f4c66a8b8edcfd",
            "file": "src/app/data/models/ImageModel.ts",
            "type": "class",
            "sourceCode": "import { Injectable } from '@angular/core';\nimport { environment } from 'src/environments/environment.prod';\nimport { Adapter } from '../adapters/adapter';\nimport { StaticInfo } from '../static/main-info';\n\nexport class ImageModel {\n  get url(): string {\n    return this.isRemote\n      ? `${environment.api}${this.realtiveUrl}`\n      : this.realtiveUrl;\n  }\n  constructor(\n    public id: string,\n    public realtiveUrl: string,\n    public isRemote = true,\n    public width?: number,\n    public height?: number,\n    public formats?: ImageFormatsObject\n  ) {}\n\n  static defaultImage(): ImageModel {\n    return new ImageModel('', StaticInfo.defaultImage, false);\n  }\n}\n@Injectable({ providedIn: 'root' })\nexport class ImageModelAdapter implements Adapter<ImageModel> {\n  adapt(item: any): ImageModel {\n    if (!item) return new ImageModel('', StaticInfo.defaultImage, false);\n    else\n      return new ImageModel(item.id, item.url, true, item.width, item.height, {\n        thumbnail: item.formats.thumbnail\n          ? new ImageFormatAdapter().adapt(item.formats.thumbnail)\n          : ImageFormatModel.fromRelativeUrl(item.url),\n        large: item.formats.large\n          ? new ImageFormatAdapter().adapt(item.formats.large)\n          : ImageFormatModel.fromRelativeUrl(item.url),\n        medium: item.formats.medium\n          ? new ImageFormatAdapter().adapt(item.formats.medium)\n          : ImageFormatModel.fromRelativeUrl(item.url),\n        small: item.formats.small\n          ? new ImageFormatAdapter().adapt(item.formats.small)\n          : ImageFormatModel.fromRelativeUrl(item.url),\n      });\n  }\n}\n\nexport type ImageFormatsObject = {\n  thumbnail?: ImageFormatModel;\n  large?: ImageFormatModel;\n  medium?: ImageFormatModel;\n  small?: ImageFormatModel;\n};\n\nexport class ImageFormatModel {\n  constructor(\n    public relativeUrl: string,\n    public name?: string,\n    public width?: number,\n    public height?: number,\n    public size?: number\n  ) {}\n\n  get url(): string {\n    return `${environment.api}${this.relativeUrl}`;\n  }\n  static fromRelativeUrl(rUrl: string): ImageFormatModel {\n    return new ImageFormatModel(rUrl);\n  }\n}\nclass ImageFormatAdapter implements Adapter<ImageFormatModel> {\n  adapt(item: any): ImageFormatModel {\n    return new ImageFormatModel(\n      item?.url,\n      item?.name,\n      item?.width,\n      item?.height,\n      item?.size\n    );\n  }\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "relativeUrl",
                        "type": "string"
                    },
                    {
                        "name": "name",
                        "type": "string",
                        "optional": true
                    },
                    {
                        "name": "width",
                        "type": "number",
                        "optional": true
                    },
                    {
                        "name": "height",
                        "type": "number",
                        "optional": true
                    },
                    {
                        "name": "size",
                        "type": "number",
                        "optional": true
                    }
                ],
                "line": 54,
                "jsdoctags": [
                    {
                        "name": "relativeUrl",
                        "type": "string",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "name",
                        "type": "string",
                        "optional": true,
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "width",
                        "type": "number",
                        "optional": true,
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "height",
                        "type": "number",
                        "optional": true,
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "size",
                        "type": "number",
                        "optional": true,
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "properties": [
                {
                    "name": "height",
                    "type": "number",
                    "optional": true,
                    "description": "",
                    "line": 59,
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "name",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 57,
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "relativeUrl",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 56,
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "size",
                    "type": "number",
                    "optional": true,
                    "description": "",
                    "line": 60,
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "width",
                    "type": "number",
                    "optional": true,
                    "description": "",
                    "line": 58,
                    "modifierKind": [
                        114
                    ]
                }
            ],
            "methods": [
                {
                    "name": "fromRelativeUrl",
                    "args": [
                        {
                            "name": "rUrl",
                            "type": "string"
                        }
                    ],
                    "optional": false,
                    "returnType": "ImageFormatModel",
                    "typeParameters": [],
                    "line": 66,
                    "modifierKind": [
                        115
                    ],
                    "jsdoctags": [
                        {
                            "name": "rUrl",
                            "type": "string",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "indexSignatures": [],
            "accessors": {
                "url": {
                    "name": "url",
                    "getSignature": {
                        "name": "url",
                        "type": "string",
                        "returnType": "string",
                        "line": 63
                    }
                }
            },
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        },
        {
            "name": "ImageModel",
            "id": "class-ImageModel-3d718275c0d0d6fd28f4c66a8b8edcfd",
            "file": "src/app/data/models/ImageModel.ts",
            "type": "class",
            "sourceCode": "import { Injectable } from '@angular/core';\nimport { environment } from 'src/environments/environment.prod';\nimport { Adapter } from '../adapters/adapter';\nimport { StaticInfo } from '../static/main-info';\n\nexport class ImageModel {\n  get url(): string {\n    return this.isRemote\n      ? `${environment.api}${this.realtiveUrl}`\n      : this.realtiveUrl;\n  }\n  constructor(\n    public id: string,\n    public realtiveUrl: string,\n    public isRemote = true,\n    public width?: number,\n    public height?: number,\n    public formats?: ImageFormatsObject\n  ) {}\n\n  static defaultImage(): ImageModel {\n    return new ImageModel('', StaticInfo.defaultImage, false);\n  }\n}\n@Injectable({ providedIn: 'root' })\nexport class ImageModelAdapter implements Adapter<ImageModel> {\n  adapt(item: any): ImageModel {\n    if (!item) return new ImageModel('', StaticInfo.defaultImage, false);\n    else\n      return new ImageModel(item.id, item.url, true, item.width, item.height, {\n        thumbnail: item.formats.thumbnail\n          ? new ImageFormatAdapter().adapt(item.formats.thumbnail)\n          : ImageFormatModel.fromRelativeUrl(item.url),\n        large: item.formats.large\n          ? new ImageFormatAdapter().adapt(item.formats.large)\n          : ImageFormatModel.fromRelativeUrl(item.url),\n        medium: item.formats.medium\n          ? new ImageFormatAdapter().adapt(item.formats.medium)\n          : ImageFormatModel.fromRelativeUrl(item.url),\n        small: item.formats.small\n          ? new ImageFormatAdapter().adapt(item.formats.small)\n          : ImageFormatModel.fromRelativeUrl(item.url),\n      });\n  }\n}\n\nexport type ImageFormatsObject = {\n  thumbnail?: ImageFormatModel;\n  large?: ImageFormatModel;\n  medium?: ImageFormatModel;\n  small?: ImageFormatModel;\n};\n\nexport class ImageFormatModel {\n  constructor(\n    public relativeUrl: string,\n    public name?: string,\n    public width?: number,\n    public height?: number,\n    public size?: number\n  ) {}\n\n  get url(): string {\n    return `${environment.api}${this.relativeUrl}`;\n  }\n  static fromRelativeUrl(rUrl: string): ImageFormatModel {\n    return new ImageFormatModel(rUrl);\n  }\n}\nclass ImageFormatAdapter implements Adapter<ImageFormatModel> {\n  adapt(item: any): ImageFormatModel {\n    return new ImageFormatModel(\n      item?.url,\n      item?.name,\n      item?.width,\n      item?.height,\n      item?.size\n    );\n  }\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "id",
                        "type": "string"
                    },
                    {
                        "name": "realtiveUrl",
                        "type": "string"
                    },
                    {
                        "name": "isRemote",
                        "type": "",
                        "defaultValue": "true"
                    },
                    {
                        "name": "width",
                        "type": "number",
                        "optional": true
                    },
                    {
                        "name": "height",
                        "type": "number",
                        "optional": true
                    },
                    {
                        "name": "formats",
                        "type": "ImageFormatsObject",
                        "optional": true
                    }
                ],
                "line": 11,
                "jsdoctags": [
                    {
                        "name": "id",
                        "type": "string",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "realtiveUrl",
                        "type": "string",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "isRemote",
                        "type": "",
                        "defaultValue": "true",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "width",
                        "type": "number",
                        "optional": true,
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "height",
                        "type": "number",
                        "optional": true,
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "formats",
                        "type": "ImageFormatsObject",
                        "optional": true,
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "properties": [
                {
                    "name": "formats",
                    "type": "ImageFormatsObject",
                    "optional": true,
                    "description": "",
                    "line": 18,
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "height",
                    "type": "number",
                    "optional": true,
                    "description": "",
                    "line": 17,
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "id",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 13,
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "isRemote",
                    "defaultValue": "true",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 15,
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "realtiveUrl",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 14,
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "width",
                    "type": "number",
                    "optional": true,
                    "description": "",
                    "line": 16,
                    "modifierKind": [
                        114
                    ]
                }
            ],
            "methods": [
                {
                    "name": "defaultImage",
                    "args": [],
                    "optional": false,
                    "returnType": "ImageModel",
                    "typeParameters": [],
                    "line": 21,
                    "modifierKind": [
                        115
                    ]
                }
            ],
            "indexSignatures": [],
            "accessors": {
                "url": {
                    "name": "url",
                    "getSignature": {
                        "name": "url",
                        "type": "string",
                        "returnType": "string",
                        "line": 7
                    }
                }
            },
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        },
        {
            "name": "ImageSnippet",
            "id": "class-ImageSnippet-f1be5d8502f41e399c1021b19f69d1e7",
            "file": "src/app/data/models/variousModels.ts",
            "type": "class",
            "sourceCode": "export class TripOptions {\n  constructor(\n    public hasCar: boolean,\n    public hasAirport: boolean,\n    public hasBreakfast: boolean,\n    public hasHotel: boolean = true\n  ) {}\n}\n\nexport class ImageSnippet {\n  constructor(public src: string, public file: File) {}\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "src",
                        "type": "string"
                    },
                    {
                        "name": "file",
                        "type": "File"
                    }
                ],
                "line": 10,
                "jsdoctags": [
                    {
                        "name": "src",
                        "type": "string",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "file",
                        "type": "File",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "properties": [
                {
                    "name": "file",
                    "type": "File",
                    "optional": false,
                    "description": "",
                    "line": 11,
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "src",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 11,
                    "modifierKind": [
                        114
                    ]
                }
            ],
            "methods": [],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        },
        {
            "name": "LocationModel",
            "id": "class-LocationModel-385d2a1253873074d8bb9e08a169d34f",
            "file": "src/app/data/models/LocationModel.ts",
            "type": "class",
            "sourceCode": "import { Injectable } from '@angular/core';\nimport { Adapter } from '../adapters/adapter';\nimport { CityModel, CityModelAdapter } from './CityModel';\nimport { ImageModel, ImageModelAdapter } from './ImageModel';\n\nexport class LocationModel {\n  constructor(\n    public id: string,\n    public images: ImageModel[],\n    public name: string,\n    public desc: string,\n    public locale: string,\n    public geo: Coordinates,\n    public city: CityModel\n  ) {}\n}\nexport type Coordinates = { latitude: number; longitude: number };\n\n@Injectable({ providedIn: 'root' })\nexport class LocationModelAdapter implements Adapter<LocationModel> {\n  adapt(item: any): LocationModel {\n    let images: ImageModel[] = item.images.map((imageObject: any) => {\n      return new ImageModelAdapter().adapt(imageObject);\n    });\n    return new LocationModel(\n      item.id,\n      images,\n      item.name,\n      item.description,\n      item.locale,\n      {\n        latitude: item.coordinate.latitude,\n        longitude: item.coordinate.longitude,\n      },\n      new CityModelAdapter().adapt(item.city)\n    );\n  }\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "id",
                        "type": "string"
                    },
                    {
                        "name": "images",
                        "type": "ImageModel[]"
                    },
                    {
                        "name": "name",
                        "type": "string"
                    },
                    {
                        "name": "desc",
                        "type": "string"
                    },
                    {
                        "name": "locale",
                        "type": "string"
                    },
                    {
                        "name": "geo",
                        "type": "Coordinates"
                    },
                    {
                        "name": "city",
                        "type": "CityModel"
                    }
                ],
                "line": 6,
                "jsdoctags": [
                    {
                        "name": "id",
                        "type": "string",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "images",
                        "type": "ImageModel[]",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "name",
                        "type": "string",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "desc",
                        "type": "string",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "locale",
                        "type": "string",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "geo",
                        "type": "Coordinates",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "city",
                        "type": "CityModel",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "properties": [
                {
                    "name": "city",
                    "type": "CityModel",
                    "optional": false,
                    "description": "",
                    "line": 14,
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "desc",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 11,
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "geo",
                    "type": "Coordinates",
                    "optional": false,
                    "description": "",
                    "line": 13,
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "id",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 8,
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "images",
                    "type": "ImageModel[]",
                    "optional": false,
                    "description": "",
                    "line": 9,
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "locale",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 12,
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "name",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 10,
                    "modifierKind": [
                        114
                    ]
                }
            ],
            "methods": [],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        },
        {
            "name": "longX",
            "id": "class-longX-9c0ef9f4bbece1f64961cfc83ab5457b",
            "file": "src/app/data/abstract/longX.ts",
            "type": "class",
            "sourceCode": "export class longX {\n  innerWidth = 0;\n\n  constructor() {\n    this.innerWidth = window.innerWidth;\n  }\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [],
                "line": 2
            },
            "properties": [
                {
                    "name": "innerWidth",
                    "defaultValue": "0",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 2
                }
            ],
            "methods": [],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        },
        {
            "name": "PlanLocation",
            "id": "class-PlanLocation-23f858c4acb8fc59345586f5702ea40a",
            "file": "src/app/data/models/TripModel.ts",
            "type": "class",
            "sourceCode": "import { Injectable } from '@angular/core';\nimport { Adapter } from '../adapters/adapter';\nimport { priceData } from '../pipes/price-caculator.pipe';\nimport {\n  Enum_Componenttimelinetimeline_Transportationtype,\n  Enum_Trips_Currency,\n  Enum_Trips_Traveltype,\n  Enum_Trips_Trip_Type,\n} from '../services/saferniGraphql.service';\nimport { CityModel } from './CityModel';\nimport { FeatureModel, FeatureModelAdapter } from './FeatureModel';\nimport { ImageModel, ImageModelAdapter } from './ImageModel';\nimport {\n  LocalizationType,\n  StrapiLocalizationsAdapter,\n} from './localization.type';\n\nexport class TripModel {\n  public get allLocationsIds(): string[] {\n    let ids: string[] = [];\n    this.plan.forEach((plan) => {\n      ids.push(...(plan.dayLocations ?? []).map((loc) => loc.locationId));\n    });\n\n    return ids;\n  }\n  get priceData(): priceData {\n    return {\n      basePrice: this.basePrice,\n      currency: this.curreny,\n    };\n  }\n  constructor(\n    public id: string,\n    public name: string,\n    public description: string,\n    public locale: string,\n    public duration: number,\n    public tripType: Enum_Trips_Trip_Type,\n    public travelType: Enum_Trips_Traveltype,\n    public active: boolean,\n    public previewImage: ImageModel,\n    public city: CityModel,\n    public features: FeatureModel[],\n    public plan: TripDayPlan[],\n    public basePrice: number,\n    public discount: number,\n    public basePeopleCount: number,\n    public curreny: Enum_Trips_Currency,\n    public localizations: LocalizationType[],\n    public hotel?: Hotel\n  ) {}\n}\n\n@Injectable({ providedIn: 'root' })\nexport class TripModelAdapter implements Adapter<TripModel> {\n  adapt(item: any): TripModel {\n    let features: FeatureModel[] = item.features.map((feature: any) =>\n      new FeatureModelAdapter().adapt(feature)\n    );\n    let plan: TripDayPlan[] = item.plan.map((planItem: any) =>\n      new TripDayPlanAdapter().adapt(planItem)\n    );\n\n    return new TripModel(\n      item?.id,\n      item.name,\n      item.description,\n      item.locale,\n      item.duration,\n      item.trip_type,\n      item.travelType,\n      item.active,\n      new ImageModelAdapter().adapt(item.previewImage),\n      item.city,\n      features,\n      plan,\n      item.basePrice,\n      item.discount,\n      item.basePeopleCount,\n      item.currency,\n      new StrapiLocalizationsAdapter().adapt(item.localizations),\n      new HotelAdapter().adapt(item.hotel)\n    );\n  }\n}\n\nexport class TripDayPlan {\n  constructor(\n    public day: number,\n    public transportationType: Enum_Componenttimelinetimeline_Transportationtype,\n    public description?: string,\n    public dayLocations?: PlanLocation[],\n    //TODO something fishy going here\n    public travelTo?: CityModel,\n    public restDay?: boolean\n  ) {}\n}\nexport class TripDayPlanAdapter implements Adapter<TripDayPlan> {\n  adapt(item: any): TripDayPlan {\n    return new TripDayPlan(\n      item.day,\n      item.transportationType,\n      item.description,\n      item.locations.map((l: any) => {\n        //TODO some of the locations has no cities\n        return new PlanLocation(l.id, l?.city?.id, l.name);\n      }),\n      item.travelTo,\n      item.restDay\n    );\n  }\n}\nexport class PlanLocation {\n  constructor(\n    public locationId: string,\n    public cityId: string,\n    public locationName: string\n  ) {}\n}\nexport class Hotel {\n  constructor(\n    public id: string,\n    public name: string,\n    public stars: number,\n    public url: string\n  ) {}\n}\nexport class HotelAdapter implements Adapter<Hotel> {\n  adapt(item: any): Hotel | undefined {\n    if (!item) return undefined;\n    else return new Hotel(item.id, item.name, item.stars, item.url);\n  }\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "locationId",
                        "type": "string"
                    },
                    {
                        "name": "cityId",
                        "type": "string"
                    },
                    {
                        "name": "locationName",
                        "type": "string"
                    }
                ],
                "line": 114,
                "jsdoctags": [
                    {
                        "name": "locationId",
                        "type": "string",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "cityId",
                        "type": "string",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "locationName",
                        "type": "string",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "properties": [
                {
                    "name": "cityId",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 117,
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "locationId",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 116,
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "locationName",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 118,
                    "modifierKind": [
                        114
                    ]
                }
            ],
            "methods": [],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        },
        {
            "name": "QueryStringParameters",
            "id": "class-QueryStringParameters-dfa9d1b0920d2cfd84fb94cdd0ba8eca",
            "file": "src/app/data/abstract/query.string.builder.ts",
            "type": "class",
            "sourceCode": "export class QueryStringParameters {\n    private paramsAndValues: string[];\n    constructor() {\n      this.paramsAndValues = [];\n    }\n    public push(key: string, value: Object): void {\n      value = encodeURIComponent(value.toString());\n      this.paramsAndValues.push([key, value].join('='));\n    }\n    public toString = (): string => this.paramsAndValues.join('&');\n  }",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [],
                "line": 3
            },
            "properties": [
                {
                    "name": "paramsAndValues",
                    "type": "string[]",
                    "optional": false,
                    "description": "",
                    "line": 3,
                    "modifierKind": [
                        112
                    ]
                },
                {
                    "name": "toString",
                    "defaultValue": "() => {...}",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 11,
                    "modifierKind": [
                        114
                    ]
                }
            ],
            "methods": [
                {
                    "name": "push",
                    "args": [
                        {
                            "name": "key",
                            "type": "string"
                        },
                        {
                            "name": "value",
                            "type": "Object"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 7,
                    "modifierKind": [
                        114
                    ],
                    "jsdoctags": [
                        {
                            "name": "key",
                            "type": "string",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "value",
                            "type": "Object",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        },
        {
            "name": "StaticInfo",
            "id": "class-StaticInfo-0f484ece069f49b452de8c4f582c06de",
            "file": "src/app/data/static/main-info.ts",
            "type": "class",
            "sourceCode": "export class StaticInfo {\n  static projectName = 'prName';\n  static phoneNumber = '+90 539 961 0531';\n  static email = 'safernit@emali.com';\n  static defaultImage = '/assets/images/placeholder/default.jpeg';\n  static insta = 'safernit';\n  static facebook = 'Saferni-104348928523570';\n  static twitter = 'safernit@emali.com';\n\n  static location = 'Istanbul - Turkey';\n\n  //settings\n  static LOADER_MINIMUM_INTERVAL = 0;\n  //routing\n  static offersRoute = 'offers';\n  static bookingRoute = 'booking';\n  static tourInfoRoute = 'tours';\n}\nexport class DevData {\n  static errMsgs = [\n    {\n      name: 'required',\n      msg: 'this field is required',\n    },\n  ];\n}\n\nexport interface LoadingState {\n  msg: any;\n  isLoading: boolean;\n  hasError: boolean;\n  handler?: Function;\n}\n",
            "properties": [
                {
                    "name": "bookingRoute",
                    "defaultValue": "'booking'",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 16,
                    "modifierKind": [
                        115
                    ]
                },
                {
                    "name": "defaultImage",
                    "defaultValue": "'/assets/images/placeholder/default.jpeg'",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 5,
                    "modifierKind": [
                        115
                    ]
                },
                {
                    "name": "email",
                    "defaultValue": "'safernit@emali.com'",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 4,
                    "modifierKind": [
                        115
                    ]
                },
                {
                    "name": "facebook",
                    "defaultValue": "'Saferni-104348928523570'",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 7,
                    "modifierKind": [
                        115
                    ]
                },
                {
                    "name": "insta",
                    "defaultValue": "'safernit'",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 6,
                    "modifierKind": [
                        115
                    ]
                },
                {
                    "name": "LOADER_MINIMUM_INTERVAL",
                    "defaultValue": "0",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 13,
                    "modifierKind": [
                        115
                    ]
                },
                {
                    "name": "location",
                    "defaultValue": "'Istanbul - Turkey'",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 10,
                    "modifierKind": [
                        115
                    ]
                },
                {
                    "name": "offersRoute",
                    "defaultValue": "'offers'",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 15,
                    "modifierKind": [
                        115
                    ]
                },
                {
                    "name": "phoneNumber",
                    "defaultValue": "'+90 539 961 0531'",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 3,
                    "modifierKind": [
                        115
                    ]
                },
                {
                    "name": "projectName",
                    "defaultValue": "'prName'",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 2,
                    "modifierKind": [
                        115
                    ]
                },
                {
                    "name": "tourInfoRoute",
                    "defaultValue": "'tours'",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 17,
                    "modifierKind": [
                        115
                    ]
                },
                {
                    "name": "twitter",
                    "defaultValue": "'safernit@emali.com'",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 8,
                    "modifierKind": [
                        115
                    ]
                }
            ],
            "methods": [],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        },
        {
            "name": "StepItem",
            "id": "class-StepItem-767edb8e9651f0e238c3e8dd5c429a08",
            "file": "src/app/common/widgets/stepper/stepper-data.ts",
            "type": "class",
            "sourceCode": "export class StepperData {\n  day: number;\n  steps: StepItem[];\n  constructor(day: number, steps: StepItem[]) {\n    this.day = day;\n    this.steps = steps;\n  }\n}\nexport class StepItem {\n  constructor(\n    public time: string,\n    public title: string,\n    public image: string,\n    public description: string\n  ) {}\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "time",
                        "type": "string"
                    },
                    {
                        "name": "title",
                        "type": "string"
                    },
                    {
                        "name": "image",
                        "type": "string"
                    },
                    {
                        "name": "description",
                        "type": "string"
                    }
                ],
                "line": 9,
                "jsdoctags": [
                    {
                        "name": "time",
                        "type": "string",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "title",
                        "type": "string",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "image",
                        "type": "string",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "description",
                        "type": "string",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "properties": [
                {
                    "name": "description",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 14,
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "image",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 13,
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "time",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 11,
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "title",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 12,
                    "modifierKind": [
                        114
                    ]
                }
            ],
            "methods": [],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        },
        {
            "name": "StepperData",
            "id": "class-StepperData-767edb8e9651f0e238c3e8dd5c429a08",
            "file": "src/app/common/widgets/stepper/stepper-data.ts",
            "type": "class",
            "sourceCode": "export class StepperData {\n  day: number;\n  steps: StepItem[];\n  constructor(day: number, steps: StepItem[]) {\n    this.day = day;\n    this.steps = steps;\n  }\n}\nexport class StepItem {\n  constructor(\n    public time: string,\n    public title: string,\n    public image: string,\n    public description: string\n  ) {}\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "day",
                        "type": "number"
                    },
                    {
                        "name": "steps",
                        "type": "StepItem[]"
                    }
                ],
                "line": 3,
                "jsdoctags": [
                    {
                        "name": "day",
                        "type": "number",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "steps",
                        "type": "StepItem[]",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "properties": [
                {
                    "name": "day",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 2
                },
                {
                    "name": "steps",
                    "type": "StepItem[]",
                    "optional": false,
                    "description": "",
                    "line": 3
                }
            ],
            "methods": [],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        },
        {
            "name": "TripDayPlan",
            "id": "class-TripDayPlan-23f858c4acb8fc59345586f5702ea40a",
            "file": "src/app/data/models/TripModel.ts",
            "type": "class",
            "sourceCode": "import { Injectable } from '@angular/core';\nimport { Adapter } from '../adapters/adapter';\nimport { priceData } from '../pipes/price-caculator.pipe';\nimport {\n  Enum_Componenttimelinetimeline_Transportationtype,\n  Enum_Trips_Currency,\n  Enum_Trips_Traveltype,\n  Enum_Trips_Trip_Type,\n} from '../services/saferniGraphql.service';\nimport { CityModel } from './CityModel';\nimport { FeatureModel, FeatureModelAdapter } from './FeatureModel';\nimport { ImageModel, ImageModelAdapter } from './ImageModel';\nimport {\n  LocalizationType,\n  StrapiLocalizationsAdapter,\n} from './localization.type';\n\nexport class TripModel {\n  public get allLocationsIds(): string[] {\n    let ids: string[] = [];\n    this.plan.forEach((plan) => {\n      ids.push(...(plan.dayLocations ?? []).map((loc) => loc.locationId));\n    });\n\n    return ids;\n  }\n  get priceData(): priceData {\n    return {\n      basePrice: this.basePrice,\n      currency: this.curreny,\n    };\n  }\n  constructor(\n    public id: string,\n    public name: string,\n    public description: string,\n    public locale: string,\n    public duration: number,\n    public tripType: Enum_Trips_Trip_Type,\n    public travelType: Enum_Trips_Traveltype,\n    public active: boolean,\n    public previewImage: ImageModel,\n    public city: CityModel,\n    public features: FeatureModel[],\n    public plan: TripDayPlan[],\n    public basePrice: number,\n    public discount: number,\n    public basePeopleCount: number,\n    public curreny: Enum_Trips_Currency,\n    public localizations: LocalizationType[],\n    public hotel?: Hotel\n  ) {}\n}\n\n@Injectable({ providedIn: 'root' })\nexport class TripModelAdapter implements Adapter<TripModel> {\n  adapt(item: any): TripModel {\n    let features: FeatureModel[] = item.features.map((feature: any) =>\n      new FeatureModelAdapter().adapt(feature)\n    );\n    let plan: TripDayPlan[] = item.plan.map((planItem: any) =>\n      new TripDayPlanAdapter().adapt(planItem)\n    );\n\n    return new TripModel(\n      item?.id,\n      item.name,\n      item.description,\n      item.locale,\n      item.duration,\n      item.trip_type,\n      item.travelType,\n      item.active,\n      new ImageModelAdapter().adapt(item.previewImage),\n      item.city,\n      features,\n      plan,\n      item.basePrice,\n      item.discount,\n      item.basePeopleCount,\n      item.currency,\n      new StrapiLocalizationsAdapter().adapt(item.localizations),\n      new HotelAdapter().adapt(item.hotel)\n    );\n  }\n}\n\nexport class TripDayPlan {\n  constructor(\n    public day: number,\n    public transportationType: Enum_Componenttimelinetimeline_Transportationtype,\n    public description?: string,\n    public dayLocations?: PlanLocation[],\n    //TODO something fishy going here\n    public travelTo?: CityModel,\n    public restDay?: boolean\n  ) {}\n}\nexport class TripDayPlanAdapter implements Adapter<TripDayPlan> {\n  adapt(item: any): TripDayPlan {\n    return new TripDayPlan(\n      item.day,\n      item.transportationType,\n      item.description,\n      item.locations.map((l: any) => {\n        //TODO some of the locations has no cities\n        return new PlanLocation(l.id, l?.city?.id, l.name);\n      }),\n      item.travelTo,\n      item.restDay\n    );\n  }\n}\nexport class PlanLocation {\n  constructor(\n    public locationId: string,\n    public cityId: string,\n    public locationName: string\n  ) {}\n}\nexport class Hotel {\n  constructor(\n    public id: string,\n    public name: string,\n    public stars: number,\n    public url: string\n  ) {}\n}\nexport class HotelAdapter implements Adapter<Hotel> {\n  adapt(item: any): Hotel | undefined {\n    if (!item) return undefined;\n    else return new Hotel(item.id, item.name, item.stars, item.url);\n  }\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "day",
                        "type": "number"
                    },
                    {
                        "name": "transportationType",
                        "type": "Enum_Componenttimelinetimeline_Transportationtype"
                    },
                    {
                        "name": "description",
                        "type": "string",
                        "optional": true
                    },
                    {
                        "name": "dayLocations",
                        "type": "PlanLocation[]",
                        "optional": true
                    },
                    {
                        "name": "travelTo",
                        "type": "CityModel",
                        "optional": true
                    },
                    {
                        "name": "restDay",
                        "type": "boolean",
                        "optional": true
                    }
                ],
                "line": 88,
                "jsdoctags": [
                    {
                        "name": "day",
                        "type": "number",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "transportationType",
                        "type": "Enum_Componenttimelinetimeline_Transportationtype",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "description",
                        "type": "string",
                        "optional": true,
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "dayLocations",
                        "type": "PlanLocation[]",
                        "optional": true,
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "travelTo",
                        "type": "CityModel",
                        "optional": true,
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "restDay",
                        "type": "boolean",
                        "optional": true,
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "properties": [
                {
                    "name": "day",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 90,
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "dayLocations",
                    "type": "PlanLocation[]",
                    "optional": true,
                    "description": "",
                    "line": 93,
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "description",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 92,
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "restDay",
                    "type": "boolean",
                    "optional": true,
                    "description": "",
                    "line": 96,
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "transportationType",
                    "type": "Enum_Componenttimelinetimeline_Transportationtype",
                    "optional": false,
                    "description": "",
                    "line": 91,
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "travelTo",
                    "type": "CityModel",
                    "optional": true,
                    "description": "",
                    "line": 95,
                    "modifierKind": [
                        114
                    ]
                }
            ],
            "methods": [],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        },
        {
            "name": "TripDayPlanAdapter",
            "id": "class-TripDayPlanAdapter-23f858c4acb8fc59345586f5702ea40a",
            "file": "src/app/data/models/TripModel.ts",
            "type": "class",
            "sourceCode": "import { Injectable } from '@angular/core';\nimport { Adapter } from '../adapters/adapter';\nimport { priceData } from '../pipes/price-caculator.pipe';\nimport {\n  Enum_Componenttimelinetimeline_Transportationtype,\n  Enum_Trips_Currency,\n  Enum_Trips_Traveltype,\n  Enum_Trips_Trip_Type,\n} from '../services/saferniGraphql.service';\nimport { CityModel } from './CityModel';\nimport { FeatureModel, FeatureModelAdapter } from './FeatureModel';\nimport { ImageModel, ImageModelAdapter } from './ImageModel';\nimport {\n  LocalizationType,\n  StrapiLocalizationsAdapter,\n} from './localization.type';\n\nexport class TripModel {\n  public get allLocationsIds(): string[] {\n    let ids: string[] = [];\n    this.plan.forEach((plan) => {\n      ids.push(...(plan.dayLocations ?? []).map((loc) => loc.locationId));\n    });\n\n    return ids;\n  }\n  get priceData(): priceData {\n    return {\n      basePrice: this.basePrice,\n      currency: this.curreny,\n    };\n  }\n  constructor(\n    public id: string,\n    public name: string,\n    public description: string,\n    public locale: string,\n    public duration: number,\n    public tripType: Enum_Trips_Trip_Type,\n    public travelType: Enum_Trips_Traveltype,\n    public active: boolean,\n    public previewImage: ImageModel,\n    public city: CityModel,\n    public features: FeatureModel[],\n    public plan: TripDayPlan[],\n    public basePrice: number,\n    public discount: number,\n    public basePeopleCount: number,\n    public curreny: Enum_Trips_Currency,\n    public localizations: LocalizationType[],\n    public hotel?: Hotel\n  ) {}\n}\n\n@Injectable({ providedIn: 'root' })\nexport class TripModelAdapter implements Adapter<TripModel> {\n  adapt(item: any): TripModel {\n    let features: FeatureModel[] = item.features.map((feature: any) =>\n      new FeatureModelAdapter().adapt(feature)\n    );\n    let plan: TripDayPlan[] = item.plan.map((planItem: any) =>\n      new TripDayPlanAdapter().adapt(planItem)\n    );\n\n    return new TripModel(\n      item?.id,\n      item.name,\n      item.description,\n      item.locale,\n      item.duration,\n      item.trip_type,\n      item.travelType,\n      item.active,\n      new ImageModelAdapter().adapt(item.previewImage),\n      item.city,\n      features,\n      plan,\n      item.basePrice,\n      item.discount,\n      item.basePeopleCount,\n      item.currency,\n      new StrapiLocalizationsAdapter().adapt(item.localizations),\n      new HotelAdapter().adapt(item.hotel)\n    );\n  }\n}\n\nexport class TripDayPlan {\n  constructor(\n    public day: number,\n    public transportationType: Enum_Componenttimelinetimeline_Transportationtype,\n    public description?: string,\n    public dayLocations?: PlanLocation[],\n    //TODO something fishy going here\n    public travelTo?: CityModel,\n    public restDay?: boolean\n  ) {}\n}\nexport class TripDayPlanAdapter implements Adapter<TripDayPlan> {\n  adapt(item: any): TripDayPlan {\n    return new TripDayPlan(\n      item.day,\n      item.transportationType,\n      item.description,\n      item.locations.map((l: any) => {\n        //TODO some of the locations has no cities\n        return new PlanLocation(l.id, l?.city?.id, l.name);\n      }),\n      item.travelTo,\n      item.restDay\n    );\n  }\n}\nexport class PlanLocation {\n  constructor(\n    public locationId: string,\n    public cityId: string,\n    public locationName: string\n  ) {}\n}\nexport class Hotel {\n  constructor(\n    public id: string,\n    public name: string,\n    public stars: number,\n    public url: string\n  ) {}\n}\nexport class HotelAdapter implements Adapter<Hotel> {\n  adapt(item: any): Hotel | undefined {\n    if (!item) return undefined;\n    else return new Hotel(item.id, item.name, item.stars, item.url);\n  }\n}\n",
            "properties": [],
            "methods": [
                {
                    "name": "adapt",
                    "args": [
                        {
                            "name": "item",
                            "type": "any"
                        }
                    ],
                    "optional": false,
                    "returnType": "TripDayPlan",
                    "typeParameters": [],
                    "line": 100,
                    "jsdoctags": [
                        {
                            "name": "item",
                            "type": "any",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "implements": [
                "Adapter"
            ]
        },
        {
            "name": "TripModel",
            "id": "class-TripModel-23f858c4acb8fc59345586f5702ea40a",
            "file": "src/app/data/models/TripModel.ts",
            "type": "class",
            "sourceCode": "import { Injectable } from '@angular/core';\nimport { Adapter } from '../adapters/adapter';\nimport { priceData } from '../pipes/price-caculator.pipe';\nimport {\n  Enum_Componenttimelinetimeline_Transportationtype,\n  Enum_Trips_Currency,\n  Enum_Trips_Traveltype,\n  Enum_Trips_Trip_Type,\n} from '../services/saferniGraphql.service';\nimport { CityModel } from './CityModel';\nimport { FeatureModel, FeatureModelAdapter } from './FeatureModel';\nimport { ImageModel, ImageModelAdapter } from './ImageModel';\nimport {\n  LocalizationType,\n  StrapiLocalizationsAdapter,\n} from './localization.type';\n\nexport class TripModel {\n  public get allLocationsIds(): string[] {\n    let ids: string[] = [];\n    this.plan.forEach((plan) => {\n      ids.push(...(plan.dayLocations ?? []).map((loc) => loc.locationId));\n    });\n\n    return ids;\n  }\n  get priceData(): priceData {\n    return {\n      basePrice: this.basePrice,\n      currency: this.curreny,\n    };\n  }\n  constructor(\n    public id: string,\n    public name: string,\n    public description: string,\n    public locale: string,\n    public duration: number,\n    public tripType: Enum_Trips_Trip_Type,\n    public travelType: Enum_Trips_Traveltype,\n    public active: boolean,\n    public previewImage: ImageModel,\n    public city: CityModel,\n    public features: FeatureModel[],\n    public plan: TripDayPlan[],\n    public basePrice: number,\n    public discount: number,\n    public basePeopleCount: number,\n    public curreny: Enum_Trips_Currency,\n    public localizations: LocalizationType[],\n    public hotel?: Hotel\n  ) {}\n}\n\n@Injectable({ providedIn: 'root' })\nexport class TripModelAdapter implements Adapter<TripModel> {\n  adapt(item: any): TripModel {\n    let features: FeatureModel[] = item.features.map((feature: any) =>\n      new FeatureModelAdapter().adapt(feature)\n    );\n    let plan: TripDayPlan[] = item.plan.map((planItem: any) =>\n      new TripDayPlanAdapter().adapt(planItem)\n    );\n\n    return new TripModel(\n      item?.id,\n      item.name,\n      item.description,\n      item.locale,\n      item.duration,\n      item.trip_type,\n      item.travelType,\n      item.active,\n      new ImageModelAdapter().adapt(item.previewImage),\n      item.city,\n      features,\n      plan,\n      item.basePrice,\n      item.discount,\n      item.basePeopleCount,\n      item.currency,\n      new StrapiLocalizationsAdapter().adapt(item.localizations),\n      new HotelAdapter().adapt(item.hotel)\n    );\n  }\n}\n\nexport class TripDayPlan {\n  constructor(\n    public day: number,\n    public transportationType: Enum_Componenttimelinetimeline_Transportationtype,\n    public description?: string,\n    public dayLocations?: PlanLocation[],\n    //TODO something fishy going here\n    public travelTo?: CityModel,\n    public restDay?: boolean\n  ) {}\n}\nexport class TripDayPlanAdapter implements Adapter<TripDayPlan> {\n  adapt(item: any): TripDayPlan {\n    return new TripDayPlan(\n      item.day,\n      item.transportationType,\n      item.description,\n      item.locations.map((l: any) => {\n        //TODO some of the locations has no cities\n        return new PlanLocation(l.id, l?.city?.id, l.name);\n      }),\n      item.travelTo,\n      item.restDay\n    );\n  }\n}\nexport class PlanLocation {\n  constructor(\n    public locationId: string,\n    public cityId: string,\n    public locationName: string\n  ) {}\n}\nexport class Hotel {\n  constructor(\n    public id: string,\n    public name: string,\n    public stars: number,\n    public url: string\n  ) {}\n}\nexport class HotelAdapter implements Adapter<Hotel> {\n  adapt(item: any): Hotel | undefined {\n    if (!item) return undefined;\n    else return new Hotel(item.id, item.name, item.stars, item.url);\n  }\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "id",
                        "type": "string"
                    },
                    {
                        "name": "name",
                        "type": "string"
                    },
                    {
                        "name": "description",
                        "type": "string"
                    },
                    {
                        "name": "locale",
                        "type": "string"
                    },
                    {
                        "name": "duration",
                        "type": "number"
                    },
                    {
                        "name": "tripType",
                        "type": "Enum_Trips_Trip_Type"
                    },
                    {
                        "name": "travelType",
                        "type": "Enum_Trips_Traveltype"
                    },
                    {
                        "name": "active",
                        "type": "boolean"
                    },
                    {
                        "name": "previewImage",
                        "type": "ImageModel"
                    },
                    {
                        "name": "city",
                        "type": "CityModel"
                    },
                    {
                        "name": "features",
                        "type": "FeatureModel[]"
                    },
                    {
                        "name": "plan",
                        "type": "TripDayPlan[]"
                    },
                    {
                        "name": "basePrice",
                        "type": "number"
                    },
                    {
                        "name": "discount",
                        "type": "number"
                    },
                    {
                        "name": "basePeopleCount",
                        "type": "number"
                    },
                    {
                        "name": "curreny",
                        "type": "Enum_Trips_Currency"
                    },
                    {
                        "name": "localizations",
                        "type": "LocalizationType[]"
                    },
                    {
                        "name": "hotel",
                        "type": "Hotel",
                        "optional": true
                    }
                ],
                "line": 32,
                "jsdoctags": [
                    {
                        "name": "id",
                        "type": "string",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "name",
                        "type": "string",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "description",
                        "type": "string",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "locale",
                        "type": "string",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "duration",
                        "type": "number",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "tripType",
                        "type": "Enum_Trips_Trip_Type",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "travelType",
                        "type": "Enum_Trips_Traveltype",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "active",
                        "type": "boolean",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "previewImage",
                        "type": "ImageModel",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "city",
                        "type": "CityModel",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "features",
                        "type": "FeatureModel[]",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "plan",
                        "type": "TripDayPlan[]",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "basePrice",
                        "type": "number",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "discount",
                        "type": "number",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "basePeopleCount",
                        "type": "number",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "curreny",
                        "type": "Enum_Trips_Currency",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "localizations",
                        "type": "LocalizationType[]",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "hotel",
                        "type": "Hotel",
                        "optional": true,
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "properties": [
                {
                    "name": "active",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 41,
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "basePeopleCount",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 48,
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "basePrice",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 46,
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "city",
                    "type": "CityModel",
                    "optional": false,
                    "description": "",
                    "line": 43,
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "curreny",
                    "type": "Enum_Trips_Currency",
                    "optional": false,
                    "description": "",
                    "line": 49,
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "description",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 36,
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "discount",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 47,
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "duration",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 38,
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "features",
                    "type": "FeatureModel[]",
                    "optional": false,
                    "description": "",
                    "line": 44,
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "hotel",
                    "type": "Hotel",
                    "optional": true,
                    "description": "",
                    "line": 51,
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "id",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 34,
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "locale",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 37,
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "localizations",
                    "type": "LocalizationType[]",
                    "optional": false,
                    "description": "",
                    "line": 50,
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "name",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 35,
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "plan",
                    "type": "TripDayPlan[]",
                    "optional": false,
                    "description": "",
                    "line": 45,
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "previewImage",
                    "type": "ImageModel",
                    "optional": false,
                    "description": "",
                    "line": 42,
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "travelType",
                    "type": "Enum_Trips_Traveltype",
                    "optional": false,
                    "description": "",
                    "line": 40,
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "tripType",
                    "type": "Enum_Trips_Trip_Type",
                    "optional": false,
                    "description": "",
                    "line": 39,
                    "modifierKind": [
                        114
                    ]
                }
            ],
            "methods": [],
            "indexSignatures": [],
            "accessors": {
                "allLocationsIds": {
                    "name": "allLocationsIds",
                    "getSignature": {
                        "name": "allLocationsIds",
                        "type": "[]",
                        "returnType": "string[]",
                        "line": 19
                    }
                },
                "priceData": {
                    "name": "priceData",
                    "getSignature": {
                        "name": "priceData",
                        "type": "",
                        "returnType": "priceData",
                        "line": 27
                    }
                }
            },
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        },
        {
            "name": "TripOptions",
            "id": "class-TripOptions-f1be5d8502f41e399c1021b19f69d1e7",
            "file": "src/app/data/models/variousModels.ts",
            "type": "class",
            "sourceCode": "export class TripOptions {\n  constructor(\n    public hasCar: boolean,\n    public hasAirport: boolean,\n    public hasBreakfast: boolean,\n    public hasHotel: boolean = true\n  ) {}\n}\n\nexport class ImageSnippet {\n  constructor(public src: string, public file: File) {}\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "hasCar",
                        "type": "boolean"
                    },
                    {
                        "name": "hasAirport",
                        "type": "boolean"
                    },
                    {
                        "name": "hasBreakfast",
                        "type": "boolean"
                    },
                    {
                        "name": "hasHotel",
                        "type": "boolean",
                        "defaultValue": "true"
                    }
                ],
                "line": 1,
                "jsdoctags": [
                    {
                        "name": "hasCar",
                        "type": "boolean",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "hasAirport",
                        "type": "boolean",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "hasBreakfast",
                        "type": "boolean",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "hasHotel",
                        "type": "boolean",
                        "defaultValue": "true",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "properties": [
                {
                    "name": "hasAirport",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 4,
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "hasBreakfast",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 5,
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "hasCar",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 3,
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "hasHotel",
                    "defaultValue": "true",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 6,
                    "modifierKind": [
                        114
                    ]
                }
            ],
            "methods": [],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        },
        {
            "name": "UserTripsModel",
            "id": "class-UserTripsModel-31fda01b1ef3d168e82620179e6238bc",
            "file": "src/app/data/models/UserTripsModel.ts",
            "type": "class",
            "sourceCode": "import { add, format, isAfter, sub, toDate } from 'date-fns';\n\nexport class UserTripsModel {\n  constructor(\n    public id: string,\n    public tripId: string,\n    public image: string,\n    public duration: number,\n    public city: string,\n    public price: number,\n    public currency: string,\n    public discount: number = 0,\n    public startDate: number = sub(new Date(), { days: 5 }).getTime()\n  ) {}\n\n  get totalPrice() {\n    const discountAmount = this.price * this.discount;\n    return this.price - discountAmount;\n  }\n\n  get year(): number {\n    return new Date(this.startDate).getFullYear();\n  }\n  get fromdateTodateString(): String {\n    const stDate = format(toDate(this.startDate), 'dd MMMM');\n    const endD = format(this.endDate, 'dd MMMM');\n\n    return `from ${stDate} - ${endD}`;\n  }\n\n  get endDate(): Date {\n    return add(this.startDate, {\n      days: this.duration,\n    });\n  }\n\n  get isPastTrip() {\n    return isAfter(new Date(), this.endDate);\n  }\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "id",
                        "type": "string"
                    },
                    {
                        "name": "tripId",
                        "type": "string"
                    },
                    {
                        "name": "image",
                        "type": "string"
                    },
                    {
                        "name": "duration",
                        "type": "number"
                    },
                    {
                        "name": "city",
                        "type": "string"
                    },
                    {
                        "name": "price",
                        "type": "number"
                    },
                    {
                        "name": "currency",
                        "type": "string"
                    },
                    {
                        "name": "discount",
                        "type": "number",
                        "defaultValue": "0"
                    },
                    {
                        "name": "startDate",
                        "type": "number",
                        "defaultValue": "sub(new Date(), { days: 5 }).getTime()"
                    }
                ],
                "line": 3,
                "jsdoctags": [
                    {
                        "name": "id",
                        "type": "string",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "tripId",
                        "type": "string",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "image",
                        "type": "string",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "duration",
                        "type": "number",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "city",
                        "type": "string",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "price",
                        "type": "number",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "currency",
                        "type": "string",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "discount",
                        "type": "number",
                        "defaultValue": "0",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "startDate",
                        "type": "number",
                        "defaultValue": "sub(new Date(), { days: 5 }).getTime()",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "properties": [
                {
                    "name": "city",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 9,
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "currency",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 11,
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "discount",
                    "defaultValue": "0",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 12,
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "duration",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 8,
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "id",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 5,
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "image",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 7,
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "price",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 10,
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "startDate",
                    "defaultValue": "sub(new Date(), { days: 5 }).getTime()",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 13,
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "tripId",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 6,
                    "modifierKind": [
                        114
                    ]
                }
            ],
            "methods": [],
            "indexSignatures": [],
            "accessors": {
                "totalPrice": {
                    "name": "totalPrice",
                    "getSignature": {
                        "name": "totalPrice",
                        "type": "",
                        "returnType": "",
                        "line": 16
                    }
                },
                "year": {
                    "name": "year",
                    "getSignature": {
                        "name": "year",
                        "type": "number",
                        "returnType": "number",
                        "line": 21
                    }
                },
                "fromdateTodateString": {
                    "name": "fromdateTodateString",
                    "getSignature": {
                        "name": "fromdateTodateString",
                        "type": "",
                        "returnType": "String",
                        "line": 24
                    }
                },
                "endDate": {
                    "name": "endDate",
                    "getSignature": {
                        "name": "endDate",
                        "type": "",
                        "returnType": "Date",
                        "line": 31
                    }
                },
                "isPastTrip": {
                    "name": "isPastTrip",
                    "getSignature": {
                        "name": "isPastTrip",
                        "type": "",
                        "returnType": "",
                        "line": 37
                    }
                }
            },
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        }
    ],
    "directives": [
        {
            "name": "Onlynumbers",
            "id": "directive-Onlynumbers-23403f000ff43572f3c2db98c5fe35e3",
            "file": "src/app/data/directives/onlynumbers.directive.ts",
            "type": "directive",
            "description": "",
            "sourceCode": "import { Directive, ElementRef, HostListener, Input } from '@angular/core';\n\n@Directive({\n  selector: '[OnlyNumbers]',\n})\nexport class Onlynumbers {\n  constructor(private el: ElementRef) {}\n\n  @Input() OnlyNumbers: boolean;\n  navigationKeys = [\n    'Backspace',\n    'Delete',\n    'Tab',\n    'Escape',\n    'Enter',\n    'Home',\n    'End',\n    'ArrowLeft',\n    'ArrowRight',\n    'Clear',\n    'Copy',\n    'Paste',\n  ];\n  @HostListener('keydown', ['$event']) onKeyDown(event: KeyboardEvent) {\n    let e = <KeyboardEvent>event;\n\n    if (this.OnlyNumbers) {\n      if (\n        // Allow: Delete, Backspace, Tab, Escape, Enter, etc\n        this.navigationKeys.indexOf(e.key) > -1 ||\n        (e.key === 'a' && e.ctrlKey === true) || // Allow: Ctrl+A\n        (e.key === 'c' && e.ctrlKey === true) || // Allow: Ctrl+C\n        (e.key === 'v' && e.ctrlKey === true) || // Allow: Ctrl+V\n        (e.key === 'x' && e.ctrlKey === true) || // Allow: Ctrl+X\n        (e.key === 'a' && e.metaKey === true) || // Cmd+A (Mac)\n        (e.key === 'c' && e.metaKey === true) || // Cmd+C (Mac)\n        (e.key === 'v' && e.metaKey === true) || // Cmd+V (Mac)\n        (e.key === 'x' && e.metaKey === true) // Cmd+X (Mac)\n      ) {\n        return; // let it happen, don't do anything\n      }\n      // Ensure that it is a number and stop the keypress\n      if (e.key === ' ' || isNaN(Number(e.key))) {\n        e.preventDefault();\n      }\n    }\n  }\n\n  @HostListener('paste', ['$event'])\n  onPaste(event: any): void {\n    // let pastedInput: string | any;\n    // if (window['clipboardData']) {\n    //   // Browser is IE\n    //   pastedInput = window['clipboardData'].getData('text');\n    // } else if (event.clipboardData && event.clipboardData.getData) {\n    //   // Other browsers\n    //   pastedInput = event.clipboardData.getData('text/plain');\n    // }\n\n    event.preventDefault();\n  }\n}\n",
            "selector": "[OnlyNumbers]",
            "providers": [],
            "inputsClass": [
                {
                    "name": "OnlyNumbers",
                    "line": 9,
                    "type": "boolean"
                }
            ],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": [
                {
                    "name": "keydown",
                    "args": [
                        {
                            "name": "event",
                            "type": "KeyboardEvent"
                        }
                    ],
                    "argsDecorator": [
                        "$event"
                    ],
                    "line": 24
                },
                {
                    "name": "paste",
                    "args": [
                        {
                            "name": "event",
                            "type": "any"
                        }
                    ],
                    "argsDecorator": [
                        "$event"
                    ],
                    "line": 50
                }
            ],
            "propertiesClass": [
                {
                    "name": "navigationKeys",
                    "defaultValue": "[\n    'Backspace',\n    'Delete',\n    'Tab',\n    'Escape',\n    'Enter',\n    'Home',\n    'End',\n    'ArrowLeft',\n    'ArrowRight',\n    'Clear',\n    'Copy',\n    'Paste',\n  ]",
                    "type": "[]",
                    "optional": false,
                    "description": "",
                    "line": 10
                }
            ],
            "methodsClass": [],
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "el",
                        "type": "ElementRef"
                    }
                ],
                "line": 6,
                "jsdoctags": [
                    {
                        "name": "el",
                        "type": "ElementRef",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            }
        },
        {
            "name": "SocialLinkDirective",
            "id": "directive-SocialLinkDirective-1e582d9cfff6aed6710697d3937dd7e6",
            "file": "src/app/data/directives/social-link.directive.ts",
            "type": "directive",
            "description": "",
            "sourceCode": "import { Directive, HostListener, Input } from '@angular/core';\nimport { StaticInfo } from '../static/main-info';\n\n@Directive({\n  selector: '[socialLink]',\n})\nexport class SocialLinkDirective {\n  @Input() type: string;\n  @Input() message: string = 'hello';\n  @Input() account: string = '';\n  constructor() {}\n\n  @HostListener('click')\n  onClick() {\n    console.log('clicked', this.type);\n\n    switch (this.type) {\n      case 'whatsapp':\n        window.open(\n          `https://wa.me/${StaticInfo.phoneNumber\n            .split(' ')\n            .join('')\n            .replace('+', '')}?text=${this.message}`\n        );\n\n        break;\n      case 'email':\n        window.open(`mailto:${StaticInfo.email}+?body=${this.message}`);\n        break;\n      case 'instagram':\n        window.open(`https://www.instagram.com/${this.account}`);\n        break;\n      case 'facebook':\n        window.open(`https://www.facebook.com/${this.account}`);\n        break;\n      case 'twitter':\n        window.open(`https://www.twitter.com/${this.account}`);\n        break;\n\n      default:\n        break;\n    }\n  }\n}\n\nexport enum socialLinkType {\n  whatsApp,\n  facebook,\n  instagram,\n  email,\n  phone,\n  twitter,\n}\n",
            "selector": "[socialLink]",
            "providers": [],
            "inputsClass": [
                {
                    "name": "account",
                    "defaultValue": "''",
                    "line": 10,
                    "type": "string"
                },
                {
                    "name": "message",
                    "defaultValue": "'hello'",
                    "line": 9,
                    "type": "string"
                },
                {
                    "name": "type",
                    "line": 8,
                    "type": "string"
                }
            ],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": [
                {
                    "name": "click",
                    "args": [],
                    "argsDecorator": [],
                    "line": 14
                }
            ],
            "propertiesClass": [],
            "methodsClass": [],
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [],
                "line": 10
            }
        }
    ],
    "components": [
        {
            "name": "AboutUsComponent",
            "id": "component-AboutUsComponent-1c2c31152642a10684266c9bf649bb93",
            "file": "src/app/pages/about-us/about-us.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-about-us",
            "styleUrls": [
                "./about-us.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./about-us.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 13
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { BookingSubmitPopupComponent } from 'src/app/common/widgets/booking-submit-popup/booking-submit-popup.component';\n\n@Component({\n  selector: 'app-about-us',\n  templateUrl: './about-us.component.html',\n  styleUrls: ['./about-us.component.scss'],\n})\nexport class AboutUsComponent implements OnInit {\n  \n\n  ngOnInit(): void {}\n \n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import \"/src/assets/css/abstract/variables\";\n@import \"/src/assets/css/abstract/mixins\";\n.about-us {\n  min-height: 100vh;\n  &__banner {\n    height: 50vh;\n    position: relative;\n    img {\n      width: 100%;\n      height: 100%;\n      object-fit: cover;\n    }\n\n    .banner-text {\n      position: absolute;\n      top: 0px;\n      left: 50%;\n      transform: translateX(-50%);\n      width: $main-content-width;\n      height: 100%;\n\n      display: flex;\n      flex-direction: column;\n      justify-content: center;\n      align-items: flex-start;\n\n      h1 {\n        display: inline-block;\n        color: white;\n        background-color: $accent;\n        font-size: 5rem;\n        font-weight: bold;\n        font-family: var(--secondary-font);\n        text-transform: capitalize;\n        padding: 1rem;\n      }\n\n      p {\n        font-family: var(--secondary-font);\n        text-align: start;\n        font-size: 7rem;\n        text-transform: capitalize;\n        color: white;\n      }\n    }\n  }\n  &__body {\n    padding: 10rem 0rem;\n    display: grid;\n    grid-template-columns: 1fr repeat(3, 37rem) 1fr;\n    grid-template-rows: min-content 10rem 10rem 50rem;\n    // gap: 10rem 0rem;\n    .who-are-we {\n      grid-column: 2/4;\n      grid-row: 1/2;\n      h1 {\n        margin-bottom: 1rem;\n      }\n      p {\n        font-size: 1.8rem;\n        font-weight: 400;\n        color: #252629;\n        font-family: var(--primary-font);\n      }\n    }\n    .plane-image {\n      grid-column: 4/-1;\n      grid-row: 1/2;\n      img {\n        width: 100%;\n        height: 100%;\n        object-fit: contain;\n      }\n    }\n    .what-we-offer {\n      grid-column: 2/4;\n      grid-row: 3/4;\n    }\n    .saferni-services {\n      margin-top: 3rem;\n\n      grid-column: 2/5;\n      grid-row: 4/5;\n      display: flex;\n      justify-content: space-between;\n      align-items: flex-start;\n\n      .saferni-service {\n        width: 28rem;\n        height: 23rem;\n        display: flex;\n        flex-direction: column;\n        justify-content: flex-start;\n        align-items: center;\n        &__image {\n          width: 50%;\n          height: 50%;\n\n          margin-bottom: 1.5rem;\n          img {\n            width: 100%;\n            height: 100%;\n          }\n        }\n        p {\n          font-size: 3rem;\n          font-weight: 500;\n          color: #252629;\n          text-align: center;\n        }\n      }\n    }\n  }\n\n  @include respondMax(1150px) {\n    &__banner {\n      .banner-text {\n        width: 85%;\n      }\n    }\n    &__body {\n      grid-template-columns: 7.5% repeat(3, 28.333%) 7.5%;\n    }\n  }\n  @include respondMax(800px) {\n    &__banner {\n      .banner-text {\n        h1 {\n          font-size: 3.5rem;\n        }\n        p {\n          font-size: 5rem;\n        }\n      }\n    }\n  }\n}\n.about-us-headline {\n  font-size: 4.3rem;\n  color: #252629;\n  position: relative;\n  display: inline-block;\n  &:lang(ar) {\n    &::after {\n      left: unset;\n      right: 0px;\n    }\n  }\n  &::after {\n    content: \"\";\n    width: 30%;\n    height: 0.5rem;\n    background-color: $accent;\n    position: absolute;\n    bottom: 0px;\n    left: 0px;\n  }\n}\n",
                    "styleUrl": "./about-us.component.scss"
                }
            ],
            "stylesData": "",
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"aboust-us\">\n  <section class=\"about-us__banner\">\n    <img src=\"../../../assets/images/bk/about-us@1x.png\" />\n    <div class=\"banner-text\">\n      <h1>{{ \"aboutUsPage.aboutUs\" | transloco }}</h1>\n      <p>{{ \"aboutUsPage.bannerMission1\" | transloco }}</p>\n      <p>{{ \"aboutUsPage.bannerMission2\" | transloco }}</p>\n    </div>\n  </section>\n  <section class=\"about-us__body\">\n    <div class=\"who-are-we\">\n      <h1 class=\"about-us-headline\">\n        {{ \"aboutUsPage.whoAreWe\" | transloco }}\n      </h1>\n      <p>\n        {{ \"aboutUsPage.whoAreWeAnswer\" | transloco }}\n      </p>\n    </div>\n    <div class=\"plane-image\">\n      <img src=\"../../../assets/images/bk/plane.png\" alt=\"\" />\n    </div>\n    <div class=\"what-we-offer\">\n      <h1 class=\"about-us-headline\">\n        {{ \"aboutUsPage.whatWeOffer\" | transloco }}\n      </h1>\n    </div>\n    <div class=\"saferni-services\">\n      <div class=\"saferni-service\">\n        <div class=\"saferni-service__image\">\n          <img src=\"../../../assets/images/svgs/about-us-thumbs.svg\" />\n        </div>\n        <p>{{ \"aboutUsPage.services.service1\" | transloco }}</p>\n      </div>\n      <div class=\"saferni-service\">\n        <div class=\"saferni-service__image\">\n          <img src=\"../../../assets/images/svgs/about-us-map.svg\" />\n        </div>\n        <p>{{ \"aboutUsPage.services.service2\" | transloco }}</p>\n      </div>\n      <div class=\"saferni-service\">\n        <div class=\"saferni-service__image\">\n          <img src=\"../../../assets/images/svgs/about-us-globe.svg\" />\n        </div>\n        <p>{{ \"aboutUsPage.services.service3\" | transloco }}</p>\n      </div>\n    </div>\n  </section>\n</div>\n"
        },
        {
            "name": "AccordionListComponent",
            "id": "component-AccordionListComponent-c2dd8cb7091fae1d339d7d89e4aff84a",
            "file": "src/app/common/widgets/accordion-list/accordion-list.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-accordion-list",
            "styleUrls": [
                "./accordion-list.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./accordion-list.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "items",
                    "line": 17,
                    "type": "AccordionListItem[]"
                }
            ],
            "outputsClass": [
                {
                    "name": "itemClicked",
                    "defaultValue": "new EventEmitter<AccordionClickEventData>()",
                    "line": 18,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [
                {
                    "name": "openHeaders",
                    "defaultValue": "[]",
                    "type": "boolean[]",
                    "optional": false,
                    "description": "",
                    "line": 20
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 21
                },
                {
                    "name": "onItemClicked",
                    "args": [
                        {
                            "name": "item",
                            "type": "AccordionClickEventData"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 34,
                    "jsdoctags": [
                        {
                            "name": "item",
                            "type": "AccordionClickEventData",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "toggleHeader",
                    "args": [
                        {
                            "name": "headerIndex",
                            "type": "number"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 26,
                    "jsdoctags": [
                        {
                            "name": "headerIndex",
                            "type": "number",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, Input, OnInit, Output, EventEmitter } from '@angular/core';\nimport { AccordionListItem } from './accordion-list-item';\n\nexport type AccordionClickEventData = {\n  parentIndex: number;\n  childIndex: number;\n};\n\n@Component({\n  selector: 'app-accordion-list',\n  templateUrl: './accordion-list.component.html',\n  styleUrls: ['./accordion-list.component.scss'],\n})\nexport class AccordionListComponent implements OnInit {\n  constructor() {}\n\n  @Input() items: AccordionListItem[];\n  @Output() itemClicked = new EventEmitter<AccordionClickEventData>();\n\n  openHeaders: boolean[] = [];\n  ngOnInit(): void {\n    this.openHeaders = new Array(this.items.length).fill(false);\n    this.openHeaders[0] = true;\n  }\n\n  toggleHeader(headerIndex: number) {\n    if (this.openHeaders[headerIndex]) {\n      this.openHeaders[headerIndex] = false;\n    } else {\n      // this.openHeaders = new Array(this.items.length).fill(false);\n      this.openHeaders[headerIndex] = true;\n    }\n  }\n  onItemClicked(item: AccordionClickEventData) {\n    this.itemClicked.emit(item);\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import \"/src/assets/css/abstract/variables\";\n$midnight: $accent;\n$clouds: #ecf0f1;\n\n.tabs {\n  overflow: scroll;\n\n  height: 100%;\n  width: 100%;\n}\n.tab {\n  width: 100%;\n\n  color: white;\n  overflow: hidden;\n  &-label {\n    display: flex;\n    justify-content: space-between;\n    padding: 1rem 2rem;\n    background: $midnight;\n    align-items: center;\n    cursor: pointer;\n    margin: 0rem;\n\n    /* Icon */\n    &:hover {\n      background: darken($midnight, 10%);\n    }\n    p {\n      font-size: 2rem;\n      font-weight: 600;\n      margin: 0rem;\n      text-transform: capitalize;\n    }\n    i {\n      transition: all 0.2s ease-out;\n      font-size: 2rem;\n    }\n  }\n\n  &-label.open {\n    i {\n      transform: rotateZ(-180deg);\n    }\n  }\n\n  &-content {\n    height: 0px;\n    transition: all 0.2s ease-out;\n    padding: 0rem;\n    color: $midnight;\n    background: white;\n    transition: all 0.35s ease-out;\n\n    &__item {\n      cursor: pointer;\n      padding: 1.5rem;\n\n      display: flex;\n      justify-content: flex-start;\n      align-items: center;\n      p {\n        font-size: 2rem;\n        padding: 0rem;\n        margin: 0rem;\n        text-transform: capitalize;\n        font-weight: 300;\n        color: black;\n      }\n\n      &:not(:last-child) {\n        border-bottom: solid 1px lightgrey;\n      }\n    }\n  }\n  &-content.open {\n    height: unset;\n  }\n  &-close {\n    display: flex;\n    justify-content: flex-end;\n    padding: 1em;\n    font-size: 0.75em;\n    background: $midnight;\n    cursor: pointer;\n    &:hover {\n      background: darken($midnight, 10%);\n    }\n  }\n}\n",
                    "styleUrl": "./accordion-list.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [],
                "line": 14
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"tabs\">\n  <div class=\"tab\" *ngFor=\"let item of items; let i = index\">\n    <div\n      class=\"tab-label\"\n      (click)=\"toggleHeader(i)\"\n      [ngClass]=\"openHeaders[i] ? 'open' : ''\"\n    >\n      <p>day {{ i + 1 }}</p>\n      <i class=\"fa fa-arrow-down\"></i>\n    </div>\n    <div class=\"tab-content\" [ngClass]=\"openHeaders[i] ? 'open' : ''\">\n      <div\n        class=\"tab-content__item\"\n        *ngFor=\"let opt of item.options; let j = index\"\n        (click)=\"onItemClicked({ parentIndex: i, childIndex: j })\"\n      >\n       <p> {{ opt.label }}</p>\n      </div>\n    </div>\n  </div>\n  <!-- <div class=\"tab\">\n    <input type=\"radio\" id=\"rd2\" name=\"rd\" />\n    <label class=\"tab-label\" for=\"rd2\">Item 2</label>\n    <div class=\"tab-content\">\n      Lorem ipsum dolor, sit amet consectetur adipisicing elit. Nihil, aut.\n    </div>\n  </div>\n  <div class=\"tab\">\n    <input type=\"radio\" id=\"rd3\" name=\"rd\" />\n    <label for=\"rd3\" class=\"tab-close\">Close others &times;</label>\n  </div> -->\n</div>\n"
        },
        {
            "name": "AppComponent",
            "id": "component-AppComponent-a2ae7689b4a40bb52a4b15da07bddd65",
            "file": "src/app/app.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-root",
            "styleUrls": [
                "./app.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./app.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "ctrl",
                    "defaultValue": "new FormControl()",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 15
                }
            ],
            "methodsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\nimport { FormControl } from '@angular/forms';\nimport { CityService } from './data/services/city.service';\nimport { MessagingService } from './data/services/messaging.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n})\nexport class AppComponent {\n  constructor(_ser: CityService, msg: MessagingService) {\n    _ser.init();\n  }\n  ctrl = new FormControl();\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".main {\n  height: 100%;\n  display: flex;\n  flex-direction: column;\n  .outlet {\n    height: 100%;\n  }\n  app-ticket-counter {\n    font-size: 10rem;\n    margin: 0 auto;\n  }\n}\n",
                    "styleUrl": "./app.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "_ser",
                        "type": "CityService"
                    },
                    {
                        "name": "msg",
                        "type": "MessagingService"
                    }
                ],
                "line": 11,
                "jsdoctags": [
                    {
                        "name": "_ser",
                        "type": "CityService",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "msg",
                        "type": "MessagingService",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "templateData": "<div class=\"main\">\n  <!-- <app-ticket-counter\n    [formControl]=\"ctrl\"\n    [prefix]=\"'inputs.ticket.child' | transloco\"\n  ></app-ticket-counter>\n  <app-ticket-counter\n    [formControl]=\"ctrl\"\n    [prefix]=\"'inputs.ticket.adult' | transloco\"\n  ></app-ticket-counter>\n  <app-custom-input [formControl]=\"ctrl\"></app-custom-input> -->\n  <app-header-info></app-header-info>\n  <app-header-tool-bar></app-header-tool-bar>\n  <router-outlet class=\"outlet\"></router-outlet>\n  <app-footer></app-footer>\n  <app-splash></app-splash>\n</div>\n"
        },
        {
            "name": "BannerCarouselComponent",
            "id": "component-BannerCarouselComponent-9cb905ac9ba3f681759a9dbb18657289",
            "file": "src/app/common/widgets/banner-carousel/banner-carousel.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-banner-carousel",
            "styleUrls": [
                "./banner-carousel.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./banner-carousel.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "centeredTexts",
                    "line": 17,
                    "type": "string[] | undefined"
                },
                {
                    "name": "images",
                    "line": 16,
                    "type": "string[]"
                },
                {
                    "name": "overlayOpacity",
                    "defaultValue": "25",
                    "line": 19
                },
                {
                    "name": "screenHeightPercentage",
                    "line": 18,
                    "type": "number"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "index",
                    "defaultValue": "0",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 22
                },
                {
                    "name": "swiper",
                    "type": "SwiperComponent",
                    "optional": false,
                    "description": "",
                    "line": 20,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'swiper'"
                        }
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "indexChanged",
                    "args": [
                        {
                            "name": "newIndex",
                            "type": "number"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 30,
                    "jsdoctags": [
                        {
                            "name": "newIndex",
                            "type": "number",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 23
                },
                {
                    "name": "swipe",
                    "args": [
                        {
                            "name": "right",
                            "type": "boolean"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 25,
                    "jsdoctags": [
                        {
                            "name": "right",
                            "type": "boolean",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, Input, OnInit, ViewChild } from '@angular/core';\nimport { LocalService } from 'src/app/data/services/local.service';\nimport { SwiperComponent } from 'swiper/angular';\nimport SwiperCore, { Autoplay, Navigation } from 'swiper/core';\n\nSwiperCore.use([Autoplay, Navigation]);\n\n@Component({\n  selector: 'app-banner-carousel',\n  templateUrl: './banner-carousel.component.html',\n  styleUrls: ['./banner-carousel.component.scss'],\n})\nexport class BannerCarouselComponent implements OnInit {\n  constructor(private loc: LocalService) {}\n\n  @Input() images: string[];\n  @Input() centeredTexts:string[] | undefined;\n  @Input() screenHeightPercentage: number;\n  @Input() overlayOpacity = 25;\n  @ViewChild('swiper') swiper: SwiperComponent;\n\n  index = 0;\n  ngOnInit(): void {}\n\n  swipe(right: boolean) {\n    let isLeft = !right;\n    if (this.loc.locale == 'ar') isLeft = !isLeft;\n    Object(this.swiper.navigation)[isLeft ? 'prevEl' : 'nextEl'].click();\n  }\n  indexChanged(newIndex:number){\n    this.index = newIndex;\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import \"/src/assets/css/abstract/mixins\";\n@import \"/src/assets/css/abstract/variables\";\n.banner-carousel {\n  // grid-column: 0/-1;\n  width: 100%;\n\n  position: relative;\n  ::ng-deep .swiper-slide {\n    width: 100px;\n\n    @include imageOverlay(0.1);\n  }\n  ::ng-deep .swiper-container {\n    .swiper-button-next,\n    .swiper-button-prev {\n      display: none;\n    }\n  }\n  .swiper-arrow {\n    position: absolute;\n    cursor: pointer;\n\n    top: 50%;\n    text-align: center;\n    background-color: white;\n    width: 5rem;\n    height: 5rem;\n    z-index: 1;\n\n    border-radius: 50%;\n    transition: all 0.2s ease-out;\n    display: grid;\n    place-items: center;\n\n    box-shadow: 0px 3px 15px rgba(0, 0, 0, 0.2);\n    transform: translateY(-50%);\n\n    &:active {\n      transform: translateY(-40%);\n    }\n\n    i {\n      font-size: 1.5rem;\n    }\n\n    &.left {\n      left: 10%;\n    }\n    &.right {\n      right: 10%;\n    }\n  }\n\n  .cetnered-text {\n    position: absolute;\n    left: 50%;\n    top: 50%;\n    z-index: 1;\n    transform: translate(-50%, -50%);\n    height: 30%;\n    width: 60%;\n\n    display: grid;\n    place-items: center;\n    p {\n      text-transform: uppercase;\n      font-size: 5rem;\n      font-family: var(--secondary-font);\n      color: white;\n      text-shadow: $text-shadow;\n    }\n  }\n}\n",
                    "styleUrl": "./banner-carousel.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "loc",
                        "type": "LocalService"
                    }
                ],
                "line": 13,
                "jsdoctags": [
                    {
                        "name": "loc",
                        "type": "LocalService",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div\n  class=\"banner-carousel\"\n  [ngStyle]=\"{\n    minHeight: screenHeightPercentage + 'vh',\n    height: screenHeightPercentage + 'vh'\n  }\"\n>\n  <swiper\n    #swiper\n    class=\"swiper-container\"\n    [slidesPerView]=\"1\"\n    class=\"slide\"\n    [spaceBetween]=\"0\"\n    [autoplay]=\"true\"\n    [loop]=\"true\"\n    [navigation]=\"true\"\n    (indexChange)=\"indexChanged($event)\"\n  >\n    <ng-template swiperSlide class=\"slide\" *ngFor=\"let image of images\">\n      <!-- <img\n        src=\"{{ image }}\"\n        [ngStyle]=\"{\n          minHeight: screenHeightPercentage + 'vh',\n          height: screenHeightPercentage + 'vh'\n        }\"\n        style=\"width: 100%; object-fit: cover\"\n      /> -->\n      <div class=\"\" [ngStyle]=\"{ height: screenHeightPercentage + 'vh' }\">\n        <app-saferni-image [url]=\"image\" [overlayOpacity]=\"overlayOpacity\">\n        </app-saferni-image>\n      </div>\n    </ng-template>\n  </swiper>\n  <div class=\"swiper-arrow left\" (click)=\"swipe(false)\">\n    <i class=\"fa fa-chevron-left\"></i>\n  </div>\n  <div class=\"swiper-arrow right\" (click)=\"swipe(true)\">\n    <i class=\"fa fa-chevron-right\"></i>\n  </div>\n\n  <!-- <div class=\"cetnered-text\" *ngIf=\"centeredTexts\">\n    <p>{{ centeredTexts[index] }}</p>\n  </div> -->\n</div>\n"
        },
        {
            "name": "BookingPageComponent",
            "id": "component-BookingPageComponent-d061c5fc6501aacb4034263650312eee",
            "file": "src/app/pages/booking/booking-page.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-booking-page",
            "styleUrls": [
                "./booking-page.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./booking-page.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "_ser",
                    "type": "TripService",
                    "optional": false,
                    "description": "",
                    "line": 21,
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "fb",
                    "type": "FormBuilder",
                    "optional": false,
                    "description": "",
                    "line": 22,
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "form",
                    "type": "FormGroup",
                    "optional": false,
                    "description": "",
                    "line": 24
                },
                {
                    "name": "icns",
                    "defaultValue": "ICONS",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 18
                },
                {
                    "name": "isLoading",
                    "defaultValue": "true",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 17
                },
                {
                    "name": "ref",
                    "type": "BookingInterface",
                    "optional": false,
                    "description": "",
                    "line": 25
                },
                {
                    "name": "route",
                    "type": "ActivatedRoute",
                    "optional": false,
                    "description": "",
                    "line": 20,
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "selectedFile",
                    "type": "ImageSnippet",
                    "optional": false,
                    "description": "",
                    "line": 53
                },
                {
                    "name": "trip",
                    "type": "TripModel",
                    "optional": false,
                    "description": "",
                    "line": 16
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 26
                },
                {
                    "name": "onSelectFile",
                    "args": [
                        {
                            "name": "event",
                            "type": "any"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 63,
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "any",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "saveData",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 55
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup } from '@angular/forms';\nimport { ActivatedRoute } from '@angular/router';\nimport { BookingInterface } from 'src/app/data/models/bookingModel';\nimport { TripModel } from 'src/app/data/models/TripModel';\nimport { ImageSnippet } from 'src/app/data/models/variousModels';\nimport { TripService } from 'src/app/data/services/trip.service';\nimport { ICONS } from 'src/app/data/utils/enums';\n\n@Component({\n  selector: 'app-booking-page',\n  templateUrl: './booking-page.component.html',\n  styleUrls: ['./booking-page.component.scss'],\n})\nexport class BookingPageComponent implements OnInit {\n  trip: TripModel;\n  isLoading = true;\n  icns = ICONS;\n  constructor(\n    public route: ActivatedRoute,\n    public _ser: TripService,\n    public fb: FormBuilder\n  ) {}\n  form: FormGroup;\n  ref: BookingInterface;\n  ngOnInit(): void {\n    this.route.params.subscribe(async (f) => {\n      // this.trip = await this._ser.getOfferById(f['id']);\n      // this.isLoading = false;\n      // this.ref = {\n      //   // currency: this.offer.currency,\n      //   // duration: this.offer.duration,\n      //   // email: '',\n      //   // fullName: '',\n      //   // id: '',\n      //   // image: '',\n      //   // isApproved: false,\n      //   // message: '',\n      //   // phoneNumber: '',\n      //   // price: this.price,\n      //   // startDate: Date.now(),\n      //   // ticketCount: 0,\n      //   // ticketImage: '',\n      // };\n    });\n\n    this.form = this.fb.group({\n      ...this.ref,\n      startDate: new Date(this.ref.startDate),\n    });\n  }\n\n  selectedFile: ImageSnippet;\n\n  saveData() {\n    const isValid = this.form.valid;\n    if (!isValid) return;\n\n    const booking: BookingInterface = {\n      ...this.form.value,\n    };\n  }\n  onSelectFile(event: any) {\n    if (!event.target.files) return;\n    const file: File = event.target.files[0];\n    const reader = new FileReader();\n\n    reader.addEventListener('load', (event: any) => {\n      this.selectedFile = new ImageSnippet(event.target.result, file);\n\n      // this.imageService.uploadImage(this.selectedFile.file).subscribe(\n      //   (res) => {},\n      //   (err) => {}\n      // );\n    });\n\n    reader.readAsDataURL(file);\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import \"/src/assets/css/abstract/variables\";\n\n$verticalPadding: 5rem;\n$infoFontSize: 4rem;\n$titleFontSize: 5rem;\n\n.main {\n  .img {\n    height: 60vh;\n    img {\n      height: 100%;\n      width: 100%;\n      object-fit: cover;\n    }\n  }\n\n  .info {\n    display: grid;\n    padding: $verticalPadding 25rem;\n    grid-template-columns: repeat(2, 1fr);\n    grid-template-rows: repeat(3, 1fr);\n    & > * {\n      font-weight: 400;\n    }\n    &_duration {\n      grid-column: 2;\n      grid-row: 1;\n      font-size: $infoFontSize;\n      text-align: end;\n    }\n    &_price {\n      grid-column: 2;\n      grid-row: 2;\n      font-size: $infoFontSize;\n      text-align: end;\n    }\n    &_title {\n      font-size: $titleFontSize;\n      font-weight: 800;\n    }\n  }\n\n  .form {\n    padding: $verticalPadding 41rem;\n    background-color: $accent;\n    color: white;\n    text-align: center;\n    &_title {\n      font-size: $titleFontSize;\n    }\n    &_desc {\n      font-size: $infoFontSize / 2.5;\n    }\n    &_grid {\n      display: grid;\n      grid-template-columns: repeat(2, 1fr);\n      margin-top: 4rem;\n      column-gap: 2rem;\n      row-gap: 3rem;\n      .button {\n        // grid-row: -1;\n        margin-top: 4rem;\n        height: 5rem;\n        width: 50%;\n        justify-self: end;\n        font-size: 2rem;\n      }\n      .botton2 {\n        justify-self: start;\n      }\n    }\n  }\n\n  .other {\n    padding: $verticalPadding 5rem;\n\n    h1 {\n      color: $accent;\n      font-weight: 800;\n      font-size: 5rem;\n      font-family: var(--primary-font);\n    }\n    text-align: center;\n  }\n}\n",
                    "styleUrl": "./booking-page.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "route",
                        "type": "ActivatedRoute"
                    },
                    {
                        "name": "_ser",
                        "type": "TripService"
                    },
                    {
                        "name": "fb",
                        "type": "FormBuilder"
                    }
                ],
                "line": 18,
                "jsdoctags": [
                    {
                        "name": "route",
                        "type": "ActivatedRoute",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "_ser",
                        "type": "TripService",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "fb",
                        "type": "FormBuilder",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<!-- <app-loader [isLoading]=\"isLoading\">\n  <div *ngIf=\"!isLoading\" class=\"main\">\n    <div class=\"img\">\n      <img [src]=\"trip.previewImage | serverimage\" alt=\"\" />\n    </div>\n    <div class=\"info\">\n      <h1 class=\"info_title\">{{ trip.city.name }}</h1>\n      <app-read-only-stars\n        class=\"info_rating\"\n        [stars]=\"5\"\n        [color]=\"'#000'\"\n        [size]=\"2\"\n      ></app-read-only-stars>\n      <app-trip-extra class=\"info_extra\" [isBig]=\"true\"></app-trip-extra>\n      <h3 class=\"info_duration\">{{ trip.duration }} days</h3>\n      <h3 class=\"info_price\">{{ trip.price }} {{ trip.currency }}</h3>\n    </div>\n\n    <form class=\"form page-padding\" [formGroup]=\"form\">\n      <h1 class=\"form_title\">Guest details</h1>\n      <h5 class=\"form_desc\">\n        Never let your memories be greater than your dreams\n      </h5>\n      <div class=\"form_grid\">\n        <app-profileinput\n          placeholder=\"Full Name\"\n          formControlName=\"fullName\"\n          [icon]=\"icns.profile\"\n        ></app-profileinput>\n        <app-profileinput\n          placeholder=\"Email\"\n          [icon]=\"icns.mail\"\n          formControlName=\"email\"\n        ></app-profileinput>\n        <app-profileinput\n          placeholder=\"Phone Number\"\n          [icon]=\"icns.phone\"\n          formControlName=\"phoneNumber\"\n        ></app-profileinput>\n        <app-profileinput\n          placeholder=\"DD-MM-YY\"\n          [icon]=\"icns.calendar\"\n          formControlName=\"startDate\"\n        ></app-profileinput>\n        <app-profileinput\n          placeholder=\"Number of tickets\"\n          [icon]=\"icns.ticket\"\n          formControlName=\"ticketCount\"\n          [isNumeric]=\"true\"\n        ></app-profileinput>\n        <app-profileinput\n          placeholder=\"Message\"\n          [icon]=\"icns.ticket\"\n          formControlName=\"message\"\n        ></app-profileinput>\n\n        <button (click)=\"saveData()\" class=\"btn-inverse button\">\n          Book Now\n        </button>\n        <input\n          #imgInput\n          hidden=\"true\"\n          type=\"file\"\n          (change)=\"onSelectFile($event)\"\n          accept=\"image/*\"\n        />\n\n        <button\n          (click)=\"imgInput.click()\"\n          type=\"file\"\n          class=\"btn-inverse button botton2\"\n        >\n          Upload The Ticket\n        </button>\n      </div>\n    </form>\n\n    <div class=\"other\">\n      <h1>Related Trips</h1>\n      GRID OF TRIPS\n    </div>\n  </div>\n</app-loader> -->\n"
        },
        {
            "name": "BookingSubmitPopupComponent",
            "id": "component-BookingSubmitPopupComponent-a4f6eb266e9d8bb58728949c521092ab",
            "file": "src/app/common/widgets/booking-submit-popup/booking-submit-popup.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-booking-submit-popup",
            "styleUrls": [
                "./booking-submit-popup.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./booking-submit-popup.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "data",
                    "type": "BookingPopupData",
                    "optional": false,
                    "description": "",
                    "line": 14,
                    "decorators": [
                        {
                            "name": "Inject",
                            "stringifiedArguments": "MAT_DIALOG_DATA"
                        }
                    ],
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "dialogRef",
                    "type": "MatDialogRef<BookingSubmitPopupComponent>",
                    "optional": false,
                    "description": "",
                    "line": 13,
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "options",
                    "defaultValue": "{\n    autoplay: true,\n    loop: 0,\n    path: this.data.success\n      ? '../../../../assets/animation/booking_submit_animation2.json'\n      : '../../../../assets/animation/error.json',\n  }",
                    "type": "object",
                    "optional": false,
                    "description": "",
                    "line": 23
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 21
                },
                {
                    "name": "onNoClick",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 17
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, Inject, OnInit } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { AnimationOptions } from 'ngx-lottie';\nimport { BehaviorSubject } from 'rxjs';\n\n@Component({\n  selector: 'app-booking-submit-popup',\n  templateUrl: './booking-submit-popup.component.html',\n  styleUrls: ['./booking-submit-popup.component.scss'],\n})\nexport class BookingSubmitPopupComponent implements OnInit {\n  constructor(\n    public dialogRef: MatDialogRef<BookingSubmitPopupComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: BookingPopupData\n  ) {}\n\n  onNoClick(): void {\n    this.dialogRef.close();\n  }\n\n  ngOnInit(): void {}\n\n  options = {\n    autoplay: true,\n    loop: 0,\n    path: this.data.success\n      ? '../../../../assets/animation/booking_submit_animation2.json'\n      : '../../../../assets/animation/error.json',\n  };\n}\n\nexport interface BookingPopupData {\n  success: boolean;\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import \"/src/assets/css/abstract/variables\";\n@import \"/src/assets/css/abstract/mixins\";\n\n.booking-popup {\n  width: 40rem;\n  height: 50vh;\n  display: flex;\n  position: relative;\n  flex-direction: column;\n  align-items: center;\n  .dialog-animation {\n    width: 20rem;\n    height: 20rem;\n  }\n\n  .dismiss-button {\n    margin-top: auto;\n    align-self: center;\n  }\n\n  .result-title {\n    margin-top: auto;\n    h2 {\n      font-size: 2.5rem;\n      font-weight: bold;\n      text-align: center;\n      line-height: 0.9;\n    }\n  }\n  .result-description {\n    margin-bottom: auto;\n    margin-top: 2rem;\n    p {\n      font-size: 2rem;\n      font-weight: 400;\n      color: #717171;\n      text-align: center;\n    }\n    .contact-methods {\n      display: flex;\n\n      justify-content: center;\n      i {\n        font-size: 3rem;\n        color: grey;\n        margin: 0.75rem;\n        transition: transform 0.2s ease-out;\n        cursor: pointer;\n        &:hover {\n          color: $accent;\n          transform: scale(1.1);\n        }\n      }\n    }\n  }\n}\n.mat-button,\n.mat-raised-button {\n  background-color: white;\n  color: $accent;\n}\n",
                    "styleUrl": "./booking-submit-popup.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "dialogRef",
                        "type": "MatDialogRef<BookingSubmitPopupComponent>"
                    },
                    {
                        "name": "data",
                        "type": "BookingPopupData"
                    }
                ],
                "line": 11,
                "jsdoctags": [
                    {
                        "name": "dialogRef",
                        "type": "MatDialogRef<BookingSubmitPopupComponent>",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "data",
                        "type": "BookingPopupData",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"booking-popup\">\n  <div class=\"dialog-animation\">\n    <ng-lottie [options]=\"options\"></ng-lottie>\n  </div>\n  <div class=\"result-title\" *ngIf=\"data.success; else errorTitle\">\n    <h2>{{ \"booking.formSubmittedTitle\" | transloco }}</h2>\n  </div>\n  <ng-template #errorTitle\n    ><div class=\"result-title\">\n      <h2>{{ \"general.oops\" | transloco }}</h2>\n    </div></ng-template\n  >\n  <div class=\"result-description\" *ngIf=\"data.success; else errorDescription\">\n    <p>\n      {{ \"booking.formSubmittedDescription\" | transloco }}\n    </p>\n  </div>\n  <ng-template #errorDescription>\n    <div class=\"result-description\">\n      <p>\n        {{ \"booking.error\" | transloco }}\n      </p>\n      <div class=\"contact-methods\">\n        <i class=\"fa fa-envelope\"></i>\n        <i class=\"fa fa-whatsapp\"></i>\n        <i class=\"fa fa-phone\"></i>\n      </div>\n    </div>\n  </ng-template>\n  <button mat-button class=\"dismiss-button\" (click)=\"onNoClick()\">OK</button>\n</div>\n"
        },
        {
            "name": "ButtonComponent",
            "id": "component-ButtonComponent-642c6c4e474cd5a0ac760dfda26b2fc9",
            "file": "src/stories/button.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "storybook-button",
            "styleUrls": [
                "./button.css"
            ],
            "styles": [],
            "template": "<button   type=\"button\"\n   (click)=\"onClick.emit($event)\"\n   [ngClass]=\"classes\"\n   [ngStyle]=\"{ 'background-color': backgroundColor }\"\n >\n   {{ label }}\n </button>",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "backgroundColor",
                    "description": "<p>What background color to use</p>\n",
                    "line": 26,
                    "type": "string"
                },
                {
                    "name": "label",
                    "defaultValue": "'Button'",
                    "description": "<p>Button contents</p>\n",
                    "line": 40
                },
                {
                    "name": "primary",
                    "defaultValue": "false",
                    "description": "<p>Is this the principal call to action on the page?</p>\n",
                    "line": 20
                },
                {
                    "name": "size",
                    "defaultValue": "'medium'",
                    "description": "<p>How large should the button be?</p>\n",
                    "line": 32,
                    "type": "\"small\" | \"medium\" | \"large\""
                }
            ],
            "outputsClass": [
                {
                    "name": "onClick",
                    "defaultValue": "new EventEmitter<Event>()",
                    "description": "<p>Optional click handler</p>\n",
                    "line": 46,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, Input, Output, EventEmitter } from '@angular/core';\n\n@Component({\n  selector: 'storybook-button',\n  template: ` <button\n    type=\"button\"\n    (click)=\"onClick.emit($event)\"\n    [ngClass]=\"classes\"\n    [ngStyle]=\"{ 'background-color': backgroundColor }\"\n  >\n    {{ label }}\n  </button>`,\n  styleUrls: ['./button.css'],\n})\nexport default class ButtonComponent {\n  /**\n   * Is this the principal call to action on the page?\n   */\n  @Input()\n  primary = false;\n\n  /**\n   * What background color to use\n   */\n  @Input()\n  backgroundColor?: string;\n\n  /**\n   * How large should the button be?\n   */\n  @Input()\n  size: 'small' | 'medium' | 'large' = 'medium';\n\n  /**\n   * Button contents\n   *\n   * @required\n   */\n  @Input()\n  label = 'Button';\n\n  /**\n   * Optional click handler\n   */\n  @Output()\n  onClick = new EventEmitter<Event>();\n\n  public get classes(): string[] {\n    const mode = this.primary ? 'storybook-button--primary' : 'storybook-button--secondary';\n\n    return ['storybook-button', `storybook-button--${this.size}`, mode];\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".storybook-button {\n  font-family: 'Nunito Sans', 'Helvetica Neue', Helvetica, Arial, sans-serif;\n  font-weight: 700;\n  border: 0;\n  border-radius: 3em;\n  cursor: pointer;\n  display: inline-block;\n  line-height: 1;\n}\n.storybook-button--primary {\n  color: white;\n  background-color: #1ea7fd;\n}\n.storybook-button--secondary {\n  color: #333;\n  background-color: transparent;\n  box-shadow: rgba(0, 0, 0, 0.15) 0px 0px 0px 1px inset;\n}\n.storybook-button--small {\n  font-size: 12px;\n  padding: 10px 16px;\n}\n.storybook-button--medium {\n  font-size: 14px;\n  padding: 11px 20px;\n}\n.storybook-button--large {\n  font-size: 16px;\n  padding: 12px 24px;\n}\n",
                    "styleUrl": "./button.css"
                }
            ],
            "stylesData": "",
            "accessors": {
                "classes": {
                    "name": "classes",
                    "getSignature": {
                        "name": "classes",
                        "type": "[]",
                        "returnType": "string[]",
                        "line": 48
                    }
                }
            }
        },
        {
            "name": "ControlValueAccessorConnector",
            "id": "component-ControlValueAccessorConnector-8465ca95131f0559b544156031a02ac1",
            "file": "src/app/data/abstract/control-value-accessor-connector.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [
                {
                    "name": "{\n    provide: NG_VALUE_ACCESSOR, useExisting: forwardRef(() => ControlValueAccessorConnector), multi: true,\n}"
                }
            ],
            "styleUrls": [],
            "styles": [],
            "template": "",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "formControl",
                    "line": 40,
                    "type": "FormControl"
                },
                {
                    "name": "formControlName",
                    "line": 45,
                    "type": "string"
                },
                {
                    "name": "hasBorder",
                    "defaultValue": "false",
                    "line": 37
                },
                {
                    "name": "hideIcon",
                    "defaultValue": "false",
                    "line": 42,
                    "type": "boolean"
                },
                {
                    "name": "placeholder",
                    "defaultValue": "''",
                    "line": 47,
                    "type": "string"
                },
                {
                    "name": "values",
                    "line": 36,
                    "type": "any[]"
                },
                {
                    "name": "icon",
                    "defaultValue": "ICONS.profile",
                    "line": 7,
                    "type": "ICONS",
                    "inheritance": {
                        "file": "MyControlAbstract"
                    }
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "formControlDirective",
                    "type": "FormControlDirective",
                    "optional": false,
                    "description": "",
                    "line": 35,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "FormControlDirective, {static: true}"
                        }
                    ]
                },
                {
                    "name": "isfocused",
                    "defaultValue": "false",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 9,
                    "inheritance": {
                        "file": "MyControlAbstract"
                    }
                }
            ],
            "methodsClass": [
                {
                    "name": "registerOnChange",
                    "args": [
                        {
                            "name": "fn",
                            "type": "any"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 68,
                    "jsdoctags": [
                        {
                            "name": "fn",
                            "type": "any",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "registerOnTouched",
                    "args": [
                        {
                            "name": "fn",
                            "type": "any"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 64,
                    "jsdoctags": [
                        {
                            "name": "fn",
                            "type": "any",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "setDisabledState",
                    "args": [
                        {
                            "name": "isDisabled",
                            "type": "boolean"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 76,
                    "jsdoctags": [
                        {
                            "name": "isDisabled",
                            "type": "boolean",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "writeValue",
                    "args": [
                        {
                            "name": "obj",
                            "type": "any"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 72,
                    "jsdoctags": [
                        {
                            "name": "obj",
                            "type": "any",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "onFocus",
                    "args": [
                        {
                            "name": "e",
                            "type": "any"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 10,
                    "jsdoctags": [
                        {
                            "name": "e",
                            "type": "any",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "MyControlAbstract"
                    }
                },
                {
                    "name": "onFocusOut",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 14,
                    "inheritance": {
                        "file": "MyControlAbstract"
                    }
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import {\n  AbstractControl,\n  ControlContainer,\n  ControlValueAccessor,\n  FormControl,\n  FormControlDirective,\n  NG_VALUE_ACCESSOR,\n} from '@angular/forms';\nimport {\n  Component,\n  forwardRef,\n  Injector,\n  Input,\n  ViewChild,\n} from '@angular/core';\nimport { MyControlAbstract } from './my-controls-abstract';\nimport { DevData } from '../static/main-info';\nimport { LocalService } from '../services/local.service';\n\n@Component({\n  template: '',\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => ControlValueAccessorConnector),\n      multi: true,\n    },\n  ],\n})\nexport class ControlValueAccessorConnector\n  extends MyControlAbstract\n  implements ControlValueAccessor\n{\n  @ViewChild(FormControlDirective, { static: true })\n  formControlDirective: FormControlDirective;\n  @Input() values: any[];\n  @Input() hasBorder = false;\n\n  @Input()\n  formControl: FormControl;\n  @Input()\n  hideIcon: boolean = false;\n\n  @Input()\n  formControlName: string;\n  @Input()\n  placeholder: string = '';\n\n  get control() {\n    return (\n      this.formControl ||\n      this.controlContainer?.control?.get(this.formControlName)\n    );\n  }\n\n  constructor(private injector: Injector, private localeServcie: LocalService) {\n    super();\n  }\n\n  get controlContainer() {\n    return this.injector.get(ControlContainer);\n  }\n\n  registerOnTouched(fn: any): void {\n    this.formControlDirective?.valueAccessor?.registerOnTouched(fn);\n  }\n\n  registerOnChange(fn: any): void {\n    this.formControlDirective?.valueAccessor?.registerOnChange(fn);\n  }\n\n  writeValue(obj: any): void {\n    this.formControlDirective?.valueAccessor?.writeValue(obj);\n  }\n\n  setDisabledState(isDisabled: boolean): void {\n    if (this.formControlDirective?.valueAccessor?.setDisabledState)\n      this.formControlDirective?.valueAccessor.setDisabledState(isDisabled);\n  }\n\n  get errmsg(): any[] | undefined {\n    let lst;\n\n    if (this.control?.errors && this.control?.touched) {\n      lst = [];\n      Object.keys(this.control?.errors ?? []).forEach(\n        (f) =>\n          lst.push(this.localeServcie.getTranslation(`validation.required`))\n        //TODO: check this later.\n      );\n    }\n\n    return lst;\n  }\n  get isControlRequired(): boolean {\n    if (!this.control) {\n      return false;\n    }\n\n    if (this.control.validator) {\n      const validator = this.control.validator({} as AbstractControl);\n      if (validator && validator.required) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "injector",
                        "type": "Injector"
                    },
                    {
                        "name": "localeServcie",
                        "type": "LocalService"
                    }
                ],
                "line": 54,
                "jsdoctags": [
                    {
                        "name": "injector",
                        "type": "Injector",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "localeServcie",
                        "type": "LocalService",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": "MyControlAbstract",
            "implements": [
                "ControlValueAccessor"
            ],
            "accessors": {
                "control": {
                    "name": "control",
                    "getSignature": {
                        "name": "control",
                        "type": "",
                        "returnType": "",
                        "line": 49
                    }
                },
                "controlContainer": {
                    "name": "controlContainer",
                    "getSignature": {
                        "name": "controlContainer",
                        "type": "",
                        "returnType": "",
                        "line": 60
                    }
                },
                "errmsg": {
                    "name": "errmsg",
                    "getSignature": {
                        "name": "errmsg",
                        "type": "",
                        "returnType": "[] | undefined",
                        "line": 81
                    }
                },
                "isControlRequired": {
                    "name": "isControlRequired",
                    "getSignature": {
                        "name": "isControlRequired",
                        "type": "boolean",
                        "returnType": "boolean",
                        "line": 95
                    }
                }
            }
        },
        {
            "name": "CustomDatePickerComponent",
            "id": "component-CustomDatePickerComponent-ff1f123d32d26b6150f40f9e76bfdd8c",
            "file": "src/app/common/widgets/custom-date-picker/custom-date-picker.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [
                {
                    "name": "{\n    provide: NG_VALUE_ACCESSOR, useExisting: forwardRef(() => CustomDatePickerComponent), multi: true,\n}",
                    "type": "component"
                }
            ],
            "selector": "app-custom-date-picker",
            "styleUrls": [
                "./custom-date-picker.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./custom-date-picker.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "formControl",
                    "line": 40,
                    "type": "FormControl",
                    "inheritance": {
                        "file": "ControlValueAccessorConnector"
                    }
                },
                {
                    "name": "formControlName",
                    "line": 45,
                    "type": "string",
                    "inheritance": {
                        "file": "ControlValueAccessorConnector"
                    }
                },
                {
                    "name": "hasBorder",
                    "defaultValue": "false",
                    "line": 37,
                    "inheritance": {
                        "file": "ControlValueAccessorConnector"
                    }
                },
                {
                    "name": "hideIcon",
                    "defaultValue": "false",
                    "line": 42,
                    "type": "boolean",
                    "inheritance": {
                        "file": "ControlValueAccessorConnector"
                    }
                },
                {
                    "name": "placeholder",
                    "defaultValue": "''",
                    "line": 47,
                    "type": "string",
                    "inheritance": {
                        "file": "ControlValueAccessorConnector"
                    }
                },
                {
                    "name": "values",
                    "line": 36,
                    "type": "any[]",
                    "inheritance": {
                        "file": "ControlValueAccessorConnector"
                    }
                },
                {
                    "name": "icon",
                    "defaultValue": "ICONS.profile",
                    "line": 7,
                    "type": "ICONS",
                    "inheritance": {
                        "file": "ControlValueAccessorConnector"
                    }
                },
                {
                    "name": "icon",
                    "defaultValue": "ICONS.profile",
                    "line": 7,
                    "type": "ICONS",
                    "inheritance": {
                        "file": "MyControlAbstract"
                    }
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "iconsData",
                    "defaultValue": "ICONS",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 22
                },
                {
                    "name": "minDate",
                    "defaultValue": "new Date()",
                    "type": "Date",
                    "optional": false,
                    "description": "",
                    "line": 23
                },
                {
                    "name": "formControlDirective",
                    "type": "FormControlDirective",
                    "optional": false,
                    "description": "",
                    "line": 35,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "FormControlDirective, {static: true}"
                        }
                    ],
                    "inheritance": {
                        "file": "ControlValueAccessorConnector"
                    }
                },
                {
                    "name": "isfocused",
                    "defaultValue": "false",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 9,
                    "inheritance": {
                        "file": "ControlValueAccessorConnector"
                    }
                },
                {
                    "name": "isfocused",
                    "defaultValue": "false",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 9,
                    "inheritance": {
                        "file": "MyControlAbstract"
                    }
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 21
                },
                {
                    "name": "registerOnChange",
                    "args": [
                        {
                            "name": "fn",
                            "type": "any"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 68,
                    "jsdoctags": [
                        {
                            "name": "fn",
                            "type": "any",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "ControlValueAccessorConnector"
                    }
                },
                {
                    "name": "registerOnTouched",
                    "args": [
                        {
                            "name": "fn",
                            "type": "any"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 64,
                    "jsdoctags": [
                        {
                            "name": "fn",
                            "type": "any",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "ControlValueAccessorConnector"
                    }
                },
                {
                    "name": "setDisabledState",
                    "args": [
                        {
                            "name": "isDisabled",
                            "type": "boolean"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 76,
                    "jsdoctags": [
                        {
                            "name": "isDisabled",
                            "type": "boolean",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "ControlValueAccessorConnector"
                    }
                },
                {
                    "name": "writeValue",
                    "args": [
                        {
                            "name": "obj",
                            "type": "any"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 72,
                    "jsdoctags": [
                        {
                            "name": "obj",
                            "type": "any",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "ControlValueAccessorConnector"
                    }
                },
                {
                    "name": "onFocus",
                    "args": [
                        {
                            "name": "e",
                            "type": "any"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 10,
                    "jsdoctags": [
                        {
                            "name": "e",
                            "type": "any",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "ControlValueAccessorConnector"
                    }
                },
                {
                    "name": "onFocusOut",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 14,
                    "inheritance": {
                        "file": "ControlValueAccessorConnector"
                    }
                },
                {
                    "name": "onFocus",
                    "args": [
                        {
                            "name": "e",
                            "type": "any"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 10,
                    "jsdoctags": [
                        {
                            "name": "e",
                            "type": "any",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "MyControlAbstract"
                    }
                },
                {
                    "name": "onFocusOut",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 14,
                    "inheritance": {
                        "file": "MyControlAbstract"
                    }
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, forwardRef, OnInit } from '@angular/core';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { ControlValueAccessorConnector } from 'src/app/data/abstract/control-value-accessor-connector';\nimport { ICONS } from 'src/app/data/utils/enums';\n\n@Component({\n  selector: 'app-custom-date-picker',\n  templateUrl: './custom-date-picker.component.html',\n  styleUrls: ['./custom-date-picker.component.scss'],\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => CustomDatePickerComponent),\n      multi: true,\n    },\n  ],\n})\nexport class CustomDatePickerComponent\n  extends ControlValueAccessorConnector\n  implements OnInit {\n  ngOnInit(): void {}\n  iconsData = ICONS;\n  minDate: Date = new Date();\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import \"/src/assets/css/abstract/control-mixins\";\n@import \"/src/assets/css/abstract/mixins\";\n@import \"/src/assets/css/abstract/variables\";\n.main {\n  padding: $form-file-padding;\n\n  .date {\n    max-width: 100%;\n    height: 100%;\n    @include myCustomCalendarStyle;\n    text-align: start;\n  }\n  input::placeholder {\n    font-size: 1.5rem;\n    font-weight: 400;\n\n    font-family: var(--primary-font);\n    color: grey;\n  }\n\n  .icon {\n    font-size: 1.5rem;\n    @include res(tab) {\n      font-size: 2rem;\n    }\n  }\n\n  min-width: 0px;\n  max-width: 100%;\n  height: 100%;\n}\n",
                    "styleUrl": "./custom-date-picker.component.scss"
                }
            ],
            "stylesData": "",
            "extends": "ControlValueAccessorConnector",
            "implements": [
                "OnInit"
            ],
            "templateData": "<div\n  class=\"main\"\n  [ngClass]=\"{ 'all-border': hasBorder, 'err-border': !!errmsg }\"\n>\n  <mat-form-field color=\"accent\" class=\"date\" appearance=\"fill\">\n    <input\n      class=\"input\"\n      on-focus=\"onFocus($event)\"\n      on-focusout=\"onFocusOut()\"\n      [formControl]=\"control\"\n      [placeholder]=\"placeholder\"\n      matInput\n      [min]=\"minDate\"\n      [readonly]=\"true\"\n      (click)=\"picker.open()\"\n      [matDatepicker]=\"picker\"\n    />\n    <mat-datepicker-toggle matPrefix [for]=\"picker\">\n      <app-validation-icon\n        class=\"icon\"\n        matDatepickerToggleIcon\n        [icon]=\"iconsData.calendar\"\n        [isFocused]=\"isfocused\"\n        [errors]=\"errmsg\"\n        [placeholder]=\"placeholder\"\n      ></app-validation-icon>\n    </mat-datepicker-toggle>\n\n    <mat-datepicker\n      startView=\"year\"\n      [startAt]=\"minDate\"\n      #picker\n    ></mat-datepicker>\n  </mat-form-field>\n</div>\n<p class=\"validation-text\" *ngIf=\"errmsg\">*{{ errmsg }}</p>\n"
        },
        {
            "name": "CustomInputComponent",
            "id": "component-CustomInputComponent-cb30a0d09f4c9e225c1c821e860fb48e",
            "file": "src/app/common/widgets/custom-input/custom-input.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [
                {
                    "name": "{\n    provide: NG_VALUE_ACCESSOR, useExisting: forwardRef(() => CustomInputComponent), multi: true,\n}",
                    "type": "component"
                }
            ],
            "selector": "app-custom-input",
            "styleUrls": [
                "./custom-input.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./custom-input.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "isNumber",
                    "defaultValue": "false",
                    "line": 18
                },
                {
                    "name": "formControl",
                    "line": 40,
                    "type": "FormControl",
                    "inheritance": {
                        "file": "ControlValueAccessorConnector"
                    }
                },
                {
                    "name": "formControlName",
                    "line": 45,
                    "type": "string",
                    "inheritance": {
                        "file": "ControlValueAccessorConnector"
                    }
                },
                {
                    "name": "hasBorder",
                    "defaultValue": "false",
                    "line": 37,
                    "inheritance": {
                        "file": "ControlValueAccessorConnector"
                    }
                },
                {
                    "name": "hideIcon",
                    "defaultValue": "false",
                    "line": 42,
                    "type": "boolean",
                    "inheritance": {
                        "file": "ControlValueAccessorConnector"
                    }
                },
                {
                    "name": "placeholder",
                    "defaultValue": "''",
                    "line": 47,
                    "type": "string",
                    "inheritance": {
                        "file": "ControlValueAccessorConnector"
                    }
                },
                {
                    "name": "values",
                    "line": 36,
                    "type": "any[]",
                    "inheritance": {
                        "file": "ControlValueAccessorConnector"
                    }
                },
                {
                    "name": "icon",
                    "defaultValue": "ICONS.profile",
                    "line": 7,
                    "type": "ICONS",
                    "inheritance": {
                        "file": "ControlValueAccessorConnector"
                    }
                },
                {
                    "name": "icon",
                    "defaultValue": "ICONS.profile",
                    "line": 7,
                    "type": "ICONS",
                    "inheritance": {
                        "file": "MyControlAbstract"
                    }
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "formControlDirective",
                    "type": "FormControlDirective",
                    "optional": false,
                    "description": "",
                    "line": 35,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "FormControlDirective, {static: true}"
                        }
                    ],
                    "inheritance": {
                        "file": "ControlValueAccessorConnector"
                    }
                },
                {
                    "name": "isfocused",
                    "defaultValue": "false",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 9,
                    "inheritance": {
                        "file": "ControlValueAccessorConnector"
                    }
                },
                {
                    "name": "isfocused",
                    "defaultValue": "false",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 9,
                    "inheritance": {
                        "file": "MyControlAbstract"
                    }
                }
            ],
            "methodsClass": [
                {
                    "name": "registerOnChange",
                    "args": [
                        {
                            "name": "fn",
                            "type": "any"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 68,
                    "jsdoctags": [
                        {
                            "name": "fn",
                            "type": "any",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "ControlValueAccessorConnector"
                    }
                },
                {
                    "name": "registerOnTouched",
                    "args": [
                        {
                            "name": "fn",
                            "type": "any"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 64,
                    "jsdoctags": [
                        {
                            "name": "fn",
                            "type": "any",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "ControlValueAccessorConnector"
                    }
                },
                {
                    "name": "setDisabledState",
                    "args": [
                        {
                            "name": "isDisabled",
                            "type": "boolean"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 76,
                    "jsdoctags": [
                        {
                            "name": "isDisabled",
                            "type": "boolean",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "ControlValueAccessorConnector"
                    }
                },
                {
                    "name": "writeValue",
                    "args": [
                        {
                            "name": "obj",
                            "type": "any"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 72,
                    "jsdoctags": [
                        {
                            "name": "obj",
                            "type": "any",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "ControlValueAccessorConnector"
                    }
                },
                {
                    "name": "onFocus",
                    "args": [
                        {
                            "name": "e",
                            "type": "any"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 10,
                    "jsdoctags": [
                        {
                            "name": "e",
                            "type": "any",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "ControlValueAccessorConnector"
                    }
                },
                {
                    "name": "onFocusOut",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 14,
                    "inheritance": {
                        "file": "ControlValueAccessorConnector"
                    }
                },
                {
                    "name": "onFocus",
                    "args": [
                        {
                            "name": "e",
                            "type": "any"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 10,
                    "jsdoctags": [
                        {
                            "name": "e",
                            "type": "any",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "MyControlAbstract"
                    }
                },
                {
                    "name": "onFocusOut",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 14,
                    "inheritance": {
                        "file": "MyControlAbstract"
                    }
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, forwardRef, Input, OnInit } from '@angular/core';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { ControlValueAccessorConnector } from 'src/app/data/abstract/control-value-accessor-connector';\n\n@Component({\n  selector: 'app-custom-input',\n  templateUrl: './custom-input.component.html',\n  styleUrls: ['./custom-input.component.scss'],\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => CustomInputComponent),\n      multi: true,\n    },\n  ],\n})\nexport class CustomInputComponent extends ControlValueAccessorConnector {\n  @Input() isNumber = false;\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import \"/src/assets/css/abstract/variables\";\n@import \"/src/assets/css/abstract/mixins\";\n.main {\n  width: 100%;\n  height: 100%;\n  display: flex;\n  flex-direction: row;\n  background: white;\n  font-size: 1.5rem;\n  color: grey;\n  align-items: center;\n  // border: $border;\n  padding: $form-file-padding;\n  input {\n    border: none;\n    width: 100%;\n    height: 100%;\n    order: 1;\n    margin: $form-file-padding;\n    &:focus {\n      outline: none;\n    }\n    &::placeholder {\n      font-size: 1.5rem;\n    }\n  }\n  .icon {\n    font-size: 1.5rem;\n    @include res(tab) {\n      font-size: 2rem;\n    }\n  }\n  input:focus + mat-icon {\n    color: $accent;\n  }\n}\n",
                    "styleUrl": "./custom-input.component.scss"
                }
            ],
            "stylesData": "",
            "extends": "ControlValueAccessorConnector",
            "templateData": "<div\n  class=\"main\"\n  [ngClass]=\"{ 'all-border': hasBorder, 'err-border': !!errmsg }\"\n>\n  <input\n    on-focus=\"onFocus($event)\"\n    on-focusout=\"onFocusOut()\"\n    [formControl]=\"control\"\n    [type]=\"isNumber ? 'number' : 'text'\"\n    [placeholder]=\"placeholder\"\n    #input\n  />\n\n  <app-validation-icon\n    [hidden]=\"hideIcon\"\n    [icon]=\"icon\"\n    [isFocused]=\"isfocused\"\n    [errors]=\"errmsg\"\n    [placeholder]=\"placeholder\"\n    class=\"icon\"\n  ></app-validation-icon>\n</div>\n<p class=\"validation-text\" *ngIf=\"errmsg\">*{{ errmsg }}</p>\n"
        },
        {
            "name": "CustomSelectComponent",
            "id": "component-CustomSelectComponent-9610cdc6ff1eed4e412b59784a84e7c8",
            "file": "src/app/common/widgets/custom-select/custom-select.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [
                {
                    "name": "{\n    provide: NG_VALUE_ACCESSOR, useExisting: forwardRef(() => CustomSelectComponent), multi: true,\n}",
                    "type": "component"
                }
            ],
            "selector": "app-custom-select",
            "styleUrls": [
                "./custom-select.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./custom-select.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "formControl",
                    "line": 40,
                    "type": "FormControl",
                    "inheritance": {
                        "file": "ControlValueAccessorConnector"
                    }
                },
                {
                    "name": "formControlName",
                    "line": 45,
                    "type": "string",
                    "inheritance": {
                        "file": "ControlValueAccessorConnector"
                    }
                },
                {
                    "name": "hasBorder",
                    "defaultValue": "false",
                    "line": 37,
                    "inheritance": {
                        "file": "ControlValueAccessorConnector"
                    }
                },
                {
                    "name": "hideIcon",
                    "defaultValue": "false",
                    "line": 42,
                    "type": "boolean",
                    "inheritance": {
                        "file": "ControlValueAccessorConnector"
                    }
                },
                {
                    "name": "placeholder",
                    "defaultValue": "''",
                    "line": 47,
                    "type": "string",
                    "inheritance": {
                        "file": "ControlValueAccessorConnector"
                    }
                },
                {
                    "name": "values",
                    "line": 36,
                    "type": "any[]",
                    "inheritance": {
                        "file": "ControlValueAccessorConnector"
                    }
                },
                {
                    "name": "icon",
                    "defaultValue": "ICONS.profile",
                    "line": 7,
                    "type": "ICONS",
                    "inheritance": {
                        "file": "ControlValueAccessorConnector"
                    }
                },
                {
                    "name": "icon",
                    "defaultValue": "ICONS.profile",
                    "line": 7,
                    "type": "ICONS",
                    "inheritance": {
                        "file": "MyControlAbstract"
                    }
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "formControlDirective",
                    "type": "FormControlDirective",
                    "optional": false,
                    "description": "",
                    "line": 35,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "FormControlDirective, {static: true}"
                        }
                    ],
                    "inheritance": {
                        "file": "ControlValueAccessorConnector"
                    }
                },
                {
                    "name": "isfocused",
                    "defaultValue": "false",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 9,
                    "inheritance": {
                        "file": "ControlValueAccessorConnector"
                    }
                },
                {
                    "name": "isfocused",
                    "defaultValue": "false",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 9,
                    "inheritance": {
                        "file": "MyControlAbstract"
                    }
                }
            ],
            "methodsClass": [
                {
                    "name": "getImage",
                    "args": [
                        {
                            "name": "icon",
                            "type": "string"
                        }
                    ],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 19,
                    "jsdoctags": [
                        {
                            "name": "icon",
                            "type": "string",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "registerOnChange",
                    "args": [
                        {
                            "name": "fn",
                            "type": "any"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 68,
                    "jsdoctags": [
                        {
                            "name": "fn",
                            "type": "any",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "ControlValueAccessorConnector"
                    }
                },
                {
                    "name": "registerOnTouched",
                    "args": [
                        {
                            "name": "fn",
                            "type": "any"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 64,
                    "jsdoctags": [
                        {
                            "name": "fn",
                            "type": "any",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "ControlValueAccessorConnector"
                    }
                },
                {
                    "name": "setDisabledState",
                    "args": [
                        {
                            "name": "isDisabled",
                            "type": "boolean"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 76,
                    "jsdoctags": [
                        {
                            "name": "isDisabled",
                            "type": "boolean",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "ControlValueAccessorConnector"
                    }
                },
                {
                    "name": "writeValue",
                    "args": [
                        {
                            "name": "obj",
                            "type": "any"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 72,
                    "jsdoctags": [
                        {
                            "name": "obj",
                            "type": "any",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "ControlValueAccessorConnector"
                    }
                },
                {
                    "name": "onFocus",
                    "args": [
                        {
                            "name": "e",
                            "type": "any"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 10,
                    "jsdoctags": [
                        {
                            "name": "e",
                            "type": "any",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "ControlValueAccessorConnector"
                    }
                },
                {
                    "name": "onFocusOut",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 14,
                    "inheritance": {
                        "file": "ControlValueAccessorConnector"
                    }
                },
                {
                    "name": "onFocus",
                    "args": [
                        {
                            "name": "e",
                            "type": "any"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 10,
                    "jsdoctags": [
                        {
                            "name": "e",
                            "type": "any",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "MyControlAbstract"
                    }
                },
                {
                    "name": "onFocusOut",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 14,
                    "inheritance": {
                        "file": "MyControlAbstract"
                    }
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, forwardRef, Input } from '@angular/core';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { ControlValueAccessorConnector } from 'src/app/data/abstract/control-value-accessor-connector';\nimport { ICONS } from 'src/app/data/utils/enums';\n\n@Component({\n  selector: 'app-custom-select',\n  templateUrl: './custom-select.component.html',\n  styleUrls: ['./custom-select.component.scss'],\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => CustomSelectComponent),\n      multi: true,\n    },\n  ],\n})\nexport class CustomSelectComponent extends ControlValueAccessorConnector {\n  getImage(icon: string): string {\n    if (icon) return 'assets/images/svgs/' + icon + '.svg';\n    return '';\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import \"/src/assets/css/abstract/variables\";\n@import \"/src/assets/css/abstract/control-mixins\";\n\n$border: grey solid 1px;\n\n.main {\n  width: 100%;\n  height: 100%;\n  display: flex;\n  flex-direction: row;\n  background: white;\n  font-size: 1.5rem;\n  color: grey;\n  align-items: center;\n  // margin: 1px;\n  padding: $form-file-padding;\n  font-size: 1.5rem;\n  @include angularMatInputStyle;\n  .input {\n    margin: 0 0 0 1rem;\n    &:lang(ar) {\n      margin: 0 1rem 0 0;\n    }\n  }\n}\n.txt {\n  font-family: var(--primary-font);\n}\n\n::ng-deep .mat-form-field-label-wrapper {\n  top: -9px !important;\n}\n// img.icon {\n//   height: 5rem;\n//   width: 5rem;\n// }\n// img.hide {\n//   opacity: 0;\n// }\n",
                    "styleUrl": "./custom-select.component.scss"
                }
            ],
            "stylesData": "",
            "extends": "ControlValueAccessorConnector",
            "templateData": "<div\n  class=\"main\"\n  [ngClass]=\"{ 'all-border': hasBorder, 'err-border': !!errmsg }\"\n>\n  <app-validation-icon\n    [icon]=\"icon\"\n    [isFocused]=\"isfocused\"\n    [errors]=\"errmsg\"\n    [placeholder]=\"placeholder\"\n  ></app-validation-icon>\n  <mat-form-field class=\"input\" appearance=\"fill\" floatLabel=\"never\">\n    <mat-label>{{ placeholder }}</mat-label>\n    <mat-select\n      on-focus=\"onFocus($event)\"\n      on-focusout=\"onFocusOut()\"\n      [formControl]=\"control\"\n    >\n      <mat-option class=\"txt\" *ngFor=\"let data of values\" [value]=\"data.id\">\n        <!-- <img\n          [ngClass]=\"{ hide: !data.icon }\"\n          class=\"icon\"\n          [src]=\"getImage(data.icon)\"\n          alt=\"\"\n        /> -->\n        {{ data.name }}\n      </mat-option>\n    </mat-select>\n  </mat-form-field>\n</div>\n"
        },
        {
            "name": "CustomTextareaComponent",
            "id": "component-CustomTextareaComponent-ed907ca6d9c0fead456d876d5038ee5d",
            "file": "src/app/common/widgets/custom-textarea/custom-textarea.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [
                {
                    "name": "{\n    provide: NG_VALUE_ACCESSOR, useExisting: forwardRef(() => CustomTextareaComponent), multi: true,\n}",
                    "type": "component"
                }
            ],
            "selector": "app-custom-textarea",
            "styleUrls": [
                "./custom-textarea.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./custom-textarea.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "formControl",
                    "line": 40,
                    "type": "FormControl",
                    "inheritance": {
                        "file": "ControlValueAccessorConnector"
                    }
                },
                {
                    "name": "formControlName",
                    "line": 45,
                    "type": "string",
                    "inheritance": {
                        "file": "ControlValueAccessorConnector"
                    }
                },
                {
                    "name": "hasBorder",
                    "defaultValue": "false",
                    "line": 37,
                    "inheritance": {
                        "file": "ControlValueAccessorConnector"
                    }
                },
                {
                    "name": "hideIcon",
                    "defaultValue": "false",
                    "line": 42,
                    "type": "boolean",
                    "inheritance": {
                        "file": "ControlValueAccessorConnector"
                    }
                },
                {
                    "name": "placeholder",
                    "defaultValue": "''",
                    "line": 47,
                    "type": "string",
                    "inheritance": {
                        "file": "ControlValueAccessorConnector"
                    }
                },
                {
                    "name": "values",
                    "line": 36,
                    "type": "any[]",
                    "inheritance": {
                        "file": "ControlValueAccessorConnector"
                    }
                },
                {
                    "name": "icon",
                    "defaultValue": "ICONS.profile",
                    "line": 7,
                    "type": "ICONS",
                    "inheritance": {
                        "file": "ControlValueAccessorConnector"
                    }
                },
                {
                    "name": "icon",
                    "defaultValue": "ICONS.profile",
                    "line": 7,
                    "type": "ICONS",
                    "inheritance": {
                        "file": "MyControlAbstract"
                    }
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "formControlDirective",
                    "type": "FormControlDirective",
                    "optional": false,
                    "description": "",
                    "line": 35,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "FormControlDirective, {static: true}"
                        }
                    ],
                    "inheritance": {
                        "file": "ControlValueAccessorConnector"
                    }
                },
                {
                    "name": "isfocused",
                    "defaultValue": "false",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 9,
                    "inheritance": {
                        "file": "ControlValueAccessorConnector"
                    }
                },
                {
                    "name": "isfocused",
                    "defaultValue": "false",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 9,
                    "inheritance": {
                        "file": "MyControlAbstract"
                    }
                }
            ],
            "methodsClass": [
                {
                    "name": "registerOnChange",
                    "args": [
                        {
                            "name": "fn",
                            "type": "any"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 68,
                    "jsdoctags": [
                        {
                            "name": "fn",
                            "type": "any",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "ControlValueAccessorConnector"
                    }
                },
                {
                    "name": "registerOnTouched",
                    "args": [
                        {
                            "name": "fn",
                            "type": "any"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 64,
                    "jsdoctags": [
                        {
                            "name": "fn",
                            "type": "any",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "ControlValueAccessorConnector"
                    }
                },
                {
                    "name": "setDisabledState",
                    "args": [
                        {
                            "name": "isDisabled",
                            "type": "boolean"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 76,
                    "jsdoctags": [
                        {
                            "name": "isDisabled",
                            "type": "boolean",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "ControlValueAccessorConnector"
                    }
                },
                {
                    "name": "writeValue",
                    "args": [
                        {
                            "name": "obj",
                            "type": "any"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 72,
                    "jsdoctags": [
                        {
                            "name": "obj",
                            "type": "any",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "ControlValueAccessorConnector"
                    }
                },
                {
                    "name": "onFocus",
                    "args": [
                        {
                            "name": "e",
                            "type": "any"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 10,
                    "jsdoctags": [
                        {
                            "name": "e",
                            "type": "any",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "ControlValueAccessorConnector"
                    }
                },
                {
                    "name": "onFocusOut",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 14,
                    "inheritance": {
                        "file": "ControlValueAccessorConnector"
                    }
                },
                {
                    "name": "onFocus",
                    "args": [
                        {
                            "name": "e",
                            "type": "any"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 10,
                    "jsdoctags": [
                        {
                            "name": "e",
                            "type": "any",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "MyControlAbstract"
                    }
                },
                {
                    "name": "onFocusOut",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 14,
                    "inheritance": {
                        "file": "MyControlAbstract"
                    }
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, forwardRef, OnInit } from '@angular/core';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { ControlValueAccessorConnector } from 'src/app/data/abstract/control-value-accessor-connector';\n\n@Component({\n  selector: 'app-custom-textarea',\n  templateUrl: './custom-textarea.component.html',\n  styleUrls: ['./custom-textarea.component.scss'],\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => CustomTextareaComponent),\n      multi: true,\n    },\n  ],\n})\nexport class CustomTextareaComponent extends ControlValueAccessorConnector {}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import \"/src/assets/css/abstract/variables\";\n@import \"/src/assets/css/abstract/mixins\";\n.main {\n  width: 100%;\n  height: 100%;\n  display: flex;\n  flex-direction: row;\n  background: white;\n  font-size: 1.5rem;\n  color: grey;\n  align-items: flex-start;\n  padding: 1rem;\n  // border: $border;\n\n  textarea {\n    border: none;\n    width: 100%;\n    height: 100%;\n    order: 1;\n    margin: $form-file-padding;\n    resize: none;\n    &:focus {\n      outline: none;\n    }\n    &::placeholder {\n      font-size: 1.5rem;\n    }\n  }\n  textarea:focus + mat-icon {\n    color: $accent;\n  }\n}\n",
                    "styleUrl": "./custom-textarea.component.scss"
                }
            ],
            "stylesData": "",
            "extends": "ControlValueAccessorConnector",
            "templateData": "<div\n  class=\"main\"\n  [ngClass]=\"{ 'all-border': hasBorder, 'err-border': !!errmsg }\"\n>\n  <app-validation-icon\n    [hidden]=\"hideIcon\"\n    [icon]=\"icon\"\n    [isFocused]=\"isfocused\"\n    [errors]=\"errmsg\"\n    [placeholder]=\"placeholder\"\n  ></app-validation-icon>\n\n  <textarea\n    on-focus=\"onFocus($event)\"\n    on-focusout=\"onFocusOut()\"\n    [formControl]=\"control\"\n    type=\"text\"\n    [placeholder]=\"placeholder\"\n    #input\n  ></textarea>\n</div>\n<p class=\"validation-text\" *ngIf=\"errmsg\">*{{ errmsg }}</p>\n"
        },
        {
            "name": "E404Component",
            "id": "component-E404Component-614032c334afafe87863530aba4bd7e7",
            "file": "src/app/pages/e404/e404.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-e404",
            "styleUrls": [
                "./e404.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./e404.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "options",
                    "defaultValue": "{\n    autoplay: true,\n    loop: 0,\n    path: '../../../../assets/animation/404.json',\n  }",
                    "type": "object",
                    "optional": false,
                    "description": "",
                    "line": 12
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 11
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-e404',\n  templateUrl: './e404.component.html',\n  styleUrls: ['./e404.component.scss'],\n})\nexport class E404Component implements OnInit {\n  constructor() {}\n\n  ngOnInit(): void {}\n  options = {\n    autoplay: true,\n    loop: 0,\n    path: '../../../../assets/animation/404.json',\n  };\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".notfound-page {\n  display: flex;\n  align-items: center;\n  flex-direction: column;\n  min-height: 100vh;\n  .animation {\n    width: 60rem;\n    height: 60rem;\n\n    position: relative;\n\n    h2 {\n      left: 50%;\n      transform: translateX(-50%);\n      position: absolute;\n      bottom: 10rem;\n      text-align: center;\n      text-transform: capitalize;\n    }\n  }\n\n  button {\n    margin-top: 5rem;\n    p {\n      font-size: 2rem;\n    }\n  }\n}\n",
                    "styleUrl": "./e404.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [],
                "line": 8
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"notfound-page\">\n  <div class=\"animation\">\n    <ng-lottie [options]=\"options\"></ng-lottie>\n    <h2>{{ \"general.pageDoesNotExists\" | transloco }}</h2>\n  </div>\n\n  <button class=\"main-btn\" [routerLink]=\"['/']\">\n    <p>Home</p>\n  </button>\n</div>\n"
        },
        {
            "name": "ErrorDlgComponent",
            "id": "component-ErrorDlgComponent-bf1301dfa80b7fd5443ad324080453a3",
            "file": "src/app/common/widgets/error-dlg/error-dlg.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "styleUrls": [
                "./error-dlg.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./error-dlg.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "data",
                    "type": "LoadingState",
                    "optional": false,
                    "description": "",
                    "line": 13,
                    "decorators": [
                        {
                            "name": "Inject",
                            "stringifiedArguments": "MAT_DIALOG_DATA"
                        }
                    ],
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "dialogRef",
                    "type": "MatDialogRef<ErrorDlgComponent>",
                    "optional": false,
                    "description": "",
                    "line": 12,
                    "modifierKind": [
                        114
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "goHome",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 31,
                    "modifierKind": [
                        120
                    ]
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 18
                },
                {
                    "name": "tryAgain",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 24,
                    "modifierKind": [
                        120
                    ]
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, Inject, isDevMode, OnInit } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { LoadingState } from 'src/app/data/static/main-info';\n\n@Component({\n  templateUrl: './error-dlg.component.html',\n  styleUrls: ['./error-dlg.component.scss'],\n})\nexport class ErrorDlgComponent implements OnInit {\n  constructor(\n    public dialogRef: MatDialogRef<ErrorDlgComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: LoadingState,\n    private router: Router,\n    private route: ActivatedRoute\n  ) {}\n\n  ngOnInit(): void {\n    console.log(this.data);\n  }\n  get isDev() {\n    return isDevMode();\n  }\n  async tryAgain() {\n    if (this.data.handler) {\n      await this.data.handler();\n    }\n    this.dialogRef.close();\n  }\n\n  async goHome() {\n    if (this.route.snapshot.url.length < 1) {\n      location.reload();\n    } else {\n      await this.router.navigate(['/'], {\n        replaceUrl: true,\n        skipLocationChange: true,\n      });\n      this.dialogRef.close();\n    }\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import \"/src/assets/css/abstract/variables\";\n@import \"/src/assets/css/abstract/mixins\";\n.main {\n  height: 100%;\n  width: 30vh;\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n  font-size: 2rem;\n\n  .icon {\n    height: 10rem;\n    width: 100%;\n    font-size: 10rem;\n    text-align: center;\n    color: $err;\n  }\n  .desc {\n    text-align: center;\n    font-size: inherit;\n  }\n  .row {\n    display: flex;\n    width: 100%;\n    align-self: flex-end;\n    justify-content: space-evenly;\n\n    .main-btn {\n      height: 100%;\n      width: 45%;\n      cursor: pointer;\n      padding: 1rem auto;\n      // background: $success;\n      display: grid;\n      align-items: center;\n      // @include shadow;\n      // color: white;\n      font-weight: 800;\n      font-size: 1.5rem;\n      border: 2px solid $accent;\n    }\n    .home {\n      background: white;\n      color: $accent;\n    }\n    // .navlink.err {\n    //   background: $err;\n    // }\n  }\n}\n",
                    "styleUrl": "./error-dlg.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "dialogRef",
                        "type": "MatDialogRef<ErrorDlgComponent>"
                    },
                    {
                        "name": "data",
                        "type": "LoadingState"
                    },
                    {
                        "name": "router",
                        "type": "Router"
                    },
                    {
                        "name": "route",
                        "type": "ActivatedRoute"
                    }
                ],
                "line": 10,
                "jsdoctags": [
                    {
                        "name": "dialogRef",
                        "type": "MatDialogRef<ErrorDlgComponent>",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "data",
                        "type": "LoadingState",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "router",
                        "type": "Router",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "route",
                        "type": "ActivatedRoute",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "accessors": {
                "isDev": {
                    "name": "isDev",
                    "getSignature": {
                        "name": "isDev",
                        "type": "",
                        "returnType": "",
                        "line": 21
                    }
                }
            },
            "templateData": "<div class=\"main\">\n  <mat-icon class=\"icon\">error</mat-icon>\n  <h6 class=\"desc\">\n    {{ isDev ? data.msg : (\"generalMessages.error\" | transloco) }}\n  </h6>\n  <div class=\"row\">\n    <a (click)=\"goHome()\" class=\"main-btn home\">{{ \"err.home\" | transloco }}</a>\n    <a (click)=\"tryAgain()\" class=\"main-btn\">{{ \"err.retry\" | transloco }}</a>\n  </div>\n</div>\n"
        },
        {
            "name": "FilterWidgetComponent",
            "id": "component-FilterWidgetComponent-23bcfd7d4ed3fe09c0d0368e6b541f66",
            "file": "src/app/pages/offers-page/filter-widget/filter-widget.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-filter-widget",
            "styleUrls": [
                "./filter-widget.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./filter-widget.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "filterOptions",
                    "defaultValue": "{\n    tripType: Enum_Trips_Trip_Type.Touristic,\n    minPrice: 0,\n    cities: [],\n    maxPrice: 0,\n    travelType: Enum_Trips_Traveltype.Private,\n  }",
                    "line": 32,
                    "type": "FilterOptionsModel"
                }
            ],
            "outputsClass": [
                {
                    "name": "onFilterChange",
                    "defaultValue": "new Subject<FilterOptionsModel>()",
                    "line": 31,
                    "type": "Subject"
                }
            ],
            "propertiesClass": [
                {
                    "name": "cities",
                    "defaultValue": "[]",
                    "type": "CityModel[]",
                    "optional": false,
                    "description": "",
                    "line": 42
                },
                {
                    "name": "form",
                    "type": "FormGroup",
                    "optional": false,
                    "description": "",
                    "line": 45
                },
                {
                    "name": "includedCities",
                    "defaultValue": "[]",
                    "type": "string[]",
                    "optional": false,
                    "description": "",
                    "line": 44
                },
                {
                    "name": "sub",
                    "type": "Subscription",
                    "optional": false,
                    "description": "",
                    "line": 43
                },
                {
                    "name": "tr",
                    "defaultValue": "Enum_Trips_Traveltype",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 40
                },
                {
                    "name": "trType",
                    "defaultValue": "Enum_Trips_Trip_Type",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 41
                },
                {
                    "name": "trTypes",
                    "defaultValue": "[]",
                    "type": "any[]",
                    "optional": false,
                    "description": "",
                    "line": 39
                }
            ],
            "methodsClass": [
                {
                    "name": "_checkValue",
                    "args": [
                        {
                            "name": "val",
                            "type": "any"
                        },
                        {
                            "name": "isMin",
                            "type": "",
                            "defaultValue": "true"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 90,
                    "jsdoctags": [
                        {
                            "name": "val",
                            "type": "any",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "isMin",
                            "type": "",
                            "defaultValue": "true",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "_sub",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 114
                },
                {
                    "name": "applyChanges",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 130
                },
                {
                    "name": "changeType",
                    "args": [
                        {
                            "name": "tab",
                            "type": "Enum_Trips_Trip_Type"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 123,
                    "jsdoctags": [
                        {
                            "name": "tab",
                            "type": "Enum_Trips_Trip_Type",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "isCityChecked",
                    "args": [
                        {
                            "name": "cityId",
                            "type": "string"
                        }
                    ],
                    "optional": false,
                    "returnType": "boolean",
                    "typeParameters": [],
                    "line": 120,
                    "jsdoctags": [
                        {
                            "name": "cityId",
                            "type": "string",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngOnDestroy",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 144
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 56
                },
                {
                    "name": "setCity",
                    "args": [
                        {
                            "name": "checked",
                            "type": "boolean"
                        },
                        {
                            "name": "cityId",
                            "type": "string"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 77,
                    "jsdoctags": [
                        {
                            "name": "checked",
                            "type": "boolean",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "cityId",
                            "type": "string",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import {\n  Component,\n  Inject,\n  Input,\n  OnInit,\n  Optional,\n  Output,\n} from '@angular/core';\nimport { FormBuilder, FormGroup } from '@angular/forms';\nimport {\n  MatBottomSheetRef,\n  MAT_BOTTOM_SHEET_DATA,\n} from '@angular/material/bottom-sheet';\nimport { Subject, Subscription } from 'rxjs';\nimport { CityModel } from 'src/app/data/models/CityModel';\nimport { FilterOptionsModel } from 'src/app/data/models/filterOptionModlel';\nimport { CityService } from 'src/app/data/services/city.service';\nimport { LocalService } from 'src/app/data/services/local.service';\nimport {\n  Enum_Trips_Traveltype,\n  Enum_Trips_Trip_Type,\n} from 'src/app/data/services/saferniGraphql.service';\nimport { getTravelTypeData } from 'src/app/data/utils/enums';\n\n@Component({\n  selector: 'app-filter-widget',\n  templateUrl: './filter-widget.component.html',\n  styleUrls: ['./filter-widget.component.scss'],\n})\nexport class FilterWidgetComponent implements OnInit {\n  @Output() onFilterChange = new Subject<FilterOptionsModel>();\n  @Input() filterOptions: FilterOptionsModel = {\n    tripType: Enum_Trips_Trip_Type.Touristic,\n    minPrice: 0,\n    cities: [],\n    maxPrice: 0,\n    travelType: Enum_Trips_Traveltype.Private,\n  };\n  trTypes: any[] = [];\n  tr = Enum_Trips_Traveltype;\n  trType = Enum_Trips_Trip_Type;\n  cities: CityModel[] = [];\n  sub: Subscription;\n  includedCities: string[] = [];\n  form: FormGroup;\n  constructor(\n    @Optional() private dialogRef: MatBottomSheetRef<FilterWidgetComponent>,\n    @Optional() @Inject(MAT_BOTTOM_SHEET_DATA) private dlgData: any,\n    private loc: LocalService,\n    _cityser: CityService,\n    private fb: FormBuilder\n  ) {\n    this.cities = _cityser.data;\n  }\n\n  ngOnInit(): void {\n    if (this.dlgData) {\n      this.filterOptions = { ...this.dlgData };\n    }\n    this.form = this.fb.group({\n      tripType: this.filterOptions.tripType ?? Enum_Trips_Trip_Type.Touristic,\n      minPrice:\n        this.filterOptions.minPrice == 0 ? null : this.filterOptions.minPrice,\n      hotel: this.filterOptions.hotel,\n      hasDiscount: this.filterOptions.hasDiscount,\n      maxPrice:\n        this.filterOptions.maxPrice == 0 ? null : this.filterOptions.maxPrice,\n      travelType: this.filterOptions.travelType,\n    });\n    if (this.filterOptions.cities) {\n      this.includedCities.push(...this.filterOptions.cities);\n    }\n    this.trTypes = getTravelTypeData(this.loc);\n    this._sub();\n  }\n\n  setCity(checked: boolean, cityId: string) {\n    if (checked) this.includedCities.push(cityId);\n    else {\n      const index = this.includedCities.indexOf(cityId, 0);\n      if (index > -1) {\n        this.includedCities.splice(index, 1);\n      }\n    }\n    this.filterOptions = {\n      ...this.filterOptions,\n      cities: this.includedCities,\n    };\n  }\n  _checkValue(val: any, isMin = true) {\n    if (isNaN(val) || !val) val = isMin ? 0 : 0;\n    else val = Number.parseFloat(val);\n    if (val < 0) {\n      isMin\n        ? this.form.patchValue({\n            minPrice: 0,\n          })\n        : this.form.patchValue({\n            maxPrice: 0,\n          });\n    }\n    if (isMin) {\n      this.filterOptions = {\n        ...this.filterOptions,\n        minPrice: val,\n      };\n    } else {\n      this.filterOptions = {\n        ...this.filterOptions,\n        maxPrice: val,\n      };\n    }\n  }\n  _sub() {\n    this.sub = this.form.valueChanges.subscribe((data) => {\n      this._checkValue(data.minPrice, true);\n      this._checkValue(data.maxPrice, false);\n    });\n  }\n  isCityChecked(cityId: string): boolean {\n    return this.includedCities.indexOf(cityId) > -1;\n  }\n  changeType(tab: Enum_Trips_Trip_Type) {\n    this.filterOptions = {\n      ...this.filterOptions,\n      tripType: tab,\n    };\n  }\n\n  applyChanges() {\n    this.filterOptions = {\n      ...this.form.value,\n      minPrice: this.filterOptions.minPrice,\n      maxPrice: this.filterOptions.maxPrice,\n      cities: this.includedCities,\n    };\n    if (this.dialogRef) {\n      this.dialogRef.dismiss(this.filterOptions);\n    } else {\n      this.onFilterChange.next(this.filterOptions);\n    }\n  }\n\n  ngOnDestroy(): void {\n    //Called once, before the instance is destroyed.\n    //Add 'implements OnDestroy' to the class.\n    this.sub?.unsubscribe();\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import \"/src/assets/css/abstract/variables\";\n@import \"/src/assets/css/abstract/mixins\";\n$trans: all 200ms;\n$padding: 2rem 2rem;\n$font-size: 1.5rem;\n\n.flex_area_filter {\n  text-align: start;\n  @include shadow;\n  // height: 50rem;\n  width: 100%;\n  font-family: var(--primary-font);\n  font-size: $font-size;\n  &-nav {\n    height: 7rem;\n    display: grid;\n    grid-template-columns: repeat(2, 1fr);\n    &-item {\n      background: $non-active;\n      color: black;\n      font-size: 1.5rem;\n      display: grid;\n      place-items: center;\n      cursor: pointer;\n      transition: $trans;\n      text-align: center;\n      font-weight: 800;\n    }\n    &-item.active {\n      background: white;\n      color: black;\n    }\n  }\n  &-city,\n  &-hotel,\n  &-travel-type {\n    .radio-group {\n      display: grid;\n      grid-template-columns: repeat(1, 1fr);\n      gap: 1rem;\n    }\n  }\n  &-city {\n    .radio-group {\n      max-height: 20rem;\n      overflow-y: scroll;\n    }\n  }\n  // &-travel-type {\n  //   .radio-group {\n  //     display: flex;\n  //     flex-direction: column;\n  //   }\n  //   .radio:not(:last-of-type) {\n  //     margin-bottom: 2rem;\n  //   }\n  //   @include divider();\n  // }\n  &-price {\n    // height: 10rem;\n    display: grid;\n    align-items: center;\n    justify-content: center;\n    grid-template-columns: 1fr 1rem 1fr;\n    gap: 1%;\n\n    .control {\n      height: 2.7rem;\n      @include res(phone) {\n        height: 3.7rem;\n      }\n    }\n    &-title {\n      grid-column: span 3;\n      grid-row: 1;\n      align-self: flex-end;\n    }\n    .dash {\n      display: grid;\n      font-size: 1.6rem;\n      place-items: center;\n    }\n  }\n  &-btn {\n    z-index: 0;\n    display: grid;\n    justify-content: flex-start;\n    align-items: center;\n    * {\n      font-family: inherit;\n      height: 3rem;\n      width: 8rem;\n      font-weight: 800;\n      font-size: 1.7rem;\n    }\n  }\n}\n.title {\n  font-size: $font-size;\n  font-weight: 800;\n  margin-bottom: 2rem;\n}\n.section {\n  padding: $padding;\n  background: white;\n  position: relative;\n}\n.section.filter {\n  @include divider();\n}\n",
                    "styleUrl": "./filter-widget.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "dialogRef",
                        "type": "MatBottomSheetRef<FilterWidgetComponent>"
                    },
                    {
                        "name": "dlgData",
                        "type": "any"
                    },
                    {
                        "name": "loc",
                        "type": "LocalService"
                    },
                    {
                        "name": "_cityser",
                        "type": "CityService"
                    },
                    {
                        "name": "fb",
                        "type": "FormBuilder"
                    }
                ],
                "line": 45,
                "jsdoctags": [
                    {
                        "name": "dialogRef",
                        "type": "MatBottomSheetRef<FilterWidgetComponent>",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "dlgData",
                        "type": "any",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "loc",
                        "type": "LocalService",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "_cityser",
                        "type": "CityService",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "fb",
                        "type": "FormBuilder",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<form [formGroup]=\"form\" class=\"flex_area_filter\">\n  <!-- <section class=\"flex_area_filter-nav\">\n    <div\n      class=\"flex_area_filter-nav-item\"\n      [ngClass]=\"{ active: filterOptions.tripType == trType.Touristic }\"\n      (click)=\"changeType(trType.Touristic)\"\n    >\n      {{ \"buttons.tours\" | transloco }}\n    </div>\n    <div\n      class=\"flex_area_filter-nav-item\"\n      [ngClass]=\"{ active: filterOptions.tripType == trType.Medical }\"\n      (click)=\"changeType(trType.Medical)\"\n    >\n      {{ \"buttons.medic\" | transloco }}\n    </div>\n  </section> -->\n  <section class=\"flex_area_filter-city section filter\">\n    <p class=\"flex_area_filter-city-title title\">\n      {{ \"buttons.city\" | transloco }}\n    </p>\n    <mat-radio-group class=\"radio-group\">\n      <mat-checkbox\n        (change)=\"setCity($event.checked, city.id)\"\n        *ngFor=\"let city of cities\"\n        class=\"radio\"\n        [checked]=\"isCityChecked(city.id)\"\n        >{{ city.name }}\n      </mat-checkbox>\n    </mat-radio-group>\n  </section>\n\n  <section class=\"flex_area_filter-travel-type section filter\">\n    <p class=\"flex_area_filter-travel-type-title title\">\n      {{ \"travelType.placeholder\" | transloco }}\n    </p>\n    <mat-radio-group class=\"radio-group\" formControlName=\"travelType\">\n      <mat-radio-button class=\"radio\" [value]=\"tr.Private\">{{\n        \"travelType.\" + tr.Private | transloco\n      }}</mat-radio-button>\n      <mat-radio-button class=\"radio\" [value]=\"tr.Public\">{{\n        \"travelType.\" + tr.Public | transloco\n      }}</mat-radio-button>\n    </mat-radio-group>\n  </section>\n  <section class=\"flex_area_filter-hotel section filter\">\n    <p class=\"flex_area_filter-hotel-title title\">\n      {{ \"otherFilterOptions.placeholder\" | transloco }}\n    </p>\n    <mat-radio-group class=\"radio-group\">\n      <mat-checkbox class=\"radio\" formControlName=\"hotel\"\n        >{{ \"otherFilterOptions.hotel\" | transloco }}\n      </mat-checkbox>\n      <mat-checkbox class=\"radio\" formControlName=\"hasDiscount\"\n        >{{ \"otherFilterOptions.discount\" | transloco }}\n      </mat-checkbox>\n    </mat-radio-group>\n  </section>\n\n  <div class=\"flex_area_filter-price section filter\">\n    <p class=\"flex_area_filter-price-title title\">\n      {{ \"various.price\" | transloco }}\n    </p>\n    <app-custom-input\n      [placeholder]=\"'various.min' | transloco\"\n      class=\"control\"\n      [hideIcon]=\"true\"\n      [isNumber]=\"true\"\n      [hasBorder]=\"true\"\n      formControlName=\"minPrice\"\n    ></app-custom-input>\n    <p class=\"dash\">-</p>\n    <app-custom-input\n      class=\"control\"\n      [placeholder]=\"'various.max' | transloco\"\n      [hideIcon]=\"true\"\n      [isNumber]=\"true\"\n      [hasBorder]=\"true\"\n      formControlName=\"maxPrice\"\n    ></app-custom-input>\n  </div>\n  <section class=\"flex_area_filter-btn section\">\n    <button (click)=\"applyChanges()\" class=\"main-btn\">\n      {{ \"buttons.apply\" | transloco }}\n    </button>\n  </section>\n</form>\n"
        },
        {
            "name": "FooterComponent",
            "id": "component-FooterComponent-1ba13668abee0d13b5c1c8b84341ee5e",
            "file": "src/app/common/layout/footer/footer.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-footer",
            "styleUrls": [
                "./footer.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./footer.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "ctrl",
                    "defaultValue": "new FormControl(null, [Validators.email, Validators.required])",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 19
                },
                {
                    "name": "email",
                    "defaultValue": "StaticInfo.email",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 17
                },
                {
                    "name": "icons",
                    "defaultValue": "ICONS",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 18
                },
                {
                    "name": "phone",
                    "defaultValue": "StaticInfo.phoneNumber",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 16
                },
                {
                    "name": "projectName",
                    "defaultValue": "StaticInfo.projectName",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 15
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 26
                },
                {
                    "name": "submit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 28
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\nimport { FormControl, Validators } from '@angular/forms';\nimport { LocalService } from 'src/app/data/services/local.service';\nimport { NewsLetterService } from 'src/app/data/services/news-letter.service';\nimport { SnackService } from 'src/app/data/services/snack.service';\nimport { StaticInfo } from 'src/app/data/static/main-info';\nimport { ICONS, snackType } from 'src/app/data/utils/enums';\n\n@Component({\n  selector: 'app-footer',\n  templateUrl: './footer.component.html',\n  styleUrls: ['./footer.component.scss'],\n})\nexport class FooterComponent implements OnInit {\n  projectName = StaticInfo.projectName;\n  phone = StaticInfo.phoneNumber;\n  email = StaticInfo.email;\n  icons = ICONS;\n  ctrl = new FormControl(null, [Validators.email, Validators.required]);\n  constructor(\n    private _snck: SnackService,\n    private news: NewsLetterService,\n    private loc: LocalService\n  ) {}\n\n  ngOnInit(): void {}\n\n  submit() {\n    this.ctrl?.markAsTouched();\n    if (!this.ctrl.valid) return;\n    //TODO send to database\n    try {\n      this.news.addEmailToNewsLetter(this.ctrl.value);\n      this._snck.showSnack(this.loc.getTranslation('footer.thanks'));\n    } catch (error) {\n      this._snck.showSnack(\n        this.loc.getTranslation('generalMessages.error'),\n        snackType.error\n      );\n    }\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import \"/src/assets/css/abstract/variables\";\n@import \"/src/assets/css/abstract/mixins\";\n$mr-res: 15rem;\n\n.footer {\n  background: linear-gradient(\n    180deg,\n    rgba(2, 0, 36, 1) 0%,\n    rgba(238, 238, 238, 0) 0%,\n    rgba(238, 238, 238, 1) 100%\n  );\n  height: 70rem;\n  display: grid;\n  grid-template-columns: 3fr 2fr 3fr;\n  gap: 10rem;\n  padding: 0 20rem;\n\n  font-size: 2.6rem;\n  font-family: var(--primary-font);\n  @include res(tab-land-extra-1600) {\n    padding: 0 10rem;\n    font-size: 2rem;\n  }\n  @include res(tab-land-extra) {\n    padding: 0 1rem;\n    font-size: 1.8rem;\n  }\n  @include res(tab) {\n    grid-template-columns: 1fr 2fr;\n    grid-template-rows: repeat(2, 1fr);\n    gap: 0;\n    column-gap: 5rem;\n  }\n  &_col1,\n  &_col3 {\n    flex: 3;\n    margin-top: 26rem;\n    position: relative;\n    width: 100%;\n    display: flex;\n    justify-content: space-between;\n    @include res(tab) {\n      flex-direction: column;\n    }\n    &::after {\n      content: \"\";\n      position: absolute;\n      background: $dividerColor;\n      width: 100%;\n      height: 0.1rem;\n      top: -10%;\n      left: 0;\n      @include res(tab) {\n        width: 0.1rem;\n        height: calc(100% + $mr-res);\n        top: 0;\n      }\n    }\n\n    .navlink {\n      font-size: inherit;\n      height: 4rem;\n      @include res(tab) {\n        width: 50%;\n        align-self: center;\n      }\n    }\n  }\n  &_col1 {\n    @include res(tab) {\n      grid-column: 1;\n      grid-row: 1;\n      margin-top: $mr-res;\n      margin-bottom: 2.5rem;\n    }\n  }\n  &_col3 {\n    @include res(tab) {\n      grid-column: 1;\n      grid-row: 2;\n      margin-top: 2.5rem;\n      margin-bottom: $mr-res;\n    }\n  }\n  &_col2 {\n    margin-top: 15rem;\n    align-items: center;\n    justify-items: center;\n    flex-direction: column;\n    display: flex;\n    &_logo {\n      height: 11rem;\n      img {\n        width: 100%;\n        height: 100%;\n        object-fit: scale-down;\n      }\n    }\n    &_phone {\n      font-size: inherit;\n      height: 4rem;\n      margin: 4rem 0;\n      text-align: center;\n    }\n    &_sc {\n      margin: 2rem;\n      height: 3rem;\n      width: 80%;\n    }\n    &_sub {\n      text-align: center;\n      * {\n        font-size: 1.5rem;\n      }\n      &-title {\n        color: $login-bk;\n        font-weight: 800;\n      }\n    }\n    &_input {\n      margin: 3rem;\n      border: 1px $dividerColor solid;\n      height: 4rem;\n    }\n    &_btn {\n      font-size: 1.5rem;\n      font-weight: 800;\n    }\n    @include res(tab) {\n      grid-column: 2;\n      grid-row: 1 / span 2;\n      margin-top: 10rem;\n      gap: 0;\n    }\n  }\n}\n",
                    "styleUrl": "./footer.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "_snck",
                        "type": "SnackService"
                    },
                    {
                        "name": "news",
                        "type": "NewsLetterService"
                    },
                    {
                        "name": "loc",
                        "type": "LocalService"
                    }
                ],
                "line": 19,
                "jsdoctags": [
                    {
                        "name": "_snck",
                        "type": "SnackService",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "news",
                        "type": "NewsLetterService",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "loc",
                        "type": "LocalService",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"footer\">\n  <div class=\"footer_col1\">\n    <a [routerLink]=\"\" class=\"navlink\">{{ \"buttons.home\" | transloco }}</a>\n    <a [routerLink]=\"['about-us']\" class=\"navlink\">{{\n      \"aboutUsPage.aboutUs\" | transloco\n    }}</a>\n    <a [routerLink]=\"['about-us']\" class=\"navlink\">{{\n      \"buttons.destination\" | transloco\n    }}</a>\n  </div>\n  <div class=\"footer_col2\">\n    <figure class=\"footer_col2_logo\">\n      <img src=\"/assets/images/bk/footer.png\" alt=\"\" />\n    </figure>\n    <a class=\"footer_col2_phone navlink\" socialLink [type]=\"'whatsapp'\">{{\n      phone\n    }}</a>\n    <app-oursocialmedia\n      [isWhite]=\"false\"\n      class=\"footer_col2_sc\"\n    ></app-oursocialmedia>\n    <div class=\"footer_col2_sub\">\n      <p class=\"footer_col2_sub-title\">{{ \"footer.sub-title\" | transloco }}</p>\n      <p class=\"footer_col2_sub-desc\">\n        {{ \"footer.sub-desc\" | transloco }}\n      </p>\n    </div>\n    <app-custom-input\n      class=\"footer_col2_input\"\n      [placeholder]=\"'inputs.email' | transloco\"\n      [icon]=\"icons.mail\"\n      [formControl]=\"ctrl\"\n    ></app-custom-input>\n    <button (click)=\"submit()\" class=\"footer_col2_btn main-btn\">Submit</button>\n  </div>\n  <div class=\"footer_col3\">\n    <a [routerLink]=\"['block']\" class=\"navlink\">{{\n      \"buttons.blog\" | transloco\n    }}</a>\n    <a [routerLink]=\"['offers']\" class=\"navlink\">{{\n      \"buttons.trips\" | transloco\n    }}</a>\n    <a [routerLink]=\"['medical']\" class=\"navlink\">{{\n      \"buttons.medicTreat\" | transloco\n    }}</a>\n  </div>\n</div>\n"
        },
        {
            "name": "GuestCountInputComponent",
            "id": "component-GuestCountInputComponent-9deecb13d0dd490b42c3eacf2ec9cd4c",
            "file": "src/app/common/widgets/guest-count-input/guest-count-input.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [
                {
                    "name": "{ provide: MatFormFieldControl, useExisting: GuestCountInputComponent }",
                    "type": "component"
                },
                {
                    "name": "{\n    provide: NG_VALIDATORS, useValue: (c: FormControl) => {\n        let noValue = {\n            message: ,\n        };\n        let notObject = {\n            message: ,\n        };\n        return !isInstanceOfGuesCount(c.value) ? notObject : c.value.adult ==  ? noValue : null;\n    }, multi: true,\n}",
                    "ns": "{\n    provide: NG_VALIDATORS, useValue: (c: FormControl) => {\n        let noValue = {\n            message: ,\n        };\n        let notObject = {\n            message: ,\n        };\n        return !isInstanceOfGuesCount(c"
                }
            ],
            "selector": "app-guest-count-input",
            "styleUrls": [
                "./guest-count-input.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./guest-count-input.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "aria-describedby",
                    "line": 142,
                    "type": "string"
                },
                {
                    "name": "disabled",
                    "line": 190,
                    "type": "boolean"
                },
                {
                    "name": "hasBorder",
                    "defaultValue": "false",
                    "line": 69
                },
                {
                    "name": "max",
                    "defaultValue": "20",
                    "line": 68
                },
                {
                    "name": "placeholder",
                    "line": 71
                },
                {
                    "name": "required",
                    "line": 131
                },
                {
                    "name": "value",
                    "line": 83,
                    "type": ""
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "_data",
                    "defaultValue": "{\n    adult: 0,\n    child: 0,\n  }",
                    "type": "GuestCountModel",
                    "optional": false,
                    "description": "",
                    "line": 63
                },
                {
                    "name": "_formField",
                    "type": "MatFormField",
                    "optional": false,
                    "description": "",
                    "line": 111,
                    "decorators": [
                        {
                            "name": "Optional",
                            "stringifiedArguments": ""
                        },
                        {
                            "name": "Inject",
                            "stringifiedArguments": "MAT_FORM_FIELD"
                        }
                    ],
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "_placeholder",
                    "defaultValue": "'Guest'",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 78,
                    "modifierKind": [
                        112
                    ]
                },
                {
                    "name": "_required",
                    "defaultValue": "false",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 138,
                    "modifierKind": [
                        112
                    ]
                },
                {
                    "name": "autofilled",
                    "type": "boolean | undefined",
                    "optional": true,
                    "description": "",
                    "line": 141
                },
                {
                    "name": "controlType",
                    "defaultValue": "'example-tel-input'",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 140
                },
                {
                    "name": "empty",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 128
                },
                {
                    "name": "errorState",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 139
                },
                {
                    "name": "focused",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 127
                },
                {
                    "name": "icons",
                    "defaultValue": "ICONS",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 67
                },
                {
                    "name": "isShowen",
                    "defaultValue": "false",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 161
                },
                {
                    "name": "nextId",
                    "defaultValue": "0",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 214,
                    "modifierKind": [
                        115
                    ]
                },
                {
                    "name": "ngControl",
                    "type": "NgControl",
                    "optional": false,
                    "description": "",
                    "line": 108,
                    "decorators": [
                        {
                            "name": "Self",
                            "stringifiedArguments": ""
                        },
                        {
                            "name": "Optional",
                            "stringifiedArguments": ""
                        }
                    ],
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "onChange",
                    "defaultValue": "() => {...}",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 96
                },
                {
                    "name": "onTouched",
                    "defaultValue": "() => {...}",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 98
                },
                {
                    "name": "parentFormField",
                    "type": "MatFormField",
                    "optional": false,
                    "description": "",
                    "line": 112,
                    "decorators": [
                        {
                            "name": "Optional",
                            "stringifiedArguments": ""
                        }
                    ],
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "shouldLabelFloat",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 129
                },
                {
                    "name": "stateChanges",
                    "defaultValue": "new Subject<void>()",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 126
                },
                {
                    "name": "touched",
                    "defaultValue": "false",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 97
                }
            ],
            "methodsClass": [
                {
                    "name": "_getMsg",
                    "args": [
                        {
                            "name": "name",
                            "type": "any"
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 206,
                    "jsdoctags": [
                        {
                            "name": "name",
                            "type": "any",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "_handleInput",
                    "args": [
                        {
                            "name": "control",
                            "type": "AbstractControl"
                        },
                        {
                            "name": "nextElement",
                            "type": "HTMLInputElement",
                            "optional": true
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 215,
                    "jsdoctags": [
                        {
                            "name": "control",
                            "type": "AbstractControl",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "nextElement",
                            "type": "HTMLInputElement",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "autoFocusNext",
                    "args": [
                        {
                            "name": "control",
                            "type": "AbstractControl"
                        },
                        {
                            "name": "nextElement",
                            "type": "HTMLInputElement",
                            "optional": true
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 219,
                    "jsdoctags": [
                        {
                            "name": "control",
                            "type": "AbstractControl",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "nextElement",
                            "type": "HTMLInputElement",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "autoFocusPrev",
                    "args": [
                        {
                            "name": "control",
                            "type": "AbstractControl"
                        },
                        {
                            "name": "prevElement",
                            "type": "HTMLInputElement"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 228,
                    "jsdoctags": [
                        {
                            "name": "control",
                            "type": "AbstractControl",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "prevElement",
                            "type": "HTMLInputElement",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "decrease",
                    "args": [
                        {
                            "name": "key",
                            "type": "string"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 172,
                    "jsdoctags": [
                        {
                            "name": "key",
                            "type": "string",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getValue",
                    "args": [
                        {
                            "name": "key",
                            "type": "string"
                        }
                    ],
                    "optional": false,
                    "returnType": "number",
                    "typeParameters": [],
                    "line": 163,
                    "jsdoctags": [
                        {
                            "name": "key",
                            "type": "string",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "increase",
                    "args": [
                        {
                            "name": "key",
                            "type": "string"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 166,
                    "jsdoctags": [
                        {
                            "name": "key",
                            "type": "string",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngOnDestroy",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 209
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 162
                },
                {
                    "name": "onContainerClick",
                    "args": [
                        {
                            "name": "event",
                            "type": "MouseEvent"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 147,
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "MouseEvent",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "onLeave",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 180
                },
                {
                    "name": "registerOnChange",
                    "args": [
                        {
                            "name": "fn",
                            "type": "any"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 155,
                    "jsdoctags": [
                        {
                            "name": "fn",
                            "type": "any",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "registerOnTouched",
                    "args": [
                        {
                            "name": "fn",
                            "type": "any"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 158,
                    "jsdoctags": [
                        {
                            "name": "fn",
                            "type": "any",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "setDescribedByIds",
                    "args": [
                        {
                            "name": "ids",
                            "type": "string[]"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 143,
                    "jsdoctags": [
                        {
                            "name": "ids",
                            "type": "string[]",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "setDisabledState",
                    "args": [
                        {
                            "name": "isDisabled",
                            "type": "boolean"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 192,
                    "jsdoctags": [
                        {
                            "name": "isDisabled",
                            "type": "boolean",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "writeValue",
                    "args": [
                        {
                            "name": "obj",
                            "type": "GuestCountModel"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 151,
                    "jsdoctags": [
                        {
                            "name": "obj",
                            "type": "GuestCountModel",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "hostBindings": [
                {
                    "name": "id",
                    "defaultValue": "`test-${GuestCountInputComponent.nextId++}`",
                    "line": 233
                }
            ],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { FocusMonitor } from '@angular/cdk/a11y';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport {\n  Component,\n  ElementRef,\n  HostBinding,\n  Inject,\n  Input,\n  OnInit,\n  Optional,\n  Self,\n} from '@angular/core';\nimport {\n  AbstractControl,\n  FormControl,\n  NgControl,\n  NG_VALIDATORS,\n} from '@angular/forms';\nimport {\n  MatFormField,\n  MatFormFieldControl,\n  MAT_FORM_FIELD,\n} from '@angular/material/form-field';\nimport { Subject } from 'rxjs';\nimport { GuestCountModel } from 'src/app/data/models/guestCountModel';\nimport { LocalService } from 'src/app/data/services/local.service';\nimport { DevData } from 'src/app/data/static/main-info';\nimport { ICONS } from 'src/app/data/utils/enums';\nconst isInstanceOfGuesCount = (obj: any) => {\n  if (typeof obj !== 'object') return false;\n  return 'adult' in obj && 'child' in obj;\n};\n@Component({\n  selector: 'app-guest-count-input',\n  templateUrl: './guest-count-input.component.html',\n  styleUrls: ['./guest-count-input.component.scss'],\n\n  providers: [\n    { provide: MatFormFieldControl, useExisting: GuestCountInputComponent },\n    {\n      provide: NG_VALIDATORS,\n      useValue: (c: FormControl) => {\n        let noValue = {\n          message: 'the count should be at least 1 adult',\n        };\n        let notObject = {\n          message: 'the object is worng',\n        };\n\n        return !isInstanceOfGuesCount(c.value)\n          ? notObject\n          : c.value.adult == 0\n          ? noValue\n          : null;\n      },\n      multi: true,\n    },\n  ],\n})\nexport class GuestCountInputComponent\n  implements OnInit, MatFormFieldControl<GuestCountModel>\n{\n  _data: GuestCountModel = {\n    adult: 0,\n    child: 0,\n  };\n  icons = ICONS;\n  @Input() max = 20;\n  @Input() hasBorder = false;\n  @Input()\n  get placeholder() {\n    return this._placeholder;\n  }\n  set placeholder(plh) {\n    this._placeholder = plh;\n    this.stateChanges.next();\n  }\n  private _placeholder: string = 'Guest';\n  get value(): GuestCountModel {\n    return this._data;\n  }\n  @Input()\n  set value(obj: GuestCountModel) {\n    if (isInstanceOfGuesCount(obj)) {\n      if (obj.adult > this.max || obj.child > this.max) return;\n      this._data = obj;\n    } else {\n      this._data = {\n        adult: 1,\n        child: 0,\n      };\n    }\n    this.stateChanges.next();\n    this.onChange(this._data);\n  }\n  onChange: any = () => {};\n  touched = false;\n  onTouched = () => {\n    this.touched = true;\n  };\n  get hasValue() {\n    return this.value.adult > 0 && this.value.child > 0;\n  }\n\n  constructor(\n    @Self()\n    @Optional()\n    public ngControl: NgControl,\n    private elRef: ElementRef<HTMLElement>,\n    private fm: FocusMonitor,\n    @Optional() @Inject(MAT_FORM_FIELD) public _formField: MatFormField,\n    @Optional() public parentFormField: MatFormField,\n    private locale: LocalService\n  ) {\n    if (this.ngControl) {\n      this.ngControl.valueAccessor = this;\n    }\n    fm.monitor(elRef, true).subscribe((origin) => {\n      if (this.focused && !origin) {\n        this.onTouched();\n      }\n      this.focused = !!origin;\n      this.stateChanges.next();\n    });\n  }\n  stateChanges = new Subject<void>();\n  focused: boolean;\n  empty: boolean;\n  shouldLabelFloat: boolean;\n  @Input()\n  get required() {\n    return this._required;\n  }\n  set required(req) {\n    this._required = coerceBooleanProperty(req);\n    this.stateChanges.next();\n  }\n  private _required = false;\n  errorState: boolean;\n  controlType = 'example-tel-input';\n  autofilled?: boolean | undefined;\n  @Input('aria-describedby') userAriaDescribedBy: string;\n  setDescribedByIds(ids: string[]) {\n    const controlElement = this.elRef.nativeElement.querySelector('.main')!;\n    controlElement.setAttribute('aria-describedby', ids.join(' '));\n  }\n  onContainerClick(event: MouseEvent) {\n    this.isShowen = true;\n  }\n\n  writeValue(obj: GuestCountModel): void {\n    this.value = obj;\n  }\n\n  registerOnChange(fn: any): void {\n    this.onChange = fn;\n  }\n  registerOnTouched(fn: any): void {\n    this.onTouched = fn;\n  }\n  isShowen = false;\n  ngOnInit(): void {}\n  getValue(key: string): number {\n    return Object(this.value)[key];\n  }\n  increase(key: string) {\n    this.value = {\n      ...this.value,\n      [key]: this.getValue(key) + 1,\n    };\n  }\n  decrease(key: string) {\n    if (this.getValue(key) <= 0) return;\n    this.value = {\n      ...this.value,\n      [key]: this.getValue(key) - 1,\n    };\n  }\n\n  onLeave() {\n    this.isShowen = false;\n  }\n\n  get str() {\n    return `${this.value['adult']} ${this.locale.getTranslation(\n      'various.adult'\n    )} ${this.value['child']} ${this.locale.getTranslation('various.child')}`;\n  }\n\n  @Input() disabled: boolean;\n\n  setDisabledState(isDisabled: boolean): void {\n    this.disabled = isDisabled;\n  }\n\n  get errmsg(): any[] | undefined {\n    let lst;\n    if (this.ngControl.errors && this.ngControl.dirty) {\n      lst = [];\n      Object.values(this.ngControl.errors).forEach((f) =>\n        lst.push(this._getMsg(f))\n      );\n    }\n    return lst;\n  }\n  _getMsg(name: any) {\n    return DevData.errMsgs.filter((g) => g.name == name)[0]?.msg ?? name;\n  }\n  ngOnDestroy() {\n    this.stateChanges.complete();\n    this.fm.stopMonitoring(this.elRef);\n  }\n\n  static nextId = 0;\n  _handleInput(control: AbstractControl, nextElement?: HTMLInputElement): void {\n    this.autoFocusNext(control, nextElement);\n    this.onChange(this.value);\n  }\n  autoFocusNext(\n    control: AbstractControl,\n    nextElement?: HTMLInputElement\n  ): void {\n    if (!control.errors && nextElement) {\n      this.fm.focusVia(nextElement, 'program');\n    }\n  }\n\n  autoFocusPrev(control: AbstractControl, prevElement: HTMLInputElement): void {\n    if (control.value.length < 1) {\n      this.fm.focusVia(prevElement, 'program');\n    }\n  }\n  @HostBinding() id = `test-${GuestCountInputComponent.nextId++}`;\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import \"/src/assets/css/abstract/variables\";\n@import \"/src/assets/css/abstract/mixins\";\n.main {\n  height: 100%;\n  background: white;\n  font-size: 1.6rem;\n  line-height: 1.6rem;\n  .header {\n    height: 101%;\n  }\n  .display {\n    display: grid;\n    grid-template-columns: 2rem 1fr 2rem;\n    grid-template-rows: repeat(3, calc(100% / 3));\n    width: 100%;\n    height: 101%;\n    color: grey;\n    padding: $form-file-padding;\n    &-suffix {\n      transition: all 0.5s ease;\n      font-size: inherit;\n      grid-row: 1 / span 3;\n      grid-column: 3;\n      color: $icon-color;\n      justify-self: center;\n      align-self: center;\n    }\n    &-prefix {\n      grid-row: 2;\n      grid-column: 1;\n    }\n    &-text {\n      grid-column: 2;\n      grid-row: 2;\n      height: 100%;\n      justify-self: stretch;\n      font-size: 100%;\n      text-align: start;\n      display: grid;\n      align-items: center;\n      margin: 0 2rem;\n      @include res(phone) {\n        align-items: flex-end;\n      }\n    }\n    // &-data {\n    //   grid-column: 2 / span 2;\n    //   grid-row: 3;\n    //   text-align: start;\n    //   font-size: 1rem;\n    //   justify-self: flex-start;\n    //   margin-left: 1.5rem;\n    // }\n\n    &-suffix.shown {\n      transform: rotateZ(540deg);\n      transition: all 0.5s ease;\n    }\n  }\n\n  .expandable {\n    display: flex;\n    flex-direction: column;\n    justify-content: space-evenly;\n    height: 0rem;\n    overflow: hidden;\n    transition: all 0.5s ease;\n    background: white;\n    color: grey;\n    .options {\n      margin: 1rem;\n      display: grid;\n      grid-template-columns: 55% 10% 20% 10%;\n      justify-content: flex-end;\n      padding: 1%;\n\n      &-value {\n        text-align: center;\n      }\n      &-minus {\n        justify-self: flex-end;\n      }\n      &-title {\n        justify-self: flex-start;\n        position: relative;\n        width: 100%;\n        text-align: start;\n        text-decoration: underline 1px solid $accent;\n        text-underline-offset: 10%;\n      }\n      .clickable {\n        color: white;\n        background: $accent;\n        width: 100%;\n        cursor: pointer;\n        width: 1.6rem;\n        height: 1.6rem;\n        font-size: 1.6rem;\n        display: grid;\n        place-items: center;\n      }\n    }\n  }\n  .expandable.shown {\n    height: 10rem;\n    padding: 1.6rem 0;\n\n    @include shadow;\n    transition: all 0.5s ease;\n  }\n}\n",
                    "styleUrl": "./guest-count-input.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "ngControl",
                        "type": "NgControl"
                    },
                    {
                        "name": "elRef",
                        "type": "ElementRef<HTMLElement>"
                    },
                    {
                        "name": "fm",
                        "type": "FocusMonitor"
                    },
                    {
                        "name": "_formField",
                        "type": "MatFormField"
                    },
                    {
                        "name": "parentFormField",
                        "type": "MatFormField"
                    },
                    {
                        "name": "locale",
                        "type": "LocalService"
                    }
                ],
                "line": 103,
                "jsdoctags": [
                    {
                        "name": "ngControl",
                        "type": "NgControl",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "elRef",
                        "type": "ElementRef<HTMLElement>",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "fm",
                        "type": "FocusMonitor",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "_formField",
                        "type": "MatFormField",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "parentFormField",
                        "type": "MatFormField",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "locale",
                        "type": "LocalService",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit",
                "MatFormFieldControl"
            ],
            "accessors": {
                "placeholder": {
                    "name": "placeholder",
                    "setSignature": {
                        "name": "placeholder",
                        "type": "void",
                        "args": [
                            {
                                "name": "plh",
                                "type": ""
                            }
                        ],
                        "returnType": "void",
                        "line": 74,
                        "jsdoctags": [
                            {
                                "name": "plh",
                                "type": "",
                                "tagName": {
                                    "text": "param"
                                }
                            }
                        ]
                    }
                },
                "value": {
                    "name": "value",
                    "setSignature": {
                        "name": "value",
                        "type": "void",
                        "args": [
                            {
                                "name": "obj",
                                "type": ""
                            }
                        ],
                        "returnType": "void",
                        "line": 83,
                        "jsdoctags": [
                            {
                                "name": "obj",
                                "type": "",
                                "tagName": {
                                    "text": "param"
                                }
                            }
                        ]
                    },
                    "getSignature": {
                        "name": "value",
                        "type": "",
                        "returnType": "GuestCountModel",
                        "line": 79
                    }
                },
                "hasValue": {
                    "name": "hasValue",
                    "getSignature": {
                        "name": "hasValue",
                        "type": "",
                        "returnType": "",
                        "line": 101
                    }
                },
                "required": {
                    "name": "required",
                    "setSignature": {
                        "name": "required",
                        "type": "void",
                        "args": [
                            {
                                "name": "req",
                                "type": ""
                            }
                        ],
                        "returnType": "void",
                        "line": 134,
                        "jsdoctags": [
                            {
                                "name": "req",
                                "type": "",
                                "tagName": {
                                    "text": "param"
                                }
                            }
                        ]
                    }
                },
                "str": {
                    "name": "str",
                    "getSignature": {
                        "name": "str",
                        "type": "",
                        "returnType": "",
                        "line": 184
                    }
                },
                "errmsg": {
                    "name": "errmsg",
                    "getSignature": {
                        "name": "errmsg",
                        "type": "",
                        "returnType": "[] | undefined",
                        "line": 196
                    }
                }
            },
            "templateData": "<div\n  (mouseleave)=\"onLeave()\"\n  class=\"main\"\n  [ngClass]=\"{ 'all-border': hasBorder, 'err-border': !!errmsg }\"\n  [attr.aria-describedby]=\"userAriaDescribedBy\"\n  [attr.aria-labelledby]=\"parentFormField?.getLabelId()\"\n>\n  <div class=\"display\" (click)=\"isShowen = !isShowen\">\n    <app-validation-icon\n      class=\"display-prefix\"\n      [icon]=\"icons.profile\"\n      [isFocused]=\"isShowen\"\n      [errors]=\"errmsg\"\n      [placeholder]=\"placeholder\"\n    ></app-validation-icon>\n    <p class=\"display-text\">{{ str }}</p>\n    <i\n      class=\"fa fa-chevron-down display-suffix\"\n      [ngClass]=\"{ shown: isShowen }\"\n    ></i>\n  </div>\n  <ul class=\"expandable\" [ngClass]=\"{ shown: isShowen }\">\n    <li class=\"options\" *ngFor=\"let i of value | keyvalue\">\n      <div class=\"options-title\">{{ \"various.\" + i.key | transloco }}</div>\n      <mat-icon class=\"options-minus clickable\" (click)=\"decrease(i.key)\"\n        >remove</mat-icon\n      >\n\n      <div class=\"options-value\">{{ i.value }}</div>\n      <mat-icon class=\"options-plus clickable\" (click)=\"increase(i.key)\"\n        >add</mat-icon\n      >\n    </li>\n  </ul>\n</div>\n"
        },
        {
            "name": "HeaderComponent",
            "id": "component-HeaderComponent-246e2a69dc126a3bd76c6328dd3b93e2",
            "file": "src/stories/header.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "storybook-header",
            "styleUrls": [
                "./header.css"
            ],
            "styles": [],
            "template": "<header>    <div class=\"wrapper\">\n      <div>\n        <svg width=\"32\" height=\"32\" viewBox=\"0 0 32 32\" xmlns=\"http://www.w3.org/2000/svg\">\n          <g fill=\"none\" fillRule=\"evenodd\">\n            <path\n              d=\"M10 0h12a10 10 0 0110 10v12a10 10 0 01-10 10H10A10 10 0 010 22V10A10 10 0 0110 0z\"\n              fill=\"#FFF\"\n            />\n            <path\n              d=\"M5.3 10.6l10.4 6v11.1l-10.4-6v-11zm11.4-6.2l9.7 5.5-9.7 5.6V4.4z\"\n              fill=\"#555AB9\"\n            />\n            <path\n              d=\"M27.2 10.6v11.2l-10.5 6V16.5l10.5-6zM15.7 4.4v11L6 10l9.7-5.5z\"\n              fill=\"#91BAF8\"\n            />\n          </g>\n        </svg>\n        <h1>Acme</h1>\n      </div>\n      <div>\n        <storybook-button\n          *ngIf=\"user\"\n          size=\"small\"\n          (onClick)=\"onLogout.emit($event)\"\n          label=\"Log out\"\n        ></storybook-button>\n        <storybook-button\n          *ngIf=\"!user\"\n          size=\"small\"\n          (onClick)=\"onLogin.emit($event)\"\n          label=\"Log in\"\n        ></storybook-button>\n        <storybook-button\n          *ngIf=\"!user\"\n          primary\n          size=\"small\"\n          (onClick)=\"onCreateAccount.emit($event)\"\n          label=\"Sign up\"\n        ></storybook-button>\n      </div>\n    </div>\n  </header>",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "user",
                    "defaultValue": "null",
                    "line": 53,
                    "type": "unknown"
                }
            ],
            "outputsClass": [
                {
                    "name": "onCreateAccount",
                    "defaultValue": "new EventEmitter<Event>()",
                    "line": 62,
                    "type": "EventEmitter"
                },
                {
                    "name": "onLogin",
                    "defaultValue": "new EventEmitter<Event>()",
                    "line": 56,
                    "type": "EventEmitter"
                },
                {
                    "name": "onLogout",
                    "defaultValue": "new EventEmitter<Event>()",
                    "line": 59,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, Input, Output, EventEmitter } from '@angular/core';\n\n@Component({\n  selector: 'storybook-header',\n  template: `<header>\n    <div class=\"wrapper\">\n      <div>\n        <svg width=\"32\" height=\"32\" viewBox=\"0 0 32 32\" xmlns=\"http://www.w3.org/2000/svg\">\n          <g fill=\"none\" fillRule=\"evenodd\">\n            <path\n              d=\"M10 0h12a10 10 0 0110 10v12a10 10 0 01-10 10H10A10 10 0 010 22V10A10 10 0 0110 0z\"\n              fill=\"#FFF\"\n            />\n            <path\n              d=\"M5.3 10.6l10.4 6v11.1l-10.4-6v-11zm11.4-6.2l9.7 5.5-9.7 5.6V4.4z\"\n              fill=\"#555AB9\"\n            />\n            <path\n              d=\"M27.2 10.6v11.2l-10.5 6V16.5l10.5-6zM15.7 4.4v11L6 10l9.7-5.5z\"\n              fill=\"#91BAF8\"\n            />\n          </g>\n        </svg>\n        <h1>Acme</h1>\n      </div>\n      <div>\n        <storybook-button\n          *ngIf=\"user\"\n          size=\"small\"\n          (onClick)=\"onLogout.emit($event)\"\n          label=\"Log out\"\n        ></storybook-button>\n        <storybook-button\n          *ngIf=\"!user\"\n          size=\"small\"\n          (onClick)=\"onLogin.emit($event)\"\n          label=\"Log in\"\n        ></storybook-button>\n        <storybook-button\n          *ngIf=\"!user\"\n          primary\n          size=\"small\"\n          (onClick)=\"onCreateAccount.emit($event)\"\n          label=\"Sign up\"\n        ></storybook-button>\n      </div>\n    </div>\n  </header>`,\n  styleUrls: ['./header.css'],\n})\nexport default class HeaderComponent {\n  @Input()\n  user: unknown = null;\n\n  @Output()\n  onLogin = new EventEmitter<Event>();\n\n  @Output()\n  onLogout = new EventEmitter<Event>();\n\n  @Output()\n  onCreateAccount = new EventEmitter<Event>();\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".wrapper {\n  font-family: 'Nunito Sans', 'Helvetica Neue', Helvetica, Arial, sans-serif;\n  border-bottom: 1px solid rgba(0, 0, 0, 0.1);\n  padding: 15px 20px;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n}\n\nsvg {\n  display: inline-block;\n  vertical-align: top;\n}\n\nh1 {\n  font-weight: 900;\n  font-size: 20px;\n  line-height: 1;\n  margin: 6px 0 6px 10px;\n  display: inline-block;\n  vertical-align: top;\n}\n\nbutton + button {\n  margin-left: 10px;\n}\n",
                    "styleUrl": "./header.css"
                }
            ],
            "stylesData": ""
        },
        {
            "name": "HeaderInfoComponent",
            "id": "component-HeaderInfoComponent-dae4f4a2d1cbde9789435e91b7914c14",
            "file": "src/app/common/layout/header-info/header-info.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-header-info",
            "styleUrls": [
                "./header-info.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./header-info.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "email",
                    "defaultValue": "StaticInfo.email",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 14
                },
                {
                    "name": "phone",
                    "defaultValue": "StaticInfo.phoneNumber",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 15
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 12
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\nimport { LocalService } from 'src/app/data/services/local.service';\nimport { StaticInfo } from 'src/app/data/static/main-info';\n\n@Component({\n  selector: 'app-header-info',\n  templateUrl: './header-info.component.html',\n  styleUrls: ['./header-info.component.scss'],\n})\nexport class HeaderInfoComponent implements OnInit {\n\n  ngOnInit(): void {}\n\n  email = StaticInfo.email;\n  phone = StaticInfo.phoneNumber;\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import \"/src/assets/css/abstract/variables\";\n@import \"/src/assets/css/abstract/mixins\";\n.main {\n  display: flex;\n  background-color: black;\n  justify-content: space-between;\n  align-items: center;\n  color: white;\n  padding: 0rem 7.5%;\n  &_socials {\n    flex: 8;\n    display: flex;\n    justify-content: flex-start;\n\n    .social-link {\n      &:not(:last-child) {\n        margin-right: 5rem;\n\n        &:lang(ar) {\n          margin-right: unset;\n          margin-left: 5rem;\n        }\n      }\n    }\n  }\n\n  &_social-icons {\n    margin-right: 5rem;\n\n    &:lang(ar) {\n      margin-right: unset;\n      margin-left: 5rem;\n    }\n  }\n\n  @include res(tab) {\n    display: none;\n  }\n}\n",
                    "styleUrl": "./header-info.component.scss"
                }
            ],
            "stylesData": "",
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"main\">\n  <div class=\"main_socials\">\n    <div class=\"social-link\" socialLink [type]=\"'email'\">\n      <i class=\"fa fa-envelope\"></i>\n      <p>{{ email }}</p>\n    </div>\n    <div class=\"social-link\" socialLink [type]=\"'whatsapp'\">\n      <i class=\"fa fa-whatsapp\"></i>\n      <p>{{ phone }}</p>\n    </div>\n  </div>\n  <app-oursocialmedia class=\"main_social-icons\"></app-oursocialmedia>\n  <app-language-selector></app-language-selector>\n</div>\n\n"
        },
        {
            "name": "HeaderToolBarComponent",
            "id": "component-HeaderToolBarComponent-2ad5351f1c22c3cc23f68c4b81a8b640",
            "file": "src/app/common/layout/header-tool-bar/header-tool-bar.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-header-tool-bar",
            "styleUrls": [
                "./header-tool-bar.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./header-tool-bar.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "contactInfo",
                    "defaultValue": "{\n    phone: StaticInfo.phoneNumber,\n    location: StaticInfo.location,\n    email: StaticInfo.email,\n  }",
                    "type": "object",
                    "optional": false,
                    "description": "",
                    "line": 16
                },
                {
                    "name": "email",
                    "defaultValue": "StaticInfo.email",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 14
                },
                {
                    "name": "isNavOpen",
                    "defaultValue": "false",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 12
                },
                {
                    "name": "phone",
                    "defaultValue": "StaticInfo.phoneNumber",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 15
                },
                {
                    "name": "projectName",
                    "defaultValue": "StaticInfo.projectName",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 11
                }
            ],
            "methodsClass": [
                {
                    "name": "goToProfile",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 29
                },
                {
                    "name": "navigateTo",
                    "args": [
                        {
                            "name": "location",
                            "type": "string"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 31,
                    "jsdoctags": [
                        {
                            "name": "location",
                            "type": "string",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 24
                },
                {
                    "name": "toggleNav",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 26
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { LocalService } from 'src/app/data/services/local.service';\nimport { StaticInfo } from 'src/app/data/static/main-info';\n@Component({\n  selector: 'app-header-tool-bar',\n  templateUrl: './header-tool-bar.component.html',\n  styleUrls: ['./header-tool-bar.component.scss'],\n})\nexport class HeaderToolBarComponent implements OnInit {\n  projectName = StaticInfo.projectName;\n  isNavOpen = false;\n\n  email = StaticInfo.email;\n  phone = StaticInfo.phoneNumber;\n  contactInfo = {\n    phone: StaticInfo.phoneNumber,\n    location: StaticInfo.location,\n    email: StaticInfo.email,\n  };\n\n  constructor(private loc: LocalService, private router: Router) {}\n\n  ngOnInit(): void {}\n\n  toggleNav() {\n    this.isNavOpen = !this.isNavOpen;\n  }\n  goToProfile() {}\n\n  navigateTo(location: string) {\n    this.isNavOpen = false;\n    this.router.navigate([location]);\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import \"/src/assets/css/abstract/mixins\";\n@import \"/src/assets/css/abstract/variables\";\n.nav-wrapper {\n  box-shadow: 0px 3px 15px rgba(0, 0, 0, 0.2);\n  position: relative;\n  width: 100%;\n  top: 0rem;\n  display: grid;\n  z-index: 9;\n  background-color: white;\n  place-items: center;\n}\n.main {\n  height: 8rem;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  position: relative;\n  width: $main-content-width;\n\n  logo {\n    height: 6rem;\n  }\n  app-language-selector {\n    display: none;\n  }\n  &_tool-bar {\n    margin: 0;\n\n    display: flex;\n    justify-content: flex-end;\n    align-items: center;\n    list-style: none;\n    list-style-type: none;\n    z-index: 9999;\n    li a {\n      font-size: 2rem;\n      font-weight: 400;\n      font-family: var(--primary-font);\n\n      &:lang(ar) {\n        font-size: 1.5rem;\n        font-family: var(--primary-font);\n      }\n    }\n    & > * {\n      cursor: pointer;\n    }\n    *:not(:last-child) {\n      margin-right: 5rem;\n    }\n    &:lang(ar) {\n      *:not(:last-child) {\n        margin-right: unset;\n        margin-left: 5rem;\n      }\n    }\n  }\n  &_mobile-tool-bar {\n    display: none;\n  }\n  .profile-toggler {\n    display: none;\n    cursor: pointer;\n    i {\n      font-size: 4rem;\n      color: #20aed5;\n    }\n  }\n  .nav-toggler {\n    padding: 5px;\n    background-color: transparent;\n    cursor: pointer;\n    height: 39px;\n    display: none;\n    border: none;\n  }\n  .nav-toggler span,\n  .nav-toggler span:before,\n  .nav-toggler span:after {\n    width: 28px;\n    height: 3px;\n    background-color: #20aed5;\n    display: block;\n    transition: 0.3s;\n  }\n  .nav-toggler span:before {\n    content: \"\";\n    transform: translateY(-9px);\n  }\n  .nav-toggler span:after {\n    content: \"\";\n    transform: translateY(6px);\n  }\n  .nav-toggler.toggler-open span {\n    background-color: transparent;\n  }\n  .nav-toggler.toggler-open span:before {\n    transform: translateY(0px) rotate(45deg);\n  }\n  .nav-toggler.toggler-open span:after {\n    transform: translateY(-3px) rotate(-45deg);\n  }\n  @include respondMax(1100px) {\n    width: 85%;\n  }\n  @include res(tab) {\n    width: 100vw;\n\n    display: flex;\n    justify-content: space-around;\n    .nav-toggler {\n      display: block;\n    }\n    app-language-selector {\n      display: unset;\n    }\n\n    .main_tool-bar {\n      display: none;\n    }\n    .main__profile-links.open {\n      overflow: visible;\n      max-height: 100vh;\n    }\n    .main_mobile-tool-bar {\n      position: absolute;\n      width: 100%;\n      height: 0vh;\n      left: 0;\n      top: 8rem;\n\n      display: flex;\n      flex-direction: column;\n      justify-content: space-between;\n      align-items: flex-start;\n\n      background-color: rgba($color: #20aed5, $alpha: 1);\n\n      opacity: 0;\n      overflow: hidden;\n\n      transition: all 0.2s ease-out;\n\n      padding: 0rem;\n\n      .navLinks {\n        list-style: none;\n        li {\n          width: 100%;\n          text-align: start;\n          margin-bottom: 1.5rem;\n\n          a {\n            font-size: 4rem;\n            color: white;\n            font-weight: 400;\n          }\n        }\n      }\n      .contactLinks {\n        list-style: none;\n        li {\n          display: flex;\n          align-items: center;\n          cursor: pointer;\n          i {\n            margin-right: 1.5rem;\n            font-size: 2.5rem;\n            color: white;\n            &:lang(ar) {\n              margin-right: unset;\n              margin-left: 1.5rem;\n            }\n          }\n\n          p {\n            direction: ltr;\n            color: white;\n            text-decoration: none;\n            font-size: 2.5rem;\n            text-align: center;\n\n            font-weight: 400;\n          }\n        }\n      }\n    }\n    .main_mobile-tool-bar.open {\n      height: calc(100vh - 8rem);\n      overflow: visible;\n      opacity: 1;\n      padding: 5rem 11% 5rem 11%;\n    }\n  }\n}\n",
                    "styleUrl": "./header-tool-bar.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "loc",
                        "type": "LocalService"
                    },
                    {
                        "name": "router",
                        "type": "Router"
                    }
                ],
                "line": 20,
                "jsdoctags": [
                    {
                        "name": "loc",
                        "type": "LocalService",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "router",
                        "type": "Router",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"nav-wrapper\">\n  <nav class=\"main\">\n    <button\n      class=\"nav-toggler\"\n      [ngClass]=\"isNavOpen ? 'toggler-open' : ''\"\n      (click)=\"toggleNav()\"\n    >\n      <span></span>\n    </button>\n    <logo></logo>\n    <app-language-selector></app-language-selector>\n    <ul class=\"main_tool-bar\">\n      <li>\n        <a class=\"navlink\" (click)=\"navigateTo('/')\">{{\n          \"buttons.home\" | transloco\n        }}</a>\n      </li>\n\n      <li>\n        <a class=\"navlink\" (click)=\"navigateTo('/offers')\">{{\n          \"buttons.trips\" | transloco\n        }}</a>\n      </li>\n      <li>\n        <a class=\"navlink\" (click)=\"navigateTo('/about-us')\">{{\n          \"buttons.aboutus\" | transloco\n        }}</a>\n      </li>\n      <!-- <li>\n        <a class=\"navlink\" [routerLink]=\"['/booking/11']\">{{\n          \"buttons.destination\" | transloco\n        }}</a>\n      </li> -->\n      <!-- <li>\n        <a class=\"navlink\">{{ \"buttons.medic\" | transloco }}</a>\n      </li> -->\n    </ul>\n    <div class=\"main_mobile-tool-bar\" [ngClass]=\"isNavOpen ? 'open' : ''\">\n      <ul class=\"navLinks\">\n        <li>\n          <a class=\"navlink\" (click)=\"navigateTo('/')\">{{\n            \"buttons.home\" | transloco\n          }}</a>\n        </li>\n\n        <li>\n          <a class=\"navlink\" (click)=\"navigateTo('/offers')\">{{\n            \"buttons.trips\" | transloco\n          }}</a>\n        </li>\n        <li>\n          <a class=\"navlink\" (click)=\"navigateTo('/about-us')\">{{\n            \"buttons.aboutus\" | transloco\n          }}</a>\n        </li>\n        <!-- <li>\n          <a class=\"navlink\" [routerLink]=\"['/booking/11']\">{{\n            \"buttons.destination\" | transloco\n          }}</a>\n        </li>\n        <li>\n          <a class=\"navlink\">{{ \"buttons.medic\" | transloco }}</a>\n        </li> -->\n      </ul>\n      <ul class=\"contactLinks\">\n        <li socialLink [type]=\"'whatsapp'\">\n          <i class=\"fa fa-phone\"></i>\n          <p>{{ contactInfo.phone }}</p>\n        </li>\n        <li socialLink [type]=\"'email'\">\n          <i class=\"fa fa-envelope\"></i>\n          <p>{{ contactInfo.email }}</p>\n        </li>\n      </ul>\n    </div>\n  </nav>\n</div>\n"
        },
        {
            "name": "HorizontalListviewComponent",
            "id": "component-HorizontalListviewComponent-08645612eea64cb9b3a669137d953e60",
            "file": "src/app/common/widgets/horizontal-listview/horizontal-listview.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-horizontal-listview",
            "styleUrls": [
                "./horizontal-listview.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./horizontal-listview.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "images",
                    "line": 12,
                    "type": "string[] | ImageModel[]"
                }
            ],
            "outputsClass": [
                {
                    "name": "itemClicked",
                    "defaultValue": "new EventEmitter<number>()",
                    "line": 14,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [
                {
                    "name": "currentSwiperIndex",
                    "defaultValue": "0",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 11
                }
            ],
            "methodsClass": [
                {
                    "name": "imagesUrls",
                    "args": [],
                    "optional": false,
                    "returnType": "string[]",
                    "typeParameters": [],
                    "line": 20
                },
                {
                    "name": "isStringList",
                    "args": [
                        {
                            "name": "images",
                            "type": "string[] | ImageModel[]"
                        }
                    ],
                    "optional": false,
                    "returnType": "string[]",
                    "typeParameters": [],
                    "line": 27,
                    "jsdoctags": [
                        {
                            "name": "images",
                            "type": "string[] | ImageModel[]",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 18
                },
                {
                    "name": "onImageClicked",
                    "args": [
                        {
                            "name": "index",
                            "type": "number"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 24,
                    "jsdoctags": [
                        {
                            "name": "index",
                            "type": "number",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { ImageModel } from 'src/app/data/models/ImageModel';\nimport { MetaService } from 'src/app/data/services/meta.service';\n\n@Component({\n  selector: 'app-horizontal-listview',\n  templateUrl: './horizontal-listview.component.html',\n  styleUrls: ['./horizontal-listview.component.scss'],\n})\nexport class HorizontalListviewComponent implements OnInit {\n  currentSwiperIndex: number = 0;\n  @Input() images: string[] | ImageModel[];\n\n  @Output() itemClicked = new EventEmitter<number>();\n\n  constructor(private meta: MetaService) {}\n\n  ngOnInit(): void {}\n\n  imagesUrls(): string[] {\n    if (this.isStringList(this.images)) return this.images;\n    else return this.images.map((image: ImageModel) => image.url);\n  }\n  onImageClicked(index: number) {\n    this.itemClicked.emit(index);\n  }\n  isStringList(images: string[] | ImageModel[]): images is string[] {\n    return (images as ImageModel[])[0].url === undefined;\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".h-listview {\n  width: 100%;\n  height: 100%;\n\n  .slider {\n    width: 100%;\n    &::after {\n      content: \"\";\n      position: absolute;\n      z-index: 1;\n      top: 0;\n      right: 0;\n      pointer-events: none;\n      background-image: linear-gradient(\n        to right,\n        rgba(255, 255, 255, 0),\n        rgba(255, 255, 255, 1) 90%\n      );\n      width: 25%;\n      height: 100%;\n    }\n    &:lang(ar) {\n      &::after {\n        right: unset;\n        left: 0px;\n        background-image: linear-gradient(\n          to left,\n          rgba(255, 255, 255, 0),\n          rgba(255, 255, 255, 1) 90%\n        );\n      }\n    }\n    .slide {\n      border-radius: 15px;\n      overflow: hidden;\n      .image {\n        height: 100%;\n        object-fit: cover;\n      }\n    }\n  }\n}\n",
                    "styleUrl": "./horizontal-listview.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "meta",
                        "type": "MetaService"
                    }
                ],
                "line": 14,
                "jsdoctags": [
                    {
                        "name": "meta",
                        "type": "MetaService",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"h-listview\">\n  <swiper\n    class=\"slider\"\n    [slidesPerView]=\"3\"\n    [spaceBetween]=\"25\"\n    [(index)]=\"currentSwiperIndex\"\n    [grabCursor]=\"true\"\n  >\n    <ng-template\n      swiperSlide\n      class=\"slide\"\n      *ngFor=\"let image of imagesUrls(); let i = index\"\n      style=\"width: 100%; height: 100%; cursor: pointer\"\n    >\n      <img\n        class=\"image\"\n        [src]=\"image\"\n        (click)=\"onImageClicked(i)\"\n        style=\"width: 100%; height: 100%; object-fit: cover; cursor: pointer\"\n      />\n    </ng-template>\n  </swiper>\n</div>\n"
        },
        {
            "name": "LanguageSelectorComponent",
            "id": "component-LanguageSelectorComponent-6e9a66900553153d2575cfc70ad4b5ad",
            "file": "src/app/common/layout/language-selector/language-selector.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-language-selector",
            "styleUrls": [
                "./language-selector.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./language-selector.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "localService",
                    "type": "LocalService",
                    "optional": false,
                    "description": "",
                    "line": 11,
                    "modifierKind": [
                        114
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 13
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\nimport { LocalService } from 'src/app/data/services/local.service';\n\n@Component({\n  selector: 'app-language-selector',\n  templateUrl: './language-selector.component.html',\n  styleUrls: ['./language-selector.component.scss']\n})\nexport class LanguageSelectorComponent implements OnInit {\n\n  constructor(public localService : LocalService){}\n\n  ngOnInit(): void {\n  }\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import \"/src/assets/css/abstract/mixins\";\n@import \"/src/assets/css/abstract/variables\";\n\n.language-selector {\n  display: flex;\n  cursor: pointer;\n  i {\n    font-size: 2rem;\n    color: $accent;\n  }\n  p {\n    font-size: 1.5rem;\n    font-weight: bold;\n    font-family: var(--primary-font);\n    text-transform: capitalize;\n    margin: 0rem 1rem;\n  }\n}\nbutton {\n  font-family: \"Source Sans Pro\";\n  font-weight: 400;\n  &:lang(ar) {\n    font-family: \"Tajawal\";\n  }\n}\n",
                    "styleUrl": "./language-selector.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "localService",
                        "type": "LocalService"
                    }
                ],
                "line": 9,
                "jsdoctags": [
                    {
                        "name": "localService",
                        "type": "LocalService",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"language-selector\" [matMenuTriggerFor]=\"menu\">\n  <i class=\"fa fa-globe\"></i>\n  <p class=\"language-name\">{{ localService.locale | language }}</p>\n  <i class=\"fa fa-chevron-down\"></i>\n</div>\n<mat-menu #menu=\"matMenu\">\n  <button mat-menu-item (click)=\"localService.changeLangTo('en')\">\n    {{ \"en\" | language }}\n  </button>\n  <button mat-menu-item (click)=\"localService.changeLangTo('ar')\" lang=\"ar\">\n    {{ \"ar\" | language }}\n  </button>\n</mat-menu>\n"
        },
        {
            "name": "LoaderComponent",
            "id": "component-LoaderComponent-ea563bb47eee5bf1ce671f6ef9f0e85b",
            "file": "src/app/common/widgets/loader/loader.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-loader",
            "styleUrls": [
                "./loader.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./loader.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "hasData",
                    "defaultValue": "true",
                    "line": 16
                },
                {
                    "name": "isLoading",
                    "defaultValue": "false",
                    "line": 15
                },
                {
                    "name": "loadingRef",
                    "line": 12,
                    "type": "TemplateRef<any>"
                },
                {
                    "name": "noContentRef",
                    "line": 13,
                    "type": "TemplateRef<any>"
                },
                {
                    "name": "viewRef",
                    "line": 11,
                    "type": "TemplateRef<any>"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "animationFiles",
                    "defaultValue": "[\n    'assets/animation/airplane.json',\n    'assets/animation/luggage.json',\n    'assets/animation/car.json',\n  ]",
                    "type": "string[]",
                    "optional": false,
                    "description": "",
                    "line": 19
                },
                {
                    "name": "currentAnimationIndex",
                    "defaultValue": "0",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 18
                },
                {
                    "name": "options",
                    "defaultValue": "new BehaviorSubject<AnimationOptions>({\n    autoplay: false,\n    loop: 1,\n    path: this.animationFiles[this.currentAnimationIndex],\n  })",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 25
                }
            ],
            "methodsClass": [
                {
                    "name": "animationCreated",
                    "args": [
                        {
                            "name": "animationItem",
                            "type": "AnimationItem"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 43,
                    "jsdoctags": [
                        {
                            "name": "animationItem",
                            "type": "AnimationItem",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 50
                },
                {
                    "name": "onLoopComplete",
                    "args": [
                        {
                            "name": "event",
                            "type": "BMCompleteLoopEvent"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 30,
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "BMCompleteLoopEvent",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "updateAnimationFile",
                    "args": [
                        {
                            "name": "newPath",
                            "type": "string"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 37,
                    "jsdoctags": [
                        {
                            "name": "newPath",
                            "type": "string",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, Input, OnInit, TemplateRef } from '@angular/core';\nimport { AnimationItem } from 'lottie-web';\nimport { AnimationOptions, BMCompleteLoopEvent } from 'ngx-lottie';\nimport { BehaviorSubject } from 'rxjs';\n@Component({\n  selector: 'app-loader',\n  templateUrl: './loader.component.html',\n  styleUrls: ['./loader.component.scss'],\n})\nexport class LoaderComponent implements OnInit {\n  @Input() viewRef: TemplateRef<any>;\n  @Input() loadingRef: TemplateRef<any>;\n  @Input() noContentRef: TemplateRef<any>;\n\n  @Input() isLoading = false;\n  @Input() hasData = true;\n\n  currentAnimationIndex = 0;\n  animationFiles: string[] = [\n    'assets/animation/airplane.json',\n    'assets/animation/luggage.json',\n    'assets/animation/car.json',\n  ];\n\n  options = new BehaviorSubject<AnimationOptions>({\n    autoplay: false,\n    loop: 1,\n    path: this.animationFiles[this.currentAnimationIndex],\n  });\n  onLoopComplete(event: BMCompleteLoopEvent) {\n    if (this.currentAnimationIndex + 1 >= this.animationFiles.length) {\n      this.currentAnimationIndex = 0;\n    } else this.currentAnimationIndex++;\n\n    this.updateAnimationFile(this.animationFiles[this.currentAnimationIndex]);\n  }\n  updateAnimationFile(newPath: string): void {\n    this.options.next({\n      ...this.options.value,\n      path: newPath,\n    });\n  }\n  animationCreated(animationItem: AnimationItem): void {\n    animationItem.setSpeed(2);\n    animationItem.play();\n  }\n\n  constructor() {}\n\n  ngOnInit(): void {}\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import \"/src/assets/css/abstract/variables\";\n.main {\n  display: flex;\n  justify-content: center;\n  align-items: flex-start;\n  height: 100%;\n  width: 100%;\n  .splash-screen__content {\n    background-color: rgba($color: $accent, $alpha: 1);\n    clip-path: circle();\n    z-index: 99999;\n    height: 40rem;\n    width: 40rem;\n  }\n}\n.noData {\n  height: 100%;\n  width: 100%;\n  background: white;\n  display: grid;\n  place-items: center;\n  font-size: 5rem;\n}\n",
                    "styleUrl": "./loader.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [],
                "line": 46
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div *ngIf=\"isLoading && !loadingRef\" class=\"main\">\n  <!-- <div class=\"main\"> -->\n  <div class=\"splash-screen__content\">\n    <ng-lottie\n      [options]=\"options | async\"\n      (animationCreated)=\"animationCreated($event)\"\n      (loopComplete)=\"onLoopComplete($event)\"\n    ></ng-lottie>\n  </div>\n</div>\n<template *ngIf=\"!isLoading\" [ngTemplateOutlet]=\"viewRef\"> </template>\n<template *ngIf=\"isLoading && loadingRef\" [ngTemplateOutlet]=\"loadingRef\">\n</template>\n<template\n  *ngIf=\"!isLoading && !hasData && noContentRef\"\n  [ngTemplateOutlet]=\"noContentRef\"\n>\n</template>\n<app-nocontent *ngIf=\"!isLoading && !hasData && !noContentRef\"> </app-nocontent>\n"
        },
        {
            "name": "LoginComponent",
            "id": "component-LoginComponent-bd505e51d3763eb106fcc7a2a4096df4",
            "file": "src/app/pages/user/login/login.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-login",
            "styleUrls": [
                "./login.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./login.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "enum",
                    "defaultValue": "LoginEnum",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 19
                },
                {
                    "name": "form",
                    "defaultValue": "new FormGroup({})",
                    "type": "FormGroup",
                    "optional": false,
                    "description": "",
                    "line": 20
                },
                {
                    "name": "route",
                    "type": "ActivatedRoute",
                    "optional": false,
                    "description": "",
                    "line": 21,
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "type",
                    "defaultValue": "LoginEnum.login",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 18
                }
            ],
            "methodsClass": [
                {
                    "name": "_initForm",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 35
                },
                {
                    "name": "getError",
                    "args": [
                        {
                            "name": "ctrlName",
                            "type": "string"
                        }
                    ],
                    "optional": false,
                    "returnType": "{}",
                    "typeParameters": [],
                    "line": 66,
                    "jsdoctags": [
                        {
                            "name": "ctrlName",
                            "type": "string",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "hasError",
                    "args": [
                        {
                            "name": "ctrlName",
                            "type": "string"
                        }
                    ],
                    "optional": false,
                    "returnType": "boolean",
                    "typeParameters": [],
                    "line": 86,
                    "jsdoctags": [
                        {
                            "name": "ctrlName",
                            "type": "string",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 24
                },
                {
                    "name": "submitForm",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 62
                },
                {
                    "name": "switchToLogin",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 104
                },
                {
                    "name": "switchToSignUp",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 108
                },
                {
                    "name": "switchToTerm",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 101
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\nimport {\n  FormControl,\n  FormGroup,\n  FormGroupDirective,\n  NgForm,\n  Validators,\n} from '@angular/forms';\nimport { ErrorStateMatcher } from '@angular/material/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { LoginEnum } from 'src/app/data/utils/enums';\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss'],\n})\nexport class LoginComponent implements OnInit {\n  type = LoginEnum.login;\n  enum = LoginEnum;\n  form: FormGroup = new FormGroup({});\n  constructor(public route: ActivatedRoute) {\n    // this._initForm();\n  }\n  ngOnInit(): void {\n    this.route.paramMap.subscribe((f) => {\n      const x = f.get('isLogin') == 'true' ? true : false;\n      if (x) {\n        this.switchToLogin();\n      } else {\n        this.switchToSignUp();\n      }\n    });\n  }\n\n  _initForm() {\n    if (this.type == LoginEnum.signup) {\n      this.form = new FormGroup({\n        firstName: new FormControl('', [\n          Validators.minLength(3),\n          Validators.required,\n        ]),\n        lastName: new FormControl('', [\n          Validators.minLength(3),\n          Validators.required,\n        ]),\n        email: new FormControl('', [Validators.email, Validators.required]),\n        password: new FormControl('', Validators.required),\n        accept: new FormControl(true, [Validators.requiredTrue]),\n      });\n    } else {\n      this.form = new FormGroup({\n        email: new FormControl('', [Validators.email, Validators.required]),\n        password: new FormControl('', Validators.required),\n      });\n    }\n    // this._initControls();\n  }\n  // controls: { name: string; control: FormControl }[] = [];\n  // get ctrl() {\n  //   return this.controls.map((e) => e.name);\n  // }\n  submitForm() {\n    if (!this.form.valid) return;\n    console.log(this.form.value);\n  }\n  getError(ctrlName: string) {\n    const lst: string[] = [];\n    const ctrl = this.form.controls[ctrlName] as FormControl;\n    for (const key in ctrl.errors) {\n      switch (key) {\n        case 'email':\n          lst.push('Please provide a valid Email');\n          break;\n        default:\n          if (ctrlName == 'accept') {\n            lst.push('Please please Accept our Privacy Policy');\n          } else {\n            lst.push('Please provide a value');\n          }\n          break;\n      }\n    }\n    return lst;\n  }\n\n  hasError(ctrlName: string): boolean {\n    const val = this.getError(ctrlName).length > 0;\n    return val;\n  }\n  // _initControls(): { name: string; control: FormControl }[] {\n  //   console.log('called');\n  //   for (const ctrl in this.form?.controls) {\n  //     this.controls.push({\n  //       name: ctrl,\n  //       control: this.form?.controls[ctrl] as FormControl,\n  //     });\n  //   }\n  //   return this.controls;\n  // }\n\n  switchToTerm() {\n    this.type = LoginEnum.privacy;\n  }\n  switchToLogin() {\n    this.type = LoginEnum.login;\n    this._initForm();\n  }\n  switchToSignUp() {\n    this.type = LoginEnum.signup;\n    this._initForm();\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import \"/src/assets/css/abstract/variables\";\n@import \"/src/assets/css/abstract/mixins\";\n\n$bd: $border-radius * 3;\n.main {\n  height: 100vh;\n  background: $login-bk;\n  display: grid;\n  grid-template-columns: repeat(2, 1fr);\n  .side {\n    text-align: center;\n    grid-column: 2/ 2;\n    height: 100%;\n    border-radius: $bd 0 0 $bd;\n    background-color: white;\n    z-index: 1;\n    @include shadow;\n    padding: 15%;\n  }\n  .privacy {\n    display: flex;\n    flex-direction: column;\n    justify-content: space-around;\n    .main-btn {\n      align-self: center;\n      border-radius: 5rem;\n      padding: 2rem;\n    }\n  }\n  mat-form-field {\n    font-size: 1.4rem;\n  }\n  .form {\n    display: grid;\n    align-content: center;\n    gap: 0.8rem;\n    grid-template-columns: repeat(2, 1fr);\n    :not(.name) {\n      grid-column: span 2;\n    }\n    .title {\n      margin-bottom: 2rem;\n    }\n    .main-btn {\n      padding: 1rem;\n      font-size: 3rem;\n    }\n    .check {\n      display: flex;\n    }\n  }\n  .form.login {\n    gap: 4rem;\n  }\n  img {\n    position: absolute;\n    align-self: center;\n    height: 80%;\n    object-fit: cover;\n  }\n}\n",
                    "styleUrl": "./login.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "route",
                        "type": "ActivatedRoute"
                    }
                ],
                "line": 20,
                "jsdoctags": [
                    {
                        "name": "route",
                        "type": "ActivatedRoute",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"main\">\n  <img src=\"assets/images/bk/login.png\" alt=\"\" />\n  <ng-container *ngIf=\"type == enum.signup; then signup\"></ng-container>\n  <ng-container *ngIf=\"type == enum.login; then login\"></ng-container>\n  <ng-container *ngIf=\"type == enum.privacy; then privacy\"></ng-container>\n</div>\n<ng-template #privacy>\n  <div class=\"side privacy\">\n    <h1 class=\"term-header\">Terms of service and privacy policy</h1>\n    <h6>\n      Lorem ipsum dolor sit amet consectetur, adipisicing elit. Labore vero\n      maiores suscipit debitis error. Quam quidem repellendus, sequi quasi\n      dignissimos quia vero veritatis aut! Iusto repudiandae explicabo\n      asperiores modi necessitatibus. Lorem ipsum dolor sit amet, consectetur\n      adipisicing elit. Nesciunt perspiciatis laboriosam cumque qui numquam\n      consequatur labore, iure explicabo quibusdam natus in quas expedita illum\n      unde ipsa sunt quis nihil aut. Lorem ipsum dolor sit, amet consectetur\n      adipisicing elit. At voluptatibus, dolores omnis debitis quae sint dolor\n      accusantium adipisci quam impedit neque laudantium excepturi tempora et\n      culpa minima enim ratione nostrum! Lorem ipsum dolor sit amet consectetur\n      adipisicing elit. Natus non distinctio facilis autem rem fuga officiis\n      alias? Eius ratione itaque corporis deserunt esse doloribus quo, nulla\n      illum quaerat voluptatibus ab!\n    </h6>\n    <button class=\"main-btn\" (click)=\"switchToSignUp()\">&#8678;</button>\n  </div>\n</ng-template>\n\n<!-- login -->\n<ng-template #login>\n  <form class=\"form login side\" [formGroup]=\"form\">\n    <h2 class=\"title grey\">Sign In</h2>\n    <mat-form-field class=\"ctrl\" appearance=\"outline\">\n      <mat-label>Email</mat-label>\n      <input\n        type=\"email\"\n        matInput\n        formControlName=\"email\"\n        placeholder=\"Ex. pat@example.com\"\n      />\n      <mat-error *ngIf=\"hasError('email')\">\n        <div class=\"errs\" *ngFor=\"let err of getError('email')\">\n          {{ err }}\n        </div>\n      </mat-error>\n    </mat-form-field>\n    <mat-form-field class=\"ctrl\" appearance=\"outline\">\n      <mat-label>Create Password</mat-label>\n      <input\n        type=\"password\"\n        matInput\n        formControlName=\"password\"\n        placeholder=\"ANYTHING BUT 123456789\"\n      />\n      <mat-error *ngIf=\"hasError('password')\">\n        <div class=\"errs\" *ngFor=\"let err of getError('password')\">\n          {{ err }}\n        </div>\n      </mat-error>\n    </mat-form-field>\n    <button class=\"main-btn\" (click)=\"submitForm()\">Sign In</button>\n    <h6>\n      New User ?\n      <a class=\"hyper-link\" (click)=\"switchToSignUp()\">Create an account</a>\n    </h6>\n  </form>\n</ng-template>\n<!-- sing Up -->\n<ng-template #signup>\n  <form class=\"form signup side\" [formGroup]=\"form\">\n    <h2 class=\"title grey\">Get Started</h2>\n    <mat-form-field class=\"ctrl name\" appearance=\"outline\">\n      <mat-label>First Name</mat-label>\n      <input\n        type=\"text\"\n        matInput\n        formControlName=\"firstName\"\n        placeholder=\"Ex. John\"\n      />\n      <mat-error *ngIf=\"hasError('firstName')\">\n        <div class=\"errs\" *ngFor=\"let err of getError('firstName')\">\n          {{ err }}\n        </div>\n      </mat-error>\n    </mat-form-field>\n    <mat-form-field class=\"ctrl name\" appearance=\"outline\">\n      <mat-label>Last Name</mat-label>\n      <input\n        type=\"text\"\n        matInput\n        formControlName=\"lastName\"\n        placeholder=\"Ex. Marry\"\n      />\n      <mat-error *ngIf=\"hasError('lastName')\">\n        <div class=\"errs\" *ngFor=\"let err of getError('lastName')\">\n          {{ err }}\n        </div>\n      </mat-error>\n    </mat-form-field>\n    <mat-form-field class=\"ctrl\" appearance=\"outline\">\n      <mat-label>Email</mat-label>\n      <input\n        type=\"email\"\n        matInput\n        formControlName=\"email\"\n        placeholder=\"Ex. pat@example.com\"\n      />\n      <mat-error *ngIf=\"hasError('email')\">\n        <div class=\"errs\" *ngFor=\"let err of getError('email')\">\n          {{ err }}\n        </div>\n      </mat-error>\n    </mat-form-field>\n    <mat-form-field class=\"ctrl\" appearance=\"outline\">\n      <mat-label>Create Password</mat-label>\n      <input\n        type=\"password\"\n        matInput\n        formControlName=\"password\"\n        placeholder=\"ANYTHING BUT 123456789\"\n      />\n      <mat-error *ngIf=\"hasError('password')\">\n        <div class=\"errs\" *ngFor=\"let err of getError('password')\">\n          {{ err }}\n        </div>\n      </mat-error>\n    </mat-form-field>\n    <h6 class=\"align-start\">Password must be at least 8 characters long.</h6>\n    <mat-checkbox class=\"align-start\" formControlName=\"accept\">\n      <p>\n        I accept the\n        <a class=\"hyper-link\" (click)=\"switchToTerm()\">Terms of service</a> and\n        privacy policy\n      </p>\n    </mat-checkbox>\n    <mat-error *ngIf=\"hasError('accept')\">\n      <div class=\"errs\" *ngFor=\"let err of getError('accept')\">\n        {{ err }}\n      </div>\n    </mat-error>\n\n    <button class=\"main-btn\" (click)=\"submitForm()\">Sign Up</button>\n    <h6>\n      Already a member?\n      <a class=\"hyper-link\" (click)=\"switchToLogin()\">Sign in</a>\n    </h6>\n  </form>\n</ng-template>\n"
        },
        {
            "name": "LogoComponent",
            "id": "component-LogoComponent-31e620ad3b62ee2f11a57c163f88751b",
            "file": "src/app/common/widgets/logo/logo.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "logo",
            "styleUrls": [
                "./logo.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./logo.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "logo",
                    "args": [],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 14
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 13
                },
                {
                    "name": "onLogoClick",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 19
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { LocalService } from 'src/app/data/services/local.service';\n\n@Component({\n  selector: 'logo',\n  templateUrl: './logo.component.html',\n  styleUrls: ['./logo.component.scss'],\n})\nexport class LogoComponent implements OnInit {\n  constructor(private localeService: LocalService, private router: Router) {}\n\n  ngOnInit(): void {}\n  logo(): string {\n    if (this.localeService.locale == 'ar')\n      return '../../../../assets/images/png/arabic-logo.png';\n    else return '../../../../assets/images/png/english-logo.png';\n  }\n  onLogoClick() {\n    this.router.navigate(['/']);\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".logo {\n  cursor: pointer;\n\n  height: 100%;\n\n  img {\n    height: 100%;\n\n    object-fit: contain;\n  }\n}\n",
                    "styleUrl": "./logo.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "localeService",
                        "type": "LocalService"
                    },
                    {
                        "name": "router",
                        "type": "Router"
                    }
                ],
                "line": 10,
                "jsdoctags": [
                    {
                        "name": "localeService",
                        "type": "LocalService",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "router",
                        "type": "Router",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"logo\" (click)=\"onLogoClick()\">\n  <img [src]=\"logo()\" />\n</div>\n"
        },
        {
            "name": "MainLandingComponent",
            "id": "component-MainLandingComponent-ef513e0b7bef26d721574e7951d02e4f",
            "file": "src/app/pages/main-landing/main-landing.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-main-landing",
            "styleUrls": [
                "./main-landing.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./main-landing.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 13
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\nimport { CityService } from 'src/app/data/services/city.service';\nimport { MetaService } from 'src/app/data/services/meta.service';\n\n@Component({\n  selector: 'app-main-landing',\n  templateUrl: './main-landing.component.html',\n  styleUrls: ['./main-landing.component.scss'],\n})\nexport class MainLandingComponent implements OnInit {\n  constructor() {}\n\n  ngOnInit(): void {}\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".main {\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n  position: relative;\n}\n",
                    "styleUrl": "./main-landing.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [],
                "line": 10
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"main\">\n  <app-search-panel></app-search-panel>\n  <app-section-cities></app-section-cities>\n  <app-section-offers></app-section-offers>\n</div>"
        },
        {
            "name": "ManageBookingComponent",
            "id": "component-ManageBookingComponent-4522fedacc9d5da828eef21be6867780",
            "file": "src/app/pages/manage-booking/manage-booking.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-manage-booking",
            "styleUrls": [
                "./manage-booking.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./manage-booking.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "activatedRoute",
                    "type": "ActivatedRoute",
                    "optional": false,
                    "description": "",
                    "line": 12,
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "bookingId",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 16
                },
                {
                    "name": "loading",
                    "defaultValue": "false",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 18
                },
                {
                    "name": "operation",
                    "type": "\"cancel\" | \"confirm\"",
                    "optional": false,
                    "description": "",
                    "line": 17
                },
                {
                    "name": "options",
                    "defaultValue": "{\n    autoplay: true,\n    loop: 0,\n    path: '../../../../assets/animation/booking_submit_animation2.json',\n  }",
                    "type": "object",
                    "optional": false,
                    "description": "",
                    "line": 19
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 24
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { BookingService } from 'src/app/data/services/booking.service';\n\n@Component({\n  selector: 'app-manage-booking',\n  templateUrl: './manage-booking.component.html',\n  styleUrls: ['./manage-booking.component.scss'],\n})\nexport class ManageBookingComponent implements OnInit {\n  constructor(\n    public activatedRoute: ActivatedRoute,\n    private bookingService: BookingService\n  ) {}\n\n  bookingId: string;\n  operation: 'cancel' | 'confirm';\n  loading = false;\n  options = {\n    autoplay: true,\n    loop: 0,\n    path: '../../../../assets/animation/booking_submit_animation2.json',\n  };\n  ngOnInit(): void {\n    this.operation = this.activatedRoute.snapshot.data.manageBookingData.type;\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".manage-booking {\n  display: flex;\n  justify-content: center;\n\n  min-height: 100vh;\n  &__content {\n    width: 100rem;\n\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: flex-start;\n\n    padding: 5%;\n\n    .animation {\n      width: 20rem;\n      height: 20rem;\n    }\n\n    .operation-title {\n      h2 {\n        font-size: 3rem;\n      }\n    }\n    .operation-description {\n      margin-top: 2rem;\n      p {\n        font-size: 1.5rem;\n        color: #757575;\n        text-align: center;\n      }\n    }\n    button {\n      margin-top: 3rem;\n      p {\n        font-size: 1.5rem;\n        text-align: center;\n      }\n    }\n  }\n}\n",
                    "styleUrl": "./manage-booking.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "activatedRoute",
                        "type": "ActivatedRoute"
                    },
                    {
                        "name": "bookingService",
                        "type": "BookingService"
                    }
                ],
                "line": 10,
                "jsdoctags": [
                    {
                        "name": "activatedRoute",
                        "type": "ActivatedRoute",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "bookingService",
                        "type": "BookingService",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"manage-booking\">\n  <div class=\"manage-booking__content\">\n    <div class=\"animation\">\n      <ng-lottie [options]=\"options\"></ng-lottie>\n    </div>\n    <div class=\"operation-title\">\n      <h2 *ngIf=\"operation === 'confirm'; else titleElse\">\n        {{ \"booking.confirmed\" | transloco }}\n      </h2>\n      <ng-template #titleElse>\n        <h2>\n          {{ \"booking.canceled\" | transloco }}\n        </h2>\n      </ng-template>\n    </div>\n    <div class=\"operation-description\">\n      <p *ngIf=\"operation === 'confirm'; else descriptionElse\">\n        {{ \"booking.confirmationMessage\" | transloco }}\n      </p>\n      <ng-template #descriptionElse>\n        <p>\n          {{ \"booking.cancelationMessage\" | transloco }}\n        </p>\n      </ng-template>\n    </div>\n    <button class=\"main-btn\" [routerLink]=\"['/']\">\n      <p>Home</p>\n    </button>\n  </div>\n</div>\n"
        },
        {
            "name": "MyControlAbstract",
            "id": "component-MyControlAbstract-6f84e99b6064f360c4092e660730fd9c",
            "file": "src/app/data/abstract/my-controls-abstract.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "styleUrls": [],
            "styles": [],
            "template": "",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "icon",
                    "defaultValue": "ICONS.profile",
                    "line": 7,
                    "type": "ICONS"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "isfocused",
                    "defaultValue": "false",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 9
                }
            ],
            "methodsClass": [
                {
                    "name": "onFocus",
                    "args": [
                        {
                            "name": "e",
                            "type": "any"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 10,
                    "jsdoctags": [
                        {
                            "name": "e",
                            "type": "any",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "onFocusOut",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 14
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\nimport { ICONS } from '../utils/enums';\n@Component({\n  template: '',\n})\nexport class MyControlAbstract {\n  @Input() icon: ICONS = ICONS.profile;\n\n  isfocused = false;\n  onFocus(e: any) {\n    this.isfocused = true;\n  }\n\n  onFocusOut() {\n    this.isfocused = false;\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": ""
        },
        {
            "name": "NocontentComponent",
            "id": "component-NocontentComponent-a1ff5de6a4784fa44c463a07433102ac",
            "file": "src/app/common/widgets/loader/nocontent/nocontent.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-nocontent",
            "styleUrls": [
                "./nocontent.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./nocontent.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 13
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, OnInit, ChangeDetectionStrategy } from '@angular/core';\n\n@Component({\n  selector: 'app-nocontent',\n  templateUrl: './nocontent.component.html',\n  styleUrls: ['./nocontent.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class NocontentComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".nocontent {\n  height: 100%;\n  width: 100%;\n  background: white;\n  display: grid;\n  place-items: center;\n  font-size: 2rem;\n}\n",
                    "styleUrl": "./nocontent.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [],
                "line": 9
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"nocontent\">{{ \"generalMessages.noContent\" | transloco }}</div>\n"
        },
        {
            "name": "OfferBookingComponent",
            "id": "component-OfferBookingComponent-8fa561cfe65812e32dced2453d0402dd",
            "file": "src/app/pages/Offer/offer-booking/offer-booking.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-offer-booking",
            "styleUrls": [
                "./offer-booking.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./offer-booking.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 12
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-offer-booking',\n  templateUrl: './offer-booking.component.html',\n  styleUrls: ['./offer-booking.component.scss']\n})\nexport class OfferBookingComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./offer-booking.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [],
                "line": 8
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<p>offer-booking works!</p>\n"
        },
        {
            "name": "OfferInfoLandingComponent",
            "id": "component-OfferInfoLandingComponent-160f64650be0a8ddf29458c2f47f00e7",
            "file": "src/app/pages/Offer/offer-info-landing/offer-info-landing.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-offer-info-landing",
            "styleUrls": [
                "./offer-info-landing.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./offer-info-landing.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 12
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-offer-info-landing',\n  templateUrl: './offer-info-landing.component.html',\n  styleUrls: ['./offer-info-landing.component.scss']\n})\nexport class OfferInfoLandingComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./offer-info-landing.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [],
                "line": 8
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<p>offer-info-landing works!</p>\n"
        },
        {
            "name": "OfferInformationComponent",
            "id": "component-OfferInformationComponent-a4fea7916d3d4f281d0b42fe945aea79",
            "file": "src/app/pages/Offer/offer-info-landing/offer-information/offer-information.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-offer-information",
            "styleUrls": [
                "./offer-information.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./offer-information.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 12
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-offer-information',\n  templateUrl: './offer-information.component.html',\n  styleUrls: ['./offer-information.component.scss']\n})\nexport class OfferInformationComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./offer-information.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [],
                "line": 8
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<p>offer-information works!</p>\n"
        },
        {
            "name": "OfferLandingComponent",
            "id": "component-OfferLandingComponent-3c96704ee28f119bb5f711b0e23013ca",
            "file": "src/app/pages/Offer/offer-landing/offer-landing.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-offer-landing",
            "styleUrls": [
                "./offer-landing.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./offer-landing.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 12
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-offer-landing',\n  templateUrl: './offer-landing.component.html',\n  styleUrls: ['./offer-landing.component.scss']\n})\nexport class OfferLandingComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./offer-landing.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [],
                "line": 8
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<p>offer-landing works!</p>\n"
        },
        {
            "name": "OfferLocationComponent",
            "id": "component-OfferLocationComponent-afee4ba0f8f82519679926ef64d17bbd",
            "file": "src/app/pages/Offer/offer-info-landing/offer-location/offer-location.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-offer-location",
            "styleUrls": [
                "./offer-location.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./offer-location.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 12
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-offer-location',\n  templateUrl: './offer-location.component.html',\n  styleUrls: ['./offer-location.component.scss']\n})\nexport class OfferLocationComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./offer-location.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [],
                "line": 8
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<p>offer-location works!</p>\n"
        },
        {
            "name": "OfferPlanComponent",
            "id": "component-OfferPlanComponent-ca455ab1b11bb523b55c43b2d3f04d15",
            "file": "src/app/pages/Offer/offer-info-landing/offer-plan/offer-plan.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-offer-plan",
            "styleUrls": [
                "./offer-plan.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./offer-plan.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 12
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-offer-plan',\n  templateUrl: './offer-plan.component.html',\n  styleUrls: ['./offer-plan.component.scss']\n})\nexport class OfferPlanComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./offer-plan.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [],
                "line": 8
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<p>offer-plan works!</p>\n"
        },
        {
            "name": "OffersPageComponent",
            "id": "component-OffersPageComponent-4a498e6a7848d768497d8348def500de",
            "file": "src/app/pages/offers-page/offers-page.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-offers-page",
            "styleUrls": [
                "./offers-page.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./offers-page.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "_ser",
                    "type": "TripService",
                    "optional": false,
                    "description": "",
                    "line": 33,
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "cityid",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 38
                },
                {
                    "name": "data",
                    "type": "TripModel[]",
                    "optional": false,
                    "description": "",
                    "line": 28
                },
                {
                    "name": "filterOptions",
                    "type": "FilterOptionsModel",
                    "optional": false,
                    "description": "",
                    "line": 30
                },
                {
                    "name": "images",
                    "defaultValue": "[\n    'https://wallpapercave.com/wp/wp1813727.jpg',\n    'https://wallpapercave.com/wp/wp1813725.jpg',\n    'https://i.ytimg.com/vi/no7LCcGTvn8/maxresdefault.jpg',\n  ]",
                    "type": "[]",
                    "optional": false,
                    "description": "",
                    "line": 22
                },
                {
                    "name": "isLoading",
                    "defaultValue": "false",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 29
                },
                {
                    "name": "projectName",
                    "defaultValue": "StaticInfo.projectName",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 27
                }
            ],
            "methodsClass": [
                {
                    "name": "_initData",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 63,
                    "modifierKind": [
                        120
                    ]
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 39
                },
                {
                    "name": "onFilterChange",
                    "args": [
                        {
                            "name": "filterData",
                            "type": "FilterOptionsModel"
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 70,
                    "modifierKind": [
                        120
                    ],
                    "jsdoctags": [
                        {
                            "name": "filterData",
                            "type": "FilterOptionsModel",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "openFilter",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 80
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\nimport { MatBottomSheet } from '@angular/material/bottom-sheet';\nimport { ActivatedRoute, Params, Router } from '@angular/router';\nimport { BehaviorSubject } from 'rxjs';\nimport { FilterOptionsModel } from 'src/app/data/models/filterOptionModlel';\nimport { TripModel } from 'src/app/data/models/TripModel';\nimport { LocalService } from 'src/app/data/services/local.service';\nimport {\n  Enum_Trips_Traveltype,\n  Enum_Trips_Trip_Type,\n} from 'src/app/data/services/saferniGraphql.service';\nimport { TripService } from 'src/app/data/services/trip.service';\nimport { StaticInfo } from 'src/app/data/static/main-info';\nimport { FilterWidgetComponent } from './filter-widget/filter-widget.component';\n\n@Component({\n  selector: 'app-offers-page',\n  templateUrl: './offers-page.component.html',\n  styleUrls: ['./offers-page.component.scss'],\n})\nexport class OffersPageComponent implements OnInit {\n  images = [\n    'https://wallpapercave.com/wp/wp1813727.jpg',\n    'https://wallpapercave.com/wp/wp1813725.jpg',\n    'https://i.ytimg.com/vi/no7LCcGTvn8/maxresdefault.jpg',\n  ];\n  projectName = StaticInfo.projectName;\n  data: TripModel[];\n  isLoading = false;\n  filterOptions: FilterOptionsModel;\n\n  constructor(\n    public _ser: TripService,\n    private _bottomSheet: MatBottomSheet,\n    private route: ActivatedRoute,\n    private router: Router\n  ) {}\n  cityid: string;\n  ngOnInit(): void {\n    this.data = this.route.snapshot.data.trips;\n\n    const initQuery = this.route.snapshot.queryParams;\n    this.route.queryParams.subscribe((newQuery) => {\n      this.cityid = newQuery.city;\n      this.filterOptions = {\n        tripType: newQuery.tripType ?? Enum_Trips_Trip_Type.Touristic,\n        hotel: newQuery.hotel ?? false,\n        hasDiscount: newQuery.hasDiscount,\n        maxPrice: newQuery.maxPrice ? +newQuery.maxPrice : 0,\n        minPrice: newQuery.minPrice ? +newQuery.minPrice : 0,\n        date: newQuery.date ? +newQuery.date : new Date().getTime(),\n        travelType: newQuery.travelType,\n        cities: newQuery.cities,\n      };\n\n      if (newQuery.cities == initQuery.cities) {\n        return;\n      }\n\n      this._initData();\n    });\n  }\n  async _initData() {\n    this.isLoading = true;\n    //absolute\n\n    this.data = await this._ser.queryTrips(this.filterOptions);\n    this.isLoading = false;\n  }\n  async onFilterChange(filterData: FilterOptionsModel) {\n    const queryParams: Params = { ...filterData };\n\n    this.router.navigate([], {\n      relativeTo: this.route,\n      queryParams: queryParams,\n      queryParamsHandling: 'merge', // remove to replace all query params by provided\n    });\n  }\n\n  openFilter() {\n    const data = this._bottomSheet.open(FilterWidgetComponent, {\n      data: this.filterOptions,\n    });\n    data.afterDismissed().subscribe((d) => {\n      this.onFilterChange(d);\n    });\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import \"/src/assets/css/abstract/variables\";\n@import \"/src/assets/css/abstract/mixins\";\n\n$trans: all 200ms;\n$padding: 0 2rem;\n$font-size: 1.5rem;\n\n.carousel {\n  z-index: 0;\n  position: relative;\n  &-info {\n    position: absolute;\n    padding: 0 $page-padding;\n    font-family: var(--secondary-font);\n    top: 50%;\n    transform: translate(0, -50%);\n    width: 100%;\n    pointer-events: none;\n    text-align: center;\n    font-size: 5rem;\n    @include res(phone) {\n      font-size: 3rem;\n    }\n    &-title {\n      height: 100%;\n      // line-height: 100%;\n      background: $accent;\n      display: grid;\n      place-items: center;\n      padding: 1rem;\n      margin-bottom: 1rem;\n      display: inline-block;\n    }\n    z-index: 1000;\n    color: white;\n    & > * {\n      font-size: inherit;\n      text-shadow: $text-shadow;\n      font-family: inherit;\n    }\n  }\n}\n\n.flex_area {\n  display: flex;\n  flex-direction: row;\n  transform: translate(0, -15rem);\n  column-gap: 2.7rem;\n  position: relative;\n  @include res(phone) {\n    flex-direction: column;\n    transform: none;\n  }\n  &-filter-btn {\n    display: none;\n    @include res(phone) {\n      display: grid;\n      place-items: center;\n      margin: 5rem auto;\n      height: 8rem;\n      width: 80%;\n      @include shadow;\n      font-size: 2rem;\n      text-align: center;\n      cursor: pointer;\n    }\n    p {\n      font-size: 2rem;\n      font-weight: 600;\n      color: white;\n      margin: 0;\n\n      &:lang(ar) {\n        font-family: var(--secondary-font);\n      }\n    }\n  }\n  &-filter {\n    width: 29rem;\n    height: 50rem;\n    top: 20rem;\n    left: 0;\n    margin-left: auto;\n    position: sticky;\n    &:lang(ar) {\n      margin-right: auto;\n      margin-left: unset;\n    }\n    @include res(phone) {\n      display: none;\n    }\n  }\n  &-content {\n    display: grid;\n    width: 100%;\n    grid-template-columns: repeat(auto-fill, minmax(25rem, 1fr));\n\n    grid-auto-rows: 30rem;\n    gap: 1rem;\n\n    .full-width {\n      grid-column: 1/-1;\n    }\n  }\n  .loader {\n    margin-right: auto;\n    width: 78rem;\n    @include res(phone) {\n      width: 100%;\n      padding: 0 2rem;\n    }\n    &:lang(ar) {\n      margin-right: unset;\n      margin-left: auto;\n    }\n  }\n}\n\n// .arabic-layout {\n//   .flex_area {\n//     &-content {\n//       margin-right: unset;\n//       margin-left: auto;\n//     }\n//     &-filter {\n//       margin-right: auto;\n//       margin-left: unset;\n//     }\n//   }\n// }\n",
                    "styleUrl": "./offers-page.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "_ser",
                        "type": "TripService"
                    },
                    {
                        "name": "_bottomSheet",
                        "type": "MatBottomSheet"
                    },
                    {
                        "name": "route",
                        "type": "ActivatedRoute"
                    },
                    {
                        "name": "router",
                        "type": "Router"
                    }
                ],
                "line": 30,
                "jsdoctags": [
                    {
                        "name": "_ser",
                        "type": "TripService",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "_bottomSheet",
                        "type": "MatBottomSheet",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "route",
                        "type": "ActivatedRoute",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "router",
                        "type": "Router",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"main\">\n  <div class=\"carousel\">\n    <div class=\"carousel-info\">\n      <p\n        class=\"carousel-info-title\"\n        transloco=\"offer-page.with\"\n        [translocoParams]=\"{ var: projectName | transloco }\"\n      ></p>\n      <p class=\"carousel-info-desc\">{{ \"offer-page.desc\" | transloco }}</p>\n    </div>\n    <app-banner-carousel\n      [images]=\"images\"\n      [screenHeightPercentage]=\"60\"\n    ></app-banner-carousel>\n  </div>\n  <div class=\"flex_area\">\n    <button (click)=\"openFilter()\" class=\"flex_area-filter-btn main-btn\">\n      <p>{{ \"buttons.search\" | transloco }}</p>\n    </button>\n    <app-filter-widget\n      [filterOptions]=\"filterOptions\"\n      (onFilterChange)=\"onFilterChange($event)\"\n      class=\"flex_area-filter\"\n    ></app-filter-widget>\n\n    <app-loader\n      class=\"loader\"\n      [isLoading]=\"isLoading\"\n      [viewRef]=\"content\"\n      [hasData]=\"!!data && data.length > 0\"\n    >\n    </app-loader>\n  </div>\n</div>\n\n<ng-template #content>\n  <div class=\"flex_area-content\">\n    <app-trip-card\n      *ngFor=\"let item of data; let i = index\"\n      [name]=\"item.name\"\n      [duration]=\"item.duration\"\n      [price]=\"item.priceData\"\n      [img]=\"item.previewImage\"\n      [isOffer]=\"true\"\n      [id]=\"item.id\"\n      [travelType]=\"item.travelType\"\n    >\n    </app-trip-card>\n  </div>\n</ng-template>\n"
        },
        {
            "name": "OursocialmediaComponent",
            "id": "component-OursocialmediaComponent-945ec6af65da61be9d328da3fd458590",
            "file": "src/app/common/widgets/oursocialmedia/oursocialmedia.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-oursocialmedia",
            "styleUrls": [
                "./oursocialmedia.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./oursocialmedia.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "isSmallIcons",
                    "defaultValue": "true",
                    "line": 16
                },
                {
                    "name": "isWhite",
                    "defaultValue": "true",
                    "line": 17
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "socialMedia",
                    "defaultValue": "[\n    { icon: 'instagram.svg', link: StaticInfo.insta },\n    { icon: 'facebook.svg', link: StaticInfo.facebook },\n    { icon: 'twitter.svg', link: StaticInfo.twitter },\n  ]",
                    "type": "[]",
                    "optional": false,
                    "description": "",
                    "line": 10
                }
            ],
            "methodsClass": [
                {
                    "name": "getType",
                    "args": [
                        {
                            "name": "icon",
                            "type": "string"
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 20,
                    "jsdoctags": [
                        {
                            "name": "icon",
                            "type": "string",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 18
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, Input, OnInit } from '@angular/core';\nimport { StaticInfo } from 'src/app/data/static/main-info';\n\n@Component({\n  selector: 'app-oursocialmedia',\n  templateUrl: './oursocialmedia.component.html',\n  styleUrls: ['./oursocialmedia.component.scss'],\n})\nexport class OursocialmediaComponent implements OnInit {\n  socialMedia = [\n    { icon: 'instagram.svg', link: StaticInfo.insta },\n    { icon: 'facebook.svg', link: StaticInfo.facebook },\n    { icon: 'twitter.svg', link: StaticInfo.twitter },\n  ];\n  constructor() {}\n  @Input() isSmallIcons = true;\n  @Input() isWhite = true;\n  ngOnInit(): void {}\n\n  getType(icon: string) {\n    return icon.replace('.svg', '');\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".main_social {\n  display: flex;\n  width: 100%;\n  justify-content: space-evenly;\n  &-info {\n    cursor: pointer;\n  }\n  &-info > a {\n    display: flex;\n    align-items: flex-end;\n  }\n  img {\n    padding: 0.5rem;\n    height: 4rem;\n    width: 4rem;\n  }\n  img.small {\n    height: 3rem;\n    width: 3rem;\n  }\n}\n.isWhite {\n  filter: invert(85%) sepia(95%) saturate(0%) hue-rotate(109deg)\n    brightness(105%) contrast(104%);\n}\n",
                    "styleUrl": "./oursocialmedia.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [],
                "line": 14
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"main_social\" [ngClass]=\"{ isWhite: isWhite }\">\n  <div\n    socialLink\n    [type]=\"getType(sm.icon)\"\n    [account]=\"sm.link\"\n    *ngFor=\"let sm of socialMedia\"\n    class=\"main_social-info\"\n  >\n    <a>\n      <img\n        [ngClass]=\"{ small: isSmallIcons }\"\n        [src]=\"'assets/images/svgs/' + sm.icon\"\n        alt=\"\"\n      />\n    </a>\n  </div>\n</div>\n"
        },
        {
            "name": "PageComponent",
            "id": "component-PageComponent-8f196770333aa216860a88c0b6b221aa",
            "file": "src/stories/page.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "storybook-page",
            "styleUrls": [
                "./page.css"
            ],
            "styles": [],
            "template": "<article>    <storybook-header\n      [user]=\"user\"\n      (onLogout)=\"onLogout.emit($event)\"\n      (onLogin)=\"onLogin.emit($event)\"\n      (onCreateAccount)=\"onCreateAccount.emit($event)\"\n    ></storybook-header>\n    <section>\n      <h2>Pages in Storybook</h2>\n      <p>\n        We recommend building UIs with a\n        <a href=\"https://componentdriven.org\" target=\"_blank\" rel=\"noopener noreferrer\">\n          <strong>component-driven</strong>\n        </a>\n        process starting with atomic components and ending with pages.\n      </p>\n      <p>\n        Render pages with mock data. This makes it easy to build and review page states without\n        needing to navigate to them in your app. Here are some handy patterns for managing page data\n        in Storybook:\n      </p>\n      <ul>\n        <li>\n          Use a higher-level connected component. Storybook helps you compose such data from the\n          \"args\" of child component stories\n        </li>\n        <li>\n          Assemble data in the page component from your services. You can mock these services out\n          using Storybook.\n        </li>\n      </ul>\n      <p>\n        Get a guided tutorial on component-driven development at\n        <a href=\"https://storybook.js.org/tutorials/\" target=\"_blank\" rel=\"noopener noreferrer\">\n          Storybook tutorials\n        </a>\n        . Read more in the\n        <a href=\"https://storybook.js.org/docs\" target=\"_blank\" rel=\"noopener noreferrer\"> docs </a>\n        .\n      </p>\n      <div class=\"tip-wrapper\">\n        <span class=\"tip\">Tip</span> Adjust the width of the canvas with the\n        <svg width=\"10\" height=\"10\" viewBox=\"0 0 12 12\" xmlns=\"http://www.w3.org/2000/svg\">\n          <g fill=\"none\" fillRule=\"evenodd\">\n            <path\n              d=\"M1.5 5.2h4.8c.3 0 .5.2.5.4v5.1c-.1.2-.3.3-.4.3H1.4a.5.5 0 01-.5-.4V5.7c0-.3.2-.5.5-.5zm0-2.1h6.9c.3 0 .5.2.5.4v7a.5.5 0 01-1 0V4H1.5a.5.5 0 010-1zm0-2.1h9c.3 0 .5.2.5.4v9.1a.5.5 0 01-1 0V2H1.5a.5.5 0 010-1zm4.3 5.2H2V10h3.8V6.2z\"\n              id=\"a\"\n              fill=\"#999\"\n            />\n          </g>\n        </svg>\n        Viewports addon in the toolbar\n      </div>\n    </section>\n  </article>",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "user",
                    "defaultValue": "null",
                    "line": 64,
                    "type": "unknown"
                }
            ],
            "outputsClass": [
                {
                    "name": "onCreateAccount",
                    "defaultValue": "new EventEmitter<Event>()",
                    "line": 73,
                    "type": "EventEmitter"
                },
                {
                    "name": "onLogin",
                    "defaultValue": "new EventEmitter<Event>()",
                    "line": 67,
                    "type": "EventEmitter"
                },
                {
                    "name": "onLogout",
                    "defaultValue": "new EventEmitter<Event>()",
                    "line": 70,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, Input, Output, EventEmitter } from '@angular/core';\n\n@Component({\n  selector: 'storybook-page',\n  template: `<article>\n    <storybook-header\n      [user]=\"user\"\n      (onLogout)=\"onLogout.emit($event)\"\n      (onLogin)=\"onLogin.emit($event)\"\n      (onCreateAccount)=\"onCreateAccount.emit($event)\"\n    ></storybook-header>\n    <section>\n      <h2>Pages in Storybook</h2>\n      <p>\n        We recommend building UIs with a\n        <a href=\"https://componentdriven.org\" target=\"_blank\" rel=\"noopener noreferrer\">\n          <strong>component-driven</strong>\n        </a>\n        process starting with atomic components and ending with pages.\n      </p>\n      <p>\n        Render pages with mock data. This makes it easy to build and review page states without\n        needing to navigate to them in your app. Here are some handy patterns for managing page data\n        in Storybook:\n      </p>\n      <ul>\n        <li>\n          Use a higher-level connected component. Storybook helps you compose such data from the\n          \"args\" of child component stories\n        </li>\n        <li>\n          Assemble data in the page component from your services. You can mock these services out\n          using Storybook.\n        </li>\n      </ul>\n      <p>\n        Get a guided tutorial on component-driven development at\n        <a href=\"https://storybook.js.org/tutorials/\" target=\"_blank\" rel=\"noopener noreferrer\">\n          Storybook tutorials\n        </a>\n        . Read more in the\n        <a href=\"https://storybook.js.org/docs\" target=\"_blank\" rel=\"noopener noreferrer\"> docs </a>\n        .\n      </p>\n      <div class=\"tip-wrapper\">\n        <span class=\"tip\">Tip</span> Adjust the width of the canvas with the\n        <svg width=\"10\" height=\"10\" viewBox=\"0 0 12 12\" xmlns=\"http://www.w3.org/2000/svg\">\n          <g fill=\"none\" fillRule=\"evenodd\">\n            <path\n              d=\"M1.5 5.2h4.8c.3 0 .5.2.5.4v5.1c-.1.2-.3.3-.4.3H1.4a.5.5 0 01-.5-.4V5.7c0-.3.2-.5.5-.5zm0-2.1h6.9c.3 0 .5.2.5.4v7a.5.5 0 01-1 0V4H1.5a.5.5 0 010-1zm0-2.1h9c.3 0 .5.2.5.4v9.1a.5.5 0 01-1 0V2H1.5a.5.5 0 010-1zm4.3 5.2H2V10h3.8V6.2z\"\n              id=\"a\"\n              fill=\"#999\"\n            />\n          </g>\n        </svg>\n        Viewports addon in the toolbar\n      </div>\n    </section>\n  </article>`,\n  styleUrls: ['./page.css'],\n})\nexport default class PageComponent {\n  @Input()\n  user: unknown = null;\n\n  @Output()\n  onLogin = new EventEmitter<Event>();\n\n  @Output()\n  onLogout = new EventEmitter<Event>();\n\n  @Output()\n  onCreateAccount = new EventEmitter<Event>();\n}\n\n// export const Page = ({ user, onLogin, onLogout, onCreateAccount }) => (\n//   <article>\n//     <Header user={user} onLogin={onLogin} onLogout={onLogout} onCreateAccount={onCreateAccount} />\n\n// );\n// Page.propTypes = {\n//   user: PropTypes.shape({}),\n//   onLogin: PropTypes.func.isRequired,\n//   onLogout: PropTypes.func.isRequired,\n//   onCreateAccount: PropTypes.func.isRequired,\n// };\n\n// Page.defaultProps = {\n//   user: null,\n// };\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "section {\n  font-family: 'Nunito Sans', 'Helvetica Neue', Helvetica, Arial, sans-serif;\n  font-size: 14px;\n  line-height: 24px;\n  padding: 48px 20px;\n  margin: 0 auto;\n  max-width: 600px;\n  color: #333;\n}\n\nh2 {\n  font-weight: 900;\n  font-size: 32px;\n  line-height: 1;\n  margin: 0 0 4px;\n  display: inline-block;\n  vertical-align: top;\n}\n\np {\n  margin: 1em 0;\n}\n\na {\n  text-decoration: none;\n  color: #1ea7fd;\n}\n\nul {\n  padding-left: 30px;\n  margin: 1em 0;\n}\n\nli {\n  margin-bottom: 8px;\n}\n\n.tip {\n  display: inline-block;\n  border-radius: 1em;\n  font-size: 11px;\n  line-height: 12px;\n  font-weight: 700;\n  background: #e7fdd8;\n  color: #66bf3c;\n  padding: 4px 12px;\n  margin-right: 10px;\n  vertical-align: top;\n}\n\n.tip-wrapper {\n  font-size: 13px;\n  line-height: 20px;\n  margin-top: 40px;\n  margin-bottom: 40px;\n}\n\n.tip-wrapper svg {\n  display: inline-block;\n  height: 12px;\n  width: 12px;\n  margin-right: 4px;\n  vertical-align: top;\n  margin-top: 3px;\n}\n\n.tip-wrapper svg path {\n  fill: #1ea7fd;\n}\n",
                    "styleUrl": "./page.css"
                }
            ],
            "stylesData": ""
        },
        {
            "name": "PhoneInputComponent",
            "id": "component-PhoneInputComponent-7efe2baaa9e7184cd5cdf584315b0a8d",
            "file": "src/app/common/widgets/phone-input/phone-input.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [
                {
                    "name": "{\n    provide: NG_VALUE_ACCESSOR, useExisting: forwardRef(() => PhoneInputComponent), multi: true,\n}",
                    "type": "component"
                }
            ],
            "selector": "app-phone-input",
            "styleUrls": [
                "./phone-input.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./phone-input.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "formControl",
                    "line": 40,
                    "type": "FormControl",
                    "inheritance": {
                        "file": "ControlValueAccessorConnector"
                    }
                },
                {
                    "name": "formControlName",
                    "line": 45,
                    "type": "string",
                    "inheritance": {
                        "file": "ControlValueAccessorConnector"
                    }
                },
                {
                    "name": "hasBorder",
                    "defaultValue": "false",
                    "line": 37,
                    "inheritance": {
                        "file": "ControlValueAccessorConnector"
                    }
                },
                {
                    "name": "hideIcon",
                    "defaultValue": "false",
                    "line": 42,
                    "type": "boolean",
                    "inheritance": {
                        "file": "ControlValueAccessorConnector"
                    }
                },
                {
                    "name": "placeholder",
                    "defaultValue": "''",
                    "line": 47,
                    "type": "string",
                    "inheritance": {
                        "file": "ControlValueAccessorConnector"
                    }
                },
                {
                    "name": "values",
                    "line": 36,
                    "type": "any[]",
                    "inheritance": {
                        "file": "ControlValueAccessorConnector"
                    }
                },
                {
                    "name": "icon",
                    "defaultValue": "ICONS.profile",
                    "line": 7,
                    "type": "ICONS",
                    "inheritance": {
                        "file": "ControlValueAccessorConnector"
                    }
                },
                {
                    "name": "icon",
                    "defaultValue": "ICONS.profile",
                    "line": 7,
                    "type": "ICONS",
                    "inheritance": {
                        "file": "MyControlAbstract"
                    }
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "CountryISO",
                    "defaultValue": "CountryISO",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 25
                },
                {
                    "name": "PhoneNumberFormat",
                    "defaultValue": "PhoneNumberFormat",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 26
                },
                {
                    "name": "preferredCountries",
                    "defaultValue": "[\n    CountryISO.UnitedStates,\n    CountryISO.UnitedKingdom,\n  ]",
                    "type": "CountryISO[]",
                    "optional": false,
                    "description": "",
                    "line": 27
                },
                {
                    "name": "SearchCountryField",
                    "defaultValue": "SearchCountryField",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 24
                },
                {
                    "name": "formControlDirective",
                    "type": "FormControlDirective",
                    "optional": false,
                    "description": "",
                    "line": 35,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "FormControlDirective, {static: true}"
                        }
                    ],
                    "inheritance": {
                        "file": "ControlValueAccessorConnector"
                    }
                },
                {
                    "name": "isfocused",
                    "defaultValue": "false",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 9,
                    "inheritance": {
                        "file": "ControlValueAccessorConnector"
                    }
                },
                {
                    "name": "isfocused",
                    "defaultValue": "false",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 9,
                    "inheritance": {
                        "file": "MyControlAbstract"
                    }
                }
            ],
            "methodsClass": [
                {
                    "name": "registerOnChange",
                    "args": [
                        {
                            "name": "fn",
                            "type": "any"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 68,
                    "jsdoctags": [
                        {
                            "name": "fn",
                            "type": "any",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "ControlValueAccessorConnector"
                    }
                },
                {
                    "name": "registerOnTouched",
                    "args": [
                        {
                            "name": "fn",
                            "type": "any"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 64,
                    "jsdoctags": [
                        {
                            "name": "fn",
                            "type": "any",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "ControlValueAccessorConnector"
                    }
                },
                {
                    "name": "setDisabledState",
                    "args": [
                        {
                            "name": "isDisabled",
                            "type": "boolean"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 76,
                    "jsdoctags": [
                        {
                            "name": "isDisabled",
                            "type": "boolean",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "ControlValueAccessorConnector"
                    }
                },
                {
                    "name": "writeValue",
                    "args": [
                        {
                            "name": "obj",
                            "type": "any"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 72,
                    "jsdoctags": [
                        {
                            "name": "obj",
                            "type": "any",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "ControlValueAccessorConnector"
                    }
                },
                {
                    "name": "onFocus",
                    "args": [
                        {
                            "name": "e",
                            "type": "any"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 10,
                    "jsdoctags": [
                        {
                            "name": "e",
                            "type": "any",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "ControlValueAccessorConnector"
                    }
                },
                {
                    "name": "onFocusOut",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 14,
                    "inheritance": {
                        "file": "ControlValueAccessorConnector"
                    }
                },
                {
                    "name": "onFocus",
                    "args": [
                        {
                            "name": "e",
                            "type": "any"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 10,
                    "jsdoctags": [
                        {
                            "name": "e",
                            "type": "any",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "MyControlAbstract"
                    }
                },
                {
                    "name": "onFocusOut",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 14,
                    "inheritance": {
                        "file": "MyControlAbstract"
                    }
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, forwardRef, Input, OnInit } from '@angular/core';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\nimport {\n  CountryISO,\n  PhoneNumberFormat,\n  SearchCountryField,\n} from 'ngx-intl-tel-input';\nimport { ControlValueAccessorConnector } from 'src/app/data/abstract/control-value-accessor-connector';\n\n@Component({\n  selector: 'app-phone-input',\n  templateUrl: './phone-input.component.html',\n  styleUrls: ['./phone-input.component.scss'],\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => PhoneInputComponent),\n      multi: true,\n    },\n  ],\n})\nexport class PhoneInputComponent extends ControlValueAccessorConnector {\n\n  SearchCountryField = SearchCountryField;\n  CountryISO = CountryISO;\n  PhoneNumberFormat = PhoneNumberFormat;\n  preferredCountries: CountryISO[] = [\n    CountryISO.UnitedStates,\n    CountryISO.UnitedKingdom,\n  ];\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import \"/src/assets/css/abstract/variables\";\n@import \"/src/assets/css/abstract/mixins\";\n.wrapper {\n  position: relative;\n  .main {\n    width: 100%;\n    height: 100%;\n    display: flex;\n    flex-direction: row;\n    background: white;\n    font-size: 1.5rem;\n    color: grey;\n    align-items: center;\n    // border: $border;\n    padding: 1rem;\n    ngx-intl-tel-input {\n      border: none;\n      width: 100%;\n      height: 100%;\n      order: 1;\n      margin: $form-file-padding;\n      ::ng-deep .iti {\n        width: 100%;\n        direction: ltr;\n      }\n      ::ng-deep input.custom {\n        width: 100%;\n        border: none;\n\n        direction: ltr;\n        &:focus {\n          outline: none;\n        }\n        ::ng-deep * {\n          direction: ltr;\n        }\n      }\n      &:focus {\n        outline: none;\n      }\n    }\n    ::ng-deep ngx-intl-tel-input input:focus + mat-icon {\n      color: $accent;\n    }\n  }\n  .validation-text {\n    position: absolute !important;\n  }\n}\n",
                    "styleUrl": "./phone-input.component.scss"
                }
            ],
            "stylesData": "",
            "extends": "ControlValueAccessorConnector",
            "templateData": "<div class=\"wrapper\">\n  <div\n    class=\"main\"\n    [ngClass]=\"{ 'all-border': hasBorder, 'err-border': !!errmsg }\"\n  >\n    <ngx-intl-tel-input\n      [cssClass]=\"'custom'\"\n      [preferredCountries]=\"[\n        CountryISO.UnitedStates,\n        CountryISO.Turkey,\n        CountryISO.SaudiArabia,\n        CountryISO.UnitedArabEmirates,\n        CountryISO.Russia,\n        CountryISO.Kuwait\n      ]\"\n      [enableAutoCountrySelect]=\"true\"\n      [searchCountryFlag]=\"true\"\n      on-focus=\"onFocus($event)\"\n      on-focusout=\"onFocusOut()\"\n      [formControl]=\"control\"\n      [searchCountryField]=\"[SearchCountryField.Iso2, SearchCountryField.Name]\"\n      [selectFirstCountry]=\"false\"\n      [maxLength]=\"'15'\"\n      [phoneValidation]=\"true\"\n      [separateDialCode]=\"true\"\n      [enablePlaceholder]=\"true\"\n    ></ngx-intl-tel-input>\n\n    <app-validation-icon\n      [hidden]=\"hideIcon\"\n      [icon]=\"icon\"\n      [isFocused]=\"isfocused\"\n      [errors]=\"errmsg\"\n      [placeholder]=\"placeholder\"\n    ></app-validation-icon>\n  </div>\n  <p class=\"validation-text\" *ngIf=\"errmsg\">*{{ errmsg }}</p>\n</div>\n"
        },
        {
            "name": "PillComponent",
            "id": "component-PillComponent-72c98955e1f02e38503914b18ddfac3f",
            "file": "src/app/common/widgets/pill/pill.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-pill",
            "styleUrls": [
                "./pill.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./pill.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "iconClass",
                    "line": 11,
                    "type": "string"
                },
                {
                    "name": "text",
                    "line": 10,
                    "type": "string"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 15
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, Input, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-pill',\n  templateUrl: './pill.component.html',\n  styleUrls: ['./pill.component.scss']\n})\nexport class PillComponent implements OnInit {\n  \n  @Input() text:string;\n  @Input() iconClass:string;\n  \n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import \"/src/assets/css/abstract/variables\";\n@import \"/src/assets/css/abstract/mixins\";\n\n.pill-wrapper {\n  display: inline-block;\n  .pill {\n    background-color: #e0e0e0;\n    padding: 0.5rem;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    border-radius: 5px;\n    p {\n      font-size: 1.25rem;\n      text-transform: capitalize;\n      font-weight: 400;\n    }\n    i {\n      font-size: 2rem;\n      color: grey;\n      font-weight: bold;\n      margin-right: 0.5rem;\n\n      &:lang(ar) {\n        margin-right: unset;\n        margin-left: 0.5rem;\n      }\n    }\n  }\n}\n",
                    "styleUrl": "./pill.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [],
                "line": 11
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"pill-wrapper\">\n    <div class=\"pill\">\n        <i [ngClass]=\"iconClass\"></i>\n        <p>{{ text }}</p>\n      </div>\n      \n</div>"
        },
        {
            "name": "PlaygroundComponent",
            "id": "component-PlaygroundComponent-22d983984f4349b9929d8b10d4d24d75",
            "file": "src/app/pages/playground/playground.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-playground",
            "styleUrls": [
                "./playground.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./playground.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 15
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { CountryISO, PhoneNumberFormat, SearchCountryField } from 'ngx-intl-tel-input';\n\n@Component({\n  selector: 'app-playground',\n  templateUrl: './playground.component.html',\n  styleUrls: ['./playground.component.scss']\n})\nexport class PlaygroundComponent implements OnInit {\n\n  \n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./playground.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [],
                "line": 10
            },
            "implements": [
                "OnInit"
            ],
            "templateData": ""
        },
        {
            "name": "ProfileinputComponent",
            "id": "component-ProfileinputComponent-8e5ef5f2a9996c6dc42cbf0f9338ca01",
            "file": "src/app/common/widgets/profileinput/profileinput.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [
                {
                    "name": "{\n    provide: MatFormFieldControl, useExisting: ProfileinputComponent,\n}",
                    "type": "component"
                }
            ],
            "selector": "app-profileinput",
            "styleUrls": [
                "./profileinput.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./profileinput.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "disabled",
                    "line": 87
                },
                {
                    "name": "icon",
                    "defaultValue": "ICONS.profile",
                    "line": 47,
                    "type": "ICONS"
                },
                {
                    "name": "isNumeric",
                    "defaultValue": "false",
                    "line": 75
                },
                {
                    "name": "placeholder",
                    "line": 78
                },
                {
                    "name": "required",
                    "line": 110
                },
                {
                    "name": "value",
                    "line": 123,
                    "type": "any"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "_disabled",
                    "defaultValue": "false",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 94,
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "_placeholder",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 85,
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "_required",
                    "defaultValue": "false",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 117,
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "_value",
                    "defaultValue": "''",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 104
                },
                {
                    "name": "autofilled",
                    "defaultValue": "true",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 72
                },
                {
                    "name": "controlType",
                    "defaultValue": "'text'",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 71
                },
                {
                    "name": "errorState",
                    "type": "boolean | any",
                    "optional": false,
                    "description": "",
                    "line": 70
                },
                {
                    "name": "focused",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 62
                },
                {
                    "name": "id",
                    "defaultValue": "'s'",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 61
                },
                {
                    "name": "injector",
                    "type": "Injector",
                    "optional": false,
                    "description": "",
                    "line": 50,
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "nextId",
                    "defaultValue": "10",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 59,
                    "modifierKind": [
                        115
                    ]
                },
                {
                    "name": "ngControl",
                    "type": "NgControl",
                    "optional": false,
                    "description": "",
                    "line": 49
                },
                {
                    "name": "onChange",
                    "defaultValue": "() => {...}",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 42
                },
                {
                    "name": "onTouched",
                    "defaultValue": "() => {...}",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 43
                },
                {
                    "name": "showError",
                    "defaultValue": "false",
                    "type": "boolean | null",
                    "optional": false,
                    "description": "",
                    "line": 103
                },
                {
                    "name": "stateChanges",
                    "defaultValue": "new Subject<void>()",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 48
                },
                {
                    "name": "touched",
                    "defaultValue": "false",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 46
                },
                {
                    "name": "userAriaDescribedBy",
                    "type": "string | undefined",
                    "optional": true,
                    "description": "",
                    "line": 73
                }
            ],
            "methodsClass": [
                {
                    "name": "add",
                    "args": [
                        {
                            "name": "val",
                            "type": "number"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 159,
                    "jsdoctags": [
                        {
                            "name": "val",
                            "type": "number",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getError",
                    "args": [],
                    "optional": false,
                    "returnType": "{}",
                    "typeParameters": [],
                    "line": 139
                },
                {
                    "name": "hasError",
                    "args": [],
                    "optional": false,
                    "returnType": "boolean",
                    "typeParameters": [],
                    "line": 156
                },
                {
                    "name": "ngDoCheck",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 165
                },
                {
                    "name": "ngOnDestroy",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 56
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 164
                },
                {
                    "name": "onContainerClick",
                    "args": [
                        {
                            "name": "event",
                            "type": "MouseEvent"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 99,
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "MouseEvent",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "registerOnChange",
                    "args": [
                        {
                            "name": "fn",
                            "type": "any"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 132,
                    "jsdoctags": [
                        {
                            "name": "fn",
                            "type": "any",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "registerOnTouched",
                    "args": [
                        {
                            "name": "fn",
                            "type": "any"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 135,
                    "jsdoctags": [
                        {
                            "name": "fn",
                            "type": "any",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "setDescribedByIds",
                    "args": [
                        {
                            "name": "ids",
                            "type": "string[]"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 96,
                    "jsdoctags": [
                        {
                            "name": "ids",
                            "type": "string[]",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "setDisabledState",
                    "args": [
                        {
                            "name": "isDisbled",
                            "type": "boolean"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 119,
                    "jsdoctags": [
                        {
                            "name": "isDisbled",
                            "type": "boolean",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "writeValue",
                    "args": [
                        {
                            "name": "obj",
                            "type": "any"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 129,
                    "jsdoctags": [
                        {
                            "name": "obj",
                            "type": "any",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "hostBindings": [
                {
                    "name": "class.floating",
                    "line": 67
                }
            ],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport {\n  Component,\n  Injector,\n  Input,\n  OnInit,\n  DoCheck,\n  HostBinding,\n  forwardRef,\n} from '@angular/core';\nimport {\n  ControlValueAccessor,\n  NgControl,\n  NG_VALUE_ACCESSOR,\n} from '@angular/forms';\nimport { MatFormFieldControl } from '@angular/material/form-field';\nimport { Subject } from 'rxjs';\nimport { ICONS } from 'src/app/data/utils/enums';\n\n@Component({\n  selector: 'app-profileinput',\n  templateUrl: './profileinput.component.html',\n  styleUrls: ['./profileinput.component.scss'],\n  providers: [\n    // {\n    //   provide: NG_VALUE_ACCESSOR,\n    //   useExisting: forwardRef(() => ProfileinputComponent),\n    //   multi: true,\n    // },\n    {\n      provide: MatFormFieldControl,\n      useExisting: ProfileinputComponent,\n    },\n  ],\n})\nexport class ProfileinputComponent\n  implements\n    OnInit,\n    ControlValueAccessor,\n    MatFormFieldControl<string>,\n    DoCheck {\n  onChange: any = () => {};\n  onTouched = () => {\n    this.touched = true;\n  };\n  touched = false;\n  @Input() icon: ICONS = ICONS.profile;\n  stateChanges = new Subject<void>();\n  ngControl: NgControl;\n  constructor(public injector: Injector) {\n    this.ngControl = this.injector.get(NgControl);\n    if (this.ngControl != null) {\n      this.ngControl.valueAccessor = this;\n    }\n  }\n  ngOnDestroy() {\n    this.stateChanges.complete();\n  }\n  static nextId = 10;\n\n  id: string = 's';\n  focused: boolean;\n  get empty() {\n    return !!this._value?.toString()?.trim();\n  }\n  @HostBinding('class.floating')\n  get shouldLabelFloat() {\n    return this.focused || !this.empty;\n  }\n  errorState: boolean | any;\n  controlType = 'text';\n  autofilled = true;\n  userAriaDescribedBy?: string | undefined;\n  @Input()\n  isNumeric = false;\n\n  @Input()\n  get placeholder() {\n    return this._placeholder;\n  }\n  set placeholder(plh) {\n    this._placeholder = plh;\n    this.stateChanges.next();\n  }\n  public _placeholder: string;\n  @Input()\n  get disabled() {\n    return this._disabled;\n  }\n  set disabled(dis) {\n    this._disabled = coerceBooleanProperty(dis);\n    this.stateChanges.next();\n  }\n  public _disabled = false;\n\n  setDescribedByIds(ids: string[]): void {\n    // throw new Error('Method not implemented.');\n  }\n  onContainerClick(event: MouseEvent): void {\n    // throw new Error('Method not implemented.');\n    this.onTouched();\n  }\n  showError: boolean | null = false;\n  _value: any = '';\n  get value(): any {\n    return this._value;\n  }\n\n  @Input()\n  get required() {\n    return this._required;\n  }\n  set required(req) {\n    this._required = coerceBooleanProperty(req);\n    this.stateChanges.next();\n  }\n  public _required = false;\n\n  setDisabledState(isDisbled: boolean) {\n    this.disabled = isDisbled;\n  }\n  @Input('value')\n  set value(val: any) {\n    this._value = val;\n    this.onChange(val);\n    this.stateChanges.next();\n  }\n\n  writeValue(obj: any): void {\n    this.value = obj;\n  }\n  registerOnChange(fn: any): void {\n    this.onChange = fn;\n  }\n  registerOnTouched(fn: any): void {\n    this.onTouched = fn;\n  }\n\n  getError() {\n    const lst: string[] = [];\n\n    for (const key in this.ngControl?.errors) {\n      switch (key) {\n        case 'email':\n          lst.push('Please provide a valid Email');\n          break;\n        default:\n          lst.push('Please provide a value');\n          break;\n      }\n    }\n\n    return lst;\n  }\n\n  hasError() {\n    return this.getError().length > 0;\n  }\n  add(val: number) {\n    const oldVal = Number.parseInt(this._value);\n    const newVal = val + oldVal;\n    this.value = newVal < 0 ? 0 : newVal;\n  }\n  ngOnInit(): void {}\n  ngDoCheck(): void {\n    if (this.ngControl) {\n      this.errorState = this.ngControl.invalid && this.ngControl.dirty;\n      // if ((this.ngControl.name = 'fullName')) {\n      //   this.ngControl.invalid;\n      //   console.log(`${this.ngControl.name} ${this.errorState}`);\n      //   console.log(`invalid ${this.ngControl.invalid}`);\n      //   console.log(`dirty ${this.ngControl.dirty}`);\n      //   console.log(`touched ${this.ngControl.touched}`);\n      // }\n\n      this.stateChanges.next();\n    }\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import \"/src/assets/css/abstract/variables\";\nmat-form-field {\n  font-size: 1.5rem;\n  width: 100%;\n  border-radius: 0 !important;\n  color: black;\n\n  mat-icon {\n    color: $accent;\n    // margin-right: 2rem;\n  }\n}\n\n.row {\n  padding: 0 1rem;\n  display: flex;\n  justify-content: space-evenly;\n  & * {\n    cursor: pointer;\n  }\n}\n::ng-deep .mat-form-field-appearance-outline .mat-form-field-outline {\n  color: $primary !important;\n  border-radius: 0 !important;\n  // opacity: 1!important;\n}\n::ng-deep .mat-form-field-appearance-outline .mat-form-field-outline-end {\n  border-radius: 0 !important;\n}\n::ng-deep .mat-form-field-appearance-outline .mat-form-field-outline-start {\n  border-radius: 0 !important;\n}\n::ng-deep .mat-form-field-label {\n  color: $grey-light !important;\n  // color: $mainColor!important;\n}\n::ng-deep .mat-form-field-appearance-outline .mat-form-field-outline {\n  background: white;\n}\n::ng-deep .mat-form-field-appearance-outline .mat-form-field-outline {\n  background: white;\n}\n\n::ng-deep .mat-form-field.mat-focused .mat-form-field-label {\n  padding: 1% 0 0 0;\n  width: 100%;\n}\n::ng-deep .mat-form-field.mat-form-field-should-float .mat-form-field-label {\n  padding: 1% 0 0 0;\n  width: 100%;\n}\n",
                    "styleUrl": "./profileinput.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "injector",
                        "type": "Injector"
                    }
                ],
                "line": 49,
                "jsdoctags": [
                    {
                        "name": "injector",
                        "type": "Injector",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit",
                "ControlValueAccessor",
                "MatFormFieldControl",
                "DoCheck"
            ],
            "accessors": {
                "empty": {
                    "name": "empty",
                    "getSignature": {
                        "name": "empty",
                        "type": "",
                        "returnType": "",
                        "line": 63
                    }
                },
                "placeholder": {
                    "name": "placeholder",
                    "setSignature": {
                        "name": "placeholder",
                        "type": "void",
                        "args": [
                            {
                                "name": "plh",
                                "type": ""
                            }
                        ],
                        "returnType": "void",
                        "line": 81,
                        "jsdoctags": [
                            {
                                "name": "plh",
                                "type": "",
                                "tagName": {
                                    "text": "param"
                                }
                            }
                        ]
                    }
                },
                "disabled": {
                    "name": "disabled",
                    "setSignature": {
                        "name": "disabled",
                        "type": "void",
                        "args": [
                            {
                                "name": "dis",
                                "type": ""
                            }
                        ],
                        "returnType": "void",
                        "line": 90,
                        "jsdoctags": [
                            {
                                "name": "dis",
                                "type": "",
                                "tagName": {
                                    "text": "param"
                                }
                            }
                        ]
                    }
                },
                "value": {
                    "name": "value",
                    "setSignature": {
                        "name": "value",
                        "type": "void",
                        "args": [
                            {
                                "name": "val",
                                "type": "any"
                            }
                        ],
                        "returnType": "void",
                        "line": 123,
                        "jsdoctags": [
                            {
                                "name": "val",
                                "type": "any",
                                "tagName": {
                                    "text": "param"
                                }
                            }
                        ]
                    },
                    "getSignature": {
                        "name": "value",
                        "type": "any",
                        "returnType": "any",
                        "line": 105
                    }
                },
                "required": {
                    "name": "required",
                    "setSignature": {
                        "name": "required",
                        "type": "void",
                        "args": [
                            {
                                "name": "req",
                                "type": ""
                            }
                        ],
                        "returnType": "void",
                        "line": 113,
                        "jsdoctags": [
                            {
                                "name": "req",
                                "type": "",
                                "tagName": {
                                    "text": "param"
                                }
                            }
                        ]
                    }
                }
            },
            "templateData": "<mat-form-field appearance=\"outline\" floatLabel=\"never\">\n  <mat-label>{{ placeholder }}</mat-label>\n  <mat-icon matPrefix>{{ icon }}</mat-icon>\n  <input\n    [OnlyNumbers]=\"isNumeric\"\n    [(ngModel)]=\"value\"\n    type=\"text\"\n    matInput\n    [placeholder]=\"placeholder\"\n  />\n  <div *ngIf=\"isNumeric\" class=\"row\" matSuffix>\n    <mat-icon (click)=\"add(1)\">expand_less</mat-icon>\n    <mat-icon (click)=\"add(-1)\">expand_more</mat-icon>\n  </div>\n</mat-form-field>\n<ng-content *ngIf=\"errorState\"></ng-content>\n"
        },
        {
            "name": "ReadOnlyStarsComponent",
            "id": "component-ReadOnlyStarsComponent-e3027492d037c52e8a621aa05bde9714",
            "file": "src/app/common/widgets/read-only-stars/read-only-stars.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-read-only-stars",
            "styleUrls": [
                "./read-only-stars.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./read-only-stars.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "color",
                    "defaultValue": "'#20aed5'",
                    "line": 10,
                    "type": "string"
                },
                {
                    "name": "size",
                    "defaultValue": "2",
                    "line": 11,
                    "type": "number"
                },
                {
                    "name": "stars",
                    "defaultValue": "0",
                    "line": 9,
                    "type": "number"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "filledStarsCount",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 14
                },
                {
                    "name": "hasHalfStar",
                    "defaultValue": "false",
                    "type": "Boolean",
                    "optional": false,
                    "description": "",
                    "line": 13
                },
                {
                    "name": "unfilledStarsCount",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 15
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 22
                },
                {
                    "name": "round",
                    "args": [
                        {
                            "name": "value",
                            "type": "number"
                        },
                        {
                            "name": "step",
                            "type": "number"
                        }
                    ],
                    "optional": false,
                    "returnType": "number",
                    "typeParameters": [],
                    "line": 41,
                    "jsdoctags": [
                        {
                            "name": "value",
                            "type": "number",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "step",
                            "type": "number",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, Input, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-read-only-stars',\n  templateUrl: './read-only-stars.component.html',\n  styleUrls: ['./read-only-stars.component.scss'],\n})\nexport class ReadOnlyStarsComponent implements OnInit {\n  @Input() stars: number = 0;\n  @Input() color: string = '#20aed5';\n  @Input() size: number = 2;\n\n  hasHalfStar: Boolean = false;\n  filledStarsCount: number;\n  unfilledStarsCount: number;\n\n  constructor() {\n    this.filledStarsCount = 0;\n    this.unfilledStarsCount = 0;\n  }\n\n  ngOnInit(): void {\n    if (this.stars < 0) this.stars = 0;\n    else if (this.stars > 5) this.stars = 5;\n\n    if (this.stars % 1 == 0) {\n      this.filledStarsCount = this.stars;\n      this.unfilledStarsCount = 5 - this.filledStarsCount;\n    } else if (this.stars % 1 > 0.85) {\n      this.filledStarsCount = Math.round(this.stars);\n      this.unfilledStarsCount = 5 - this.filledStarsCount;\n    } else if (this.stars % 1 < 0.2) {\n      this.filledStarsCount = Math.floor(this.stars);\n      this.unfilledStarsCount = 5 - this.filledStarsCount;\n    } else {\n      this.filledStarsCount = Math.floor(this.stars);\n      this.unfilledStarsCount = 5 - this.filledStarsCount - 1;\n      this.hasHalfStar = true;\n    }\n  }\n  round(value: number, step: number) {\n    step || (step = 1.0);\n    var inv = 1.0 / step;\n    return Math.round(value * inv) / inv;\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import \"/src/assets/css/abstract/variables\";\n.read-stars {\n  display: flex;\n\n  i {\n    font-size: 2rem;\n\n    &:lang(ar) {\n      transform: rotateY(180deg);\n    }\n  }\n\n  i.isBig {\n    font-size: 3rem;\n  }\n}\n.black {\n  color: $black;\n}\n.accent {\n  color: $accent;\n}\n",
                    "styleUrl": "./read-only-stars.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [],
                "line": 15
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"read-stars\">\n  <!-- <i class=\"fa fa-star\"></i> -->\n\n  <i\n    class=\"fa fa-star\"\n    [ngStyle]=\"{ color: color, fontSize: size }\"\n    *ngFor=\"let star of [].constructor(filledStarsCount)\"\n  ></i>\n  <i\n    class=\"fa fa-star-half-o\"\n    *ngIf=\"hasHalfStar\"\n    [ngStyle]=\"{ color: color, fontSize: size }\"\n  ></i>\n  <i\n    class=\"fa fa-star-o\"\n    [ngStyle]=\"{ color: color, fontSize: size }\"\n    *ngFor=\"let star of [].constructor(unfilledStarsCount)\"\n  ></i>\n</div>\n"
        },
        {
            "name": "SaferniImageComponent",
            "id": "component-SaferniImageComponent-dbf94fe0e2cf809db4e9b274cfb664c8",
            "file": "src/app/common/widgets/saferni-image/saferni-image.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-saferni-image",
            "styleUrls": [
                "./saferni-image.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./saferni-image.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "alt",
                    "line": 13,
                    "type": "string"
                },
                {
                    "name": "imageModel",
                    "line": 12,
                    "type": "ImageModel"
                },
                {
                    "name": "overlayOpacity",
                    "defaultValue": "25",
                    "line": 14
                },
                {
                    "name": "overlayType",
                    "defaultValue": "'normal'",
                    "line": 15,
                    "type": "OverlayType"
                },
                {
                    "name": "url",
                    "line": 11,
                    "type": "string"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "isLoading",
                    "defaultValue": "true",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 16
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 24
                },
                {
                    "name": "onImageLoaded",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 20
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, Input, OnInit, Output, EventEmitter } from '@angular/core';\n\nimport { ImageModel } from 'src/app/data/models/ImageModel';\n\n@Component({\n  selector: 'app-saferni-image',\n  templateUrl: './saferni-image.component.html',\n  styleUrls: ['./saferni-image.component.scss'],\n})\nexport class SaferniImageComponent implements OnInit {\n  @Input() url: string;\n  @Input() imageModel: ImageModel;\n  @Input() alt: string;\n  @Input() overlayOpacity = 25;\n  @Input() overlayType : OverlayType = 'normal'\n  isLoading = true;\n\n  constructor() {}\n\n  onImageLoaded() {\n    this.isLoading = false;\n  }\n\n  ngOnInit(): void {}\n\n}\nexport type OverlayType = 'gradient' | 'normal'\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import \"/src/assets/css/abstract/variables\";\n@import \"/src/assets/css/abstract/mixins\";\n\n.image-wrapper {\n  cursor: pointer;\n  width: 100%;\n  height: 100%;\n  overflow: hidden;\n  position: relative;\n\n  &:hover {\n    &::after {\n      background: linear-gradient(\n        to bottom,\n        rgba(0, 0, 0, 0),\n        rgba(0, 0, 0, 0)\n      );\n    }\n    img {\n      transform: scale(1.05);\n    }\n  }\n  img {\n    transition: all 0.25s ease-out;\n    width: 100%;\n    height: 100%;\n    vertical-align: top;\n    object-fit: cover;\n  }\n  .overlay {\n    position: absolute;\n    width: 100%;\n    height: 100%;\n    // border-radius: 5px;\n    top: 0;\n    left: 0;\n    background: linear-gradient(\n      to bottom,\n      rgba(0, 0, 0, 0),\n      rgba(0, 0, 0, 0.25)\n    );\n    opacity: 1;\n    transition: all 1s;\n    -webkit-transition: all 1s;\n\n    &:hover {\n      background: linear-gradient(\n        to bottom,\n        rgba(0, 0, 0, 0),\n        rgba(0, 0, 0, 0)\n      ) !important;\n    }\n  }\n  .gradientOverlay {\n    position: absolute;\n    width: 100%;\n    height: 100%;\n    // border-radius: 5px;\n    top: 0;\n    left: 0;\n    background: linear-gradient(\n      to top,\n      rgba(0, 0, 0, 0.4) 15%,\n      transparent 25%\n    );\n    opacity: 1;\n    transition: all 1s;\n    -webkit-transition: all 1s;\n\n    &:hover {\n      background: linear-gradient(\n        to bottom,\n        rgba(0, 0, 0, 0),\n        rgba(0, 0, 0, 0)\n      ) !important;\n    }\n  }\n}\n\n.shimmer {\n  width: 100%;\n  height: 100%;\n\n  position: relative;\n  background: #f6f7f8;\n  background-image: linear-gradient(\n    to right,\n    #f6f7f8 0%,\n    #f2f4f7 10%,\n    #f0f0f2 20%,\n    #f2f4f7 30%,\n    #f6f7f8 40%,\n    #f6f7f8 100%\n  );\n  background-repeat: no-repeat;\n  background-size: 800px 500px;\n\n  /* Animation */\n  animation-duration: 1s;\n  -webkit-animation-duration: 1s;\n\n  /* Specifies style for element when animation isn't playing */\n  -webkit-animation-fill-mode: forwards;\n  animation-fill-mode: forwards;\n  animation-iteration-count: infinite;\n  -webkit-animation-iteration-count: infinite;\n  animation-name: shimmer;\n  -webkit-animation-name: shimmer;\n  animation-timing-function: ease-in-out;\n  -webkit-animation-timing-function: ease-in-out;\n}\n@keyframes shimmer {\n  0% {\n    background-position: -400px 0;\n  }\n  100% {\n    background-position: 400px 0;\n  }\n}\n@-webkit-keyframes shimmer {\n  0% {\n    background-position: -400px 0;\n  }\n  100% {\n    background-position: 400px 0;\n  }\n}\n",
                    "styleUrl": "./saferni-image.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [],
                "line": 16
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"image-wrapper\" [ngClass]=\"isLoading ? 'shimmer' : ''\">\n  <img\n    [alt]=\"alt\"\n    [src]=\"imageModel | serverimage\"\n    *ngIf=\"imageModel; else imageUrl\"\n    (load)=\"onImageLoaded()\"\n  />\n\n  <ng-template #imageUrl\n    ><img [alt]=\"alt\" [src]=\"url\" (load)=\"onImageLoaded()\" />\n  </ng-template>\n  <div\n    [ngClass]=\"{\n      overlay: overlayType === 'normal',\n      gradientOverlay: overlayType === 'gradient'\n    }\"\n  ></div>\n</div>\n"
        },
        {
            "name": "SearchPanelComponent",
            "id": "component-SearchPanelComponent-8052ebe10d7d10ede70f355f13ed3523",
            "file": "src/app/pages/main-landing/search-panel/search-panel.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-search-panel",
            "styleUrls": [
                "./search-panel.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./search-panel.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "activeTab",
                    "defaultValue": "Enum_Trips_Trip_Type.Touristic",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 31
                },
                {
                    "name": "bannerHeight",
                    "defaultValue": "60",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 60
                },
                {
                    "name": "carouselImages",
                    "type": "string[]",
                    "optional": false,
                    "description": "",
                    "line": 35
                },
                {
                    "name": "citiesData",
                    "defaultValue": "[]",
                    "type": "literal type[]",
                    "optional": false,
                    "description": "",
                    "line": 32
                },
                {
                    "name": "fb",
                    "type": "FormBuilder",
                    "optional": false,
                    "description": "",
                    "line": 38,
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "form",
                    "type": "FormGroup",
                    "optional": false,
                    "description": "",
                    "line": 28
                },
                {
                    "name": "homeCarouselImages",
                    "type": "HomeBannerService",
                    "optional": false,
                    "description": "",
                    "line": 44,
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "icons",
                    "defaultValue": "ICONS",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 29
                },
                {
                    "name": "selctedTrip",
                    "defaultValue": "''",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 27
                },
                {
                    "name": "selectedType",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 30
                },
                {
                    "name": "ticketRipped",
                    "defaultValue": "false",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 25
                },
                {
                    "name": "trTypes",
                    "defaultValue": "[]",
                    "type": "literal type[]",
                    "optional": false,
                    "description": "",
                    "line": 33
                }
            ],
            "methodsClass": [
                {
                    "name": "changeTab",
                    "args": [
                        {
                            "name": "tab",
                            "type": "any"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 62,
                    "jsdoctags": [
                        {
                            "name": "tab",
                            "type": "any",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 65
                },
                {
                    "name": "search",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 72
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup } from '@angular/forms';\nimport { StaticInfo } from 'src/app/data/static/main-info';\nimport { getTravelTypeData, ICONS } from 'src/app/data/utils/enums';\nimport { LocalService } from 'src/app/data/services/local.service';\nimport { Observable } from 'rxjs';\nimport { CityService } from 'src/app/data/services/city.service';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { QueryStringParameters } from 'src/app/data/abstract/query.string.builder';\nimport { FilterOptionsModel } from 'src/app/data/models/filterOptionModlel';\nimport { ErrorService } from 'src/app/data/services/error.service';\nimport {\n  Enum_Trips_Traveltype,\n  Enum_Trips_Trip_Type,\n} from 'src/app/data/services/saferniGraphql.service';\nimport { HomeBanner } from 'src/app/data/services/saferniGraphql.service';\nimport { HomeBannerService } from 'src/app/data/services/home.banner.service';\n\n@Component({\n  selector: 'app-search-panel',\n  templateUrl: './search-panel.component.html',\n  styleUrls: ['./search-panel.component.scss'],\n})\nexport class SearchPanelComponent implements OnInit {\n  ticketRipped = false;\n\n  selctedTrip: string = '';\n  form: FormGroup;\n  icons = ICONS;\n  selectedType: string;\n  activeTab = Enum_Trips_Trip_Type.Touristic;\n  citiesData: { id: string; name: string }[] = [];\n  trTypes: { id: string; name: string }[] = [];\n\n  carouselImages: string[];\n\n  constructor(\n    public fb: FormBuilder,\n    locale: LocalService,\n    _ser: CityService,\n    private router: Router,\n    private _snck: ErrorService,\n    private activatedRoute: ActivatedRoute,\n    public homeCarouselImages: HomeBannerService\n  ) {\n    this.citiesData = _ser.data.map((c) => {\n      return {\n        name: c.name,\n        id: c.id,\n      };\n    });\n    this.trTypes.push(...getTravelTypeData(locale));\n\n    this.form = fb.group({\n      whereTo: null,\n      travelType: null,\n      date: null,\n    });\n  }\n  bannerHeight = 60;\n\n  changeTab(tab: any) {\n    this.activeTab = tab;\n  }\n  ngOnInit(): void {\n    this.carouselImages = this.activatedRoute.snapshot.data.initData.carousel;\n  }\n\n  get hasBorder(): boolean {\n    return window.innerWidth > 900;\n  }\n  search() {\n    const data = this.form.value;\n    const params: FilterOptionsModel = {\n      cities: data.whereTo ? [data.whereTo] : [],\n      date: data.date?.getTime() ?? new Date().getTime(),\n      tripType: this.activeTab,\n      maxPrice: 0,\n      minPrice: 0,\n      travelType: data.travelType,\n    };\n    this.router.navigate([StaticInfo.offersRoute], {\n      queryParams: params,\n    });\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import \"/src/assets/css/abstract/mixins\";\n@import \"/src/assets/css/abstract/variables\";\n\n$btn-to-border-margin: 3rem;\n$vert-image-width: 40rem;\n$brdr: 1px rgba(128, 128, 128, 0.288) solid;\n.main {\n  * {\n    z-index: 2;\n  }\n\n  position: relative;\n  height: 60vh;\n  width: 100%;\n\n  banner-slider {\n    z-index: 0;\n  }\n\n  .control {\n    font-size: 1.5rem;\n    @include res(tab) {\n      border: none;\n      border-bottom: $brdr;\n    }\n  }\n  .info {\n    color: white;\n    text-align: center;\n    position: absolute;\n    top: 0;\n    left: 50%;\n    transform: translateX(-50%);\n    height: 100%;\n    width: 70%;\n    display: flex;\n    justify-content: center;\n    flex-direction: column;\n    align-items: center;\n    text-shadow: $text-shadow;\n\n    &__top {\n      font-size: 3rem;\n      font-weight: 400;\n    }\n    &__middle {\n      font-size: 5.5rem;\n      font-family: var(--secondary-font);\n      align-self: center;\n      padding-bottom: 2rem;\n    }\n    &__bottom {\n      font-size: 2.5rem;\n      font-weight: 400;\n    }\n    @include respondMax(950px) {\n      &__middle {\n        font-size: 4rem;\n      }\n    }\n    @include respondMax(500px) {\n      &__bottom {\n        font-size: 1.5rem;\n      }\n    }\n  }\n\n  .filter {\n    position: absolute;\n    bottom: 0px;\n    width: $main-content-width;\n\n    height: 13.875rem;\n    right: 50%;\n    transform: translate(50%, 50%);\n\n    &.ripped {\n      .filter-body .filter-form .filter-form__left {\n        transform: rotateZ(-3deg);\n      }\n      .filter-body .filter-form .filter-form__left:lang(ar) {\n        transform: rotateZ(3deg);\n      }\n    }\n    .filter-body {\n      width: 100%;\n      height: 100%;\n\n      .filter-form {\n        position: relative;\n        display: flex;\n        width: 100%;\n        height: 100%;\n        display: flex;\n\n        filter: drop-shadow($subtleShadow);\n\n        &__left {\n          width: 81.5%;\n          transform-origin: bottom right;\n          transition: transform 0.2s ease-out;\n          position: relative;\n\n          display: flex;\n          &__inputs {\n            padding: 0rem 0rem 0rem 3.2rem;\n            height: 100%;\n            width: 100%;\n            background-color: white;\n            display: flex;\n            justify-content: stretch;\n            align-items: center;\n            & > * {\n              flex: 1 1 33%;\n              height: 60%;\n              max-width: 100%;\n              min-width: 0px;\n            }\n            &:lang(ar) {\n              padding: 0rem 3.2rem 0rem 0rem;\n            }\n          }\n          &__mask {\n            width: 3.2rem;\n            height: 100%;\n            background-color: white;\n            border-right: dashed 1px $border-color;\n\n            @supports (aspect-ratio: 1) {\n              mask-image: radial-gradient(\n                  circle 10px at bottom right,\n                  transparent 0,\n                  transparent 10px,\n                  black 10px\n                ),\n                radial-gradient(\n                  circle 10px at top right,\n                  transparent 0,\n                  transparent 10px,\n                  black 10px\n                );\n              -webkit-mask-composite: destination-in;\n              mask-composite: exclude;\n            }\n\n            &:lang(ar) {\n              border-right: unset;\n              border-left: dashed 1px $border-color;\n              @supports (aspect-ratio: 1) {\n                mask-image: radial-gradient(\n                    circle 10px at bottom left,\n                    transparent 0,\n                    transparent 10px,\n                    black 10px\n                  ),\n                  radial-gradient(\n                    circle 10px at top left,\n                    transparent 0,\n                    transparent 10px,\n                    black 10px\n                  );\n                -webkit-mask-composite: destination-in;\n                mask-composite: exclude;\n              }\n            }\n          }\n\n          &:lang(ar) {\n            transform-origin: bottom left;\n            border-right: unset;\n          }\n        }\n        &__right {\n          background-color: white;\n          position: relative;\n          width: 18.5%;\n\n          @supports (aspect-ratio: 1) {\n            mask-image: radial-gradient(\n                circle 10px at bottom left,\n                transparent 0,\n                transparent 10px,\n                black 10px\n              ),\n              radial-gradient(\n                circle 10px at top left,\n                transparent 0,\n                transparent 10px,\n                black 10px\n              );\n            -webkit-mask-composite: destination-in;\n            mask-composite: exclude;\n          }\n\n          display: flex;\n          justify-content: center;\n          align-items: center;\n\n          border-left: dashed 1px $border-color;\n          button {\n            width: 70%;\n            height: 60%;\n            pointer-events: auto;\n            p {\n              font-size: 2.4rem;\n              margin: 0px;\n              font-weight: bold;\n            }\n          }\n          &:lang(ar) {\n            border-left: unset;\n            border-right: dashed 1px $border-color;\n\n            @supports (aspect-ratio: 1) {\n              mask-image: radial-gradient(\n                  circle 10px at bottom right,\n                  transparent 0,\n                  transparent 10px,\n                  black 10px\n                ),\n                radial-gradient(\n                  circle 10px at top right,\n                  transparent 0,\n                  transparent 10px,\n                  black 10px\n                );\n            }\n          }\n        }\n      }\n    }\n\n    @include respondMax(1100px) {\n      width: 85%;\n      height: calc(85vw / 8);\n    }\n    @include respondMax(930px) {\n      width: 40rem;\n      height: unset;\n\n      &.ripped {\n        .filter-body .filter-form .filter-form__left {\n          transform: rotateZ(0deg);\n        }\n        .filter-body .filter-form .filter-form__left:lang(ar) {\n          transform: rotateZ(0deg);\n        }\n      }\n\n      .filter-body {\n        .filter-form {\n          flex-direction: column;\n\n          &__right {\n            width: 100%;\n            height: 13.5rem;\n            border-left: unset;\n            padding: 0rem;\n            border-top: dashed 3px $border-color;\n            border-right: unset;\n            @supports (aspect-ratio: 1) {\n              mask-image: radial-gradient(\n                  circle 10px at top right,\n                  transparent 0,\n                  transparent 10px,\n                  black 10px\n                ),\n                radial-gradient(\n                  circle 10px at top left,\n                  transparent 0,\n                  transparent 10px,\n                  black 10px\n                );\n              -webkit-mask-composite: destination-in;\n              mask-composite: exclude;\n            }\n\n            align-items: flex-end;\n            button {\n              width: 100%;\n              height: 8rem;\n            }\n            &:lang(ar) {\n              padding: 0rem;\n              border-right: none;\n              border-left: none;\n              border-top: dashed 3px $border-color;\n\n              @supports (aspect-ratio: 1) {\n                mask-image: radial-gradient(\n                    circle 10px at top right,\n                    transparent 0,\n                    transparent 10px,\n                    black 10px\n                  ),\n                  radial-gradient(\n                    circle 10px at top left,\n                    transparent 0,\n                    transparent 10px,\n                    black 10px\n                  );\n              }\n            }\n          }\n\n          &__left {\n            width: 100%;\n            height: 76%;\n            padding: 0rem;\n            border-right: none;\n            border-left: none;\n            flex-direction: column;\n\n            &__inputs {\n              padding: 0rem;\n              flex-direction: column;\n              width: 100%;\n              height: 100%;\n              & > * {\n                flex: 1 1 auto;\n                height: 10rem;\n                width: 100%;\n              }\n              &:lang(ar) {\n                padding: 0rem;\n              }\n              app-guest-count-input {\n                z-index: 99999999999999;\n              }\n            }\n            &__mask {\n              border-right: none;\n              border-left: none;\n              height: 5.5rem;\n              width: 100%;\n              background-color: white;\n\n              @supports (aspect-ratio: 1) {\n                mask-image: radial-gradient(\n                    circle 10px at bottom right,\n                    transparent 0,\n                    transparent 10px,\n                    black 10px\n                  ),\n                  radial-gradient(\n                    circle 10px at bottom left,\n                    transparent 0,\n                    transparent 10px,\n                    black 10px\n                  );\n                -webkit-mask-composite: destination-in;\n                mask-composite: exclude;\n              }\n\n              &:lang(ar) {\n                border-right: none;\n                border-left: none;\n                @supports (aspect-ratio: 1) {\n                  mask-image: radial-gradient(\n                      circle 10px at bottom right,\n                      transparent 0,\n                      transparent 10px,\n                      black 10px\n                    ),\n                    radial-gradient(\n                      circle 10px at bottom left,\n                      transparent 0,\n                      transparent 10px,\n                      black 10px\n                    );\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n  @include respondMax(930px) {\n    height: 85vh;\n    .info {\n      height: 50%;\n    }\n    .filter {\n      transform: translate(50%, 0%);\n      position: absolute;\n      right: 50%;\n      bottom: unset;\n      top: 50%;\n    }\n  }\n}\n",
                    "styleUrl": "./search-panel.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "fb",
                        "type": "FormBuilder"
                    },
                    {
                        "name": "locale",
                        "type": "LocalService"
                    },
                    {
                        "name": "_ser",
                        "type": "CityService"
                    },
                    {
                        "name": "router",
                        "type": "Router"
                    },
                    {
                        "name": "_snck",
                        "type": "ErrorService"
                    },
                    {
                        "name": "activatedRoute",
                        "type": "ActivatedRoute"
                    },
                    {
                        "name": "homeCarouselImages",
                        "type": "HomeBannerService"
                    }
                ],
                "line": 35,
                "jsdoctags": [
                    {
                        "name": "fb",
                        "type": "FormBuilder",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "locale",
                        "type": "LocalService",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "_ser",
                        "type": "CityService",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "router",
                        "type": "Router",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "_snck",
                        "type": "ErrorService",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "activatedRoute",
                        "type": "ActivatedRoute",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "homeCarouselImages",
                        "type": "HomeBannerService",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "accessors": {
                "hasBorder": {
                    "name": "hasBorder",
                    "getSignature": {
                        "name": "hasBorder",
                        "type": "boolean",
                        "returnType": "boolean",
                        "line": 69
                    }
                }
            },
            "templateData": "<div class=\"main\">\n  <app-banner-carousel\n    class=\"banner-slider\"\n    [images]=\"carouselImages\"\n    [screenHeightPercentage]=\"bannerHeight\"\n    [overlayOpacity]=\"34\"\n  >\n  </app-banner-carousel>\n\n  <div class=\"info\">\n    <p class=\"info__top\">\n      {{ \"searchPannel.title\" | transloco }}\n    </p>\n    <p class=\"info__middle\">{{ \"searchPannel.desc\" | transloco }}</p>\n    <p class=\"info__bottom\">\n      {{ \"searchPannel.extra1\" | transloco }}<br />\n      {{ \"searchPannel.extra2\" | transloco }}\n    </p>\n  </div>\n  <section class=\"filter\" [ngClass]=\"{ ripped: ticketRipped }\">\n    <div class=\"filter-tabs\"></div>\n    <div class=\"filter-body\">\n      <form [formGroup]=\"form\" class=\"filter-form\">\n        <div class=\"filter-form__left\">\n          <div class=\"filter-form__left__inputs\">\n            <app-custom-select\n              class=\"control first-item\"\n              formControlName=\"whereTo\"\n              [icon]=\"icons.compass\"\n              [values]=\"citiesData\"\n              [placeholder]=\"'inputs.whereto' | transloco\"\n              [hasBorder]=\"hasBorder\"\n            >\n            </app-custom-select>\n            <app-custom-select\n              [hasBorder]=\"hasBorder\"\n              class=\"guest control\"\n              [values]=\"trTypes\"\n              [placeholder]=\"'travelType.placeholder' | transloco\"\n              formControlName=\"travelType\"\n            >\n            </app-custom-select>\n\n            <app-custom-date-picker\n              [icon]=\"icons.profile\"\n              [hasBorder]=\"hasBorder\"\n              [placeholder]=\"'searchPannel.travelDate' | transloco\"\n              formControlName=\"date\"\n              class=\"last-item control\"\n            ></app-custom-date-picker>\n          </div>\n          <div class=\"filter-form__left__mask\"></div>\n        </div>\n\n        <div class=\"filter-form__right\">\n          <button\n            (click)=\"search()\"\n            class=\"main-btn info_inputs-btn\"\n            (mouseenter)=\"ticketRipped = true\"\n            (mouseleave)=\"ticketRipped = false\"\n          >\n            <p>{{ \"buttons.search\" | transloco }}</p>\n          </button>\n        </div>\n      </form>\n    </div>\n  </section>\n</div>\n"
        },
        {
            "name": "SectionCitiesComponent",
            "id": "component-SectionCitiesComponent-759cacc8733f3df2ee57486e9c738d2b",
            "file": "src/app/pages/main-landing/section-cities/section-cities.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-section-cities",
            "styleUrls": [
                "./section-cities.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./section-cities.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "cities",
                    "type": "CityModel[]",
                    "optional": false,
                    "description": "",
                    "line": 14
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 16
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { CityModel } from 'src/app/data/models/CityModel';\nimport { CityService } from 'src/app/data/services/city.service';\nimport { StaticInfo } from 'src/app/data/static/main-info';\n\n@Component({\n  selector: 'app-section-cities',\n  templateUrl: './section-cities.component.html',\n  styleUrls: ['./section-cities.component.scss'],\n})\nexport class SectionCitiesComponent implements OnInit {\n  cities: CityModel[];\n  constructor(private router: Router, private activatedRoute: ActivatedRoute) {}\n  ngOnInit(): void {\n    this.cities = this.activatedRoute.snapshot.data.initData.cities.slice(0, 6);\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import \"/src/assets/css/abstract/variables\";\n@import \"/src/assets/css/abstract/mixins\";\n\n.trip-section {\n  margin-top: 20rem;\n  height: 100%;\n\n  @include respondMax(930px) {\n    margin-top: 10rem;\n  }\n}\n\n.data {\n  display: grid;\n\n  grid-template-columns: repeat(3, 37rem);\n  grid-auto-rows: 37rem;\n\n  justify-content: center;\n  gap: 1.5rem;\n\n  @include respondMax(1250px) {\n    grid-template-columns: repeat(3, 28.3%);\n    grid-auto-rows: 28.3vw;\n  }\n  @include respondMax(800px) {\n    grid-template-columns: repeat(2, 45%);\n    grid-auto-rows: 45vw;\n\n    // & > * {\n    //   aspect-ratio: 0.68;\n    // }\n  }\n  // & > * {\n  //   aspect-ratio: 1;\n  // }\n}\n",
                    "styleUrl": "./section-cities.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "router",
                        "type": "Router"
                    },
                    {
                        "name": "activatedRoute",
                        "type": "ActivatedRoute"
                    }
                ],
                "line": 14,
                "jsdoctags": [
                    {
                        "name": "router",
                        "type": "Router",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "activatedRoute",
                        "type": "ActivatedRoute",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"trip-section\">\n  <app-section-header\n    [title]=\"'citysection.title' | transloco\"\n    [desc]=\"'citysection.desc' | transloco\"\n    [extra]=\"'citysection.extra' | transloco\"\n  ></app-section-header>\n\n  <div class=\"data\">\n    <app-trip-card\n      *ngFor=\"let item of cities; let i = index\"\n      class=\"data_card\"\n      [id]=\"item.id\"\n      [img]=\"item.image\"\n      [name]=\"item.name\"\n      [isOffer]=\"false\"\n      [duration]=\"0\"\n    ></app-trip-card>\n  </div>\n</div>\n"
        },
        {
            "name": "SectionDailyTripsComponent",
            "id": "component-SectionDailyTripsComponent-1be5e454492e74d519cb09df69b61e9a",
            "file": "src/app/pages/main-landing/section-daily-trips/section-daily-trips.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-section-daily-trips",
            "styleUrls": [
                "./section-daily-trips.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./section-daily-trips.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "_ser",
                    "type": "TripService",
                    "optional": false,
                    "description": "",
                    "line": 11,
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "innerWidth",
                    "defaultValue": "0",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 2,
                    "inheritance": {
                        "file": "longX"
                    }
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 14
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, HostListener, OnInit } from '@angular/core';\nimport { longX } from 'src/app/data/abstract/longX';\nimport { TripService } from 'src/app/data/services/trip.service';\n\n@Component({\n  selector: 'app-section-daily-trips',\n  templateUrl: './section-daily-trips.component.html',\n  styleUrls: ['./section-daily-trips.component.scss'],\n})\nexport class SectionDailyTripsComponent extends longX implements OnInit {\n  constructor(public _ser: TripService) {\n    super();\n  }\n  ngOnInit(): void {}\n\n  get slideCount(): number {\n    const x = this.innerWidth / 16 / 40;\n    return x > 3 ? 3 : x;\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".data {\n  height: 72rem;\n\n  padding: 1rem;\n  .slide {\n    height: 60rem;\n  }\n  swiper {\n    height: 100%;\n    display: grid;\n    place-items: center;\n  }\n}\n\n::ng-deep .swiper-scrollbar {\n  display: none !important;\n}\n::ng-deep .swiper-slide {\n  height: 60rem !important;\n  width: 40rem !important;\n}\n",
                    "styleUrl": "./section-daily-trips.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "_ser",
                        "type": "TripService"
                    }
                ],
                "line": 10,
                "jsdoctags": [
                    {
                        "name": "_ser",
                        "type": "TripService",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": "longX",
            "implements": [
                "OnInit"
            ],
            "accessors": {
                "slideCount": {
                    "name": "slideCount",
                    "getSignature": {
                        "name": "slideCount",
                        "type": "number",
                        "returnType": "number",
                        "line": 16
                    }
                }
            },
            "templateData": "<!-- <div class=\"main\">\n  <app-section-header\n    title=\"Choose Your\"\n    desc=\"Amazing Daily Trips \"\n    extra=\"ALL Around Lovely Cities\"\n  >\n  </app-section-header>\n  <div class=\"data\">\n    <swiper\n      class=\"swiper-container\"\n      [slidesPerView]=\"slideCount\"\n      class=\"slide\"\n      [spaceBetween]=\"100\"\n    >\n      <ng-template swiperSlide *ngFor=\"let item of _ser.data$ | async\">\n        <app-trip-card\n          class=\"slide\"\n          [id]=\"item._id\"\n          [features]=\"item.features\"\n          [img]=\"item.previewImage\"\n          [name]=\"item.name\"\n          [price]=\"item.price\"\n          [duration]=\"item.duration\"\n        ></app-trip-card>\n        </ng-template\n      >\n    </swiper>\n  </div>\n</div> -->\n"
        },
        {
            "name": "SectionHeaderComponent",
            "id": "component-SectionHeaderComponent-ec5311b90cec954a9603b475725d1652",
            "file": "src/app/pages/main-landing/section-header/section-header.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-section-header",
            "styleUrls": [
                "./section-header.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./section-header.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "desc",
                    "defaultValue": "''",
                    "line": 10,
                    "type": "String"
                },
                {
                    "name": "extra",
                    "defaultValue": "''",
                    "line": 11,
                    "type": "String"
                },
                {
                    "name": "title",
                    "defaultValue": "''",
                    "line": 9,
                    "type": "String"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 14
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, Input, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-section-header',\n  templateUrl: './section-header.component.html',\n  styleUrls: ['./section-header.component.scss'],\n})\nexport class SectionHeaderComponent implements OnInit {\n  @Input() title: String = '';\n  @Input() desc: String = '';\n  @Input() extra: String = '';\n  constructor() {}\n\n  ngOnInit(): void {}\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import \"/src/assets/css/abstract/variables\";\n@import \"/src/assets/css/abstract/mixins\";\n\n.main {\n  text-align: center;\n\n  .offer-title {\n    font-size: 3.7rem;\n    font-weight: 500;\n\n    &:lang(ar) {\n      font-size: 3rem;\n    }\n  }\n  .desc {\n    font-size: 4.7rem;\n    color: #252629;\n    font-weight: 400;\n    font-family: var(--secondary-font);\n  }\n  .extra {\n    font-size: 2.3rem;\n    font-weight: 400;\n    color: #252629;\n  }\n\n  @include respondMax(1250px) {\n    .offer-title {\n      font-size: 3rem;\n\n      &:lang(ar) {\n        font-size: 2rem;\n      }\n    }\n    .desc {\n      font-size: 4rem;\n    }\n    .extra {\n      font-size: 1.8rem;\n    }\n  }\n}\n",
                    "styleUrl": "./section-header.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [],
                "line": 11
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"main\">\n  <p class=\"offer-title\">{{ title }}</p>\n  <p class=\"desc\">{{ desc }}</p>\n  <p class=\"extra\">{{ extra }}</p>\n</div>\n"
        },
        {
            "name": "SectionOffersComponent",
            "id": "component-SectionOffersComponent-bfbec08a656a3f8e96630e00bebf6958",
            "file": "src/app/pages/main-landing/section-offers/section-offers.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-section-offers",
            "styleUrls": [
                "./section-offers.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./section-offers.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "trips",
                    "type": "TripModel[]",
                    "optional": false,
                    "description": "",
                    "line": 13
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 15
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { TripModel } from 'src/app/data/models/TripModel';\nimport { TripService } from 'src/app/data/services/trip.service';\n\n@Component({\n  selector: 'app-section-offers',\n  templateUrl: './section-offers.component.html',\n  styleUrls: ['./section-offers.component.scss'],\n})\nexport class SectionOffersComponent implements OnInit {\n  trips: TripModel[];\n  constructor(private activatedRoute: ActivatedRoute) {}\n  ngOnInit() {\n    this.trips = this.activatedRoute.snapshot.data.initData.trips;\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import \"/src/assets/css/abstract/mixins\";\n@import \"/src/assets/css/abstract/variables\";\n.data {\n  display: grid;\n  grid-template-columns: repeat(3, 37rem);\n  grid-auto-rows: 37rem;\n  width: 100%;\n  justify-content: center;\n  gap: 1.5rem;\n\n  @include respondMax(1250px) {\n    grid-template-columns: repeat(3, 28.3%);\n    grid-auto-rows: 28.3vw;\n  }\n  @include respondMax(800px) {\n    grid-template-columns: repeat(2, 45%);\n    grid-auto-rows: 45vw;\n    // & > * {\n    //   aspect-ratio: 0.68;\n    // }\n    // .longX {\n    //   aspect-ratio: 2.78;\n    //   grid-column: 1/-1;\n    // }\n  }\n  // & > * {\n  //   aspect-ratio: 1;\n  // }\n  // .longX {\n  //   aspect-ratio: 3;\n  //   grid-column: 1/-1;\n  // }\n}\n.main {\n  height: 100%;\n  width: 100%;\n}\n",
                    "styleUrl": "./section-offers.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "activatedRoute",
                        "type": "ActivatedRoute"
                    }
                ],
                "line": 13,
                "jsdoctags": [
                    {
                        "name": "activatedRoute",
                        "type": "ActivatedRoute",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"main\">\n  <app-section-header\n    [title]=\"'offersection.title' | transloco\"\n    [desc]=\"'offersection.desc' | transloco\"\n    [extra]=\"'offersection.extra' | transloco\"\n  >\n  </app-section-header>\n\n  <div class=\"data\">\n    <app-trip-card\n      *ngFor=\"let item of trips; let i = index\"\n      [id]=\"item.id\"\n      [img]=\"item.previewImage\"\n      [name]=\"item.name\"\n      [price]=\"item.priceData\"\n      [duration]=\"item.duration\"\n      [travelType]=\"item.travelType\"\n    ></app-trip-card>\n  </div>\n</div>\n"
        },
        {
            "name": "SingleTripCardComponent",
            "id": "component-SingleTripCardComponent-c31cb4852a9acd3fb1e0d6de63115272",
            "file": "src/app/common/widgets/single-trip-card/single-trip-card.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-trip-card",
            "styleUrls": [
                "./single-trip-card.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./single-trip-card.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "duration",
                    "defaultValue": "0",
                    "line": 22,
                    "type": "number"
                },
                {
                    "name": "id",
                    "defaultValue": "''",
                    "line": 26,
                    "type": "string"
                },
                {
                    "name": "img",
                    "line": 25,
                    "type": "ImageModel | undefined"
                },
                {
                    "name": "isOffer",
                    "defaultValue": "true",
                    "line": 27,
                    "type": "boolean"
                },
                {
                    "name": "name",
                    "defaultValue": "''",
                    "line": 21,
                    "type": "string"
                },
                {
                    "name": "peopleCount",
                    "defaultValue": "0",
                    "line": 23,
                    "type": "number"
                },
                {
                    "name": "price",
                    "line": 24,
                    "type": "priceData"
                },
                {
                    "name": "travelType",
                    "defaultValue": "Enum_Trips_Traveltype.Private",
                    "line": 28,
                    "type": "Enum_Trips_Traveltype"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "icons",
                    "defaultValue": "ICONS",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 29
                },
                {
                    "name": "loc",
                    "type": "LocalService",
                    "optional": false,
                    "description": "",
                    "line": 30,
                    "modifierKind": [
                        114
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "getTravelType",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 53
                },
                {
                    "name": "goToOffer",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 34
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 32
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, Input, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { FeatureModel } from 'src/app/data/models/FeatureModel';\nimport { FilterOptionsModel } from 'src/app/data/models/filterOptionModlel';\nimport { ImageModel } from 'src/app/data/models/ImageModel';\nimport { priceData } from 'src/app/data/pipes/price-caculator.pipe';\nimport { LocalService } from 'src/app/data/services/local.service';\nimport {\n  Enum_Trips_Traveltype,\n  Enum_Trips_Trip_Type,\n} from 'src/app/data/services/saferniGraphql.service';\nimport { StaticInfo } from 'src/app/data/static/main-info';\nimport { ICONS } from 'src/app/data/utils/enums';\n\n@Component({\n  selector: 'app-trip-card',\n  templateUrl: './single-trip-card.component.html',\n  styleUrls: ['./single-trip-card.component.scss'],\n})\nexport class SingleTripCardComponent implements OnInit {\n  @Input() name: string = '';\n  @Input() duration: number = 0;\n  @Input() peopleCount: number = 0;\n  @Input() price: priceData;\n  @Input() img: ImageModel | undefined;\n  @Input() id: string = '';\n  @Input() isOffer: boolean = true;\n  @Input() travelType: Enum_Trips_Traveltype = Enum_Trips_Traveltype.Private;\n  icons = ICONS;\n  constructor(private router: Router, public loc: LocalService) {}\n\n  ngOnInit(): void {}\n\n  goToOffer() {\n    if (!this.id) throw 'please provide a valid id';\n    if (this.isOffer)\n      this.router.navigate([StaticInfo.tourInfoRoute, this.id], {\n        queryParamsHandling: 'preserve',\n      });\n    else {\n      const params: FilterOptionsModel = {\n        cities: [this.id],\n        tripType: Enum_Trips_Trip_Type.Touristic,\n        maxPrice: 0,\n        minPrice: 0,\n      };\n      this.router.navigate([StaticInfo.offersRoute], {\n        queryParams: params,\n      });\n    }\n  }\n\n  getTravelType() {\n    if (this.travelType === Enum_Trips_Traveltype.Private)\n      return this.loc.getTranslation('general.privateTour');\n    else return this.loc.getTranslation('general.publicTour');\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import \"/src/assets/css/abstract/variables\";\n@import \"/src/assets/css/abstract/mixins\";\n\n$padding: 1.8rem 1rem;\n\n.single-card {\n  cursor: pointer;\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n  height: 100%;\n  width: 100%;\n  position: relative;\n  color: white;\n\n  * {\n    z-index: 1;\n  }\n  &_title {\n    padding: $padding;\n    font-size: 180%;\n    font-family: var(--secondary-font);\n    text-transform: uppercase;\n    text-shadow: $text-shadow;\n  }\n  &_data {\n    padding: $padding;\n    font-family: var(--primary-font);\n\n    font-size: 1.5rem;\n    color: black;\n\n    &_item {\n      vertical-align: 5px;\n      max-height: 3rem;\n      background-color: white;\n      border-radius: 0.5rem;\n      padding: 0.5rem 1rem;\n      @include shadow();\n      display: inline-block;\n\n      margin: 0 0.5rem 0 0;\n      &:lang(ar) {\n        margin: 0 0 0 0.5rem;\n      }\n\n      .pill {\n        display: flex;\n        align-items: center;\n        justify-content: center;\n        i {\n          display: flex;\n          align-items: center;\n          font-size: 2rem;\n          width: 1.5rem;\n          color: $accent;\n          height: 100%;\n\n          margin-right: 0.75rem;\n\n          &:lang(ar) {\n            margin-right: unset;\n            margin-left: 0.75rem;\n          }\n        }\n\n        .text {\n          font-size: inherit;\n          color: inherit;\n          white-space: nowrap;\n          text-align: center;\n          margin: 0px;\n        }\n      }\n    }\n  }\n  &_img {\n    padding: 0;\n    margin: 0;\n    border-radius: $border-radius;\n    height: 100%;\n    width: 100%;\n    object-fit: cover;\n    object-position: center;\n    transition: all 0.3s ease-out;\n    border-radius: $border-radius;\n    top: 0;\n    position: absolute;\n    z-index: 0;\n  }\n}\n",
                    "styleUrl": "./single-trip-card.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "router",
                        "type": "Router"
                    },
                    {
                        "name": "loc",
                        "type": "LocalService"
                    }
                ],
                "line": 29,
                "jsdoctags": [
                    {
                        "name": "router",
                        "type": "Router",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "loc",
                        "type": "LocalService",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"single-card\" (click)=\"goToOffer()\">\n  <app-saferni-image\n    class=\"single-card_img\"\n    [imageModel]=\"img!\"\n    [overlayType]=\"'gradient'\"\n  ></app-saferni-image>\n  <div *ngIf=\"!isOffer\" class=\"empty\"></div>\n  <div *ngIf=\"isOffer\" class=\"single-card_data\">\n    <div class=\"single-card_data_item\">\n      <div class=\"pill\">\n        <i class=\"las la-tags\"></i>\n        <p class=\"text\">{{ price | price }}</p>\n      </div>\n    </div>\n    <div class=\"single-card_data_item\">\n      <div class=\"pill\">\n        <i class=\"las la-clock\"></i>\n        <p\n          class=\"text\"\n          transloco=\"general.duration\"\n          [translocoParams]=\"{ days: duration }\"\n        ></p>\n      </div>\n    </div>\n    <div class=\"single-card_data_item\">\n      <div class=\"pill\">\n        <i class=\"las la-car-side\"></i>\n        <p class=\"text\">\n          {{ getTravelType() }}\n        </p>\n      </div>\n    </div>\n  </div>\n  <div\n    class=\"single-card_title\"\n    [ngStyle]=\"{\n      fontSize: isOffer ? '180%' : '4rem',\n      lineHeight: isOffer ? 'unset' : 1\n    }\"\n  >\n    {{ name }}\n  </div>\n</div>\n"
        },
        {
            "name": "SnackCompComponent",
            "id": "component-SnackCompComponent-26fd4b07b029ff87e28ebb78ccf4de13",
            "file": "src/app/common/widgets/snack-comp/snack-comp.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-snack-comp",
            "styleUrls": [
                "./snack-comp.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./snack-comp.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "data",
                    "type": "literal type",
                    "optional": false,
                    "description": "",
                    "line": 13,
                    "decorators": [
                        {
                            "name": "Inject",
                            "stringifiedArguments": "MAT_SNACK_BAR_DATA"
                        }
                    ],
                    "modifierKind": [
                        114
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "dismiss",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 23
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 26
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, Inject, OnInit, Renderer2 } from '@angular/core';\nimport { MAT_SNACK_BAR_DATA } from '@angular/material/snack-bar';\nimport { ICONS, snackType } from 'src/app/data/utils/enums';\n\n@Component({\n  selector: 'app-snack-comp',\n  templateUrl: './snack-comp.component.html',\n  styleUrls: ['./snack-comp.component.scss'],\n})\nexport class SnackCompComponent implements OnInit {\n  constructor(\n    @Inject(MAT_SNACK_BAR_DATA)\n    public data: { msg: String; type: snackType; preClose: any },\n    ren: Renderer2\n  ) {\n    setTimeout(() => {\n      let snackEl = document\n        .getElementsByClassName('mat-snack-bar-container')\n        .item(0);\n      ren.listen(snackEl, 'click', () => this.dismiss());\n    });\n  }\n  dismiss() {\n    this.data.preClose();\n  }\n  ngOnInit(): void {}\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".main {\n  display: flex;\n  justify-content: start;\n  align-items: center;\n  height: 100%;\n  width: 100%;\n  font-size: 2rem;\n\n  p {\n    font-size: inherit;\n  }\n  mat-icon {\n    margin: 0 1.1rem;\n    color: white;\n  }\n}\n",
                    "styleUrl": "./snack-comp.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "data",
                        "type": "literal type"
                    },
                    {
                        "name": "ren",
                        "type": "Renderer2"
                    }
                ],
                "line": 10,
                "jsdoctags": [
                    {
                        "name": "data",
                        "type": "literal type",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "ren",
                        "type": "Renderer2",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"main\" [ngClass]=\"data.type\">\n  <mat-icon>{{ data.type }}</mat-icon>\n  <p>{{ data.msg }}</p>\n</div>\n"
        },
        {
            "name": "SplashComponent",
            "id": "component-SplashComponent-7ab817412573b274942abb3d56efbff8",
            "file": "src/app/common/widgets/splash/splash.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-splash",
            "styleUrls": [
                "./splash.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./splash.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "ANIMATION_DURATION",
                    "defaultValue": "1",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 23,
                    "modifierKind": [
                        132
                    ]
                },
                {
                    "name": "animationFiles",
                    "defaultValue": "[\n    'assets/animation/airplane.json',\n    'assets/animation/luggage.json',\n    'assets/animation/car.json',\n  ]",
                    "type": "string[]",
                    "optional": false,
                    "description": "",
                    "line": 43
                },
                {
                    "name": "currentAnimationIndex",
                    "defaultValue": "0",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 41
                },
                {
                    "name": "opacityChange",
                    "defaultValue": "1",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 19
                },
                {
                    "name": "options",
                    "defaultValue": "new BehaviorSubject<AnimationOptions>({\n    autoplay: false,\n    loop: 1,\n    path: this.animationFiles[this.currentAnimationIndex],\n  })",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 49
                },
                {
                    "name": "showSplash",
                    "defaultValue": "false",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 22
                },
                {
                    "name": "splashScreenStateService",
                    "type": "SplashScreenStateService",
                    "optional": false,
                    "description": "",
                    "line": 26,
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "splashTransition",
                    "defaultValue": "'all 0.2s ease-out'",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 20
                }
            ],
            "methodsClass": [
                {
                    "name": "animationCreated",
                    "args": [
                        {
                            "name": "animationItem",
                            "type": "AnimationItem"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 55,
                    "jsdoctags": [
                        {
                            "name": "animationItem",
                            "type": "AnimationItem",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "hideSplashAnimation",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 82,
                    "modifierKind": [
                        112
                    ]
                },
                {
                    "name": "ngAfterViewInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 29
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 40
                },
                {
                    "name": "onLoopComplete",
                    "args": [
                        {
                            "name": "event",
                            "type": "BMCompleteLoopEvent"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 67,
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "BMCompleteLoopEvent",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "showAnimation",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 75,
                    "modifierKind": [
                        112
                    ]
                },
                {
                    "name": "updateAnimationFile",
                    "args": [
                        {
                            "name": "newPath",
                            "type": "string"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 60,
                    "jsdoctags": [
                        {
                            "name": "newPath",
                            "type": "string",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { animation } from '@angular/animations';\nimport {\n  AfterViewInit,\n  ChangeDetectorRef,\n  Component,\n  OnInit,\n} from '@angular/core';\nimport { AnimationItem } from 'lottie-web';\nimport { AnimationOptions, BMCompleteLoopEvent } from 'ngx-lottie';\nimport { BehaviorSubject } from 'rxjs';\nimport { SplashScreenStateService } from 'src/app/data/services/splash-screen-state.service';\n\n@Component({\n  selector: 'app-splash',\n  templateUrl: './splash.component.html',\n  styleUrls: ['./splash.component.scss'],\n})\nexport class SplashComponent implements OnInit, AfterViewInit {\n  opacityChange = 1;\n  splashTransition = 'all 0.2s ease-out';\n\n  showSplash = false;\n  readonly ANIMATION_DURATION = 1;\n\n  constructor(\n    public splashScreenStateService: SplashScreenStateService,\n    private cdRef: ChangeDetectorRef\n  ) {}\n  ngAfterViewInit(): void {\n    this.splashScreenStateService.playing.subscribe((state) => {\n      if (state != this.showSplash) {\n        if (state) {\n          this.showAnimation();\n        } else {\n          this.hideSplashAnimation();\n        }\n      }\n    });\n  }\n  ngOnInit(): void {}\n  currentAnimationIndex = 0;\n\n  animationFiles: string[] = [\n    'assets/animation/airplane.json',\n    'assets/animation/luggage.json',\n    'assets/animation/car.json',\n  ];\n\n  options = new BehaviorSubject<AnimationOptions>({\n    autoplay: false,\n    loop: 1,\n    path: this.animationFiles[this.currentAnimationIndex],\n  });\n\n  animationCreated(animationItem: AnimationItem): void {\n    animationItem.setSpeed(2);\n    animationItem.play();\n  }\n\n  updateAnimationFile(newPath: string): void {\n    this.options.next({\n      ...this.options.value,\n      path: newPath,\n    });\n  }\n\n  onLoopComplete(event: BMCompleteLoopEvent) {\n    if (this.currentAnimationIndex + 1 >= this.animationFiles.length) {\n      this.currentAnimationIndex = 0;\n    } else this.currentAnimationIndex++;\n\n    this.updateAnimationFile(this.animationFiles[this.currentAnimationIndex]);\n  }\n\n  private showAnimation() {\n    this.currentAnimationIndex = 0;\n    this.opacityChange = 1;\n    this.showSplash = true;\n    this.cdRef.detectChanges();\n  }\n\n  private hideSplashAnimation() {\n    this.splashTransition = `opacity ${this.ANIMATION_DURATION}s`;\n    this.opacityChange = 0;\n    setTimeout(() => {\n      this.showSplash = false;\n      this.cdRef.detectChanges();\n    }, 1000);\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import \"/src/assets/css/abstract/variables\";\n@import \"/src/assets/css/abstract/mixins\";\n\n.splash-screen {\n  position: fixed;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 100%;\n  height: 100%;\n  z-index: 9999;\n  opacity: 1;\n  background-color: rgba($color: #fff, $alpha: 0.95);\n  &__content {\n    background-color: rgba($color: $accent, $alpha: 1);\n    clip-path: circle();\n    position: fixed;\n    width: 25rem;\n    z-index: 99999;\n    height: 25rem;\n    padding: 5rem;\n  }\n}\n",
                    "styleUrl": "./splash.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "splashScreenStateService",
                        "type": "SplashScreenStateService"
                    },
                    {
                        "name": "cdRef",
                        "type": "ChangeDetectorRef"
                    }
                ],
                "line": 23,
                "jsdoctags": [
                    {
                        "name": "splashScreenStateService",
                        "type": "SplashScreenStateService",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "cdRef",
                        "type": "ChangeDetectorRef",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit",
                "AfterViewInit"
            ],
            "templateData": "<div\n  *ngIf=\"showSplash\"\n  class=\"splash-screen\"\n  [ngStyle]=\"{ opacity: opacityChange, transition: splashTransition }\"\n>\n  <div class=\"splash-screen__content\">\n    <ng-lottie\n      [options]=\"options | async\"\n      (animationCreated)=\"animationCreated($event)\"\n      (loopComplete)=\"onLoopComplete($event)\"\n    ></ng-lottie>\n  </div>\n</div>\n"
        },
        {
            "name": "StepperComponent",
            "id": "component-StepperComponent-b9c7631b427c13c9ace4490d3b2133e0",
            "file": "src/app/common/widgets/stepper/stepper.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-stepper",
            "styleUrls": [
                "./stepper.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./stepper.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "stepperData",
                    "line": 10,
                    "type": "StepperData[]"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 12
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, Input, OnInit } from '@angular/core';\nimport { StepperData } from './stepper-data';\n\n@Component({\n  selector: 'app-stepper',\n  templateUrl: './stepper.component.html',\n  styleUrls: ['./stepper.component.scss'],\n})\nexport class StepperComponent implements OnInit {\n  @Input() stepperData: StepperData[];\n\n  ngOnInit(): void {}\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import \"/src/assets/css/abstract/variables\";\n.stepper {\n  width: 100%;\n  min-height: 100%;\n  max-height: 100%;\n  overflow-x: auto;\n  overflow-y: visible;\n  .step {\n    padding: 10px;\n\n    display: flex;\n    flex-direction: row;\n    justify-content: flex-start;\n    margin-bottom: 2rem;\n    background-color: cream;\n    &:last-child .v-stepper .line {\n      width: 0rem;\n      background-color: white;\n      z-index: -1; /* behind the circle to completely hide */\n    }\n    &__day {\n      width: 10rem;\n      p {\n        text-align: center;\n        font-size: 2rem;\n        font-weight: bold;\n      }\n    }\n    .v-stepper {\n      position: relative;\n      .circle {\n        background-color: $accent;\n\n        border-radius: 100%;\n        width: 2rem; /* +6 for border */\n        height: 2rem;\n        display: inline-block;\n      }\n      .line {\n        top: 2rem;\n        left: 0.9rem;\n        /*   height: 120px; */\n        height: 120%;\n        width: 0.1rem;\n        background-color: rgba($color: #000000, $alpha: 1.0);\n        color: black;\n        position: absolute;\n      }\n    }\n\n    .content {\n      width: 100%;\n      margin-left: 20px;\n      display: flex;\n      flex-direction: column;\n\n      &__item {\n        display: grid;\n        gap: 1rem;\n        grid-template-columns: repeat(auto-fit, minmax(25rem, 1fr));\n        align-items: end;\n        margin-bottom: 2rem;\n        &__main {\n          h2 {\n            font-size: 1.5rem;\n            font-weight: 700;\n          }\n          p {\n            font-size: 2rem;\n          }\n          img {\n            width: 20rem;\n          }\n        }\n\n        &__description {\n          p {\n            font-size: 1.5rem;\n          }\n        }\n      }\n    }\n  }\n}\n",
                    "styleUrl": "./stepper.component.scss"
                }
            ],
            "stylesData": "",
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"stepper\">\n  <!-- completed -->\n  <div class=\"step\" *ngFor=\"let step of stepperData\">\n    <div class=\"step__day\">\n      <p>Day {{ step.day }}</p>\n    </div>\n    <div class=\"v-stepper\">\n      <div class=\"circle\"></div>\n      <div class=\"line\"></div>\n    </div>\n\n    <div class=\"content\">\n      <div class=\"content__item\" *ngFor=\"let stepItem of step.steps\">\n        <div class=\"content__item__main\">\n          <h2>{{ stepItem.time }}</h2>\n          <p>{{ stepItem.title }}</p>\n          <img src=\"{{ stepItem.image }}\" alt=\"\" />\n        </div>\n        <div class=\"content__item__description\">\n          <p>\n            {{ stepItem.description }}\n          </p>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n"
        },
        {
            "name": "TicketCounterComponent",
            "id": "component-TicketCounterComponent-3c31b6406678a3a30ede5e0e976c8669",
            "file": "src/app/common/widgets/ticket-counter/ticket-counter.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [
                {
                    "name": "{\n    provide: NG_VALUE_ACCESSOR, useExisting: forwardRef(() => TicketCounterComponent), multi: true,\n}",
                    "type": "component"
                }
            ],
            "selector": "app-ticket-counter",
            "styleUrls": [
                "./ticket-counter.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./ticket-counter.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "prefix",
                    "line": 22,
                    "type": "string"
                },
                {
                    "name": "formControl",
                    "line": 40,
                    "type": "FormControl",
                    "inheritance": {
                        "file": "ControlValueAccessorConnector"
                    }
                },
                {
                    "name": "formControlName",
                    "line": 45,
                    "type": "string",
                    "inheritance": {
                        "file": "ControlValueAccessorConnector"
                    }
                },
                {
                    "name": "hasBorder",
                    "defaultValue": "false",
                    "line": 37,
                    "inheritance": {
                        "file": "ControlValueAccessorConnector"
                    }
                },
                {
                    "name": "hideIcon",
                    "defaultValue": "false",
                    "line": 42,
                    "type": "boolean",
                    "inheritance": {
                        "file": "ControlValueAccessorConnector"
                    }
                },
                {
                    "name": "placeholder",
                    "defaultValue": "''",
                    "line": 47,
                    "type": "string",
                    "inheritance": {
                        "file": "ControlValueAccessorConnector"
                    }
                },
                {
                    "name": "values",
                    "line": 36,
                    "type": "any[]",
                    "inheritance": {
                        "file": "ControlValueAccessorConnector"
                    }
                },
                {
                    "name": "icon",
                    "defaultValue": "ICONS.profile",
                    "line": 7,
                    "type": "ICONS",
                    "inheritance": {
                        "file": "ControlValueAccessorConnector"
                    }
                },
                {
                    "name": "icon",
                    "defaultValue": "ICONS.profile",
                    "line": 7,
                    "type": "ICONS",
                    "inheritance": {
                        "file": "MyControlAbstract"
                    }
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "hover",
                    "defaultValue": "false",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 24
                },
                {
                    "name": "formControlDirective",
                    "type": "FormControlDirective",
                    "optional": false,
                    "description": "",
                    "line": 35,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "FormControlDirective, {static: true}"
                        }
                    ],
                    "inheritance": {
                        "file": "ControlValueAccessorConnector"
                    }
                },
                {
                    "name": "isfocused",
                    "defaultValue": "false",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 9,
                    "inheritance": {
                        "file": "ControlValueAccessorConnector"
                    }
                },
                {
                    "name": "isfocused",
                    "defaultValue": "false",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 9,
                    "inheritance": {
                        "file": "MyControlAbstract"
                    }
                }
            ],
            "methodsClass": [
                {
                    "name": "add",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 42
                },
                {
                    "name": "checkVal",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 36
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 25
                },
                {
                    "name": "onHover",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 30
                },
                {
                    "name": "onOut",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 33
                },
                {
                    "name": "sub",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 48
                },
                {
                    "name": "registerOnChange",
                    "args": [
                        {
                            "name": "fn",
                            "type": "any"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 68,
                    "jsdoctags": [
                        {
                            "name": "fn",
                            "type": "any",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "ControlValueAccessorConnector"
                    }
                },
                {
                    "name": "registerOnTouched",
                    "args": [
                        {
                            "name": "fn",
                            "type": "any"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 64,
                    "jsdoctags": [
                        {
                            "name": "fn",
                            "type": "any",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "ControlValueAccessorConnector"
                    }
                },
                {
                    "name": "setDisabledState",
                    "args": [
                        {
                            "name": "isDisabled",
                            "type": "boolean"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 76,
                    "jsdoctags": [
                        {
                            "name": "isDisabled",
                            "type": "boolean",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "ControlValueAccessorConnector"
                    }
                },
                {
                    "name": "writeValue",
                    "args": [
                        {
                            "name": "obj",
                            "type": "any"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 72,
                    "jsdoctags": [
                        {
                            "name": "obj",
                            "type": "any",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "ControlValueAccessorConnector"
                    }
                },
                {
                    "name": "onFocus",
                    "args": [
                        {
                            "name": "e",
                            "type": "any"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 10,
                    "jsdoctags": [
                        {
                            "name": "e",
                            "type": "any",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "ControlValueAccessorConnector"
                    }
                },
                {
                    "name": "onFocusOut",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 14,
                    "inheritance": {
                        "file": "ControlValueAccessorConnector"
                    }
                },
                {
                    "name": "onFocus",
                    "args": [
                        {
                            "name": "e",
                            "type": "any"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 10,
                    "jsdoctags": [
                        {
                            "name": "e",
                            "type": "any",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "MyControlAbstract"
                    }
                },
                {
                    "name": "onFocusOut",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 14,
                    "inheritance": {
                        "file": "MyControlAbstract"
                    }
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, forwardRef, Input, OnInit } from '@angular/core';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { ControlValueAccessorConnector } from 'src/app/data/abstract/control-value-accessor-connector';\nimport { ICONS } from 'src/app/data/utils/enums';\n\n@Component({\n  selector: 'app-ticket-counter',\n  templateUrl: './ticket-counter.component.html',\n  styleUrls: ['./ticket-counter.component.scss'],\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => TicketCounterComponent),\n      multi: true,\n    },\n  ],\n})\nexport class TicketCounterComponent\n  extends ControlValueAccessorConnector\n  implements OnInit\n{\n  @Input() prefix: string;\n\n  hover = false;\n  ngOnInit(): void {\n    this.icon = ICONS.ticket;\n    if (!this.control.value || isNaN(this.control.value))\n      this.control.setValue(0);\n  }\n  onHover() {\n    this.hover = true;\n  }\n  onOut() {\n    this.hover = false;\n  }\n  checkVal() {\n    const val = this.control?.value ?? null;\n    if (!val || isNaN(val)) {\n      this.control.setValue(0);\n    }\n  }\n  add() {\n    this.checkVal();\n    const old = +this.control.value;\n\n    this.control.setValue(old + 1);\n  }\n  sub() {\n    this.checkVal();\n    const old = +this.control.value;\n    this.control.setValue(old - 1 < 0 ? 0 : old - 1);\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import \"/src/assets/css/abstract/variables\";\n@import \"/src/assets/css/abstract/mixins\";\n.main {\n  width: 100%;\n  height: 100%;\n  display: flex;\n  flex-direction: row;\n  background: white;\n  font-size: 1.5rem;\n  color: grey;\n  align-items: center;\n  // border: $border;\n  padding: 1rem;\n  &:hover {\n    border: $accent solid 1px;\n  }\n\n  .row {\n    margin-left: auto;\n    width: 20%;\n    order: 3;\n    display: flex;\n    flex-direction: row;\n    justify-content: space-evenly;\n    .key {\n      color: $accent;\n      transition: transform 0.2s;\n      &:hover {\n        transform: scale(1.1);\n      }\n    }\n    &:lang(ar) {\n      margin-left: unset;\n      margin-right: auto;\n    }\n  }\n  .prefix {\n    order: 1;\n    margin: 0rem 1rem;\n    font-size: 1.5rem;\n    color: grey;\n    text-transform: capitalize;\n    width: 100%;\n    display: flex;\n    align-items: center;\n  }\n  input {\n    text-align: end;\n    border: none;\n    width: 100%;\n    height: 100%;\n    order: 2;\n    margin: $form-file-padding;\n    &:focus {\n      outline: none;\n    }\n  }\n  input:focus + mat-icon {\n    color: $accent;\n  }\n}\n",
                    "styleUrl": "./ticket-counter.component.scss"
                }
            ],
            "stylesData": "",
            "extends": "ControlValueAccessorConnector",
            "implements": [
                "OnInit"
            ],
            "templateData": "<div\n  class=\"main\"\n  on-mouseenter=\"onHover()\"\n  on-mouseleave=\"onOut()\"\n  [ngClass]=\"{ 'all-border': hasBorder, 'err-border': !!errmsg }\"\n>\n  <p class=\"prefix\">{{prefix}}: </p>\n  <input\n    on-focus=\"onFocus($event)\"\n    on-focusout=\"onFocusOut()\"\n    [formControl]=\"control\"\n    type=\"number\"\n    readonly\n    #input\n  />\n\n  <app-validation-icon\n    [hidden]=\"hideIcon\"\n    [icon]=\"icon\"\n    [isFocused]=\"isfocused || hover\"\n    [errors]=\"errmsg\"\n  ></app-validation-icon>\n\n  <div class=\"row\">\n    <mat-icon (click)=\"sub()\" class=\"up key\">expand_more</mat-icon>\n    <mat-icon (click)=\"add()\" class=\"down key\">expand_less</mat-icon>\n  </div>\n</div>\n<p class=\"validation-text\" *ngIf=\"errmsg\">*{{ errmsg }}</p>\n"
        },
        {
            "name": "TourInformationComponent",
            "id": "component-TourInformationComponent-60a0726d469b15ddbbbdb070a92b3894",
            "file": "src/app/pages/tour-information/tour-information.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-tour-information",
            "styleUrls": [
                "./tour-information.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./tour-information.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "bookForm",
                    "type": "FormGroup",
                    "optional": false,
                    "description": "",
                    "line": 30
                },
                {
                    "name": "dialog",
                    "type": "MatDialog",
                    "optional": false,
                    "description": "",
                    "line": 45,
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "icons",
                    "defaultValue": "ICONS",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 31
                },
                {
                    "name": "isSubmiting",
                    "defaultValue": "false",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 33
                },
                {
                    "name": "loc",
                    "type": "LocalService",
                    "optional": false,
                    "description": "",
                    "line": 43,
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "math",
                    "defaultValue": "Math",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 36
                },
                {
                    "name": "phoneInitiated",
                    "defaultValue": "false",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 37
                },
                {
                    "name": "placesSwiperIndex",
                    "defaultValue": "0",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 34
                },
                {
                    "name": "planLocations",
                    "type": "LocationModel[]",
                    "optional": false,
                    "description": "",
                    "line": 32
                },
                {
                    "name": "relatedTrips",
                    "type": "TripModel[]",
                    "optional": false,
                    "description": "",
                    "line": 29
                },
                {
                    "name": "trip",
                    "type": "TripModel",
                    "optional": false,
                    "description": "",
                    "line": 28
                }
            ],
            "methodsClass": [
                {
                    "name": "getCarouselImages",
                    "args": [],
                    "optional": false,
                    "returnType": "string[]",
                    "typeParameters": [],
                    "line": 105
                },
                {
                    "name": "getCarouselTexts",
                    "args": [],
                    "optional": false,
                    "returnType": "string[]",
                    "typeParameters": [],
                    "line": 108
                },
                {
                    "name": "goToMapLocation",
                    "args": [
                        {
                            "name": "id",
                            "type": "string"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 129,
                    "jsdoctags": [
                        {
                            "name": "id",
                            "type": "string",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "goToTour",
                    "args": [
                        {
                            "name": "id",
                            "type": "string"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 111,
                    "jsdoctags": [
                        {
                            "name": "id",
                            "type": "string",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngAfterViewChecked",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 67
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 48
                },
                {
                    "name": "onFormSubmitted",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 70,
                    "modifierKind": [
                        120
                    ]
                },
                {
                    "name": "openDialog",
                    "args": [
                        {
                            "name": "success",
                            "type": "boolean",
                            "defaultValue": "true"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 114,
                    "jsdoctags": [
                        {
                            "name": "success",
                            "type": "boolean",
                            "defaultValue": "true",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "placesGirdOnSwipe",
                    "args": [
                        {
                            "name": "right",
                            "type": "",
                            "defaultValue": "true"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 138,
                    "jsdoctags": [
                        {
                            "name": "right",
                            "type": "",
                            "defaultValue": "true",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "scrollToBooking",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 134
                },
                {
                    "name": "showOnMap",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 98
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import {\n  AfterViewChecked,\n  ChangeDetectorRef,\n  Component,\n  OnInit,\n} from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { LocationModel } from 'src/app/data/models/LocationModel';\nimport { TripModel } from 'src/app/data/models/TripModel';\nimport { LocalService } from 'src/app/data/services/local.service';\nimport { Enum_Booking_Currency } from 'src/app/data/services/saferniGraphql.service';\nimport { TripService } from 'src/app/data/services/trip.service';\nimport { ICONS } from 'src/app/data/utils/enums';\nimport { BookingService } from 'src/app/data/services/booking.service';\nimport { MatDialog } from '@angular/material/dialog';\nimport { BookingSubmitPopupComponent } from 'src/app/common/widgets/booking-submit-popup/booking-submit-popup.component';\nimport { priceData } from 'src/app/data/pipes/price-caculator.pipe';\nimport { tap } from 'rxjs/operators';\nimport { GuestCountModel } from 'src/app/data/models/guestCountModel';\n\n@Component({\n  selector: 'app-tour-information',\n  templateUrl: './tour-information.component.html',\n  styleUrls: ['./tour-information.component.scss'],\n})\nexport class TourInformationComponent implements OnInit, AfterViewChecked {\n  trip: TripModel;\n  relatedTrips: TripModel[];\n  bookForm: FormGroup;\n  icons = ICONS;\n  planLocations: LocationModel[];\n  isSubmiting = false;\n  placesSwiperIndex = 0;\n\n  math = Math;\n  phoneInitiated = false;\n\n  constructor(\n    private router: Router,\n    private activatedRoute: ActivatedRoute,\n    private tripService: TripService,\n    public loc: LocalService,\n    private bookingService: BookingService,\n    public dialog: MatDialog,\n    private readonly changeDetectorRef: ChangeDetectorRef\n  ) {}\n  ngOnInit(): void {\n    this.bookForm = new FormGroup({\n      fullName: new FormControl(null, [Validators.required]),\n      phone: new FormControl('', [Validators.required]),\n      email: new FormControl(null, [Validators.required, Validators.email]),\n      arrivalDate: new FormControl(null, [Validators.required]),\n      child: new FormControl(0),\n      adult: new FormControl(1),\n      message: new FormControl(null),\n    });\n    this.activatedRoute.data.subscribe(async (data) => {\n      this.trip = data.dataMap.trip;\n      this.planLocations = data.dataMap.locations ?? [];\n      this.relatedTrips = await this.tripService.getRelatedTrips(this.trip);\n      this.relatedTrips = this.relatedTrips.filter(\n        (t) => t.id !== this.trip.id\n      );\n    });\n  }\n  ngAfterViewChecked(): void {\n    this.changeDetectorRef.detectChanges();\n  }\n  async onFormSubmitted() {\n    Object.keys(this.bookForm.controls).forEach((field) => {\n      const control = this.bookForm.get(field);\n      control?.markAsTouched({ onlySelf: true });\n    });\n    if (this.bookForm.valid) {\n      this.isSubmiting = true;\n\n      let result = await this.bookingService.createBooking(\n        this.trip.id,\n        this.bookForm.get('fullName')?.value,\n        this.trip.basePrice,\n        this.trip.basePeopleCount,\n        this.trip.discount,\n        Enum_Booking_Currency.Dollar,\n        this.bookForm.get('phone')?.value.internationalNumber,\n        this.bookForm.get('arrivalDate')?.value,\n        this.bookForm.get('email')?.value,\n        this.bookForm.get('adult')?.value,\n        this.bookForm.get('child')?.value,\n\n        this.bookForm.get('message')?.value\n      );\n\n      this.isSubmiting = false;\n      this.openDialog(result);\n    }\n  }\n  showOnMap() {\n    this.router.navigate([\n      '/map',\n      this.activatedRoute.snapshot.paramMap.get('id'),\n    ]);\n  }\n\n  getCarouselImages(): string[] {\n    return this.planLocations?.map((l) => l.images[0].url) ?? [];\n  }\n  getCarouselTexts(): string[] {\n    return this.planLocations?.map((l) => l.name) ?? [];\n  }\n  goToTour(id: string) {\n    this.router.navigate(['/tours', id]);\n  }\n  openDialog(success: boolean = true): void {\n    const dialogRef = this.dialog.open(BookingSubmitPopupComponent, {\n      data: { success: success },\n    });\n\n    dialogRef.afterClosed().subscribe((result) => {\n      console.log('Hi There for you who is watching ');\n    });\n  }\n  get guestData(): GuestCountModel {\n    return {\n      adult: +this.bookForm.value.adult ?? 0,\n      child: +this.bookForm.value.child ?? 0,\n    };\n  }\n  goToMapLocation(id: string) {\n    this.router.navigate(['/map', this.trip.id], {\n      queryParams: { location: id },\n    });\n  }\n  scrollToBooking() {\n    let el = document.getElementById('booking');\n    el!.scrollIntoView({ behavior: 'smooth' });\n  }\n  placesGirdOnSwipe(right = true) {\n    let dir = this.loc.locale === 'ar' ? !right : right;\n\n    if (\n      dir &&\n      this.placesSwiperIndex + 1 <\n        Math.ceil((this.planLocations?.length ?? 0) / 4)\n    ) {\n      this.placesSwiperIndex++;\n    } else if (!dir && this.placesSwiperIndex > 0) {\n      this.placesSwiperIndex--;\n    }\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import \"/src/assets/css/abstract/variables\";\n@import \"/src/assets/css/abstract/mixins\";\n.feature-tooltip {\n  background: white;\n  font-size: 4.5rem !important;\n  .tooltip {\n    font-size: 4.5rem !important ;\n  }\n}\n\n$brdr: 1px grey solid;\n@mixin cellSettings {\n  padding-bottom: 2.25rem;\n  border-bottom: 1px solid $dividerColor;\n  margin-bottom: 4rem;\n}\n\n.tour-infomation {\n  text-align: start;\n  padding-bottom: 20rem;\n  position: relative;\n  app-banner-carousel {\n    position: relative;\n  }\n  .fab {\n    position: fixed;\n    right: 10rem;\n    bottom: 20rem;\n\n    z-index: 9999999999999999;\n\n    cursor: pointer;\n\n    &:lang(ar) {\n      right: unset;\n      left: 10rem;\n    }\n  }\n  .whatsapp-fab {\n    width: 7rem;\n    height: 7rem;\n    background-color: transparent;\n    box-shadow: $subtleShadow;\n    border-radius: 50%;\n    img {\n      width: 100%;\n      height: 100%;\n    }\n  }\n  .circle-fab {\n    width: 7rem;\n    height: 7rem;\n    border-radius: 50%;\n    border: solid 5px white;\n\n    box-shadow: $subtleShadow;\n    .inner-circle-fab {\n      background-color: $accent;\n      padding: 5%;\n      width: 100%;\n      border-radius: 50%;\n      height: 100%;\n      text-align: center;\n\n      display: flex;\n      justify-content: center;\n      align-items: center;\n\n      box-shadow: inset 0px 3px 6px 0px rgba($color: #000000, $alpha: 0.15);\n\n      p {\n        padding: 0rem;\n        margin: 0rem;\n        color: white;\n        text-align: center;\n        font-size: 1.3rem;\n        font-weight: bold;\n      }\n    }\n  }\n\n  &__content-grid {\n    display: flex;\n    justify-content: center;\n    align-items: flex-start;\n    padding-top: 7.5rem;\n    position: relative;\n    .trip-info-card {\n      height: min-content;\n      display: flex;\n      flex-direction: column;\n      box-shadow: $subtleShadow;\n\n      .trip-card-header {\n        position: relative;\n        width: 100%;\n\n        app-read-only-stars {\n          position: absolute;\n          right: 2rem;\n          top: 1rem;\n        }\n        &__image {\n          height: 20rem;\n        }\n      }\n\n      .trip-card-brief-info {\n        display: flex;\n        flex-direction: column;\n\n        padding: 2rem;\n\n        &__city-name {\n          font-size: 2.5rem;\n          font-weight: 400;\n          font-family: var(--secondary-font);\n          margin-bottom: 1rem;\n        }\n        &__pills {\n          display: inline-block;\n          & > * {\n            vertical-align: 1rem;\n            margin-right: 1rem;\n            &:lang(ar) {\n              margin-right: unset;\n              margin-left: 1rem;\n            }\n          }\n        }\n        &__price-duration {\n          font-weight: 400;\n          font-size: 1.9rem;\n          text-transform: capitalize;\n          color: #717171;\n\n          &:lang(ar) {\n            font-size: 2.2rem;\n            font-weight: 300;\n          }\n        }\n      }\n\n      .trip-card-features {\n        padding: 2rem;\n        &__row {\n          display: flex;\n\n          margin-bottom: 2rem;\n          h2 {\n            flex: 1 0 50%;\n            text-transform: capitalize;\n            font-size: 2rem;\n            font-weight: bold;\n            font-family: var(--primary-font);\n            text-align: start;\n          }\n          p {\n            flex: 1 0 50%;\n            text-transform: capitalize;\n            font-size: 1.75rem;\n            font-weight: 300;\n            font-family: var(--primary-font);\n\n            text-align: start;\n            &:lang(ar) {\n              font-family: var(--secondary-font);\n            }\n          }\n        }\n      }\n\n      .main-btn {\n        align-self: flex-start;\n        margin: 2rem 2rem;\n        p {\n          font-size: 1.75rem;\n          font-weight: 600;\n          color: white;\n          margin: 0;\n\n          &:lang(ar) {\n            font-family: var(--secondary-font);\n          }\n        }\n      }\n    }\n    .content-grid-col1 {\n      width: 51rem;\n      margin-right: 17rem;\n\n      &:lang(ar) {\n        margin-right: unset;\n        margin-left: 17rem;\n      }\n      .trip-info-card {\n        display: none;\n      }\n      .brief-intro {\n        @include cellSettings;\n        &__city-name {\n          font-weight: bold;\n          font-size: 3rem;\n        }\n        &__description {\n          font-weight: 400;\n          font-size: 1.5rem;\n          color: #717171;\n        }\n        &__cost-duration {\n          font-weight: 400;\n          font-size: 3rem;\n          color: #252629;\n        }\n        &__pills {\n          display: flex;\n          justify-content: flex-start;\n          align-items: center;\n          margin: 1rem 0rem 1.5rem 0rem;\n          & > * {\n            margin-right: 1rem;\n            &:lang(ar) {\n              margin-right: unset;\n              margin-left: 1rem;\n            }\n          }\n        }\n      }\n\n      .places {\n        display: flex;\n        flex-direction: column;\n        @include cellSettings;\n        .places__swiper {\n          position: relative;\n          margin-top: 2rem;\n          .slider {\n            width: 100%;\n\n            .places__grid {\n              display: grid;\n              grid-template-columns: repeat(2, 1fr);\n              grid-auto-rows: calc(calc(51rem - 2.2rem) / 2);\n\n              gap: 2.2rem;\n\n              &__item {\n                width: 100%;\n                height: 100%;\n                position: relative;\n\n                app-saferni-image {\n                  position: absolute;\n                  width: 100%;\n                  height: 100%;\n                }\n                p {\n                  position: absolute;\n                  left: 10px;\n                  bottom: 10px;\n                  font-size: 2.1rem;\n                  right: 10px;\n                  font-family: var(--secondary-font);\n                  margin: 0rem;\n                  color: white;\n                }\n              }\n            }\n          }\n          .swiper-arrow {\n            position: absolute;\n            cursor: pointer;\n\n            top: 50%;\n            text-align: center;\n            background-color: white;\n            width: 5rem;\n            height: 5rem;\n            z-index: 1;\n\n            border-radius: 50%;\n            transition: all 0.2s ease-out;\n            display: grid;\n            place-items: center;\n\n            box-shadow: 0px 3px 15px rgba(0, 0, 0, 0.2);\n            transform: translateY(-50%);\n\n            &:active {\n              transform: translateY(-40%);\n            }\n\n            i {\n              font-size: 1.5rem;\n            }\n\n            &.left {\n              left: 0%;\n            }\n            &.right {\n              right: 0%;\n            }\n          }\n        }\n      }\n\n      .features {\n        @include cellSettings;\n\n        &__grid {\n          margin-top: 2rem;\n          gap: 1rem;\n          display: grid;\n          grid-template-columns: repeat(2, 50%);\n\n          &__item {\n            display: flex;\n            justify-content: flex-start;\n            align-items: flex-start;\n\n            i {\n              font-size: 2rem;\n              color: $accent;\n\n              margin: 5px 1rem;\n            }\n            .feature-details {\n              display: inline;\n              p {\n                font-size: 2rem;\n                font-weight: 300;\n                text-transform: capitalize;\n                text-align: start;\n                padding: 0rem;\n                display: inline;\n              }\n              .info {\n                display: inline;\n                margin: 5px 10px;\n\n                color: lightgrey;\n                font-size: 2rem;\n              }\n            }\n          }\n        }\n      }\n\n      .booking-section {\n        @include cellSettings;\n\n        .booking-form {\n          height: 100%;\n          margin-top: 3rem;\n          display: flex;\n          flex-direction: column;\n          &__summary {\n            padding: 1rem;\n            width: 100%;\n\n            border: solid 1px $border-color;\n            border-top: solid 5px $accent;\n            &__header {\n              font-size: 2rem;\n              font-weight: 600;\n              text-transform: capitalize;\n            }\n            ul {\n              margin-top: 1rem;\n              display: flex;\n              flex-direction: column;\n              list-style: none;\n              padding-bottom: 1rem;\n              border-bottom: solid 1px $border-color;\n              li {\n                font-size: 1.9rem;\n                font-weight: 400;\n                text-transform: capitalize;\n                &::before {\n                  content: \"\\2022\";\n                  color: $accent;\n                  font-weight: bold;\n                  display: inline-block;\n                  width: 2rem;\n                }\n              }\n            }\n            .hd {\n              height: 1px;\n              width: 100%;\n              color: $border-color;\n            }\n            &__price {\n              margin-top: 1rem;\n              display: flex;\n              justify-content: flex-start;\n              align-items: center;\n\n              p {\n                font-size: 2rem;\n                font-weight: 600;\n              }\n              p:nth-child(1) {\n                color: #252629;\n                margin-right: 1rem;\n                &:lang(ar) {\n                  margin-right: unset;\n                  margin-left: 1rem;\n                }\n              }\n              p:nth-child(2) {\n                color: $accent;\n              }\n            }\n          }\n          button p {\n            font-size: 1.75rem;\n            font-weight: 600;\n            color: white;\n            margin: 0;\n          }\n          & > * {\n            margin-bottom: 3rem;\n          }\n          & > app-custom-input {\n            height: 5rem;\n          }\n          & > app-custom-textarea {\n            height: 10rem;\n          }\n        }\n      }\n    }\n\n    .content-grid-col2 {\n      width: 43rem;\n      position: sticky;\n      top: 5rem;\n\n      align-self: flex-start;\n    }\n  }\n\n  .similar-tours {\n    display: grid;\n    grid-template-columns: 1fr $main-content-width 1fr;\n    grid-template-rows: 10rem auto;\n    gap: 1rem;\n\n    &__header {\n      grid-column: 2/3;\n      grid-row: 1/2;\n    }\n    &__grid {\n      grid-column: 2 / 3;\n      grid-row: 2/3;\n      width: 100%;\n      height: 100%;\n      display: grid;\n      gap: 1rem;\n      grid-template-columns: repeat(5, 1fr);\n      grid-auto-rows: calc(111rem / 5);\n    }\n  }\n\n  @include respondMax(1150px) {\n    &__content-grid {\n      .content-grid-col1 {\n        width: 40.8rem;\n        margin-right: 13.6rem;\n\n        &:lang(ar) {\n          margin-right: unset;\n          margin-left: 13.6rem;\n        }\n      }\n      .content-grid-col2 {\n        width: 34.4rem;\n      }\n    }\n    .similar-tours {\n      grid-template-columns: 1fr 88.8rem 1fr;\n\n      &__grid {\n        grid-template-columns: repeat(4, 1fr);\n        grid-auto-rows: calc(88.8rem / 4);\n      }\n    }\n  }\n  @include respondMax(800px) {\n    .fab {\n      right: 5rem;\n      bottom: 20rem;\n\n      &:lang(ar) {\n        left: 5rem;\n        right: unset;\n      }\n    }\n    &__content-grid {\n      z-index: 1;\n\n      width: 75%;\n      position: relative;\n      padding: 0rem;\n      margin-right: auto;\n      margin-left: auto;\n      display: flex;\n      flex-direction: column;\n      transform: translateY(-3%);\n\n      .content-grid-col2 {\n        display: none;\n      }\n      .content-grid-col1 {\n        width: 100%;\n\n        .trip-info-card {\n          display: inline-block;\n          width: 100%;\n          // box-shadow: $subtleShadow;\n          margin-bottom: 5rem;\n        }\n      }\n    }\n    .similar-tours {\n      width: 75%;\n      margin-right: auto;\n      margin-left: auto;\n      padding-bottom: 20rem;\n      display: flex;\n      flex-direction: column;\n      transform: translateY(-3%);\n\n      &__grid {\n        margin-top: 2rem;\n        display: grid;\n        grid-template-columns: repeat(2, 1fr);\n        grid-auto-rows: 37.5vw;\n        gap: 1rem;\n\n        justify-content: center;\n      }\n    }\n  }\n}\n\n// .date ::ng-deep .main {\n//   padding: 0 1rem;\n// }\n.section-title {\n  font-size: 2.5rem;\n  font-weight: bold;\n  text-transform: capitalize;\n\n  &:lang(ar) {\n    font-family: var(--secondary-font);\n  }\n}\n.section-description {\n  font-size: 1.5rem;\n  font-weight: 400;\n  text-transform: capitalize;\n  color: #252629;\n}\n",
                    "styleUrl": "./tour-information.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "router",
                        "type": "Router"
                    },
                    {
                        "name": "activatedRoute",
                        "type": "ActivatedRoute"
                    },
                    {
                        "name": "tripService",
                        "type": "TripService"
                    },
                    {
                        "name": "loc",
                        "type": "LocalService"
                    },
                    {
                        "name": "bookingService",
                        "type": "BookingService"
                    },
                    {
                        "name": "dialog",
                        "type": "MatDialog"
                    },
                    {
                        "name": "changeDetectorRef",
                        "type": "ChangeDetectorRef"
                    }
                ],
                "line": 37,
                "jsdoctags": [
                    {
                        "name": "router",
                        "type": "Router",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "activatedRoute",
                        "type": "ActivatedRoute",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "tripService",
                        "type": "TripService",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "loc",
                        "type": "LocalService",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "bookingService",
                        "type": "BookingService",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "dialog",
                        "type": "MatDialog",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "changeDetectorRef",
                        "type": "ChangeDetectorRef",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit",
                "AfterViewChecked"
            ],
            "accessors": {
                "guestData": {
                    "name": "guestData",
                    "getSignature": {
                        "name": "guestData",
                        "type": "",
                        "returnType": "GuestCountModel",
                        "line": 123
                    }
                }
            },
            "templateData": "<div class=\"tour-infomation\">\n  <app-banner-carousel\n    [images]=\"getCarouselImages()\"\n    [centeredTexts]=\"getCarouselTexts()\"\n    [screenHeightPercentage]=\"60\"\n  ></app-banner-carousel>\n\n  <div class=\"fab\" style=\"bottom: 5rem\" (click)=\"scrollToBooking()\">\n    <div class=\"circle-fab\">\n      <div class=\"inner-circle-fab\">\n        <p>{{ \"tour-info.book\" | transloco }}</p>\n      </div>\n    </div>\n  </div>\n  <div class=\"fab\" style=\"bottom: 13rem\">\n    <div class=\"whatsapp-fab\" socialLink [type]=\"'whatsapp'\">\n      <img src=\"../../../assets/images/svgs/whatsapp.svg\" />\n    </div>\n  </div>\n  <div class=\"tour-infomation__content-grid\">\n    <div class=\"content-grid-col1\">\n      <section class=\"trip-info-card\">\n        <div class=\"trip-card-header\">\n          <div class=\"trip-card-header__image\">\n            <app-saferni-image\n              [imageModel]=\"trip.previewImage\"\n            ></app-saferni-image>\n          </div>\n\n          <!-- <app-read-only-stars\n            [stars]=\"3.5\"\n            [color]=\"'#fff'\"\n          ></app-read-only-stars> -->\n        </div>\n        <div class=\"trip-card-brief-info\">\n          <h2 class=\"trip-card-brief-info__city-name\">\n            {{ trip.name }}\n          </h2>\n          <div class=\"trip-card-brief-info__pills\">\n            <app-pill\n              [text]=\"'general.duration' | transloco: { days: trip.duration }\"\n              [iconClass]=\"'las la-clock'\"\n            ></app-pill>\n\n            <app-pill\n              [text]=\"trip | travelType | transloco\"\n              [iconClass]=\"'las la-car-side'\"\n            ></app-pill>\n            <!-- <app-pill\n              [text]=\"'general.peopleCount' | transloco: { count: '1-7' }\"\n              [iconClass]=\"'las la-user-friends'\"\n            ></app-pill> -->\n\n            <app-pill\n              [text]=\"'general.adjustable' | transloco\"\n              [iconClass]=\"'las la-sliders-h'\"\n            ></app-pill>\n          </div>\n        </div>\n\n        <div class=\"trip-card-features\">\n          <div class=\"trip-card-features__row\">\n            <h2>{{ \"tour-info.destination\" | transloco }}</h2>\n            <p>{{ trip.city.name }}</p>\n          </div>\n          <div class=\"trip-card-features__row\">\n            <h2>{{ \"tour-info.departure\" | transloco }}</h2>\n            <p>{{ trip.city.name }}</p>\n          </div>\n          <div class=\"trip-card-features__row\">\n            <h2>{{ \"tour-info.departureTime\" | transloco }}</h2>\n            <p>10:30 AM</p>\n          </div>\n          <div class=\"trip-card-features__row\" *ngIf=\"trip.hotel\">\n            <h2>{{ \"tour-info.accomidation\" | transloco }}</h2>\n            <p>{{ trip.hotel.name }}</p>\n          </div>\n          <div class=\"trip-card-features__row\">\n            <h2>{{ \"various.price\" | transloco }}</h2>\n            <p>{{ trip.basePrice.toString() | price }}</p>\n          </div>\n        </div>\n\n        <button class=\"main-btn\" (click)=\"showOnMap()\">\n          <p>{{ \"tour-info.showOnMap\" | transloco }}</p>\n        </button>\n      </section>\n      <section class=\"brief-intro\">\n        <h1 class=\"brief-intro__city-name\">{{ trip.name }}</h1>\n        <div class=\"brief-intro__pills\">\n          <app-pill\n            [text]=\"'general.duration' | transloco: { days: trip.duration }\"\n            [iconClass]=\"'las la-clock'\"\n          ></app-pill>\n          <app-pill\n            [text]=\"trip | travelType | transloco\"\n            [iconClass]=\"'las la-car-side'\"\n          ></app-pill>\n          <!-- <app-pill\n            [text]=\"'general.peopleCount' | transloco: { count: '1-7' }\"\n            [iconClass]=\"'las la-user-friends'\"\n          ></app-pill> -->\n          <!-- <app-pill\n            [text]=\"trip.basePrice.toString() | price\"\n            [iconClass]=\"'las la-tag'\"\n          ></app-pill> -->\n          <app-pill\n            [text]=\"'general.adjustable' | transloco\"\n            [iconClass]=\"'las la-sliders-h'\"\n          ></app-pill>\n        </div>\n        <p class=\"brief-intro__description\">\n         {{trip.description}}\n        </p>\n      </section>\n\n      <section class=\"places\">\n        <h2 class=\"section-title\">\n          {{ \"tour-info.visitedPlaces\" | transloco }}\n        </h2>\n        <p class=\"section-description\">\n          {{ \"tour-info.visitedPlacesInfo\" | transloco }}\n        </p>\n        <div class=\"places__swiper\">\n          <swiper\n            class=\"slider\"\n            [slidesPerView]=\"1\"\n            [spaceBetween]=\"25\"\n            [grabCursor]=\"true\"\n            [(index)]=\"placesSwiperIndex\"\n          >\n            <ng-template\n              swiperSlide\n              class=\"slide\"\n              style=\"width: 100%; height: 100%; cursor: pointer\"\n              *ngFor=\"\n                let group of [].constructor(\n                  math.ceil(planLocations.length / 4)\n                );\n                let i = index\n              \"\n            >\n              <div class=\"places__grid\" swiperSlide>\n                <div\n                  class=\"places__grid__item\"\n                  *ngFor=\"\n                    let item of planLocations.slice(i * 4, i * 4 + 4);\n                    let j = index\n                  \"\n                  (click)=\"goToMapLocation(item.id)\"\n                >\n                  <app-saferni-image [imageModel]=\"item.images[0]\">\n                  </app-saferni-image>\n                  <p>{{ item.name }}</p>\n                </div>\n              </div>\n            </ng-template>\n          </swiper>\n          <div\n            class=\"swiper-arrow left\"\n            (click)=\"placesGirdOnSwipe(false)\"\n            *ngIf=\"planLocations.length > 4\"\n          >\n            <i class=\"fa fa-chevron-left\"></i>\n          </div>\n          <div\n            class=\"swiper-arrow right\"\n            (click)=\"placesGirdOnSwipe(true)\"\n            *ngIf=\"planLocations.length > 4\"\n          >\n            <i class=\"fa fa-chevron-right\"></i>\n          </div>\n        </div>\n        <!-- <div class=\"places__grid\">\n          <div\n            class=\"places__grid__item\"\n            *ngFor=\"let item of planLocations; let i = index\"\n            (click)=\"goToMapLocation(item.id)\"\n          >\n            <app-saferni-image [imageModel]=\"item.images[0]\">\n            </app-saferni-image>\n            <p>{{ item.name }}</p>\n          </div>\n        </div> -->\n      </section>\n\n      <section class=\"features\">\n        <h2 class=\"section-title\">{{ \"tour-info.included\" | transloco }}</h2>\n        <p class=\"section-description\">\n          {{ \"tour-info.icludedInfo\" | transloco }}\n        </p>\n        <div class=\"features__grid\">\n          <div\n            class=\"features__grid__item\"\n            *ngFor=\"let feature of trip.features\"\n          >\n            <i\n              [ngClass]=\"\n                feature.included ? 'fa fa-check-square' : 'fa fa-times'\n              \"\n              [ngStyle]=\"{ color: feature.included ? '#20aed5' : 'red' }\"\n            ></i>\n            <div class=\"feature-details\">\n              <p>{{ feature.name }}</p>\n              <i\n                class=\"fa fa-info-circle info\"\n                *ngIf=\"feature.info\"\n                matTooltip=\"{{ feature.info }}\"\n                matTooltipClass=\"feature-tooltip\"\n              ></i>\n            </div>\n          </div>\n        </div>\n      </section>\n\n      <section class=\"booking-section\" id=\"booking\">\n        <h2 class=\"section-title\">\n          {{ \"tour-info.bookingInfo\" | transloco }}\n        </h2>\n        <p class=\"section-description\">\n          {{ \"tour-info.bookingNotShared\" | transloco }}\n        </p>\n        <form\n          [formGroup]=\"bookForm\"\n          (ngSubmit)=\"onFormSubmitted()\"\n          class=\"booking-form\"\n        >\n          <app-custom-input\n            formControlName=\"fullName\"\n            [icon]=\"icons.profile\"\n            [placeholder]=\"'inputs.name' | transloco\"\n            [hasBorder]=\"true\"\n          ></app-custom-input>\n\n          <app-phone-input\n            [hasBorder]=\"true\"\n            formControlName=\"phone\"\n            [icon]=\"icons.phone\"\n          ></app-phone-input>\n          <app-custom-input\n            [hasBorder]=\"true\"\n            formControlName=\"email\"\n            [icon]=\"icons.mail\"\n            [placeholder]=\"'inputs.email' | transloco\"\n          ></app-custom-input>\n          <app-custom-date-picker\n            [hasBorder]=\"true\"\n            [icon]=\"icons.profile\"\n            formControlName=\"arrivalDate\"\n            [placeholder]=\"'inputs.arriveDate' | transloco\"\n          ></app-custom-date-picker>\n          <app-ticket-counter\n            [hasBorder]=\"true\"\n            formControlName=\"adult\"\n            [prefix]=\"'inputs.ticket.adult' | transloco\"\n          ></app-ticket-counter>\n          <app-ticket-counter\n            [hasBorder]=\"true\"\n            formControlName=\"child\"\n            [prefix]=\"'inputs.ticket.child' | transloco\"\n          ></app-ticket-counter>\n\n          <app-custom-textarea\n            formControlName=\"message\"\n            [hasBorder]=\"true\"\n            [placeholder]=\"'inputs.message' | transloco\"\n            [icon]=\"icons.message\"\n          ></app-custom-textarea>\n          <div class=\"booking-form__summary\">\n            <p class=\"booking-form__summary__header\">\n              {{ \"tour-info.bookingSummary\" | transloco }}\n            </p>\n            <ul class=\"booking-form__summary__list\">\n              <li>{{ trip.name }}</li>\n              <li\n                transloco=\"tour-info.summary.peopleCount\"\n                [translocoParams]=\"{\n                  children: bookForm.get('child')?.value,\n                  adults: bookForm.get('adult')?.value\n                }\"\n              ></li>\n              <li *ngIf=\"bookForm.get('arrivalDate')?.value\">\n                {{ \"tour-info.summary.arrivalDate\" | transloco }}:\n                {{ bookForm.get(\"arrivalDate\")?.value | date }}\n              </li>\n            </ul>\n\n            <div class=\"booking-form__summary__price\">\n              <p>{{ \"tour-info.summary.totalPrice\" | transloco }}:</p>\n              <p>\n                {{\n                  trip.priceData\n                    | priceCaculator: guestData\n                    | price: trip.priceData.currency\n                }}\n              </p>\n            </div>\n          </div>\n          <button\n            class=\"main-btn\"\n            type=\"submit\"\n            [ngClass]=\"{ 'button--loading': isSubmiting }\"\n          >\n            <p>{{ \"tour-info.book\" | transloco }}</p>\n          </button>\n        </form>\n      </section>\n    </div>\n    <div class=\"content-grid-col2\">\n      <section class=\"trip-info-card\">\n        <div class=\"trip-card-header\">\n          <div class=\"trip-card-header__image\">\n            <app-saferni-image\n              [imageModel]=\"trip.previewImage\"\n            ></app-saferni-image>\n          </div>\n          <app-read-only-stars\n            [stars]=\"4.5\"\n            [color]=\"'#fff'\"\n          ></app-read-only-stars>\n        </div>\n        <div class=\"trip-card-brief-info\">\n          <h2 class=\"trip-card-brief-info__city-name\">\n            {{ trip.name }}\n          </h2>\n          <div class=\"trip-card-brief-info__pills\">\n            <app-pill\n              [text]=\"'general.duration' | transloco: { days: trip.duration }\"\n              [iconClass]=\"'las la-clock'\"\n            ></app-pill>\n            <app-pill\n              [text]=\"trip | travelType | transloco\"\n              [iconClass]=\"'las la-car-side'\"\n            ></app-pill>\n            <!-- <app-pill\n              [text]=\"'general.peopleCount' | transloco: { count: '1-7' }\"\n              [iconClass]=\"'las la-user-friends'\"\n            ></app-pill> -->\n\n            <app-pill\n              [text]=\"'general.adjustable' | transloco\"\n              [iconClass]=\"'las la-sliders-h'\"\n            ></app-pill>\n          </div>\n        </div>\n\n        <div class=\"trip-card-features\">\n          <div class=\"trip-card-features__row\">\n            <h2>{{ \"tour-info.destination\" | transloco }}</h2>\n            <p>{{ trip.city.name }}</p>\n          </div>\n          <div class=\"trip-card-features__row\">\n            <h2>{{ \"tour-info.departure\" | transloco }}</h2>\n            <p>{{ trip.city.name }}</p>\n          </div>\n          <div class=\"trip-card-features__row\">\n            <h2>{{ \"tour-info.departureTime\" | transloco }}</h2>\n            <p>10:30 AM</p>\n          </div>\n          <div class=\"trip-card-features__row\" *ngIf=\"trip.hotel\">\n            <h2>{{ \"tour-info.accomidation\" | transloco }}</h2>\n            <p>{{ trip.hotel.name }}</p>\n          </div>\n          <div class=\"trip-card-features__row\">\n            <h2>{{ \"various.price\" | transloco }}</h2>\n            <p>\n              {{\n                trip.priceData\n                  | priceCaculator: guestData\n                  | price: trip.priceData.currency\n              }}\n            </p>\n          </div>\n        </div>\n\n        <button class=\"main-btn\" (click)=\"showOnMap()\">\n          <p>{{ \"tour-info.showOnMap\" | transloco }}</p>\n        </button>\n      </section>\n    </div>\n  </div>\n\n  <section\n    class=\"similar-tours\"\n    *ngIf=\"relatedTrips && relatedTrips.length > 0\"\n  >\n    <div class=\"similar-tours__header\">\n      <h2 class=\"section-title\">\n        {{ \"tour-info.similarTours\" | transloco }}\n      </h2>\n      <p class=\"section-description\">\n        {{ \"tour-info.similarToursInfo\" | transloco }}\n      </p>\n    </div>\n    <div class=\"similar-tours__grid\">\n      <app-trip-card\n        *ngFor=\"let item of relatedTrips; let i = index\"\n        [id]=\"item.id\"\n        [img]=\"item.previewImage\"\n        [name]=\"item.name\"\n        [price]=\"item.priceData\"\n        [duration]=\"item.duration\"\n        (click)=\"goToTour(item.id)\"\n        [travelType]=\"item.travelType\"\n      ></app-trip-card>\n    </div>\n  </section>\n</div>\n"
        },
        {
            "name": "TourMapComponent",
            "id": "component-TourMapComponent-7909f10ee22bb85a1e9e91bbb63cf559",
            "file": "src/app/pages/tour-information/tour-map/tour-map.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-tour-map",
            "styleUrls": [
                "./tour-map.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./tour-map.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "accordionItems",
                    "defaultValue": "[]",
                    "type": "AccordionListItem[]",
                    "optional": false,
                    "description": "",
                    "line": 65
                },
                {
                    "name": "agmMap",
                    "type": "AgmMap",
                    "optional": false,
                    "description": "",
                    "line": 73,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'agmMap'"
                        }
                    ]
                },
                {
                    "name": "currentLat",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 51
                },
                {
                    "name": "currentLong",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 52
                },
                {
                    "name": "map",
                    "type": "AgmMap",
                    "optional": false,
                    "description": "",
                    "line": 62
                },
                {
                    "name": "mobileSheetExpanded",
                    "defaultValue": "false",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 48
                },
                {
                    "name": "overlayContainer",
                    "type": "QueryList<ElementRef>",
                    "optional": false,
                    "description": "",
                    "line": 41,
                    "decorators": [
                        {
                            "name": "ViewChildren",
                            "stringifiedArguments": "'overlayContainer'"
                        }
                    ]
                },
                {
                    "name": "planLocations",
                    "defaultValue": "[]",
                    "type": "LocationModel[]",
                    "optional": false,
                    "description": "",
                    "line": 64
                },
                {
                    "name": "restriction",
                    "defaultValue": "{\n    latLngBounds: {\n      east: 44.7939896991,\n      north: 42.1414848903,\n      south: 35.8215347357,\n      west: 26.0433512713,\n    },\n    strictBounds: true,\n  }",
                    "type": "object",
                    "optional": false,
                    "description": "",
                    "line": 53
                },
                {
                    "name": "routeSub",
                    "type": "Subscription",
                    "optional": false,
                    "description": "",
                    "line": 43
                },
                {
                    "name": "selectedImageIndex",
                    "defaultValue": "0",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 44
                },
                {
                    "name": "showFlag",
                    "defaultValue": "false",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 571
                },
                {
                    "name": "sidebarLocation",
                    "type": "LocationModel",
                    "optional": false,
                    "description": "",
                    "line": 49
                },
                {
                    "name": "sideBarVisibility",
                    "defaultValue": "true",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 47
                },
                {
                    "name": "styles",
                    "defaultValue": "[\n    {\n      featureType: 'administrative.country',\n      elementType: 'all',\n      stylers: [\n        {\n          color: '#010000',\n        },\n        {\n          weight: 1.18,\n        },\n      ],\n    },\n    {\n      featureType: 'administrative.country',\n      elementType: 'labels.text',\n      stylers: [\n        {\n          weight: 0.12,\n        },\n      ],\n    },\n    {\n      featureType: 'landscape',\n      elementType: 'all',\n      stylers: [\n        {\n          hue: '#FFA800',\n        },\n        {\n          gamma: 1,\n        },\n      ],\n    },\n    {\n      featureType: 'landscape.natural',\n      elementType: 'all',\n      stylers: [\n        {\n          hue: '#baff00',\n        },\n      ],\n    },\n    {\n      featureType: 'landscape.natural',\n      elementType: 'geometry.fill',\n      stylers: [\n        {\n          visibility: 'on',\n        },\n        {\n          saturation: 8,\n        },\n        {\n          lightness: 6,\n        },\n      ],\n    },\n    {\n      featureType: 'landscape.natural',\n      elementType: 'geometry.stroke',\n      stylers: [\n        {\n          visibility: 'on',\n        },\n      ],\n    },\n    {\n      featureType: 'landscape.natural',\n      elementType: 'labels.text',\n      stylers: [\n        {\n          visibility: 'on',\n        },\n      ],\n    },\n    {\n      featureType: 'landscape.natural',\n      elementType: 'labels.text.stroke',\n      stylers: [\n        {\n          visibility: 'off',\n        },\n        {\n          color: '#cd1010',\n        },\n      ],\n    },\n    {\n      featureType: 'landscape.natural',\n      elementType: 'labels.icon',\n      stylers: [\n        {\n          saturation: -10,\n        },\n        {\n          color: '#e62222',\n        },\n      ],\n    },\n    {\n      featureType: 'landscape.natural.landcover',\n      elementType: 'labels.text.fill',\n      stylers: [\n        {\n          visibility: 'off',\n        },\n      ],\n    },\n    {\n      featureType: 'landscape.natural.landcover',\n      elementType: 'labels.text.stroke',\n      stylers: [\n        {\n          visibility: 'simplified',\n        },\n        {\n          weight: 0.92,\n        },\n      ],\n    },\n    {\n      featureType: 'poi',\n      elementType: 'all',\n      stylers: [\n        {\n          saturation: 33.4,\n        },\n        {\n          lightness: -25.4,\n        },\n        {\n          gamma: 1,\n        },\n        {\n          color: '#a2c037',\n        },\n      ],\n    },\n    {\n      featureType: 'poi',\n      elementType: 'geometry.fill',\n      stylers: [\n        {\n          visibility: 'on',\n        },\n        {\n          color: '#d7e0ef',\n        },\n      ],\n    },\n    {\n      featureType: 'poi',\n      elementType: 'geometry.stroke',\n      stylers: [\n        {\n          visibility: 'simplified',\n        },\n      ],\n    },\n    {\n      featureType: 'poi',\n      elementType: 'labels.text.fill',\n      stylers: [\n        {\n          visibility: 'on',\n        },\n        {\n          color: '#000000',\n        },\n      ],\n    },\n    {\n      featureType: 'poi',\n      elementType: 'labels.text.stroke',\n      stylers: [\n        {\n          visibility: 'off',\n        },\n      ],\n    },\n    {\n      featureType: 'poi.park',\n      elementType: 'geometry.fill',\n      stylers: [\n        {\n          color: '#95c11e',\n        },\n        {\n          lightness: 26,\n        },\n        {\n          saturation: 7,\n        },\n      ],\n    },\n    {\n      featureType: 'poi.park',\n      elementType: 'labels.text.fill',\n      stylers: [\n        {\n          saturation: 63,\n        },\n        {\n          weight: 10.0,\n        },\n        {\n          lightness: -30,\n        },\n        {\n          gamma: 0.0,\n        },\n      ],\n    },\n    {\n      featureType: 'poi.park',\n      elementType: 'labels.icon',\n      stylers: [\n        {\n          hue: '#ff9900',\n        },\n      ],\n    },\n    {\n      featureType: 'road.highway',\n      elementType: 'all',\n      stylers: [\n        {\n          hue: '#53ff00',\n        },\n        {\n          saturation: -73,\n        },\n        {\n          lightness: 40,\n        },\n        {\n          gamma: 1,\n        },\n      ],\n    },\n    {\n      featureType: 'road.highway',\n      elementType: 'geometry.fill',\n      stylers: [\n        {\n          color: '#f9dc0a',\n        },\n        {\n          lightness: 25,\n        },\n        {\n          saturation: 100,\n        },\n        {\n          weight: 0.9,\n        },\n      ],\n    },\n    {\n      featureType: 'road.arterial',\n      elementType: 'all',\n      stylers: [\n        {\n          hue: '#FBFF00',\n        },\n        {\n          gamma: 1,\n        },\n      ],\n    },\n    {\n      featureType: 'road.local',\n      elementType: 'all',\n      stylers: [\n        {\n          hue: '#00FFFD',\n        },\n        {\n          lightness: 30,\n        },\n        {\n          gamma: 1,\n        },\n      ],\n    },\n    {\n      featureType: 'transit.line',\n      elementType: 'all',\n      stylers: [\n        {\n          visibility: 'off',\n        },\n      ],\n    },\n    {\n      featureType: 'water',\n      elementType: 'all',\n      stylers: [\n        {\n          hue: '#00BFFF',\n        },\n        {\n          saturation: 6,\n        },\n        {\n          lightness: 8,\n        },\n        {\n          gamma: 1,\n        },\n      ],\n    },\n  ]",
                    "type": "MapTypeStyle[]",
                    "optional": false,
                    "description": "",
                    "line": 243
                },
                {
                    "name": "trip",
                    "type": "TripModel",
                    "optional": false,
                    "description": "",
                    "line": 45
                },
                {
                    "name": "zoom",
                    "defaultValue": "15",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 63
                }
            ],
            "methodsClass": [
                {
                    "name": "hasNextLocation",
                    "args": [],
                    "optional": false,
                    "returnType": "boolean",
                    "typeParameters": [],
                    "line": 213
                },
                {
                    "name": "hasPrevLocation",
                    "args": [],
                    "optional": false,
                    "returnType": "boolean",
                    "typeParameters": [],
                    "line": 220
                },
                {
                    "name": "initMapPosition",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 108
                },
                {
                    "name": "nextDestination",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 196
                },
                {
                    "name": "ngAfterViewInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 67
                },
                {
                    "name": "ngOnDestroy",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 240
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "Promise<void>",
                    "typeParameters": [],
                    "line": 75,
                    "modifierKind": [
                        120
                    ]
                },
                {
                    "name": "onImageSliderClicked",
                    "args": [
                        {
                            "name": "imageIndex",
                            "type": "number"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 193,
                    "jsdoctags": [
                        {
                            "name": "imageIndex",
                            "type": "number",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "onLocationClicked",
                    "args": [
                        {
                            "name": "data",
                            "type": "AccordionClickEventData"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 227,
                    "jsdoctags": [
                        {
                            "name": "data",
                            "type": "AccordionClickEventData",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "onOverlayHover",
                    "args": [
                        {
                            "name": "id",
                            "type": "any"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 92,
                    "jsdoctags": [
                        {
                            "name": "id",
                            "type": "any",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "prevDestination",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 206
                },
                {
                    "name": "recenterMapToLocation",
                    "args": [
                        {
                            "name": "location",
                            "type": "LocationModel"
                        },
                        {
                            "name": "bringToFront",
                            "type": "",
                            "defaultValue": "true"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 175,
                    "jsdoctags": [
                        {
                            "name": "location",
                            "type": "LocationModel",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "bringToFront",
                            "type": "",
                            "defaultValue": "true",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "toggleMobileSheet",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 237
                },
                {
                    "name": "toggleSidebar",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 224
                },
                {
                    "name": "zoomChange",
                    "args": [
                        {
                            "name": "event",
                            "type": "any"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 88,
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "any",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { AgmMap, MapTypeStyle } from '@agm/core';\nimport {\n  Component,\n  ElementRef,\n  Input,\n  OnDestroy,\n  OnInit,\n  QueryList,\n  Renderer2,\n  ViewChild,\n  ViewChildren,\n} from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Subscription } from 'rxjs';\nimport {\n  AccordionListItem,\n  AccordionListItemOption,\n} from 'src/app/common/widgets/accordion-list/accordion-list-item';\nimport { AccordionClickEventData } from 'src/app/common/widgets/accordion-list/accordion-list.component';\nimport { LocationModel } from 'src/app/data/models/LocationModel';\nimport { TripModel } from 'src/app/data/models/TripModel';\nimport { LocalService } from 'src/app/data/services/local.service';\nimport { Enum_Componenttimelinetimeline_Transportationtype } from 'src/app/data/services/saferniGraphql.service';\nimport { TripService } from 'src/app/data/services/trip.service';\n\n@Component({\n  selector: 'app-tour-map',\n  templateUrl: './tour-map.component.html',\n  styleUrls: ['./tour-map.component.scss'],\n})\nexport class TourMapComponent implements OnInit, OnDestroy {\n  constructor(\n    private tripService: TripService,\n    private activeRoute: ActivatedRoute,\n    private ren: Renderer2,\n    private router: Router,\n    private activatedRoute: ActivatedRoute,\n    private loc: LocalService\n  ) {}\n\n  @ViewChildren('overlayContainer') overlayContainer: QueryList<ElementRef>;\n\n  routeSub: Subscription;\n  selectedImageIndex = 0;\n  trip: TripModel;\n\n  sideBarVisibility = true;\n  mobileSheetExpanded = false;\n  sidebarLocation: LocationModel;\n\n  currentLat: number;\n  currentLong: number;\n  restriction = {\n    latLngBounds: {\n      east: 44.7939896991,\n      north: 42.1414848903,\n      south: 35.8215347357,\n      west: 26.0433512713,\n    },\n    strictBounds: true,\n  };\n  map: AgmMap;\n  zoom: number = 15;\n  planLocations: LocationModel[] = [];\n  accordionItems: AccordionListItem[] = [];\n\n  ngAfterViewInit(): void {\n    this.agmMap.mapReady.subscribe((map) => {\n      this.map = map;\n    });\n  }\n\n  @ViewChild('agmMap') agmMap: AgmMap;\n\n  async ngOnInit(): Promise<void> {\n    // window.onscroll = function () {\n    //   window.scrollTo(1110, 11110);\n    // };\n\n    this.routeSub = this.activeRoute.data.subscribe((data) => {\n      this.trip = data.mapTripData.trip;\n      this.planLocations = data.mapTripData.locations;\n\n      this.initMapPosition();\n    });\n  }\n\n  zoomChange(event: any) {\n    console.log(event);\n  }\n\n  onOverlayHover(id: any) {\n    let container =\n      this.overlayContainer.first.nativeElement.childNodes[0].childNodes[0].querySelectorAll(\n        '.location-overlay'\n      )[0].parentElement.parentElement;\n\n    container.childNodes.forEach((child: any) => {\n      let overlay = child.querySelector('.location-overlay');\n      if (overlay.getAttribute('id') === id) {\n        this.ren.setStyle(overlay.parentElement, 'z-index', 9);\n      } else {\n        this.ren.setStyle(overlay.parentElement, 'z-index', 1);\n      }\n    });\n    // .querySelector(`#${CSS.escape(id)}`)\n  }\n  initMapPosition() {\n    this.trip.plan.forEach((dayPlan) => {\n      if (dayPlan.restDay) {\n        this.accordionItems.push(\n          new AccordionListItem([\n            new AccordionListItemOption(\n              'none',\n              this.loc.getTranslation(`Transportationtype.restDay`)\n            ),\n          ])\n        );\n      } else if (\n        dayPlan.transportationType ==\n          Enum_Componenttimelinetimeline_Transportationtype.Arrival ||\n        dayPlan.transportationType ==\n          Enum_Componenttimelinetimeline_Transportationtype.Departure ||\n        dayPlan.transportationType ==\n          Enum_Componenttimelinetimeline_Transportationtype.BetweenCities\n      ) {\n        let str = this.loc.getTranslation(\n          `Transportationtype.${dayPlan.transportationType}`\n        );\n        if (\n          dayPlan.transportationType ==\n          Enum_Componenttimelinetimeline_Transportationtype.BetweenCities\n        ) {\n          str = this.loc.getTranslation(\n            `Transportationtype.${dayPlan.transportationType}`,\n            { var: dayPlan.travelTo?.name ?? '' }\n          );\n        }\n        this.accordionItems.push(\n          new AccordionListItem([new AccordionListItemOption('none', str)])\n        );\n      } else {\n        this.accordionItems.push(\n          new AccordionListItem(\n            (dayPlan.dayLocations ?? []).map((location) => {\n              return new AccordionListItemOption(\n                location.locationId,\n                location.locationName\n              );\n            })\n          )\n        );\n      }\n    });\n\n    let queryParamLocationId =\n      this.activatedRoute.snapshot.queryParams.location;\n    if (queryParamLocationId) {\n      let location = this.planLocations.find(\n        (l) => l.id === queryParamLocationId\n      );\n      if (location) {\n        this.recenterMapToLocation(location, false);\n      } else {\n        this.currentLat = this.planLocations[0].geo.latitude;\n        this.currentLong = this.planLocations[0].geo.longitude;\n        this.sidebarLocation = this.planLocations[0];\n      }\n    } else {\n      this.currentLat = this.planLocations[0].geo.latitude;\n      this.currentLong = this.planLocations[0].geo.longitude;\n      this.sidebarLocation = this.planLocations[0];\n    }\n  }\n  recenterMapToLocation(location: LocationModel, bringToFront = true) {\n    if (location) {\n      this.currentLat = location.geo.latitude;\n      this.currentLong = location.geo.longitude;\n      this.zoom += 10;\n      this.selectedImageIndex = 0;\n      this.sidebarLocation = location;\n\n      this.router.navigate([], {\n        relativeTo: this.activatedRoute,\n        queryParams: { location: location.id },\n        queryParamsHandling: 'merge',\n        replaceUrl: true,\n      });\n\n      if (bringToFront) this.onOverlayHover(location.id);\n    }\n  }\n  onImageSliderClicked(imageIndex: number) {\n    this.selectedImageIndex = imageIndex;\n  }\n  nextDestination(): void {\n    this.selectedImageIndex = 0;\n    let indexOfCurrent = this.planLocations.indexOf(this.sidebarLocation);\n    if (\n      indexOfCurrent != null &&\n      indexOfCurrent + 1 < this.planLocations.length\n    ) {\n      this.recenterMapToLocation(this.planLocations[++indexOfCurrent]);\n    }\n  }\n  prevDestination(): void {\n    this.selectedImageIndex = 0;\n    let indexOfCurrent = this.planLocations.indexOf(this.sidebarLocation);\n    if (indexOfCurrent != null && indexOfCurrent > 0) {\n      this.recenterMapToLocation(this.planLocations[--indexOfCurrent]);\n    }\n  }\n  hasNextLocation(): boolean {\n    let indexOfCurrent = this.planLocations.indexOf(this.sidebarLocation);\n\n    return (\n      indexOfCurrent != null && indexOfCurrent + 1 < this.planLocations.length\n    );\n  }\n  hasPrevLocation(): boolean {\n    let indexOfCurrent = this.planLocations.indexOf(this.sidebarLocation);\n    return indexOfCurrent != null && indexOfCurrent > 0;\n  }\n  toggleSidebar() {\n    this.sideBarVisibility = !this.sideBarVisibility;\n  }\n  onLocationClicked(data: AccordionClickEventData) {\n    let location =\n      this.trip.plan[data.parentIndex].dayLocations![data.childIndex];\n\n    if (location) {\n      this.recenterMapToLocation(\n        this.planLocations.find((loc) => loc.id === location.locationId)!\n      );\n    }\n  }\n  toggleMobileSheet() {\n    this.mobileSheetExpanded = !this.mobileSheetExpanded;\n  }\n  ngOnDestroy(): void {\n    this.routeSub.unsubscribe();\n  }\n  styles: MapTypeStyle[] = [\n    {\n      featureType: 'administrative.country',\n      elementType: 'all',\n      stylers: [\n        {\n          color: '#010000',\n        },\n        {\n          weight: 1.18,\n        },\n      ],\n    },\n    {\n      featureType: 'administrative.country',\n      elementType: 'labels.text',\n      stylers: [\n        {\n          weight: 0.12,\n        },\n      ],\n    },\n    {\n      featureType: 'landscape',\n      elementType: 'all',\n      stylers: [\n        {\n          hue: '#FFA800',\n        },\n        {\n          gamma: 1,\n        },\n      ],\n    },\n    {\n      featureType: 'landscape.natural',\n      elementType: 'all',\n      stylers: [\n        {\n          hue: '#baff00',\n        },\n      ],\n    },\n    {\n      featureType: 'landscape.natural',\n      elementType: 'geometry.fill',\n      stylers: [\n        {\n          visibility: 'on',\n        },\n        {\n          saturation: 8,\n        },\n        {\n          lightness: 6,\n        },\n      ],\n    },\n    {\n      featureType: 'landscape.natural',\n      elementType: 'geometry.stroke',\n      stylers: [\n        {\n          visibility: 'on',\n        },\n      ],\n    },\n    {\n      featureType: 'landscape.natural',\n      elementType: 'labels.text',\n      stylers: [\n        {\n          visibility: 'on',\n        },\n      ],\n    },\n    {\n      featureType: 'landscape.natural',\n      elementType: 'labels.text.stroke',\n      stylers: [\n        {\n          visibility: 'off',\n        },\n        {\n          color: '#cd1010',\n        },\n      ],\n    },\n    {\n      featureType: 'landscape.natural',\n      elementType: 'labels.icon',\n      stylers: [\n        {\n          saturation: -10,\n        },\n        {\n          color: '#e62222',\n        },\n      ],\n    },\n    {\n      featureType: 'landscape.natural.landcover',\n      elementType: 'labels.text.fill',\n      stylers: [\n        {\n          visibility: 'off',\n        },\n      ],\n    },\n    {\n      featureType: 'landscape.natural.landcover',\n      elementType: 'labels.text.stroke',\n      stylers: [\n        {\n          visibility: 'simplified',\n        },\n        {\n          weight: 0.92,\n        },\n      ],\n    },\n    {\n      featureType: 'poi',\n      elementType: 'all',\n      stylers: [\n        {\n          saturation: 33.4,\n        },\n        {\n          lightness: -25.4,\n        },\n        {\n          gamma: 1,\n        },\n        {\n          color: '#a2c037',\n        },\n      ],\n    },\n    {\n      featureType: 'poi',\n      elementType: 'geometry.fill',\n      stylers: [\n        {\n          visibility: 'on',\n        },\n        {\n          color: '#d7e0ef',\n        },\n      ],\n    },\n    {\n      featureType: 'poi',\n      elementType: 'geometry.stroke',\n      stylers: [\n        {\n          visibility: 'simplified',\n        },\n      ],\n    },\n    {\n      featureType: 'poi',\n      elementType: 'labels.text.fill',\n      stylers: [\n        {\n          visibility: 'on',\n        },\n        {\n          color: '#000000',\n        },\n      ],\n    },\n    {\n      featureType: 'poi',\n      elementType: 'labels.text.stroke',\n      stylers: [\n        {\n          visibility: 'off',\n        },\n      ],\n    },\n    {\n      featureType: 'poi.park',\n      elementType: 'geometry.fill',\n      stylers: [\n        {\n          color: '#95c11e',\n        },\n        {\n          lightness: 26,\n        },\n        {\n          saturation: 7,\n        },\n      ],\n    },\n    {\n      featureType: 'poi.park',\n      elementType: 'labels.text.fill',\n      stylers: [\n        {\n          saturation: 63,\n        },\n        {\n          weight: 10.0,\n        },\n        {\n          lightness: -30,\n        },\n        {\n          gamma: 0.0,\n        },\n      ],\n    },\n    {\n      featureType: 'poi.park',\n      elementType: 'labels.icon',\n      stylers: [\n        {\n          hue: '#ff9900',\n        },\n      ],\n    },\n    {\n      featureType: 'road.highway',\n      elementType: 'all',\n      stylers: [\n        {\n          hue: '#53ff00',\n        },\n        {\n          saturation: -73,\n        },\n        {\n          lightness: 40,\n        },\n        {\n          gamma: 1,\n        },\n      ],\n    },\n    {\n      featureType: 'road.highway',\n      elementType: 'geometry.fill',\n      stylers: [\n        {\n          color: '#f9dc0a',\n        },\n        {\n          lightness: 25,\n        },\n        {\n          saturation: 100,\n        },\n        {\n          weight: 0.9,\n        },\n      ],\n    },\n    {\n      featureType: 'road.arterial',\n      elementType: 'all',\n      stylers: [\n        {\n          hue: '#FBFF00',\n        },\n        {\n          gamma: 1,\n        },\n      ],\n    },\n    {\n      featureType: 'road.local',\n      elementType: 'all',\n      stylers: [\n        {\n          hue: '#00FFFD',\n        },\n        {\n          lightness: 30,\n        },\n        {\n          gamma: 1,\n        },\n      ],\n    },\n    {\n      featureType: 'transit.line',\n      elementType: 'all',\n      stylers: [\n        {\n          visibility: 'off',\n        },\n      ],\n    },\n    {\n      featureType: 'water',\n      elementType: 'all',\n      stylers: [\n        {\n          hue: '#00BFFF',\n        },\n        {\n          saturation: 6,\n        },\n        {\n          lightness: 8,\n        },\n        {\n          gamma: 1,\n        },\n      ],\n    },\n  ];\n\n  //full screen\n  get imageListObject() {\n    return this.sidebarLocation.images.map((f) => {\n      return {\n        image: f.url,\n        thumbImage: f.formats?.thumbnail?.url,\n        title: this.sidebarLocation.name,\n        alt: this.sidebarLocation.desc,\n      };\n    });\n  }\n\n  //ExpandedSection\n  showFlag: boolean = false;\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import \"/src/assets/css/abstract/variables\";\n@import \"/src/assets/css/abstract/mixins\";\n\n.map-box {\n  height: 93vh;\n  width: 100%;\n  position: relative;\n  overflow: hidden;\n\n  agm-map {\n    height: 100%;\n    width: 100%;\n  }\n  .locations-list {\n    position: absolute;\n    right: 0px;\n    top: 0px;\n    width: 25rem;\n    height: 100%;\n  }\n  .location-overlay {\n    width: 10rem;\n    height: 10rem;\n    padding: 4%;\n    background-color: white;\n    border-radius: 5px;\n    box-shadow: 0px 3px 15px rgba(0, 0, 0, 0.2);\n    overflow: hidden;\n\n    &:hover {\n      z-index: 999;\n    }\n    img {\n      width: 100%;\n      height: 100%;\n      object-fit: cover;\n    }\n  }\n  .sidebar-toggle {\n    position: absolute;\n    font-size: 2.5rem;\n    color: white;\n    cursor: pointer;\n    transition: all 0.2s ease-out;\n    left: 1rem;\n    top: 2rem;\n  }\n  .sidebar-toggle.open {\n    transform: rotateZ(180deg);\n  }\n  .side-information-bar {\n    position: absolute;\n    top: 0px;\n    left: 0px;\n    width: 50rem;\n    box-shadow: 0px 3px 15px rgba(0, 0, 0, 0.2);\n    height: 100%;\n    background-color: rgba($color: #fff, $alpha: 1);\n    transition: all 0.2s ease-out;\n    &__wrapper {\n      position: relative;\n      height: 100%;\n      .side-information-bar-header {\n        height: 6.8rem;\n        background-color: rgba($color: #000000, $alpha: 0.5);\n        position: absolute;\n        top: 0rem;\n        width: 100%;\n        display: grid;\n        place-items: center;\n        p {\n          text-align: center;\n          color: white;\n          font-size: 2.5rem;\n          font-weight: 600;\n\n          margin: 0rem;\n        }\n      }\n\n      .side-information-bar-content {\n        display: flex;\n        flex-direction: column;\n        height: 100%;\n\n        &__header {\n          height: 35%;\n          width: 100%;\n\n          img {\n            width: 100%;\n            height: 100%;\n            object-fit: cover;\n          }\n        }\n        &__body {\n          padding: 2.5rem;\n          position: relative;\n\n          h2 {\n            font-size: 2.5rem;\n            font-weight: bold;\n            color: black;\n            text-transform: capitalize;\n            padding-bottom: 0.5rem;\n          }\n          p {\n            text-transform: capitalize;\n            font-size: 1.9rem;\n            font-weight: 300;\n            color: #252629;\n            margin-bottom: 1.5rem;\n          }\n          app-horizontal-listview {\n            width: 100%;\n          }\n        }\n      }\n    }\n  }\n  .side-information-mobile {\n    display: none;\n  }\n  @include respondMax(1500px) {\n    .side-information-bar {\n      width: 35rem;\n    }\n  }\n  @include respondMax(1150px) {\n    .side-information-bar {\n      display: none;\n    }\n    .locations-list {\n      display: none;\n    }\n    .side-information-mobile {\n      display: unset;\n      position: absolute;\n      bottom: 0rem;\n      right: 50%;\n      transform: translateX(50%);\n\n      width: 50rem;\n\n      .location-controls {\n        display: flex;\n        justify-content: space-between;\n        margin-bottom: 2rem;\n        .location-control {\n          width: 15rem;\n          height: 4rem;\n          background-color: white;\n          border-radius: 10rem;\n          box-shadow: $subtleShadow;\n          cursor: pointer;\n          display: flex;\n          justify-content: center;\n          align-items: center;\n\n          p {\n            margin: 0rem;\n            font-size: 1.3rem;\n            font-weight: 600;\n            text-transform: capitalize;\n          }\n          i {\n            font-size: 1.3rem;\n            &:lang(ar) {\n              transform: rotateY(180deg);\n            }\n          }\n          &.left {\n            i {\n              margin-right: 1rem;\n              &:lang(ar) {\n                margin-right: unset;\n                margin-left: 1rem;\n              }\n            }\n          }\n          &.right {\n            i {\n              margin-left: 1rem;\n              &:lang(ar) {\n                margin-left: unset;\n                margin-right: 1rem;\n              }\n            }\n          }\n        }\n      }\n      &__content {\n        width: 100%;\n        height: 30rem;\n        cursor: pointer;\n        display: flex;\n        flex-direction: column;\n\n        padding: 1rem 3rem;\n        background-color: white;\n        border-radius: 20px 20px 0rem 0rem;\n\n        box-shadow: $subtleShadow;\n        transition: all 0.2s ease-out;\n\n        &.open {\n          height: 80rem;\n          .side-information-mobile__main-image {\n            display: unset;\n            animation: fadeInScale 0.5s;\n          }\n          p {\n            @include maxTextLines(20);\n          }\n        }\n\n        .expand {\n          font-size: 3rem;\n          color: lightgrey;\n          font-weight: 300;\n          align-self: center;\n          transition: transform 0.2s ease-out;\n          &.open {\n            transform: rotateZ(180deg);\n          }\n        }\n        .side-information-mobile__main-image {\n          width: 100%;\n          display: none;\n          margin-bottom: 2rem;\n\n          img {\n            width: 100%;\n            object-fit: cover;\n            border-radius: 10px;\n          }\n        }\n        h2 {\n          text-transform: capitalize;\n          font-size: 2rem;\n          font-weight: bold;\n        }\n        p {\n          padding-top: 1rem;\n          text-transform: capitalize;\n          font-size: 1.5rem;\n          font-weight: 400;\n          color: #727272;\n\n          @include maxTextLines(5);\n        }\n        .side-information-mobile__images {\n          height: 10rem;\n          margin-top: auto;\n          img {\n            width: 35%;\n            height: 100%;\n            border-radius: 10px;\n            object-fit: cover;\n          }\n        }\n      }\n    }\n  }\n}\n@keyframes fadeInScale {\n  from {\n    opacity: 0;\n    transform: scale(0.35);\n  }\n  to {\n    opacity: 1;\n    transform: scale(1);\n  }\n}\n",
                    "styleUrl": "./tour-map.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "tripService",
                        "type": "TripService"
                    },
                    {
                        "name": "activeRoute",
                        "type": "ActivatedRoute"
                    },
                    {
                        "name": "ren",
                        "type": "Renderer2"
                    },
                    {
                        "name": "router",
                        "type": "Router"
                    },
                    {
                        "name": "activatedRoute",
                        "type": "ActivatedRoute"
                    },
                    {
                        "name": "loc",
                        "type": "LocalService"
                    }
                ],
                "line": 31,
                "jsdoctags": [
                    {
                        "name": "tripService",
                        "type": "TripService",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "activeRoute",
                        "type": "ActivatedRoute",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "ren",
                        "type": "Renderer2",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "router",
                        "type": "Router",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "activatedRoute",
                        "type": "ActivatedRoute",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "loc",
                        "type": "LocalService",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit",
                "OnDestroy"
            ],
            "accessors": {
                "imageListObject": {
                    "name": "imageListObject",
                    "getSignature": {
                        "name": "imageListObject",
                        "type": "",
                        "returnType": "",
                        "line": 559
                    }
                }
            },
            "templateData": "<ng-image-fullscreen-view\n  class=\"image\"\n  [images]=\"imageListObject\"\n  [imageIndex]=\"selectedImageIndex\"\n  [show]=\"showFlag\"\n  (close)=\"showFlag = false\"\n></ng-image-fullscreen-view>\n\n<div class=\"map-box\" #overlayContainer>\n  <agm-map\n    #agmMap\n    [latitude]=\"currentLat\"\n    [longitude]=\"currentLong\"\n    [zoom]=\"zoom\"\n    [usePanning]=\"true\"\n    [restriction]=\"restriction\"\n    [maxZoom]=\"16\"\n    [styles]=\"styles\"\n    (zoomChange)=\"zoomChange($event)\"\n  >\n    <!-- <agm-polyline\n      *ngFor=\"\n        let location of allLocationsSorted | slice: 0:timelines.length - 1;\n        let i = index\n      \"\n      [clickable]=\"true\"\n      (lineClick)=\"recenterMapToLocation(allLocationsSorted[i + 1])\"\n    >\n      <agm-polyline-point\n        [latitude]=\"allLocationsSorted[i].geo.latitude\"\n        [longitude]=\"allLocationsSorted[i].geo.longitude\"\n      >\n      </agm-polyline-point>\n      <agm-polyline-point\n        [latitude]=\"allLocationsSorted[i + 1].geo.latitude\"\n        [longitude]=\"allLocationsSorted[i + 1].geo.longitude\"\n      >\n      </agm-polyline-point>\n\n      <agm-icon-sequence\n        [strokeColor]=\"'#20aed5'\"\n        [repeat]=\"'20px'\"\n        [strokeWeight]=\"5\"\n        [scale]=\"2\"\n        [strokeOpacity]=\"100\"\n        [path]=\"'FORWARD_CLOSED_ARROW'\"\n      >\n      </agm-icon-sequence>\n    </agm-polyline> -->\n\n    <agm-overlay\n      *ngFor=\"let location of planLocations; let i = index\"\n      [latitude]=\"location.geo.latitude\"\n      [longitude]=\"location.geo.longitude\"\n      (markerClick)=\"recenterMapToLocation(location)\"\n    >\n      <!-- blue html square -->\n      <div\n        class=\"location-overlay\"\n        [id]=\"location.id\"\n        [ngClass]=\"{ big: location.id == sidebarLocation.id }\"\n        [ngStyle]=\"{ 'z-index': i == 0 ? 999 : 1 }\"\n        (mouseover)=\"onOverlayHover(location.id)\"\n      >\n        <img [src]=\"location.images[0] | serverimage\" />\n      </div>\n    </agm-overlay>\n  </agm-map>\n  <div class=\"locations-list\">\n    <app-accordion-list\n      [items]=\"accordionItems\"\n      (itemClicked)=\"onLocationClicked($event)\"\n    ></app-accordion-list>\n  </div>\n  <div\n    class=\"side-information-bar\"\n    [ngStyle]=\"{\n      transform: sideBarVisibility ? 'translateX(0)' : 'translateX(-90%)'\n    }\"\n  >\n    <div class=\"side-information-bar__wrapper\">\n      <div class=\"side-information-bar-header\">\n        <p>{{ \"map.tourplan\" | transloco }}</p>\n      </div>\n      <div class=\"side-information-bar-content\">\n        <div class=\"side-information-bar-content__header\">\n          <img\n            (click)=\"showFlag = true\"\n            src=\"{{ sidebarLocation.images[selectedImageIndex] | serverimage }}\"\n          />\n        </div>\n\n        <div class=\"side-information-bar-content__body\">\n          <h2>{{ sidebarLocation.name }}</h2>\n          <p>{{ sidebarLocation.desc }}</p>\n\n          <app-horizontal-listview\n            [images]=\"sidebarLocation.images\"\n            (itemClicked)=\"onImageSliderClicked($event)\"\n          ></app-horizontal-listview>\n        </div>\n      </div>\n    </div>\n  </div>\n\n  <div class=\"side-information-mobile\">\n    <div class=\"location-controls\">\n      <div\n        class=\"location-control left\"\n        (click)=\"prevDestination()\"\n        [ngStyle]=\"{\n          backgroundColor: hasPrevLocation() ? 'white' : 'lightgrey'\n        }\"\n      >\n        <i class=\"fa fa-chevron-left\"></i>\n        <p>{{ \"general.previous\" | transloco }}</p>\n      </div>\n      <div\n        class=\"location-control right\"\n        (click)=\"nextDestination()\"\n        [ngStyle]=\"{\n          backgroundColor: hasNextLocation() ? 'white' : 'lightgrey'\n        }\"\n      >\n        <p>{{ \"general.next\" | transloco }}</p>\n        <i class=\"fa fa-chevron-right\"></i>\n      </div>\n    </div>\n    <div\n      class=\"side-information-mobile__content\"\n      [ngClass]=\"mobileSheetExpanded ? 'open' : ''\"\n    >\n      <i\n        class=\"fa fa-chevron-up expand\"\n        (click)=\"toggleMobileSheet()\"\n        [ngClass]=\"mobileSheetExpanded ? 'open' : ''\"\n      ></i>\n      <div class=\"side-information-mobile__main-image\">\n        <img\n          src=\"{{ sidebarLocation.images[selectedImageIndex] | serverimage }}\"\n        />\n      </div>\n      <h2>{{ sidebarLocation.name }}</h2>\n      <p (click)=\"toggleMobileSheet()\">{{ sidebarLocation.desc }}</p>\n      <div class=\"side-information-mobile__images\">\n        <app-horizontal-listview\n          [images]=\"sidebarLocation.images\"\n          (itemClicked)=\"onImageSliderClicked($event)\"\n        ></app-horizontal-listview>\n      </div>\n    </div>\n  </div>\n  <i\n    class=\"fa fa-chevron-left sidebar-toggle\"\n    (click)=\"toggleSidebar()\"\n    [ngClass]=\"sideBarVisibility ? '' : 'open'\"\n  ></i>\n</div>\n"
        },
        {
            "name": "UserProfileComponent",
            "id": "component-UserProfileComponent-72c56e768e00306bbaf3ffe846221ea0",
            "file": "src/app/pages/user/user-profile-landing/tabs/user-profile/user-profile.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-user-profile",
            "styleUrls": [
                "./user-profile.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./user-profile.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "form",
                    "defaultValue": "new FormGroup({\n    email: new FormControl('', [Validators.required]),\n    fullName: new FormControl('', [Validators.required]),\n    title: new FormControl(''),\n    phone: new FormControl(''),\n    birthDate: new FormControl(''),\n    country: new FormControl(''),\n  })",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 11
                },
                {
                    "name": "icons",
                    "defaultValue": "ICONS",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 19
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 23
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { ICONS } from 'src/app/data/utils/enums';\n\n@Component({\n  selector: 'app-user-profile',\n  templateUrl: './user-profile.component.html',\n  styleUrls: ['./user-profile.component.scss'],\n})\nexport class UserProfileComponent implements OnInit {\n  form = new FormGroup({\n    email: new FormControl('', [Validators.required]),\n    fullName: new FormControl('', [Validators.required]),\n    title: new FormControl(''),\n    phone: new FormControl(''),\n    birthDate: new FormControl(''),\n    country: new FormControl(''),\n  });\n  icons = ICONS;\n\n  constructor() {}\n\n  ngOnInit(): void {}\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import \"/src/assets/css/abstract/mixins\";\n@mixin column {\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n}\n\nform {\n  height: 100%;\n}\n\n.main {\n  display: grid;\n  grid-template-columns: 50% 40%;\n  gap: 10%;\n  height: 100%;\n  @include res(tab) {\n    grid-template-columns: 100%;\n    .controls {\n      display: grid;\n      column-gap: 2rem;\n      grid-template-columns: repeat(4, 1fr);\n      * {\n        grid-column: span 2;\n      }\n      .main-btn {\n        grid-column: 2 / span 2;\n      }\n    }\n  }\n\n  .img {\n    @include res(tab) {\n      display: none;\n    }\n    order: 1;\n    display: grid;\n    place-items: center;\n    height: 70%;\n    img {\n      width: 100%;\n    }\n  }\n}\n",
                    "styleUrl": "./user-profile.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [],
                "line": 19
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<form [formGroup]=\"form\">\n  <div class=\"main\">\n    <div class=\"img\">\n      <img src=\"assets/images/bk/profile.png\" alt=\"\" />\n    </div>\n    <div class=\"controls\">\n      <app-profileinput\n        placeholder=\"Full Name\"\n        [icon]=\"icons.profile\"\n        [required]=\"true\"\n        formControlName=\"fullName\"\n      >\n        <mat-error>this field is required</mat-error>\n      </app-profileinput>\n      <app-profileinput\n        formControlName=\"phone\"\n        placeholder=\"Phone Number\"\n      ></app-profileinput>\n      <app-profileinput\n        formControlName=\"email\"\n        placeholder=\"Email Address\"\n      ></app-profileinput>\n      <app-profileinput\n        formControlName=\"birthDate\"\n        placeholder=\"DD-MM-YYYY\"\n      ></app-profileinput>\n      <app-profileinput\n        formControlName=\"country\"\n        placeholder=\"Country\"\n      ></app-profileinput>\n      <app-profileinput\n        formControlName=\"title\"\n        placeholder=\"Title\"\n      ></app-profileinput>\n      <!-- {{ form.valid }} -->\n      <button class=\"main-btn\">Update Information</button>\n    </div>\n  </div>\n</form>\n"
        },
        {
            "name": "UserProfileLandingComponent",
            "id": "component-UserProfileLandingComponent-a70b4f66bb599b604c88ab16ab42fbe3",
            "file": "src/app/pages/user/user-profile-landing/user-profile-landing.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-user-profile-landing",
            "styleUrls": [
                "./user-profile-landing.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./user-profile-landing.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "enum",
                    "defaultValue": "ProfileEnum",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 12
                },
                {
                    "name": "profile",
                    "defaultValue": "new UserProfileComponent()",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 14
                },
                {
                    "name": "type",
                    "defaultValue": "ProfileEnum.trips",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 11
                }
            ],
            "methodsClass": [
                {
                    "name": "changeType",
                    "args": [
                        {
                            "name": "newType",
                            "type": "ProfileEnum"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 19,
                    "jsdoctags": [
                        {
                            "name": "newType",
                            "type": "ProfileEnum",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 17
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\nimport { ProfileEnum } from 'src/app/data/utils/enums';\nimport { UserProfileComponent } from './tabs/user-profile/user-profile.component';\n\n@Component({\n  selector: 'app-user-profile-landing',\n  templateUrl: './user-profile-landing.component.html',\n  styleUrls: ['./user-profile-landing.component.scss'],\n})\nexport class UserProfileLandingComponent implements OnInit {\n  type = ProfileEnum.trips;\n  enum = ProfileEnum;\n\n  profile = new UserProfileComponent();\n  constructor() {}\n\n  ngOnInit(): void {}\n\n  changeType(newType: ProfileEnum) {\n    this.type = newType;\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import \"/src/assets/css/abstract/variables\";\n@import \"/src/assets/css/abstract/mixins\";\n$transition: 0.5s all;\n$header-padding: 0 5%;\n@include res(tab) {\n  $header-padding: 0;\n}\n@mixin active {\n  // width: 100%;\n  // border-bottom: grey 1px solid;\n  // align-self: flex-start;\n  color: $accent;\n  transition: $transition;\n\n  &::after {\n    position: absolute;\n    transition: $transition;\n    content: \"\";\n    width: 100%;\n    bottom: 0;\n    left: 0;\n    height: 1px;\n    background: $accent;\n  }\n}\n\n@mixin center {\n  display: grid;\n  place-items: center;\n}\n\n.main {\n  display: grid;\n  place-items: center;\n  padding: 0 $page-padding;\n}\n\n.wrapper {\n  width: 100%;\n  height: 90vh;\n  display: grid;\n  grid-template-columns: 20% 80%;\n  grid-template-rows: 15% 50% 35%;\n  @include res(tab) {\n    grid-template-rows: 10% 40% 10% 40%;\n  }\n  @include res(tab) {\n    grid-template-columns: 60% 40%;\n  }\n  border-radius: $border-radius;\n  font-size: 2.5rem;\n  font-weight: 700;\n  .header {\n    color: $accent;\n    grid-row: 1;\n    grid-column: 2;\n    padding: $header-padding;\n    font-size: 5rem;\n    @include res(tab) {\n      grid-column: span 2;\n      text-align: center;\n    }\n  }\n\n  .center {\n    grid-row: span 2;\n    grid-column: 2;\n    align-self: flex-start;\n    height: 100%;\n    color: black;\n    @include res(tab) {\n      grid-row: 4;\n      grid-column: span 2;\n    }\n  }\n  .user-info {\n    grid-row: span 2;\n    grid-column: 1;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: space-evenly;\n    @include res(tab) {\n      grid-row: 2;\n      grid-column: span 2;\n    }\n    &_title {\n      margin-bottom: 3rem;\n      font-size: 2rem;\n    }\n    .main-btn {\n      width: 40%;\n      display: grid;\n      place-items: center;\n    }\n    &_image {\n      @include center();\n      overflow: hidden;\n      border-radius: 50rem;\n      padding: 0.1rem;\n      border: $grey-light 0.2rem solid;\n      height: 10vw;\n      width: 10vw;\n\n      img {\n        width: 100%;\n        scale: 1.2;\n        border-radius: 50rem;\n      }\n    }\n  }\n  .links {\n    grid-row: 3;\n    grid-column: 1;\n\n    display: flex;\n    flex-direction: column;\n    justify-content: space-evenly;\n    @include res(tab) {\n      grid-row: 3;\n      grid-column: span 2;\n      flex-direction: row;\n      justify-content: space-between;\n    }\n    a:hover,\n    :visited {\n      text-decoration: none;\n    }\n    &_nav-item {\n      height: 7vh;\n      @include center();\n      position: relative;\n\n      padding: 0;\n      cursor: pointer;\n      &::after {\n        position: absolute;\n        content: \"\";\n        width: 0%;\n        bottom: 0;\n        left: 0;\n        height: 1px;\n        background: $accent;\n      }\n      &:hover {\n        @include active();\n      }\n    }\n    .active {\n      @include active();\n    }\n  }\n}\n",
                    "styleUrl": "./user-profile-landing.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [],
                "line": 14
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"main\">\n  <div class=\"wrapper\">\n    <div class=\"user-info\">\n      <div class=\"user-info_image\">\n        <img\n          src=\"https://cultivatedculture.com/wp-content/uploads/2019/12/LinkedIn-Profile-Picture-Example-Madeline-Mann.jpeg\"\n          alt=\"\"\n        />\n      </div>\n      <div class=\"user-info_name\">Sameh Zoaa</div>\n      <div class=\"user-info_title\">Doctor</div>\n      <div class=\"user-info_btn-ulpoad main-btn\">Upload New Avatar</div>\n      <div class=\"user-info_btn-delete main-btn\">Delete</div>\n    </div>\n    <div class=\"header\">{{ type }}</div>\n\n    <nav class=\"links\">\n      <a\n        class=\"links_nav-item\"\n        [ngClass]=\"{ active: enum.profile == type }\"\n        (click)=\"changeType(enum.profile)\"\n      >\n        Profile\n      </a>\n      <a\n        class=\"links_nav-item\"\n        [ngClass]=\"{ active: enum.trips == type }\"\n        (click)=\"changeType(enum.trips)\"\n      >\n        Trips\n      </a>\n      <a\n        class=\"links_nav-item\"\n        [ngClass]=\"{ active: enum.security == type }\"\n        (click)=\"changeType(enum.security)\"\n      >\n        Security\n      </a>\n    </nav>\n    <div class=\"center\">\n      <app-user-profile *ngIf=\"type == enum.profile\"></app-user-profile>\n      <app-user-security *ngIf=\"type == enum.security\"></app-user-security>\n      <app-user-trips *ngIf=\"type == enum.trips\"> </app-user-trips>\n    </div>\n  </div>\n</div>\n"
        },
        {
            "name": "UserSecurityComponent",
            "id": "component-UserSecurityComponent-c63f40af010f83f9b3a9c3a2b1700b7b",
            "file": "src/app/pages/user/user-profile-landing/tabs/user-security/user-security.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-user-security",
            "styleUrls": [
                "./user-security.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./user-security.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "form",
                    "defaultValue": "new FormGroup({\n    oldPass: new FormControl('', Validators.required),\n    newPass: new FormControl('', Validators.required),\n    confirmNewPass: new FormControl('', [Validators.required]),\n  })",
                    "type": "FormGroup",
                    "optional": false,
                    "description": "",
                    "line": 11
                },
                {
                    "name": "icons",
                    "defaultValue": "ICONS",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 17
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 19
                },
                {
                    "name": "onSubmit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 21
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { ICONS } from 'src/app/data/utils/enums';\n\n@Component({\n  selector: 'app-user-security',\n  templateUrl: './user-security.component.html',\n  styleUrls: ['./user-security.component.scss'],\n})\nexport class UserSecurityComponent implements OnInit {\n  form: FormGroup = new FormGroup({\n    oldPass: new FormControl('', Validators.required),\n    newPass: new FormControl('', Validators.required),\n    confirmNewPass: new FormControl('', [Validators.required]),\n  });\n  constructor() {}\n  icons = ICONS;\n\n  ngOnInit(): void {}\n\n  onSubmit() {\n    if (this.form.invalid) return;\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import \"/src/assets/css/abstract/mixins\";\n@mixin column {\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n}\nform {\n  height: 100%;\n}\n.main {\n  display: grid;\n  grid-template-columns: 50% 40%;\n  gap: 10%;\n  height: 100%;\n  .img {\n    order: 1;\n    display: grid;\n    place-items: center;\n    height: 70%;\n    img {\n      width: 100%;\n    }\n    @include res(tab) {\n      display: none;\n    }\n  }\n  @include res(tab) {\n    grid-template-columns: 100%;\n  }\n  .controls {\n    display: flex;\n    flex-direction: column;\n    align-self: flex-start;\n    justify-content: center;\n    .main-btn {\n      align-self: center;\n    }\n  }\n}\n",
                    "styleUrl": "./user-security.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [],
                "line": 15
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<form [formGroup]=\"form\">\n  <div class=\"main\">\n    <div class=\"img\">\n      <img src=\"assets/images/bk/profile.png\" alt=\"\" />\n    </div>\n    <div class=\"controls\">\n      <app-profileinput\n        placeholder=\"Old Password\"\n        formControlName=\"oldPass\"\n        [icon]=\"icons.pass\"\n      ></app-profileinput>\n      <app-profileinput\n        formControlName=\"newPass\"\n        placeholder=\"New Password\"\n        [icon]=\"icons.pass\"\n      ></app-profileinput>\n      <app-profileinput\n        formControlName=\"confirmNewPass\"\n        placeholder=\"New Password Again\"\n        [icon]=\"icons.pass\"\n      ></app-profileinput>\n\n      <button class=\"main-btn\" (click)=\"onSubmit()\">Change password</button>\n    </div>\n  </div>\n</form>\n"
        },
        {
            "name": "UserTripsComponent",
            "id": "component-UserTripsComponent-0d42962906e75037eaf5b1eecac7ed2d",
            "file": "src/app/pages/user/user-profile-landing/tabs/user-trips/user-trips.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-user-trips",
            "styleUrls": [
                "./user-trips.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./user-trips.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "ser",
                    "type": "UserService",
                    "optional": false,
                    "description": "",
                    "line": 12,
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "trips",
                    "defaultValue": "[]",
                    "type": "UserTripsModel[]",
                    "optional": false,
                    "description": "",
                    "line": 11
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 14
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\nimport { UserTripsModel } from 'src/app/data/models/UserTripsModel';\nimport { UserService } from 'src/app/data/services/user.service';\n\n@Component({\n  selector: 'app-user-trips',\n  templateUrl: './user-trips.component.html',\n  styleUrls: ['./user-trips.component.scss'],\n})\nexport class UserTripsComponent implements OnInit {\n  trips: UserTripsModel[] = [];\n  constructor(public ser: UserService) {}\n\n  ngOnInit(): void {\n    this.trips = [];\n    this.trips.push(...this.ser.trips);\n  }\n\n  get activeTrip() {\n    return this.trips[0];\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import \"/src/assets/css/abstract/mixins\";\n\n$trans: all 1s;\n.main {\n  height: 100%;\n  overflow: scroll;\n}\n\n.old,\n.new {\n  .trip-type {\n    padding: 5% 7%;\n    font-size: 2rem;\n    font-weight: 800;\n    @include res(tab) {\n      padding: 10% 0 0 0;\n      text-align: center;\n    }\n  }\n  .trip {\n    color: white;\n    display: grid;\n    grid-template-columns: 15% 40% 45%;\n    row-gap: 2rem;\n    font-size: 2rem;\n    width: 50%;\n    @include res(tab) {\n      grid-template-rows: 15% 85%;\n      width: 100%;\n      padding: 0 10%;\n    }\n    &:hover {\n      img {\n        transform: scale(1.1);\n        z-index: 0;\n        transition: $trans;\n      }\n    }\n    figure.img {\n      grid-column: span 3;\n      grid-row: 2;\n      overflow: hidden;\n      transition: $trans;\n      cursor: pointer;\n      width: 100%;\n      img {\n        width: 100%;\n        object-fit: cover;\n      }\n      @include res(tab) {\n        grid-row: 2;\n        grid-column: 1 / span 3;\n      }\n    }\n    .year {\n      z-index: 1;\n      grid-row: span 3;\n      grid-column: 1;\n      align-self: center;\n      transform: rotateZ(-90deg);\n      color: black;\n      font-size: 3rem;\n\n      @include res(tab) {\n        transform: rotateZ(0);\n        grid-column: span 3;\n        grid-row: 1;\n        text-align: center;\n      }\n    }\n    .text {\n      z-index: 2;\n      grid-row: 1;\n      grid-column: 2;\n      padding: 2rem 2rem;\n      .city {\n        font-size: 6.8rem;\n        text-decoration: underline 0.5rem white;\n        text-underline-offset: 1rem;\n        margin-bottom: 1.5rem;\n      }\n\n      .date {\n        font-size: inherit;\n      }\n      @include res(tab) {\n        grid-row: 2;\n        grid-column: 1 / span 3;\n        text-align: start;\n        z-index: 10;\n      }\n    }\n  }\n}\n",
                    "styleUrl": "./user-trips.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "ser",
                        "type": "UserService"
                    }
                ],
                "line": 11,
                "jsdoctags": [
                    {
                        "name": "ser",
                        "type": "UserService",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "accessors": {
                "activeTrip": {
                    "name": "activeTrip",
                    "getSignature": {
                        "name": "activeTrip",
                        "type": "",
                        "returnType": "",
                        "line": 19
                    }
                }
            },
            "templateData": "<div class=\"main\">\n  <div *ngIf=\"activeTrip\" class=\"new\">\n    <h1 class=\"trip-type\">Active Trips</h1>\n    <div class=\"trip\">\n      <figure class=\"img\">\n        <img [src]=\"activeTrip.image\" alt=\"\" />\n      </figure>\n      <div class=\"text\">\n        <h1 class=\"city\">{{ activeTrip.city }}</h1>\n        <p class=\"date\">{{ activeTrip.fromdateTodateString }}</p>\n      </div>\n      <h3 class=\"year\">{{ activeTrip.year }}</h3>\n    </div>\n  </div>\n  <div class=\"old\">\n    <h1 class=\"trip-type\">Past</h1>\n    <div *ngFor=\"let trip of trips\" class=\"trip\">\n      <figure class=\"img\">\n        <img [src]=\"trip.image\" alt=\"\" />\n      </figure>\n      <div class=\"text\">\n        <h1 class=\"city\">{{ trip.city }}</h1>\n        <p class=\"date\">{{ trip.fromdateTodateString }}</p>\n      </div>\n      <h3 class=\"year\">{{ trip.year }}</h3>\n    </div>\n  </div>\n</div>\n"
        },
        {
            "name": "ValidationIconComponent",
            "id": "component-ValidationIconComponent-1a0add5b418ea21fa2945205e0e41e44",
            "file": "src/app/common/widgets/validation-icon/validation-icon.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-validation-icon",
            "styleUrls": [
                "./validation-icon.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./validation-icon.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "errors",
                    "defaultValue": "[]",
                    "line": 11,
                    "type": "any[] | undefined"
                },
                {
                    "name": "icon",
                    "line": 10,
                    "type": "ICONS"
                },
                {
                    "name": "isFocused",
                    "line": 12,
                    "type": "any"
                },
                {
                    "name": "placeholder",
                    "defaultValue": "''",
                    "line": 13,
                    "type": "string"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 17
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, Input, OnInit, ViewChild } from '@angular/core';\nimport { ICONS } from 'src/app/data/utils/enums';\n\n@Component({\n  selector: 'app-validation-icon',\n  templateUrl: './validation-icon.component.html',\n  styleUrls: ['./validation-icon.component.scss'],\n})\nexport class ValidationIconComponent implements OnInit {\n  @Input() icon: ICONS;\n  @Input() errors: any[] | undefined = [];\n  @Input() isFocused: any;\n  @Input() placeholder: string = '';\n\n  constructor() {}\n\n  ngOnInit(): void {}\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import \"/src/assets/css/abstract/variables\";\n\n.main {\n  display: flex;\n  align-items: flex-end;\n}\nmat-icon.focused {\n  color: $accent;\n}\nmat-icon {\n  color: $icon-color;\n}\nmat-icon.error {\n  color: $err;\n}\n\n::ng-deep #content {\n  padding: 10rem;\n}\n",
                    "styleUrl": "./validation-icon.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [],
                "line": 13
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"main\">\n  <!-- <popper-content #content>\n    <h1>{{ errors || placeholder }}</h1>\n  </popper-content> -->\n\n  <mat-icon [ngClass]=\"{ focused: isFocused, error: !!errors && !isFocused }\">{{\n    icon\n  }}</mat-icon>\n</div>\n"
        }
    ],
    "modules": [
        {
            "name": "AppModule",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "AboutUsComponent"
                        },
                        {
                            "name": "AccordionListComponent"
                        },
                        {
                            "name": "AppComponent"
                        },
                        {
                            "name": "BannerCarouselComponent"
                        },
                        {
                            "name": "BookingPageComponent"
                        },
                        {
                            "name": "BookingSubmitPopupComponent"
                        },
                        {
                            "name": "CustomDatePickerComponent"
                        },
                        {
                            "name": "CustomInputComponent"
                        },
                        {
                            "name": "CustomSelectComponent"
                        },
                        {
                            "name": "CustomTextareaComponent"
                        },
                        {
                            "name": "E404Component"
                        },
                        {
                            "name": "ErrorDlgComponent"
                        },
                        {
                            "name": "FilterWidgetComponent"
                        },
                        {
                            "name": "FooterComponent"
                        },
                        {
                            "name": "GuestCountInputComponent"
                        },
                        {
                            "name": "HeaderInfoComponent"
                        },
                        {
                            "name": "HeaderToolBarComponent"
                        },
                        {
                            "name": "HorizontalListviewComponent"
                        },
                        {
                            "name": "LanguagePipe"
                        },
                        {
                            "name": "LanguageSelectorComponent"
                        },
                        {
                            "name": "LoaderComponent"
                        },
                        {
                            "name": "LoginComponent"
                        },
                        {
                            "name": "LogoComponent"
                        },
                        {
                            "name": "MainLandingComponent"
                        },
                        {
                            "name": "ManageBookingComponent"
                        },
                        {
                            "name": "NocontentComponent"
                        },
                        {
                            "name": "OfferBookingComponent"
                        },
                        {
                            "name": "OfferInfoLandingComponent"
                        },
                        {
                            "name": "OfferInformationComponent"
                        },
                        {
                            "name": "OfferLandingComponent"
                        },
                        {
                            "name": "OfferLocationComponent"
                        },
                        {
                            "name": "OfferPlanComponent"
                        },
                        {
                            "name": "OffersPageComponent"
                        },
                        {
                            "name": "Onlynumbers"
                        },
                        {
                            "name": "OursocialmediaComponent"
                        },
                        {
                            "name": "PhoneInputComponent"
                        },
                        {
                            "name": "PillComponent"
                        },
                        {
                            "name": "PlaygroundComponent"
                        },
                        {
                            "name": "PriceCaculatorPipe"
                        },
                        {
                            "name": "PricePipe"
                        },
                        {
                            "name": "ProfileinputComponent"
                        },
                        {
                            "name": "ReadOnlyStarsComponent"
                        },
                        {
                            "name": "SaferniImageComponent"
                        },
                        {
                            "name": "SearchPanelComponent"
                        },
                        {
                            "name": "SectionCitiesComponent"
                        },
                        {
                            "name": "SectionDailyTripsComponent"
                        },
                        {
                            "name": "SectionHeaderComponent"
                        },
                        {
                            "name": "SectionOffersComponent"
                        },
                        {
                            "name": "ServerimagePipe"
                        },
                        {
                            "name": "SingleTripCardComponent"
                        },
                        {
                            "name": "SnackCompComponent"
                        },
                        {
                            "name": "SocialLinkDirective"
                        },
                        {
                            "name": "SplashComponent"
                        },
                        {
                            "name": "StepperComponent"
                        },
                        {
                            "name": "TicketCounterComponent"
                        },
                        {
                            "name": "TourInformationComponent"
                        },
                        {
                            "name": "TourMapComponent"
                        },
                        {
                            "name": "TravelTypePipe"
                        },
                        {
                            "name": "UpperFirstCharPipe"
                        },
                        {
                            "name": "UserProfileComponent"
                        },
                        {
                            "name": "UserProfileLandingComponent"
                        },
                        {
                            "name": "UserSecurityComponent"
                        },
                        {
                            "name": "UserTripsComponent"
                        },
                        {
                            "name": "ValidationIconComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "AgmOverlays"
                        },
                        {
                            "name": "AppRoutingModule"
                        },
                        {
                            "name": "GraphQLModule"
                        },
                        {
                            "name": "TranslocoRootModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": [
                        {
                            "name": "AppComponent"
                        }
                    ]
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "AppRoutingModule",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "GraphQLModule",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "TranslocoRootModule",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        }
    ],
    "miscellaneous": {
        "variables": [
            {
                "name": "ADAPTER_CONFIG",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/data/services/injectionTokens.ts",
                "type": "",
                "defaultValue": "new InjectionToken('app.config')"
            },
            {
                "name": "ADAPTERINEJCTION",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/data/services/injectionTokens.ts",
                "type": "MyAdapter",
                "defaultValue": "{\n  class: CityModel,\n  adapter: CityModelAdapter,\n}"
            },
            {
                "name": "AddToNewsLetterDocument",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/data/services/saferniGraphql.service.ts",
                "type": "",
                "defaultValue": "gql`\n    mutation addToNewsLetter($email: String!) {\n  createSubscriber(input: {data: {email: $email}}) {\n    subscriber {\n      email\n    }\n  }\n}\n    `"
            },
            {
                "name": "CitiesDocument",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/data/services/saferniGraphql.service.ts",
                "type": "",
                "defaultValue": "gql`\n    query cities($limit: Int, $locale: String) {\n  cities(limit: $limit, locale: $locale) {\n    ...CityInfo\n  }\n}\n    ${CityInfoFragmentDoc}`"
            },
            {
                "name": "CityInfoFragmentDoc",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/data/services/saferniGraphql.service.ts",
                "type": "",
                "defaultValue": "gql`\n    fragment CityInfo on City {\n  id\n  name\n  description\n  locale\n  localizations {\n    id\n    locale\n  }\n  image {\n    id\n    width\n    height\n    url\n    formats\n  }\n}\n    `"
            },
            {
                "name": "context",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/test.ts",
                "type": "",
                "defaultValue": "require.context('./', true, /\\.spec\\.ts$/)"
            },
            {
                "name": "CreateBookingQueryDocument",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/data/services/saferniGraphql.service.ts",
                "type": "",
                "defaultValue": "gql`\n    mutation createBookingQuery($tripId: ID!, $fullName: String!, $basePrice: Float!, $discount: Float = 0, $basePeopleCount: Int!, $phone: String!, $arrivalDate: Date!, $message: String, $currency: ENUM_BOOKING_CURRENCY!, $email: String!, $language: String!, $adults: Int!, $children: Int!) {\n  createBooking(\n    input: {data: {trip: $tripId, basePrice: $basePrice, discount: $discount, message: $message, fullName: $fullName, basePeopleCount: $basePeopleCount, phone: $phone, arrivalDate: $arrivalDate, currency: $currency, email: $email, language: $language, adults: $adults, children: $children}}\n  ) {\n    booking {\n      message\n    }\n  }\n}\n    `"
            },
            {
                "name": "environment",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/environments/environment.ts",
                "type": "object",
                "defaultValue": "{\n  baseUrl: 'http://localhost:4200',\n  production: false,\n\n  api: 'https://saferni.net/api',\n  firebase: {\n    apiKey: 'AIzaSyCFFDVIBbxgrXGYTGwnBT00Zr7kL4FF6BU',\n    authDomain: 'saferni-e66bf.firebaseapp.com',\n    projectId: 'saferni-e66bf',\n    storageBucket: 'saferni-e66bf.appspot.com',\n    messagingSenderId: '941898512347',\n    appId: '1:941898512347:web:43bdf6f9a48ba7c4fc99fe',\n    measurementId: 'G-ZWQR4B6FH5',\n  },\n}"
            },
            {
                "name": "environment",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/environments/environment.prod.ts",
                "type": "object",
                "defaultValue": "{\n  baseUrl: 'https://saferni.net',\n  production: true,\n  api: 'https://saferni.net/api',\n  firebase: {\n    apiKey: 'AIzaSyCFFDVIBbxgrXGYTGwnBT00Zr7kL4FF6BU',\n    authDomain: 'saferni-e66bf.firebaseapp.com',\n    projectId: 'saferni-e66bf',\n    storageBucket: 'saferni-e66bf.appspot.com',\n    messagingSenderId: '941898512347',\n    appId: '1:941898512347:web:43bdf6f9a48ba7c4fc99fe',\n    measurementId: 'G-ZWQR4B6FH5',\n  },\n}"
            },
            {
                "name": "FeaturesDocument",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/data/services/saferniGraphql.service.ts",
                "type": "",
                "defaultValue": "gql`\n    query features($locale: String!) {\n  features(locale: $locale) {\n    name\n  }\n}\n    `"
            },
            {
                "name": "GetCityDocument",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/data/services/saferniGraphql.service.ts",
                "type": "",
                "defaultValue": "gql`\n    query getCity($id: ID!) {\n  city(id: $id) {\n    ...CityInfo\n  }\n}\n    ${CityInfoFragmentDoc}`"
            },
            {
                "name": "GetLocalizedCityDocument",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/data/services/saferniGraphql.service.ts",
                "type": "",
                "defaultValue": "gql`\n    query getLocalizedCity($id: ID!, $locale: String!) {\n  cities(locale: $locale, where: {_or: [{localizations: {id: $id}}, {id: $id}]}) {\n    ...CityInfo\n  }\n}\n    ${CityInfoFragmentDoc}`"
            },
            {
                "name": "GetLocalizedTripDocument",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/data/services/saferniGraphql.service.ts",
                "type": "",
                "defaultValue": "gql`\n    query getLocalizedTrip($id: ID!, $locale: String!) {\n  trips(locale: $locale, where: {_or: [{localizations: {id: $id}}, {id: $id}]}) {\n    ...tripInfo\n  }\n}\n    ${TripInfoFragmentDoc}`"
            },
            {
                "name": "GetLocationsDocument",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/data/services/saferniGraphql.service.ts",
                "type": "",
                "defaultValue": "gql`\n    query getLocations($locale: String!, $ids: [String!]!) {\n  locations(locale: $locale, where: {id_in: $ids}) {\n    id\n    name\n    description\n    coordinate {\n      latitude\n      longitude\n    }\n    locale\n    images {\n      id\n      width\n      height\n      url\n      formats\n    }\n    city {\n      id\n      name\n      description\n      locale\n      localizations {\n        id\n        locale\n      }\n      image {\n        id\n        width\n        height\n        url\n        formats\n      }\n    }\n  }\n}\n    `"
            },
            {
                "name": "getTravelTypeData",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/data/utils/enums.ts",
                "type": "",
                "defaultValue": "(\n  locale: LocalService\n): { id: string; name: string }[] => {\n  return [\n    {\n      id: Enum_Trips_Traveltype.Private,\n      name: locale.getTranslation(\n        `travelType.${Enum_Trips_Traveltype.Private}`\n      ),\n    },\n    {\n      id: Enum_Trips_Traveltype.Public,\n      name: locale.getTranslation(`travelType.${Enum_Trips_Traveltype.Public}`),\n    },\n  ];\n}"
            },
            {
                "name": "GetTripDocument",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/data/services/saferniGraphql.service.ts",
                "type": "",
                "defaultValue": "gql`\n    query getTrip($id: ID!) {\n  trip(id: $id) {\n    ...tripInfo\n  }\n}\n    ${TripInfoFragmentDoc}`"
            },
            {
                "name": "HomeCarousellDocument",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/data/services/saferniGraphql.service.ts",
                "type": "",
                "defaultValue": "gql`\n    query homeCarousell {\n  homeBanner {\n    images {\n      id\n      width\n      height\n      url\n      formats\n    }\n  }\n}\n    `"
            },
            {
                "name": "isInstanceOfGuesCount",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/common/widgets/guest-count-input/guest-count-input.component.ts",
                "type": "",
                "defaultValue": "(obj: any) => {\n  if (typeof obj !== 'object') return false;\n  return 'adult' in obj && 'child' in obj;\n}"
            },
            {
                "name": "Large",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Button.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "LOCALE_KEY",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/data/services/local.service.ts",
                "type": "string",
                "defaultValue": "'locale'"
            },
            {
                "name": "LoggedIn",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Header.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "LoggedIn",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Page.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "LoggedOut",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Header.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "LoggedOut",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Page.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Primary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Button.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "require",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/test.ts",
                "type": "literal type"
            },
            {
                "name": "Secondary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Button.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "showErrorMsj",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/data/static/StaticFunctions.ts",
                "type": "",
                "defaultValue": "(err: LoadingState, dlg: MatDialog) => {}"
            },
            {
                "name": "Small",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Button.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Button.stories.ts",
                "type": "Story<Button>",
                "defaultValue": "(args: Button) => ({\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Header.stories.ts",
                "type": "Story<Header>",
                "defaultValue": "(args: Header) => ({\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Page.stories.ts",
                "type": "Story<Page>",
                "defaultValue": "(args: Page) => ({\n  props: args,\n})"
            },
            {
                "name": "TripInfoFragmentDoc",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/data/services/saferniGraphql.service.ts",
                "type": "",
                "defaultValue": "gql`\n    fragment tripInfo on Trips {\n  id\n  name\n  active\n  description\n  locale\n  trip_type\n  duration\n  travelType\n  city {\n    id\n    name\n  }\n  hotel {\n    id\n    name\n    url\n    stars\n  }\n  plan {\n    day\n    locations {\n      id\n      name\n      city {\n        id\n      }\n    }\n    transportationType\n    travelTo {\n      id\n      name\n    }\n    description\n    restDay\n  }\n  previewImage {\n    id\n    width\n    height\n    url\n    formats\n  }\n  localizations {\n    id\n    locale\n  }\n  basePrice\n  discount\n  currency\n  basePeopleCount\n  features {\n    included\n    feature {\n      name\n      info\n    }\n  }\n}\n    `"
            },
            {
                "name": "TripsDocument",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/data/services/saferniGraphql.service.ts",
                "type": "",
                "defaultValue": "gql`\n    query trips($limit: Int = 10, $locale: String = \"en\", $where: JSON) {\n  trips(limit: $limit, locale: $locale, where: $where) {\n    ...tripInfo\n  }\n}\n    ${TripInfoFragmentDoc}`"
            },
            {
                "name": "uri",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/graphql.module.ts",
                "type": "string",
                "defaultValue": "'https://saferni.net/api/graphql'"
            }
        ],
        "functions": [
            {
                "name": "createApollo",
                "file": "src/app/graphql.module.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "description": "",
                "args": [
                    {
                        "name": "httpLink"
                    }
                ],
                "returnType": "ApolloClientOptions<any>",
                "jsdoctags": [
                    {
                        "name": "httpLink",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            {
                "name": "delay",
                "file": "src/app/data/utils/helpers.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "description": "",
                "args": [
                    {
                        "name": "ms"
                    }
                ],
                "jsdoctags": [
                    {
                        "name": "ms",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            {
                "name": "playerFactory",
                "file": "src/app/app.module.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "description": "",
                "args": []
            }
        ],
        "typealiases": [
            {
                "name": "AccordionClickEventData",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/common/widgets/accordion-list/accordion-list.component.ts",
                "description": "",
                "kind": 165
            },
            {
                "name": "AddToNewsLetterMutation",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "",
                "file": "src/app/data/services/saferniGraphql.service.ts",
                "description": "",
                "kind": 172
            },
            {
                "name": "AddToNewsLetterMutationVariables",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "Exact<literal type>",
                "file": "src/app/data/services/saferniGraphql.service.ts",
                "description": "",
                "kind": 161
            },
            {
                "name": "AdminUser",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/data/services/saferniGraphql.service.ts",
                "description": "",
                "kind": 165
            },
            {
                "name": "Booking",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/data/services/saferniGraphql.service.ts",
                "description": "",
                "kind": 165
            },
            {
                "name": "BookingAggregator",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/data/services/saferniGraphql.service.ts",
                "description": "",
                "kind": 165
            },
            {
                "name": "BookingAggregatorAvg",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/data/services/saferniGraphql.service.ts",
                "description": "",
                "kind": 165
            },
            {
                "name": "BookingAggregatorMax",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/data/services/saferniGraphql.service.ts",
                "description": "",
                "kind": 165
            },
            {
                "name": "BookingAggregatorMin",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/data/services/saferniGraphql.service.ts",
                "description": "",
                "kind": 165
            },
            {
                "name": "BookingAggregatorSum",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/data/services/saferniGraphql.service.ts",
                "description": "",
                "kind": 165
            },
            {
                "name": "BookingConnection",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/data/services/saferniGraphql.service.ts",
                "description": "",
                "kind": 165
            },
            {
                "name": "BookingConnection_Id",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/data/services/saferniGraphql.service.ts",
                "description": "",
                "kind": 165
            },
            {
                "name": "BookingConnectionAdults",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/data/services/saferniGraphql.service.ts",
                "description": "",
                "kind": 165
            },
            {
                "name": "BookingConnectionApproved",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/data/services/saferniGraphql.service.ts",
                "description": "",
                "kind": 165
            },
            {
                "name": "BookingConnectionArrivalDate",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/data/services/saferniGraphql.service.ts",
                "description": "",
                "kind": 165
            },
            {
                "name": "BookingConnectionBasePeopleCount",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/data/services/saferniGraphql.service.ts",
                "description": "",
                "kind": 165
            },
            {
                "name": "BookingConnectionBasePrice",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/data/services/saferniGraphql.service.ts",
                "description": "",
                "kind": 165
            },
            {
                "name": "BookingConnectionChildren",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/data/services/saferniGraphql.service.ts",
                "description": "",
                "kind": 165
            },
            {
                "name": "BookingConnectionCreatedAt",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/data/services/saferniGraphql.service.ts",
                "description": "",
                "kind": 165
            },
            {
                "name": "BookingConnectionCurrency",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/data/services/saferniGraphql.service.ts",
                "description": "",
                "kind": 165
            },
            {
                "name": "BookingConnectionDiscount",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/data/services/saferniGraphql.service.ts",
                "description": "",
                "kind": 165
            },
            {
                "name": "BookingConnectionEmail",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/data/services/saferniGraphql.service.ts",
                "description": "",
                "kind": 165
            },
            {
                "name": "BookingConnectionFullName",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/data/services/saferniGraphql.service.ts",
                "description": "",
                "kind": 165
            },
            {
                "name": "BookingConnectionId",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/data/services/saferniGraphql.service.ts",
                "description": "",
                "kind": 165
            },
            {
                "name": "BookingConnectionLanguage",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/data/services/saferniGraphql.service.ts",
                "description": "",
                "kind": 165
            },
            {
                "name": "BookingConnectionMessage",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/data/services/saferniGraphql.service.ts",
                "description": "",
                "kind": 165
            },
            {
                "name": "BookingConnectionPhone",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/data/services/saferniGraphql.service.ts",
                "description": "",
                "kind": 165
            },
            {
                "name": "BookingConnectionPublished_At",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/data/services/saferniGraphql.service.ts",
                "description": "",
                "kind": 165
            },
            {
                "name": "BookingConnectionTotalPrice",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/data/services/saferniGraphql.service.ts",
                "description": "",
                "kind": 165
            },
            {
                "name": "BookingConnectionTrip",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/data/services/saferniGraphql.service.ts",
                "description": "",
                "kind": 165
            },
            {
                "name": "BookingConnectionUpdatedAt",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/data/services/saferniGraphql.service.ts",
                "description": "",
                "kind": 165
            },
            {
                "name": "BookingConnectionUserBookingStatus",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/data/services/saferniGraphql.service.ts",
                "description": "",
                "kind": 165
            },
            {
                "name": "BookingGroupBy",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/data/services/saferniGraphql.service.ts",
                "description": "",
                "kind": 165
            },
            {
                "name": "BookingInput",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/data/services/saferniGraphql.service.ts",
                "description": "",
                "kind": 165
            },
            {
                "name": "CitiesQuery",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "",
                "file": "src/app/data/services/saferniGraphql.service.ts",
                "description": "",
                "kind": 172
            },
            {
                "name": "CitiesQueryVariables",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "Exact<literal type>",
                "file": "src/app/data/services/saferniGraphql.service.ts",
                "description": "",
                "kind": 161
            },
            {
                "name": "City",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/data/services/saferniGraphql.service.ts",
                "description": "",
                "kind": 165
            },
            {
                "name": "CityAggregator",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/data/services/saferniGraphql.service.ts",
                "description": "",
                "kind": 165
            },
            {
                "name": "CityConnection",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/data/services/saferniGraphql.service.ts",
                "description": "",
                "kind": 165
            },
            {
                "name": "CityConnection_Id",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/data/services/saferniGraphql.service.ts",
                "description": "",
                "kind": 165
            },
            {
                "name": "CityConnectionCreatedAt",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/data/services/saferniGraphql.service.ts",
                "description": "",
                "kind": 165
            },
            {
                "name": "CityConnectionDescription",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/data/services/saferniGraphql.service.ts",
                "description": "",
                "kind": 165
            },
            {
                "name": "CityConnectionId",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/data/services/saferniGraphql.service.ts",
                "description": "",
                "kind": 165
            },
            {
                "name": "CityConnectionImage",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/data/services/saferniGraphql.service.ts",
                "description": "",
                "kind": 165
            },
            {
                "name": "CityConnectionLocale",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/data/services/saferniGraphql.service.ts",
                "description": "",
                "kind": 165
            },
            {
                "name": "CityConnectionName",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/data/services/saferniGraphql.service.ts",
                "description": "",
                "kind": 165
            },
            {
                "name": "CityConnectionPublished_At",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/data/services/saferniGraphql.service.ts",
                "description": "",
                "kind": 165
            },
            {
                "name": "CityConnectionUpdatedAt",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/data/services/saferniGraphql.service.ts",
                "description": "",
                "kind": 165
            },
            {
                "name": "CityGroupBy",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/data/services/saferniGraphql.service.ts",
                "description": "",
                "kind": 165
            },
            {
                "name": "CityInfoFragment",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "",
                "file": "src/app/data/services/saferniGraphql.service.ts",
                "description": "",
                "kind": 172
            },
            {
                "name": "CityInput",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/data/services/saferniGraphql.service.ts",
                "description": "",
                "kind": 165
            },
            {
                "name": "CityLocalizationsArgs",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/data/services/saferniGraphql.service.ts",
                "description": "",
                "kind": 165
            },
            {
                "name": "CityLocationsArgs",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/data/services/saferniGraphql.service.ts",
                "description": "",
                "kind": 165
            },
            {
                "name": "ComponentCoordinateCoordinate",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/data/services/saferniGraphql.service.ts",
                "description": "",
                "kind": 165
            },
            {
                "name": "ComponentCoordinateCoordinateInput",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/data/services/saferniGraphql.service.ts",
                "description": "",
                "kind": 165
            },
            {
                "name": "ComponentFeatureFeature",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/data/services/saferniGraphql.service.ts",
                "description": "",
                "kind": 165
            },
            {
                "name": "ComponentFeatureFeatureInput",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/data/services/saferniGraphql.service.ts",
                "description": "",
                "kind": 165
            },
            {
                "name": "ComponentPricePrice",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/data/services/saferniGraphql.service.ts",
                "description": "",
                "kind": 165
            },
            {
                "name": "ComponentPricePriceInput",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/data/services/saferniGraphql.service.ts",
                "description": "",
                "kind": 165
            },
            {
                "name": "ComponentTimelineTimeline",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/data/services/saferniGraphql.service.ts",
                "description": "",
                "kind": 165
            },
            {
                "name": "ComponentTimelineTimelineInput",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/data/services/saferniGraphql.service.ts",
                "description": "",
                "kind": 165
            },
            {
                "name": "ComponentTimelineTimelineLocationsArgs",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/data/services/saferniGraphql.service.ts",
                "description": "",
                "kind": 165
            },
            {
                "name": "Coordinates",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/data/models/LocationModel.ts",
                "description": "",
                "kind": 165
            },
            {
                "name": "CreateBookingInput",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/data/services/saferniGraphql.service.ts",
                "description": "",
                "kind": 165
            },
            {
                "name": "CreateBookingPayload",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/data/services/saferniGraphql.service.ts",
                "description": "",
                "kind": 165
            },
            {
                "name": "CreateBookingQueryMutation",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "",
                "file": "src/app/data/services/saferniGraphql.service.ts",
                "description": "",
                "kind": 172
            },
            {
                "name": "CreateBookingQueryMutationVariables",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "Exact<literal type>",
                "file": "src/app/data/services/saferniGraphql.service.ts",
                "description": "",
                "kind": 161
            },
            {
                "name": "CreateCityInput",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/data/services/saferniGraphql.service.ts",
                "description": "",
                "kind": 165
            },
            {
                "name": "CreateCityPayload",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/data/services/saferniGraphql.service.ts",
                "description": "",
                "kind": 165
            },
            {
                "name": "CreateFeatureInput",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/data/services/saferniGraphql.service.ts",
                "description": "",
                "kind": 165
            },
            {
                "name": "CreateFeaturePayload",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/data/services/saferniGraphql.service.ts",
                "description": "",
                "kind": 165
            },
            {
                "name": "CreateHotelInput",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/data/services/saferniGraphql.service.ts",
                "description": "",
                "kind": 165
            },
            {
                "name": "CreateHotelPayload",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/data/services/saferniGraphql.service.ts",
                "description": "",
                "kind": 165
            },
            {
                "name": "CreateLocationInput",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/data/services/saferniGraphql.service.ts",
                "description": "",
                "kind": 165
            },
            {
                "name": "CreateLocationPayload",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/data/services/saferniGraphql.service.ts",
                "description": "",
                "kind": 165
            },
            {
                "name": "CreatePartnerInput",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/data/services/saferniGraphql.service.ts",
                "description": "",
                "kind": 165
            },
            {
                "name": "CreatePartnerPayload",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/data/services/saferniGraphql.service.ts",
                "description": "",
                "kind": 165
            },
            {
                "name": "CreateReviewInput",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/data/services/saferniGraphql.service.ts",
                "description": "",
                "kind": 165
            },
            {
                "name": "CreateReviewPayload",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/data/services/saferniGraphql.service.ts",
                "description": "",
                "kind": 165
            },
            {
                "name": "CreateRoleInput",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/data/services/saferniGraphql.service.ts",
                "description": "",
                "kind": 165
            },
            {
                "name": "CreateRolePayload",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/data/services/saferniGraphql.service.ts",
                "description": "",
                "kind": 165
            },
            {
                "name": "CreateSubscriberInput",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/data/services/saferniGraphql.service.ts",
                "description": "",
                "kind": 165
            },
            {
                "name": "CreateSubscriberPayload",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/data/services/saferniGraphql.service.ts",
                "description": "",
                "kind": 165
            },
            {
                "name": "CreateTripInput",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/data/services/saferniGraphql.service.ts",
                "description": "",
                "kind": 165
            },
            {
                "name": "CreateTripPayload",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/data/services/saferniGraphql.service.ts",
                "description": "",
                "kind": 165
            },
            {
                "name": "CreateUserInput",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/data/services/saferniGraphql.service.ts",
                "description": "",
                "kind": 165
            },
            {
                "name": "CreateUserPayload",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/data/services/saferniGraphql.service.ts",
                "description": "",
                "kind": 165
            },
            {
                "name": "DeleteBookingInput",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/data/services/saferniGraphql.service.ts",
                "description": "",
                "kind": 165
            },
            {
                "name": "DeleteBookingPayload",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/data/services/saferniGraphql.service.ts",
                "description": "",
                "kind": 165
            },
            {
                "name": "DeleteCityInput",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/data/services/saferniGraphql.service.ts",
                "description": "",
                "kind": 165
            },
            {
                "name": "DeleteCityPayload",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/data/services/saferniGraphql.service.ts",
                "description": "",
                "kind": 165
            },
            {
                "name": "DeleteFeatureInput",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/data/services/saferniGraphql.service.ts",
                "description": "",
                "kind": 165
            },
            {
                "name": "DeleteFeaturePayload",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/data/services/saferniGraphql.service.ts",
                "description": "",
                "kind": 165
            },
            {
                "name": "DeleteFileInput",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/data/services/saferniGraphql.service.ts",
                "description": "",
                "kind": 165
            },
            {
                "name": "DeleteFilePayload",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/data/services/saferniGraphql.service.ts",
                "description": "",
                "kind": 165
            },
            {
                "name": "DeleteHomeBannerPayload",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/data/services/saferniGraphql.service.ts",
                "description": "",
                "kind": 165
            },
            {
                "name": "DeleteHotelInput",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/data/services/saferniGraphql.service.ts",
                "description": "",
                "kind": 165
            },
            {
                "name": "DeleteHotelPayload",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/data/services/saferniGraphql.service.ts",
                "description": "",
                "kind": 165
            },
            {
                "name": "DeleteLocationInput",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/data/services/saferniGraphql.service.ts",
                "description": "",
                "kind": 165
            },
            {
                "name": "DeleteLocationPayload",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/data/services/saferniGraphql.service.ts",
                "description": "",
                "kind": 165
            },
            {
                "name": "DeletePartnerInput",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/data/services/saferniGraphql.service.ts",
                "description": "",
                "kind": 165
            },
            {
                "name": "DeletePartnerPayload",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/data/services/saferniGraphql.service.ts",
                "description": "",
                "kind": 165
            },
            {
                "name": "DeleteReviewInput",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/data/services/saferniGraphql.service.ts",
                "description": "",
                "kind": 165
            },
            {
                "name": "DeleteReviewPayload",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/data/services/saferniGraphql.service.ts",
                "description": "",
                "kind": 165
            },
            {
                "name": "DeleteRoleInput",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/data/services/saferniGraphql.service.ts",
                "description": "",
                "kind": 165
            },
            {
                "name": "DeleteRolePayload",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/data/services/saferniGraphql.service.ts",
                "description": "",
                "kind": 165
            },
            {
                "name": "DeleteSubscriberInput",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/data/services/saferniGraphql.service.ts",
                "description": "",
                "kind": 165
            },
            {
                "name": "DeleteSubscriberPayload",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/data/services/saferniGraphql.service.ts",
                "description": "",
                "kind": 165
            },
            {
                "name": "DeleteTripInput",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/data/services/saferniGraphql.service.ts",
                "description": "",
                "kind": 165
            },
            {
                "name": "DeleteTripPayload",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/data/services/saferniGraphql.service.ts",
                "description": "",
                "kind": 165
            },
            {
                "name": "DeleteUserInput",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/data/services/saferniGraphql.service.ts",
                "description": "",
                "kind": 165
            },
            {
                "name": "DeleteUserPayload",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/data/services/saferniGraphql.service.ts",
                "description": "",
                "kind": 165
            },
            {
                "name": "EditBookingInput",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/data/services/saferniGraphql.service.ts",
                "description": "",
                "kind": 165
            },
            {
                "name": "EditCityInput",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/data/services/saferniGraphql.service.ts",
                "description": "",
                "kind": 165
            },
            {
                "name": "EditComponentCoordinateCoordinateInput",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/data/services/saferniGraphql.service.ts",
                "description": "",
                "kind": 165
            },
            {
                "name": "EditComponentFeatureFeatureInput",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/data/services/saferniGraphql.service.ts",
                "description": "",
                "kind": 165
            },
            {
                "name": "EditComponentPricePriceInput",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/data/services/saferniGraphql.service.ts",
                "description": "",
                "kind": 165
            },
            {
                "name": "EditComponentTimelineTimelineInput",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/data/services/saferniGraphql.service.ts",
                "description": "",
                "kind": 165
            },
            {
                "name": "EditFeatureInput",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/data/services/saferniGraphql.service.ts",
                "description": "",
                "kind": 165
            },
            {
                "name": "EditFileInput",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/data/services/saferniGraphql.service.ts",
                "description": "",
                "kind": 165
            },
            {
                "name": "EditHomeBannerInput",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/data/services/saferniGraphql.service.ts",
                "description": "",
                "kind": 165
            },
            {
                "name": "EditHotelInput",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/data/services/saferniGraphql.service.ts",
                "description": "",
                "kind": 165
            },
            {
                "name": "EditLocaleInput",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/data/services/saferniGraphql.service.ts",
                "description": "",
                "kind": 165
            },
            {
                "name": "EditLocationInput",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/data/services/saferniGraphql.service.ts",
                "description": "",
                "kind": 165
            },
            {
                "name": "EditPartnerInput",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/data/services/saferniGraphql.service.ts",
                "description": "",
                "kind": 165
            },
            {
                "name": "EditReviewInput",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/data/services/saferniGraphql.service.ts",
                "description": "",
                "kind": 165
            },
            {
                "name": "EditRoleInput",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/data/services/saferniGraphql.service.ts",
                "description": "",
                "kind": 165
            },
            {
                "name": "EditSubscriberInput",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/data/services/saferniGraphql.service.ts",
                "description": "",
                "kind": 165
            },
            {
                "name": "EditTripInput",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/data/services/saferniGraphql.service.ts",
                "description": "",
                "kind": 165
            },
            {
                "name": "EditUserInput",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/data/services/saferniGraphql.service.ts",
                "description": "",
                "kind": 165
            },
            {
                "name": "Exact",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "",
                "file": "src/app/data/services/saferniGraphql.service.ts",
                "description": "",
                "kind": 176
            },
            {
                "name": "Feature",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/data/services/saferniGraphql.service.ts",
                "description": "",
                "kind": 165
            },
            {
                "name": "FeatureAggregator",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/data/services/saferniGraphql.service.ts",
                "description": "",
                "kind": 165
            },
            {
                "name": "FeatureConnection",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/data/services/saferniGraphql.service.ts",
                "description": "",
                "kind": 165
            },
            {
                "name": "FeatureConnection_Id",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/data/services/saferniGraphql.service.ts",
                "description": "",
                "kind": 165
            },
            {
                "name": "FeatureConnectionCreatedAt",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/data/services/saferniGraphql.service.ts",
                "description": "",
                "kind": 165
            },
            {
                "name": "FeatureConnectionId",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/data/services/saferniGraphql.service.ts",
                "description": "",
                "kind": 165
            },
            {
                "name": "FeatureConnectionInfo",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/data/services/saferniGraphql.service.ts",
                "description": "",
                "kind": 165
            },
            {
                "name": "FeatureConnectionLocale",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/data/services/saferniGraphql.service.ts",
                "description": "",
                "kind": 165
            },
            {
                "name": "FeatureConnectionName",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/data/services/saferniGraphql.service.ts",
                "description": "",
                "kind": 165
            },
            {
                "name": "FeatureConnectionPublished_At",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/data/services/saferniGraphql.service.ts",
                "description": "",
                "kind": 165
            },
            {
                "name": "FeatureConnectionUpdatedAt",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/data/services/saferniGraphql.service.ts",
                "description": "",
                "kind": 165
            },
            {
                "name": "FeatureGroupBy",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/data/services/saferniGraphql.service.ts",
                "description": "",
                "kind": 165
            },
            {
                "name": "FeatureInput",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/data/services/saferniGraphql.service.ts",
                "description": "",
                "kind": 165
            },
            {
                "name": "FeatureLocalizationsArgs",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/data/services/saferniGraphql.service.ts",
                "description": "",
                "kind": 165
            },
            {
                "name": "FeaturesQuery",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "",
                "file": "src/app/data/services/saferniGraphql.service.ts",
                "description": "",
                "kind": 172
            },
            {
                "name": "FeaturesQueryVariables",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "Exact<literal type>",
                "file": "src/app/data/services/saferniGraphql.service.ts",
                "description": "",
                "kind": 161
            },
            {
                "name": "FileInfoInput",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/data/services/saferniGraphql.service.ts",
                "description": "",
                "kind": 165
            },
            {
                "name": "FileInput",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/data/services/saferniGraphql.service.ts",
                "description": "",
                "kind": 165
            },
            {
                "name": "GetCityQuery",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "",
                "file": "src/app/data/services/saferniGraphql.service.ts",
                "description": "",
                "kind": 172
            },
            {
                "name": "GetCityQueryVariables",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "Exact<literal type>",
                "file": "src/app/data/services/saferniGraphql.service.ts",
                "description": "",
                "kind": 161
            },
            {
                "name": "GetLocalizedCityQuery",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "",
                "file": "src/app/data/services/saferniGraphql.service.ts",
                "description": "",
                "kind": 172
            },
            {
                "name": "GetLocalizedCityQueryVariables",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "Exact<literal type>",
                "file": "src/app/data/services/saferniGraphql.service.ts",
                "description": "",
                "kind": 161
            },
            {
                "name": "GetLocalizedTripQuery",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "",
                "file": "src/app/data/services/saferniGraphql.service.ts",
                "description": "",
                "kind": 172
            },
            {
                "name": "GetLocalizedTripQueryVariables",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "Exact<literal type>",
                "file": "src/app/data/services/saferniGraphql.service.ts",
                "description": "",
                "kind": 161
            },
            {
                "name": "GetLocationsQuery",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "",
                "file": "src/app/data/services/saferniGraphql.service.ts",
                "description": "",
                "kind": 172
            },
            {
                "name": "GetLocationsQueryVariables",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "Exact<literal type>",
                "file": "src/app/data/services/saferniGraphql.service.ts",
                "description": "",
                "kind": 161
            },
            {
                "name": "GetTripQuery",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "",
                "file": "src/app/data/services/saferniGraphql.service.ts",
                "description": "",
                "kind": 172
            },
            {
                "name": "GetTripQueryVariables",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "Exact<literal type>",
                "file": "src/app/data/services/saferniGraphql.service.ts",
                "description": "",
                "kind": 161
            },
            {
                "name": "HomeBanner",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/data/services/saferniGraphql.service.ts",
                "description": "",
                "kind": 165
            },
            {
                "name": "HomeBannerImagesArgs",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/data/services/saferniGraphql.service.ts",
                "description": "",
                "kind": 165
            },
            {
                "name": "HomeBannerInput",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/data/services/saferniGraphql.service.ts",
                "description": "",
                "kind": 165
            },
            {
                "name": "HomeCarousellQuery",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "",
                "file": "src/app/data/services/saferniGraphql.service.ts",
                "description": "",
                "kind": 172
            },
            {
                "name": "HomeCarousellQueryVariables",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "Exact<literal type>",
                "file": "src/app/data/services/saferniGraphql.service.ts",
                "description": "",
                "kind": 161
            },
            {
                "name": "HotelInput",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/data/services/saferniGraphql.service.ts",
                "description": "",
                "kind": 165
            },
            {
                "name": "Hotels",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/data/services/saferniGraphql.service.ts",
                "description": "",
                "kind": 165
            },
            {
                "name": "HotelsAggregator",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/data/services/saferniGraphql.service.ts",
                "description": "",
                "kind": 165
            },
            {
                "name": "HotelsAggregatorAvg",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/data/services/saferniGraphql.service.ts",
                "description": "",
                "kind": 165
            },
            {
                "name": "HotelsAggregatorMax",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/data/services/saferniGraphql.service.ts",
                "description": "",
                "kind": 165
            },
            {
                "name": "HotelsAggregatorMin",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/data/services/saferniGraphql.service.ts",
                "description": "",
                "kind": 165
            },
            {
                "name": "HotelsAggregatorSum",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/data/services/saferniGraphql.service.ts",
                "description": "",
                "kind": 165
            },
            {
                "name": "HotelsConnection",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/data/services/saferniGraphql.service.ts",
                "description": "",
                "kind": 165
            },
            {
                "name": "HotelsConnection_Id",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/data/services/saferniGraphql.service.ts",
                "description": "",
                "kind": 165
            },
            {
                "name": "HotelsConnectionCreatedAt",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/data/services/saferniGraphql.service.ts",
                "description": "",
                "kind": 165
            },
            {
                "name": "HotelsConnectionId",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/data/services/saferniGraphql.service.ts",
                "description": "",
                "kind": 165
            },
            {
                "name": "HotelsConnectionName",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/data/services/saferniGraphql.service.ts",
                "description": "",
                "kind": 165
            },
            {
                "name": "HotelsConnectionPublished_At",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/data/services/saferniGraphql.service.ts",
                "description": "",
                "kind": 165
            },
            {
                "name": "HotelsConnectionStars",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/data/services/saferniGraphql.service.ts",
                "description": "",
                "kind": 165
            },
            {
                "name": "HotelsConnectionUpdatedAt",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/data/services/saferniGraphql.service.ts",
                "description": "",
                "kind": 165
            },
            {
                "name": "HotelsConnectionUrl",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/data/services/saferniGraphql.service.ts",
                "description": "",
                "kind": 165
            },
            {
                "name": "HotelsGroupBy",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/data/services/saferniGraphql.service.ts",
                "description": "",
                "kind": 165
            },
            {
                "name": "HotelsTripsArgs",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/data/services/saferniGraphql.service.ts",
                "description": "",
                "kind": 165
            },
            {
                "name": "I18NLocale",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/data/services/saferniGraphql.service.ts",
                "description": "",
                "kind": 165
            },
            {
                "name": "ImageFormatsObject",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/data/models/ImageModel.ts",
                "description": "",
                "kind": 165
            },
            {
                "name": "InputId",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/data/services/saferniGraphql.service.ts",
                "description": "",
                "kind": 165
            },
            {
                "name": "LocaleInput",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/data/services/saferniGraphql.service.ts",
                "description": "",
                "kind": 165
            },
            {
                "name": "LocalizationType",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/data/models/localization.type.ts",
                "description": "",
                "kind": 165
            },
            {
                "name": "Location",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/data/services/saferniGraphql.service.ts",
                "description": "",
                "kind": 165
            },
            {
                "name": "LocationAggregator",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/data/services/saferniGraphql.service.ts",
                "description": "",
                "kind": 165
            },
            {
                "name": "LocationConnection",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/data/services/saferniGraphql.service.ts",
                "description": "",
                "kind": 165
            },
            {
                "name": "LocationConnection_Id",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/data/services/saferniGraphql.service.ts",
                "description": "",
                "kind": 165
            },
            {
                "name": "LocationConnectionCity",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/data/services/saferniGraphql.service.ts",
                "description": "",
                "kind": 165
            },
            {
                "name": "LocationConnectionCoordinate",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/data/services/saferniGraphql.service.ts",
                "description": "",
                "kind": 165
            },
            {
                "name": "LocationConnectionCreatedAt",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/data/services/saferniGraphql.service.ts",
                "description": "",
                "kind": 165
            },
            {
                "name": "LocationConnectionDescription",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/data/services/saferniGraphql.service.ts",
                "description": "",
                "kind": 165
            },
            {
                "name": "LocationConnectionId",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/data/services/saferniGraphql.service.ts",
                "description": "",
                "kind": 165
            },
            {
                "name": "LocationConnectionLocale",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/data/services/saferniGraphql.service.ts",
                "description": "",
                "kind": 165
            },
            {
                "name": "LocationConnectionName",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/data/services/saferniGraphql.service.ts",
                "description": "",
                "kind": 165
            },
            {
                "name": "LocationConnectionPublished_At",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/data/services/saferniGraphql.service.ts",
                "description": "",
                "kind": 165
            },
            {
                "name": "LocationConnectionUpdatedAt",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/data/services/saferniGraphql.service.ts",
                "description": "",
                "kind": 165
            },
            {
                "name": "LocationGroupBy",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/data/services/saferniGraphql.service.ts",
                "description": "",
                "kind": 165
            },
            {
                "name": "LocationImagesArgs",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/data/services/saferniGraphql.service.ts",
                "description": "",
                "kind": 165
            },
            {
                "name": "LocationInput",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/data/services/saferniGraphql.service.ts",
                "description": "",
                "kind": 165
            },
            {
                "name": "LocationLocalizationsArgs",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/data/services/saferniGraphql.service.ts",
                "description": "",
                "kind": 165
            },
            {
                "name": "MakeMaybe",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "",
                "file": "src/app/data/services/saferniGraphql.service.ts",
                "description": "",
                "kind": 169
            },
            {
                "name": "MakeOptional",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "",
                "file": "src/app/data/services/saferniGraphql.service.ts",
                "description": "",
                "kind": 169
            },
            {
                "name": "Maybe",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "T | null",
                "file": "src/app/data/services/saferniGraphql.service.ts",
                "description": "",
                "kind": 168
            },
            {
                "name": "Morph",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "UsersPermissionsMe | UsersPermissionsMeRole | UsersPermissionsLoginPayload | UserPermissionsPasswordPayload | Booking | BookingConnection | BookingAggregator | BookingAggregatorSum | BookingAggregatorAvg | BookingAggregatorMin | BookingAggregatorMax | BookingGroupBy | BookingConnectionId | BookingConnection_Id | BookingConnectionCreatedAt | BookingConnectionUpdatedAt | BookingConnectionTrip | BookingConnectionApproved | BookingConnectionBasePrice | BookingConnectionCurrency | BookingConnectionBasePeopleCount | BookingConnectionDiscount | BookingConnectionFullName | BookingConnectionPhone | BookingConnectionMessage | BookingConnectionArrivalDate | BookingConnectionLanguage | BookingConnectionUserBookingStatus | BookingConnectionEmail | BookingConnectionAdults | BookingConnectionChildren | BookingConnectionTotalPrice | BookingConnectionPublished_At | CreateBookingPayload | UpdateBookingPayload | DeleteBookingPayload | City | CityConnection | CityAggregator | CityGroupBy | CityConnectionId | CityConnection_Id | CityConnectionCreatedAt | CityConnectionUpdatedAt | CityConnectionName | CityConnectionDescription | CityConnectionImage | CityConnectionLocale | CityConnectionPublished_At | CreateCityPayload | UpdateCityPayload | DeleteCityPayload | Feature | FeatureConnection | FeatureAggregator | FeatureGroupBy | FeatureConnectionId | FeatureConnection_Id | FeatureConnectionCreatedAt | FeatureConnectionUpdatedAt | FeatureConnectionName | FeatureConnectionInfo | FeatureConnectionLocale | FeatureConnectionPublished_At | CreateFeaturePayload | UpdateFeaturePayload | DeleteFeaturePayload | HomeBanner | UpdateHomeBannerPayload | DeleteHomeBannerPayload | Hotels | HotelsConnection | HotelsAggregator | HotelsAggregatorSum | HotelsAggregatorAvg | HotelsAggregatorMin | HotelsAggregatorMax | HotelsGroupBy | HotelsConnectionId | HotelsConnection_Id | HotelsConnectionCreatedAt | HotelsConnectionUpdatedAt | HotelsConnectionName | HotelsConnectionStars | HotelsConnectionUrl | HotelsConnectionPublished_At | CreateHotelPayload | UpdateHotelPayload | DeleteHotelPayload | Location | LocationConnection | LocationAggregator | LocationGroupBy | LocationConnectionId | LocationConnection_Id | LocationConnectionCreatedAt | LocationConnectionUpdatedAt | LocationConnectionName | LocationConnectionDescription | LocationConnectionCity | LocationConnectionCoordinate | LocationConnectionLocale | LocationConnectionPublished_At | CreateLocationPayload | UpdateLocationPayload | DeleteLocationPayload | Partner | PartnerConnection | PartnerAggregator | PartnerAggregatorSum | PartnerAggregatorAvg | PartnerAggregatorMin | PartnerAggregatorMax | PartnerGroupBy | PartnerConnectionId | PartnerConnection_Id | PartnerConnectionCreatedAt | PartnerConnectionUpdatedAt | PartnerConnectionName | PartnerConnectionPhone | PartnerConnectionAddress | PartnerConnectionEmail | PartnerConnectionAgreement | PartnerConnectionCommission | PartnerConnectionRevenueSource | PartnerConnectionAgreementStatus | PartnerConnectionNotes | PartnerConnectionPhone2 | PartnerConnectionPublished_At | CreatePartnerPayload | UpdatePartnerPayload | DeletePartnerPayload | Review | ReviewConnection | ReviewAggregator | ReviewAggregatorSum | ReviewAggregatorAvg | ReviewAggregatorMin | ReviewAggregatorMax | ReviewGroupBy | ReviewConnectionId | ReviewConnection_Id | ReviewConnectionCreatedAt | ReviewConnectionUpdatedAt | ReviewConnectionText | ReviewConnectionRating | ReviewConnectionAuthor | ReviewConnectionActive | ReviewConnectionTrip | ReviewConnectionPublished_At | CreateReviewPayload | UpdateReviewPayload | DeleteReviewPayload | Subscribers | SubscribersConnection | SubscribersAggregator | SubscribersGroupBy | SubscribersConnectionId | SubscribersConnection_Id | SubscribersConnectionCreatedAt | SubscribersConnectionUpdatedAt | SubscribersConnectionEmail | SubscribersConnectionPublished_At | CreateSubscriberPayload | UpdateSubscriberPayload | DeleteSubscriberPayload | Trips | TripsConnection | TripsAggregator | TripsAggregatorSum | TripsAggregatorAvg | TripsAggregatorMin | TripsAggregatorMax | TripsGroupBy | TripsConnectionId | TripsConnection_Id | TripsConnectionCreatedAt | TripsConnectionUpdatedAt | TripsConnectionName | TripsConnectionPreviewImage | TripsConnectionActive | TripsConnectionTrip_Type | TripsConnectionDescription | TripsConnectionDuration | TripsConnectionPartner | TripsConnectionCurrency | TripsConnectionCity | TripsConnectionBasePrice | TripsConnectionBasePeopleCount | TripsConnectionDiscount | TripsConnectionTravelType | TripsConnectionHotel | TripsConnectionLocale | TripsConnectionPublished_At | CreateTripPayload | UpdateTripPayload | DeleteTripPayload | I18NLocale | UploadFile | UploadFileConnection | UploadFileAggregator | UploadFileAggregatorSum | UploadFileAggregatorAvg | UploadFileAggregatorMin | UploadFileAggregatorMax | UploadFileGroupBy | UploadFileConnectionId | UploadFileConnection_Id | UploadFileConnectionCreatedAt | UploadFileConnectionUpdatedAt | UploadFileConnectionName | UploadFileConnectionAlternativeText | UploadFileConnectionCaption | UploadFileConnectionWidth | UploadFileConnectionHeight | UploadFileConnectionFormats | UploadFileConnectionHash | UploadFileConnectionExt | UploadFileConnectionMime | UploadFileConnectionSize | UploadFileConnectionUrl | UploadFileConnectionPreviewUrl | UploadFileConnectionProvider | UploadFileConnectionProvider_Metadata | DeleteFilePayload | UsersPermissionsPermission | UsersPermissionsRole | UsersPermissionsRoleConnection | UsersPermissionsRoleAggregator | UsersPermissionsRoleGroupBy | UsersPermissionsRoleConnectionId | UsersPermissionsRoleConnection_Id | UsersPermissionsRoleConnectionName | UsersPermissionsRoleConnectionDescription | UsersPermissionsRoleConnectionType | CreateRolePayload | UpdateRolePayload | DeleteRolePayload | UsersPermissionsUser | UsersPermissionsUserConnection | UsersPermissionsUserAggregator | UsersPermissionsUserGroupBy | UsersPermissionsUserConnectionId | UsersPermissionsUserConnection_Id | UsersPermissionsUserConnectionCreatedAt | UsersPermissionsUserConnectionUpdatedAt | UsersPermissionsUserConnectionUsername | UsersPermissionsUserConnectionEmail | UsersPermissionsUserConnectionProvider | UsersPermissionsUserConnectionConfirmed | UsersPermissionsUserConnectionBlocked | UsersPermissionsUserConnectionRole | CreateUserPayload | UpdateUserPayload | DeleteUserPayload | ComponentCoordinateCoordinate | ComponentFeatureFeature | ComponentPricePrice | ComponentTimelineTimeline",
                "file": "src/app/data/services/saferniGraphql.service.ts",
                "description": "",
                "kind": 168
            },
            {
                "name": "Mutation",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/data/services/saferniGraphql.service.ts",
                "description": "",
                "kind": 165
            },
            {
                "name": "MutationCreateBookingArgs",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/data/services/saferniGraphql.service.ts",
                "description": "",
                "kind": 165
            },
            {
                "name": "MutationCreateCityArgs",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/data/services/saferniGraphql.service.ts",
                "description": "",
                "kind": 165
            },
            {
                "name": "MutationCreateCityLocalizationArgs",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/data/services/saferniGraphql.service.ts",
                "description": "",
                "kind": 165
            },
            {
                "name": "MutationCreateFeatureArgs",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/data/services/saferniGraphql.service.ts",
                "description": "",
                "kind": 165
            },
            {
                "name": "MutationCreateFeatureLocalizationArgs",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/data/services/saferniGraphql.service.ts",
                "description": "",
                "kind": 165
            },
            {
                "name": "MutationCreateHotelArgs",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/data/services/saferniGraphql.service.ts",
                "description": "",
                "kind": 165
            },
            {
                "name": "MutationCreateLocationArgs",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/data/services/saferniGraphql.service.ts",
                "description": "",
                "kind": 165
            },
            {
                "name": "MutationCreateLocationLocalizationArgs",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/data/services/saferniGraphql.service.ts",
                "description": "",
                "kind": 165
            },
            {
                "name": "MutationCreatePartnerArgs",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/data/services/saferniGraphql.service.ts",
                "description": "",
                "kind": 165
            },
            {
                "name": "MutationCreateReviewArgs",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/data/services/saferniGraphql.service.ts",
                "description": "",
                "kind": 165
            },
            {
                "name": "MutationCreateRoleArgs",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/data/services/saferniGraphql.service.ts",
                "description": "",
                "kind": 165
            },
            {
                "name": "MutationCreateSubscriberArgs",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/data/services/saferniGraphql.service.ts",
                "description": "",
                "kind": 165
            },
            {
                "name": "MutationCreateTripArgs",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/data/services/saferniGraphql.service.ts",
                "description": "",
                "kind": 165
            },
            {
                "name": "MutationCreateTripLocalizationArgs",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/data/services/saferniGraphql.service.ts",
                "description": "",
                "kind": 165
            },
            {
                "name": "MutationCreateUserArgs",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/data/services/saferniGraphql.service.ts",
                "description": "",
                "kind": 165
            },
            {
                "name": "MutationDeleteBookingArgs",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/data/services/saferniGraphql.service.ts",
                "description": "",
                "kind": 165
            },
            {
                "name": "MutationDeleteCityArgs",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/data/services/saferniGraphql.service.ts",
                "description": "",
                "kind": 165
            },
            {
                "name": "MutationDeleteFeatureArgs",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/data/services/saferniGraphql.service.ts",
                "description": "",
                "kind": 165
            },
            {
                "name": "MutationDeleteFileArgs",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/data/services/saferniGraphql.service.ts",
                "description": "",
                "kind": 165
            },
            {
                "name": "MutationDeleteHotelArgs",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/data/services/saferniGraphql.service.ts",
                "description": "",
                "kind": 165
            },
            {
                "name": "MutationDeleteLocationArgs",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/data/services/saferniGraphql.service.ts",
                "description": "",
                "kind": 165
            },
            {
                "name": "MutationDeletePartnerArgs",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/data/services/saferniGraphql.service.ts",
                "description": "",
                "kind": 165
            },
            {
                "name": "MutationDeleteReviewArgs",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/data/services/saferniGraphql.service.ts",
                "description": "",
                "kind": 165
            },
            {
                "name": "MutationDeleteRoleArgs",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/data/services/saferniGraphql.service.ts",
                "description": "",
                "kind": 165
            },
            {
                "name": "MutationDeleteSubscriberArgs",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/data/services/saferniGraphql.service.ts",
                "description": "",
                "kind": 165
            },
            {
                "name": "MutationDeleteTripArgs",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/data/services/saferniGraphql.service.ts",
                "description": "",
                "kind": 165
            },
            {
                "name": "MutationDeleteUserArgs",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/data/services/saferniGraphql.service.ts",
                "description": "",
                "kind": 165
            },
            {
                "name": "MutationEmailConfirmationArgs",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/data/services/saferniGraphql.service.ts",
                "description": "",
                "kind": 165
            },
            {
                "name": "MutationForgotPasswordArgs",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/data/services/saferniGraphql.service.ts",
                "description": "",
                "kind": 165
            },
            {
                "name": "MutationLoginArgs",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/data/services/saferniGraphql.service.ts",
                "description": "",
                "kind": 165
            },
            {
                "name": "MutationMultipleUploadArgs",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/data/services/saferniGraphql.service.ts",
                "description": "",
                "kind": 165
            },
            {
                "name": "MutationRegisterArgs",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/data/services/saferniGraphql.service.ts",
                "description": "",
                "kind": 165
            },
            {
                "name": "MutationResetPasswordArgs",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/data/services/saferniGraphql.service.ts",
                "description": "",
                "kind": 165
            },
            {
                "name": "MutationUpdateBookingArgs",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/data/services/saferniGraphql.service.ts",
                "description": "",
                "kind": 165
            },
            {
                "name": "MutationUpdateCityArgs",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/data/services/saferniGraphql.service.ts",
                "description": "",
                "kind": 165
            },
            {
                "name": "MutationUpdateFeatureArgs",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/data/services/saferniGraphql.service.ts",
                "description": "",
                "kind": 165
            },
            {
                "name": "MutationUpdateFileInfoArgs",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/data/services/saferniGraphql.service.ts",
                "description": "",
                "kind": 165
            },
            {
                "name": "MutationUpdateHomeBannerArgs",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/data/services/saferniGraphql.service.ts",
                "description": "",
                "kind": 165
            },
            {
                "name": "MutationUpdateHotelArgs",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/data/services/saferniGraphql.service.ts",
                "description": "",
                "kind": 165
            },
            {
                "name": "MutationUpdateLocationArgs",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/data/services/saferniGraphql.service.ts",
                "description": "",
                "kind": 165
            },
            {
                "name": "MutationUpdatePartnerArgs",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/data/services/saferniGraphql.service.ts",
                "description": "",
                "kind": 165
            },
            {
                "name": "MutationUpdateReviewArgs",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/data/services/saferniGraphql.service.ts",
                "description": "",
                "kind": 165
            },
            {
                "name": "MutationUpdateRoleArgs",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/data/services/saferniGraphql.service.ts",
                "description": "",
                "kind": 165
            },
            {
                "name": "MutationUpdateSubscriberArgs",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/data/services/saferniGraphql.service.ts",
                "description": "",
                "kind": 165
            },
            {
                "name": "MutationUpdateTripArgs",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/data/services/saferniGraphql.service.ts",
                "description": "",
                "kind": 165
            },
            {
                "name": "MutationUpdateUserArgs",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/data/services/saferniGraphql.service.ts",
                "description": "",
                "kind": 165
            },
            {
                "name": "MutationUploadArgs",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/data/services/saferniGraphql.service.ts",
                "description": "",
                "kind": 165
            },
            {
                "name": "OverlayType",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "\"gradient\" | \"normal\"",
                "file": "src/app/common/widgets/saferni-image/saferni-image.component.ts",
                "description": "",
                "kind": 168
            },
            {
                "name": "Partner",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/data/services/saferniGraphql.service.ts",
                "description": "",
                "kind": 165
            },
            {
                "name": "PartnerAggregator",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/data/services/saferniGraphql.service.ts",
                "description": "",
                "kind": 165
            },
            {
                "name": "PartnerAggregatorAvg",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/data/services/saferniGraphql.service.ts",
                "description": "",
                "kind": 165
            },
            {
                "name": "PartnerAggregatorMax",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/data/services/saferniGraphql.service.ts",
                "description": "",
                "kind": 165
            },
            {
                "name": "PartnerAggregatorMin",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/data/services/saferniGraphql.service.ts",
                "description": "",
                "kind": 165
            },
            {
                "name": "PartnerAggregatorSum",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/data/services/saferniGraphql.service.ts",
                "description": "",
                "kind": 165
            },
            {
                "name": "PartnerConnection",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/data/services/saferniGraphql.service.ts",
                "description": "",
                "kind": 165
            },
            {
                "name": "PartnerConnection_Id",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/data/services/saferniGraphql.service.ts",
                "description": "",
                "kind": 165
            },
            {
                "name": "PartnerConnectionAddress",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/data/services/saferniGraphql.service.ts",
                "description": "",
                "kind": 165
            },
            {
                "name": "PartnerConnectionAgreement",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/data/services/saferniGraphql.service.ts",
                "description": "",
                "kind": 165
            },
            {
                "name": "PartnerConnectionAgreementStatus",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/data/services/saferniGraphql.service.ts",
                "description": "",
                "kind": 165
            },
            {
                "name": "PartnerConnectionCommission",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/data/services/saferniGraphql.service.ts",
                "description": "",
                "kind": 165
            },
            {
                "name": "PartnerConnectionCreatedAt",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/data/services/saferniGraphql.service.ts",
                "description": "",
                "kind": 165
            },
            {
                "name": "PartnerConnectionEmail",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/data/services/saferniGraphql.service.ts",
                "description": "",
                "kind": 165
            },
            {
                "name": "PartnerConnectionId",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/data/services/saferniGraphql.service.ts",
                "description": "",
                "kind": 165
            },
            {
                "name": "PartnerConnectionName",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/data/services/saferniGraphql.service.ts",
                "description": "",
                "kind": 165
            },
            {
                "name": "PartnerConnectionNotes",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/data/services/saferniGraphql.service.ts",
                "description": "",
                "kind": 165
            },
            {
                "name": "PartnerConnectionPhone",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/data/services/saferniGraphql.service.ts",
                "description": "",
                "kind": 165
            },
            {
                "name": "PartnerConnectionPhone2",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/data/services/saferniGraphql.service.ts",
                "description": "",
                "kind": 165
            },
            {
                "name": "PartnerConnectionPublished_At",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/data/services/saferniGraphql.service.ts",
                "description": "",
                "kind": 165
            },
            {
                "name": "PartnerConnectionRevenueSource",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/data/services/saferniGraphql.service.ts",
                "description": "",
                "kind": 165
            },
            {
                "name": "PartnerConnectionUpdatedAt",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/data/services/saferniGraphql.service.ts",
                "description": "",
                "kind": 165
            },
            {
                "name": "PartnerGroupBy",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/data/services/saferniGraphql.service.ts",
                "description": "",
                "kind": 165
            },
            {
                "name": "PartnerInput",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/data/services/saferniGraphql.service.ts",
                "description": "",
                "kind": 165
            },
            {
                "name": "PartnerTripsArgs",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/data/services/saferniGraphql.service.ts",
                "description": "",
                "kind": 165
            },
            {
                "name": "Query",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/data/services/saferniGraphql.service.ts",
                "description": "",
                "kind": 165
            },
            {
                "name": "QueryBookingArgs",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/data/services/saferniGraphql.service.ts",
                "description": "",
                "kind": 165
            },
            {
                "name": "QueryBookingsArgs",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/data/services/saferniGraphql.service.ts",
                "description": "",
                "kind": 165
            },
            {
                "name": "QueryBookingsConnectionArgs",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/data/services/saferniGraphql.service.ts",
                "description": "",
                "kind": 165
            },
            {
                "name": "QueryCitiesArgs",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/data/services/saferniGraphql.service.ts",
                "description": "",
                "kind": 165
            },
            {
                "name": "QueryCitiesConnectionArgs",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/data/services/saferniGraphql.service.ts",
                "description": "",
                "kind": 165
            },
            {
                "name": "QueryCityArgs",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/data/services/saferniGraphql.service.ts",
                "description": "",
                "kind": 165
            },
            {
                "name": "QueryFeatureArgs",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/data/services/saferniGraphql.service.ts",
                "description": "",
                "kind": 165
            },
            {
                "name": "QueryFeaturesArgs",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/data/services/saferniGraphql.service.ts",
                "description": "",
                "kind": 165
            },
            {
                "name": "QueryFeaturesConnectionArgs",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/data/services/saferniGraphql.service.ts",
                "description": "",
                "kind": 165
            },
            {
                "name": "QueryFilesArgs",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/data/services/saferniGraphql.service.ts",
                "description": "",
                "kind": 165
            },
            {
                "name": "QueryFilesConnectionArgs",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/data/services/saferniGraphql.service.ts",
                "description": "",
                "kind": 165
            },
            {
                "name": "QueryHomeBannerArgs",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/data/services/saferniGraphql.service.ts",
                "description": "",
                "kind": 165
            },
            {
                "name": "QueryHotelArgs",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/data/services/saferniGraphql.service.ts",
                "description": "",
                "kind": 165
            },
            {
                "name": "QueryHotelsArgs",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/data/services/saferniGraphql.service.ts",
                "description": "",
                "kind": 165
            },
            {
                "name": "QueryHotelsConnectionArgs",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/data/services/saferniGraphql.service.ts",
                "description": "",
                "kind": 165
            },
            {
                "name": "QueryLocationArgs",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/data/services/saferniGraphql.service.ts",
                "description": "",
                "kind": 165
            },
            {
                "name": "QueryLocationsArgs",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/data/services/saferniGraphql.service.ts",
                "description": "",
                "kind": 165
            },
            {
                "name": "QueryLocationsConnectionArgs",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/data/services/saferniGraphql.service.ts",
                "description": "",
                "kind": 165
            },
            {
                "name": "QueryPartnerArgs",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/data/services/saferniGraphql.service.ts",
                "description": "",
                "kind": 165
            },
            {
                "name": "QueryPartnersArgs",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/data/services/saferniGraphql.service.ts",
                "description": "",
                "kind": 165
            },
            {
                "name": "QueryPartnersConnectionArgs",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/data/services/saferniGraphql.service.ts",
                "description": "",
                "kind": 165
            },
            {
                "name": "QueryReviewArgs",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/data/services/saferniGraphql.service.ts",
                "description": "",
                "kind": 165
            },
            {
                "name": "QueryReviewsArgs",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/data/services/saferniGraphql.service.ts",
                "description": "",
                "kind": 165
            },
            {
                "name": "QueryReviewsConnectionArgs",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/data/services/saferniGraphql.service.ts",
                "description": "",
                "kind": 165
            },
            {
                "name": "QueryRoleArgs",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/data/services/saferniGraphql.service.ts",
                "description": "",
                "kind": 165
            },
            {
                "name": "QueryRolesArgs",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/data/services/saferniGraphql.service.ts",
                "description": "",
                "kind": 165
            },
            {
                "name": "QueryRolesConnectionArgs",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/data/services/saferniGraphql.service.ts",
                "description": "",
                "kind": 165
            },
            {
                "name": "QuerySubscriberArgs",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/data/services/saferniGraphql.service.ts",
                "description": "",
                "kind": 165
            },
            {
                "name": "QuerySubscribersArgs",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/data/services/saferniGraphql.service.ts",
                "description": "",
                "kind": 165
            },
            {
                "name": "QuerySubscribersConnectionArgs",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/data/services/saferniGraphql.service.ts",
                "description": "",
                "kind": 165
            },
            {
                "name": "QueryTripArgs",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/data/services/saferniGraphql.service.ts",
                "description": "",
                "kind": 165
            },
            {
                "name": "QueryTripsArgs",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/data/services/saferniGraphql.service.ts",
                "description": "",
                "kind": 165
            },
            {
                "name": "QueryTripsConnectionArgs",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/data/services/saferniGraphql.service.ts",
                "description": "",
                "kind": 165
            },
            {
                "name": "QueryUserArgs",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/data/services/saferniGraphql.service.ts",
                "description": "",
                "kind": 165
            },
            {
                "name": "QueryUsersArgs",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/data/services/saferniGraphql.service.ts",
                "description": "",
                "kind": 165
            },
            {
                "name": "QueryUsersConnectionArgs",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/data/services/saferniGraphql.service.ts",
                "description": "",
                "kind": 165
            },
            {
                "name": "Review",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/data/services/saferniGraphql.service.ts",
                "description": "",
                "kind": 165
            },
            {
                "name": "ReviewAggregator",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/data/services/saferniGraphql.service.ts",
                "description": "",
                "kind": 165
            },
            {
                "name": "ReviewAggregatorAvg",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/data/services/saferniGraphql.service.ts",
                "description": "",
                "kind": 165
            },
            {
                "name": "ReviewAggregatorMax",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/data/services/saferniGraphql.service.ts",
                "description": "",
                "kind": 165
            },
            {
                "name": "ReviewAggregatorMin",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/data/services/saferniGraphql.service.ts",
                "description": "",
                "kind": 165
            },
            {
                "name": "ReviewAggregatorSum",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/data/services/saferniGraphql.service.ts",
                "description": "",
                "kind": 165
            },
            {
                "name": "ReviewConnection",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/data/services/saferniGraphql.service.ts",
                "description": "",
                "kind": 165
            },
            {
                "name": "ReviewConnection_Id",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/data/services/saferniGraphql.service.ts",
                "description": "",
                "kind": 165
            },
            {
                "name": "ReviewConnectionActive",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/data/services/saferniGraphql.service.ts",
                "description": "",
                "kind": 165
            },
            {
                "name": "ReviewConnectionAuthor",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/data/services/saferniGraphql.service.ts",
                "description": "",
                "kind": 165
            },
            {
                "name": "ReviewConnectionCreatedAt",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/data/services/saferniGraphql.service.ts",
                "description": "",
                "kind": 165
            },
            {
                "name": "ReviewConnectionId",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/data/services/saferniGraphql.service.ts",
                "description": "",
                "kind": 165
            },
            {
                "name": "ReviewConnectionPublished_At",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/data/services/saferniGraphql.service.ts",
                "description": "",
                "kind": 165
            },
            {
                "name": "ReviewConnectionRating",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/data/services/saferniGraphql.service.ts",
                "description": "",
                "kind": 165
            },
            {
                "name": "ReviewConnectionText",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/data/services/saferniGraphql.service.ts",
                "description": "",
                "kind": 165
            },
            {
                "name": "ReviewConnectionTrip",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/data/services/saferniGraphql.service.ts",
                "description": "",
                "kind": 165
            },
            {
                "name": "ReviewConnectionUpdatedAt",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/data/services/saferniGraphql.service.ts",
                "description": "",
                "kind": 165
            },
            {
                "name": "ReviewGroupBy",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/data/services/saferniGraphql.service.ts",
                "description": "",
                "kind": 165
            },
            {
                "name": "ReviewInput",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/data/services/saferniGraphql.service.ts",
                "description": "",
                "kind": 165
            },
            {
                "name": "RoleInput",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/data/services/saferniGraphql.service.ts",
                "description": "",
                "kind": 165
            },
            {
                "name": "Scalars",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/data/services/saferniGraphql.service.ts",
                "description": "<p>All built-in and custom scalars, mapped to their actual values </p>\n",
                "kind": 165
            },
            {
                "name": "SubscriberInput",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/data/services/saferniGraphql.service.ts",
                "description": "",
                "kind": 165
            },
            {
                "name": "Subscribers",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/data/services/saferniGraphql.service.ts",
                "description": "",
                "kind": 165
            },
            {
                "name": "SubscribersAggregator",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/data/services/saferniGraphql.service.ts",
                "description": "",
                "kind": 165
            },
            {
                "name": "SubscribersConnection",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/data/services/saferniGraphql.service.ts",
                "description": "",
                "kind": 165
            },
            {
                "name": "SubscribersConnection_Id",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/data/services/saferniGraphql.service.ts",
                "description": "",
                "kind": 165
            },
            {
                "name": "SubscribersConnectionCreatedAt",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/data/services/saferniGraphql.service.ts",
                "description": "",
                "kind": 165
            },
            {
                "name": "SubscribersConnectionEmail",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/data/services/saferniGraphql.service.ts",
                "description": "",
                "kind": 165
            },
            {
                "name": "SubscribersConnectionId",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/data/services/saferniGraphql.service.ts",
                "description": "",
                "kind": 165
            },
            {
                "name": "SubscribersConnectionPublished_At",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/data/services/saferniGraphql.service.ts",
                "description": "",
                "kind": 165
            },
            {
                "name": "SubscribersConnectionUpdatedAt",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/data/services/saferniGraphql.service.ts",
                "description": "",
                "kind": 165
            },
            {
                "name": "SubscribersGroupBy",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/data/services/saferniGraphql.service.ts",
                "description": "",
                "kind": 165
            },
            {
                "name": "TripInfoFragment",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "",
                "file": "src/app/data/services/saferniGraphql.service.ts",
                "description": "",
                "kind": 172
            },
            {
                "name": "TripInput",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/data/services/saferniGraphql.service.ts",
                "description": "",
                "kind": 165
            },
            {
                "name": "Trips",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/data/services/saferniGraphql.service.ts",
                "description": "",
                "kind": 165
            },
            {
                "name": "TripsAggregator",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/data/services/saferniGraphql.service.ts",
                "description": "",
                "kind": 165
            },
            {
                "name": "TripsAggregatorAvg",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/data/services/saferniGraphql.service.ts",
                "description": "",
                "kind": 165
            },
            {
                "name": "TripsAggregatorMax",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/data/services/saferniGraphql.service.ts",
                "description": "",
                "kind": 165
            },
            {
                "name": "TripsAggregatorMin",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/data/services/saferniGraphql.service.ts",
                "description": "",
                "kind": 165
            },
            {
                "name": "TripsAggregatorSum",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/data/services/saferniGraphql.service.ts",
                "description": "",
                "kind": 165
            },
            {
                "name": "TripsConnection",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/data/services/saferniGraphql.service.ts",
                "description": "",
                "kind": 165
            },
            {
                "name": "TripsConnection_Id",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/data/services/saferniGraphql.service.ts",
                "description": "",
                "kind": 165
            },
            {
                "name": "TripsConnectionActive",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/data/services/saferniGraphql.service.ts",
                "description": "",
                "kind": 165
            },
            {
                "name": "TripsConnectionBasePeopleCount",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/data/services/saferniGraphql.service.ts",
                "description": "",
                "kind": 165
            },
            {
                "name": "TripsConnectionBasePrice",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/data/services/saferniGraphql.service.ts",
                "description": "",
                "kind": 165
            },
            {
                "name": "TripsConnectionCity",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/data/services/saferniGraphql.service.ts",
                "description": "",
                "kind": 165
            },
            {
                "name": "TripsConnectionCreatedAt",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/data/services/saferniGraphql.service.ts",
                "description": "",
                "kind": 165
            },
            {
                "name": "TripsConnectionCurrency",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/data/services/saferniGraphql.service.ts",
                "description": "",
                "kind": 165
            },
            {
                "name": "TripsConnectionDescription",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/data/services/saferniGraphql.service.ts",
                "description": "",
                "kind": 165
            },
            {
                "name": "TripsConnectionDiscount",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/data/services/saferniGraphql.service.ts",
                "description": "",
                "kind": 165
            },
            {
                "name": "TripsConnectionDuration",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/data/services/saferniGraphql.service.ts",
                "description": "",
                "kind": 165
            },
            {
                "name": "TripsConnectionHotel",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/data/services/saferniGraphql.service.ts",
                "description": "",
                "kind": 165
            },
            {
                "name": "TripsConnectionId",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/data/services/saferniGraphql.service.ts",
                "description": "",
                "kind": 165
            },
            {
                "name": "TripsConnectionLocale",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/data/services/saferniGraphql.service.ts",
                "description": "",
                "kind": 165
            },
            {
                "name": "TripsConnectionName",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/data/services/saferniGraphql.service.ts",
                "description": "",
                "kind": 165
            },
            {
                "name": "TripsConnectionPartner",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/data/services/saferniGraphql.service.ts",
                "description": "",
                "kind": 165
            },
            {
                "name": "TripsConnectionPreviewImage",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/data/services/saferniGraphql.service.ts",
                "description": "",
                "kind": 165
            },
            {
                "name": "TripsConnectionPublished_At",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/data/services/saferniGraphql.service.ts",
                "description": "",
                "kind": 165
            },
            {
                "name": "TripsConnectionTravelType",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/data/services/saferniGraphql.service.ts",
                "description": "",
                "kind": 165
            },
            {
                "name": "TripsConnectionTrip_Type",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/data/services/saferniGraphql.service.ts",
                "description": "",
                "kind": 165
            },
            {
                "name": "TripsConnectionUpdatedAt",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/data/services/saferniGraphql.service.ts",
                "description": "",
                "kind": 165
            },
            {
                "name": "TripsGroupBy",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/data/services/saferniGraphql.service.ts",
                "description": "",
                "kind": 165
            },
            {
                "name": "TripsLocalizationsArgs",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/data/services/saferniGraphql.service.ts",
                "description": "",
                "kind": 165
            },
            {
                "name": "TripsQuery",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "",
                "file": "src/app/data/services/saferniGraphql.service.ts",
                "description": "",
                "kind": 172
            },
            {
                "name": "TripsQueryVariables",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "Exact<literal type>",
                "file": "src/app/data/services/saferniGraphql.service.ts",
                "description": "",
                "kind": 161
            },
            {
                "name": "UpdateBookingInput",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/data/services/saferniGraphql.service.ts",
                "description": "",
                "kind": 165
            },
            {
                "name": "UpdateBookingPayload",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/data/services/saferniGraphql.service.ts",
                "description": "",
                "kind": 165
            },
            {
                "name": "UpdateCityInput",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/data/services/saferniGraphql.service.ts",
                "description": "",
                "kind": 165
            },
            {
                "name": "UpdateCityPayload",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/data/services/saferniGraphql.service.ts",
                "description": "",
                "kind": 165
            },
            {
                "name": "UpdateFeatureInput",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/data/services/saferniGraphql.service.ts",
                "description": "",
                "kind": 165
            },
            {
                "name": "UpdateFeaturePayload",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/data/services/saferniGraphql.service.ts",
                "description": "",
                "kind": 165
            },
            {
                "name": "UpdateHomeBannerInput",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/data/services/saferniGraphql.service.ts",
                "description": "",
                "kind": 165
            },
            {
                "name": "UpdateHomeBannerPayload",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/data/services/saferniGraphql.service.ts",
                "description": "",
                "kind": 165
            },
            {
                "name": "UpdateHotelInput",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/data/services/saferniGraphql.service.ts",
                "description": "",
                "kind": 165
            },
            {
                "name": "UpdateHotelPayload",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/data/services/saferniGraphql.service.ts",
                "description": "",
                "kind": 165
            },
            {
                "name": "UpdateLocationInput",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/data/services/saferniGraphql.service.ts",
                "description": "",
                "kind": 165
            },
            {
                "name": "UpdateLocationPayload",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/data/services/saferniGraphql.service.ts",
                "description": "",
                "kind": 165
            },
            {
                "name": "UpdatePartnerInput",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/data/services/saferniGraphql.service.ts",
                "description": "",
                "kind": 165
            },
            {
                "name": "UpdatePartnerPayload",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/data/services/saferniGraphql.service.ts",
                "description": "",
                "kind": 165
            },
            {
                "name": "UpdateReviewInput",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/data/services/saferniGraphql.service.ts",
                "description": "",
                "kind": 165
            },
            {
                "name": "UpdateReviewPayload",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/data/services/saferniGraphql.service.ts",
                "description": "",
                "kind": 165
            },
            {
                "name": "UpdateRoleInput",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/data/services/saferniGraphql.service.ts",
                "description": "",
                "kind": 165
            },
            {
                "name": "UpdateRolePayload",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/data/services/saferniGraphql.service.ts",
                "description": "",
                "kind": 165
            },
            {
                "name": "UpdateSubscriberInput",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/data/services/saferniGraphql.service.ts",
                "description": "",
                "kind": 165
            },
            {
                "name": "UpdateSubscriberPayload",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/data/services/saferniGraphql.service.ts",
                "description": "",
                "kind": 165
            },
            {
                "name": "UpdateTripInput",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/data/services/saferniGraphql.service.ts",
                "description": "",
                "kind": 165
            },
            {
                "name": "UpdateTripPayload",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/data/services/saferniGraphql.service.ts",
                "description": "",
                "kind": 165
            },
            {
                "name": "UpdateUserInput",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/data/services/saferniGraphql.service.ts",
                "description": "",
                "kind": 165
            },
            {
                "name": "UpdateUserPayload",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/data/services/saferniGraphql.service.ts",
                "description": "",
                "kind": 165
            },
            {
                "name": "UploadFile",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/data/services/saferniGraphql.service.ts",
                "description": "",
                "kind": 165
            },
            {
                "name": "UploadFileAggregator",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/data/services/saferniGraphql.service.ts",
                "description": "",
                "kind": 165
            },
            {
                "name": "UploadFileAggregatorAvg",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/data/services/saferniGraphql.service.ts",
                "description": "",
                "kind": 165
            },
            {
                "name": "UploadFileAggregatorMax",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/data/services/saferniGraphql.service.ts",
                "description": "",
                "kind": 165
            },
            {
                "name": "UploadFileAggregatorMin",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/data/services/saferniGraphql.service.ts",
                "description": "",
                "kind": 165
            },
            {
                "name": "UploadFileAggregatorSum",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/data/services/saferniGraphql.service.ts",
                "description": "",
                "kind": 165
            },
            {
                "name": "UploadFileConnection",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/data/services/saferniGraphql.service.ts",
                "description": "",
                "kind": 165
            },
            {
                "name": "UploadFileConnection_Id",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/data/services/saferniGraphql.service.ts",
                "description": "",
                "kind": 165
            },
            {
                "name": "UploadFileConnectionAlternativeText",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/data/services/saferniGraphql.service.ts",
                "description": "",
                "kind": 165
            },
            {
                "name": "UploadFileConnectionCaption",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/data/services/saferniGraphql.service.ts",
                "description": "",
                "kind": 165
            },
            {
                "name": "UploadFileConnectionCreatedAt",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/data/services/saferniGraphql.service.ts",
                "description": "",
                "kind": 165
            },
            {
                "name": "UploadFileConnectionExt",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/data/services/saferniGraphql.service.ts",
                "description": "",
                "kind": 165
            },
            {
                "name": "UploadFileConnectionFormats",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/data/services/saferniGraphql.service.ts",
                "description": "",
                "kind": 165
            },
            {
                "name": "UploadFileConnectionHash",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/data/services/saferniGraphql.service.ts",
                "description": "",
                "kind": 165
            },
            {
                "name": "UploadFileConnectionHeight",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/data/services/saferniGraphql.service.ts",
                "description": "",
                "kind": 165
            },
            {
                "name": "UploadFileConnectionId",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/data/services/saferniGraphql.service.ts",
                "description": "",
                "kind": 165
            },
            {
                "name": "UploadFileConnectionMime",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/data/services/saferniGraphql.service.ts",
                "description": "",
                "kind": 165
            },
            {
                "name": "UploadFileConnectionName",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/data/services/saferniGraphql.service.ts",
                "description": "",
                "kind": 165
            },
            {
                "name": "UploadFileConnectionPreviewUrl",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/data/services/saferniGraphql.service.ts",
                "description": "",
                "kind": 165
            },
            {
                "name": "UploadFileConnectionProvider",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/data/services/saferniGraphql.service.ts",
                "description": "",
                "kind": 165
            },
            {
                "name": "UploadFileConnectionProvider_Metadata",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/data/services/saferniGraphql.service.ts",
                "description": "",
                "kind": 165
            },
            {
                "name": "UploadFileConnectionSize",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/data/services/saferniGraphql.service.ts",
                "description": "",
                "kind": 165
            },
            {
                "name": "UploadFileConnectionUpdatedAt",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/data/services/saferniGraphql.service.ts",
                "description": "",
                "kind": 165
            },
            {
                "name": "UploadFileConnectionUrl",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/data/services/saferniGraphql.service.ts",
                "description": "",
                "kind": 165
            },
            {
                "name": "UploadFileConnectionWidth",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/data/services/saferniGraphql.service.ts",
                "description": "",
                "kind": 165
            },
            {
                "name": "UploadFileGroupBy",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/data/services/saferniGraphql.service.ts",
                "description": "",
                "kind": 165
            },
            {
                "name": "UploadFileRelatedArgs",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/data/services/saferniGraphql.service.ts",
                "description": "",
                "kind": 165
            },
            {
                "name": "UserInput",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/data/services/saferniGraphql.service.ts",
                "description": "",
                "kind": 165
            },
            {
                "name": "UserPermissionsPasswordPayload",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/data/services/saferniGraphql.service.ts",
                "description": "",
                "kind": 165
            },
            {
                "name": "UsersPermissionsLoginInput",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/data/services/saferniGraphql.service.ts",
                "description": "",
                "kind": 165
            },
            {
                "name": "UsersPermissionsLoginPayload",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/data/services/saferniGraphql.service.ts",
                "description": "",
                "kind": 165
            },
            {
                "name": "UsersPermissionsMe",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/data/services/saferniGraphql.service.ts",
                "description": "",
                "kind": 165
            },
            {
                "name": "UsersPermissionsMeRole",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/data/services/saferniGraphql.service.ts",
                "description": "",
                "kind": 165
            },
            {
                "name": "UsersPermissionsPermission",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/data/services/saferniGraphql.service.ts",
                "description": "",
                "kind": 165
            },
            {
                "name": "UsersPermissionsRegisterInput",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/data/services/saferniGraphql.service.ts",
                "description": "",
                "kind": 165
            },
            {
                "name": "UsersPermissionsRole",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/data/services/saferniGraphql.service.ts",
                "description": "",
                "kind": 165
            },
            {
                "name": "UsersPermissionsRoleAggregator",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/data/services/saferniGraphql.service.ts",
                "description": "",
                "kind": 165
            },
            {
                "name": "UsersPermissionsRoleConnection",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/data/services/saferniGraphql.service.ts",
                "description": "",
                "kind": 165
            },
            {
                "name": "UsersPermissionsRoleConnection_Id",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/data/services/saferniGraphql.service.ts",
                "description": "",
                "kind": 165
            },
            {
                "name": "UsersPermissionsRoleConnectionDescription",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/data/services/saferniGraphql.service.ts",
                "description": "",
                "kind": 165
            },
            {
                "name": "UsersPermissionsRoleConnectionId",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/data/services/saferniGraphql.service.ts",
                "description": "",
                "kind": 165
            },
            {
                "name": "UsersPermissionsRoleConnectionName",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/data/services/saferniGraphql.service.ts",
                "description": "",
                "kind": 165
            },
            {
                "name": "UsersPermissionsRoleConnectionType",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/data/services/saferniGraphql.service.ts",
                "description": "",
                "kind": 165
            },
            {
                "name": "UsersPermissionsRoleGroupBy",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/data/services/saferniGraphql.service.ts",
                "description": "",
                "kind": 165
            },
            {
                "name": "UsersPermissionsRolePermissionsArgs",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/data/services/saferniGraphql.service.ts",
                "description": "",
                "kind": 165
            },
            {
                "name": "UsersPermissionsRoleUsersArgs",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/data/services/saferniGraphql.service.ts",
                "description": "",
                "kind": 165
            },
            {
                "name": "UsersPermissionsUser",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/data/services/saferniGraphql.service.ts",
                "description": "",
                "kind": 165
            },
            {
                "name": "UsersPermissionsUserAggregator",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/data/services/saferniGraphql.service.ts",
                "description": "",
                "kind": 165
            },
            {
                "name": "UsersPermissionsUserConnection",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/data/services/saferniGraphql.service.ts",
                "description": "",
                "kind": 165
            },
            {
                "name": "UsersPermissionsUserConnection_Id",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/data/services/saferniGraphql.service.ts",
                "description": "",
                "kind": 165
            },
            {
                "name": "UsersPermissionsUserConnectionBlocked",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/data/services/saferniGraphql.service.ts",
                "description": "",
                "kind": 165
            },
            {
                "name": "UsersPermissionsUserConnectionConfirmed",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/data/services/saferniGraphql.service.ts",
                "description": "",
                "kind": 165
            },
            {
                "name": "UsersPermissionsUserConnectionCreatedAt",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/data/services/saferniGraphql.service.ts",
                "description": "",
                "kind": 165
            },
            {
                "name": "UsersPermissionsUserConnectionEmail",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/data/services/saferniGraphql.service.ts",
                "description": "",
                "kind": 165
            },
            {
                "name": "UsersPermissionsUserConnectionId",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/data/services/saferniGraphql.service.ts",
                "description": "",
                "kind": 165
            },
            {
                "name": "UsersPermissionsUserConnectionProvider",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/data/services/saferniGraphql.service.ts",
                "description": "",
                "kind": 165
            },
            {
                "name": "UsersPermissionsUserConnectionRole",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/data/services/saferniGraphql.service.ts",
                "description": "",
                "kind": 165
            },
            {
                "name": "UsersPermissionsUserConnectionUpdatedAt",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/data/services/saferniGraphql.service.ts",
                "description": "",
                "kind": 165
            },
            {
                "name": "UsersPermissionsUserConnectionUsername",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/data/services/saferniGraphql.service.ts",
                "description": "",
                "kind": 165
            },
            {
                "name": "UsersPermissionsUserGroupBy",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/data/services/saferniGraphql.service.ts",
                "description": "",
                "kind": 165
            }
        ],
        "enumerations": [
            {
                "name": "CitiesEnum",
                "childs": [
                    {
                        "name": "Istanbul",
                        "value": "Istanbul"
                    },
                    {
                        "name": "Bursa",
                        "value": "Bursa"
                    },
                    {
                        "name": "Trabzon",
                        "value": "Trabzon"
                    }
                ],
                "ctype": "miscellaneous",
                "subtype": "enum",
                "description": "",
                "file": "src/app/data/utils/enums.ts"
            },
            {
                "name": "EndPoints",
                "childs": [
                    {
                        "name": "trips",
                        "value": "trips"
                    },
                    {
                        "name": "cities",
                        "value": "cities"
                    }
                ],
                "ctype": "miscellaneous",
                "subtype": "enum",
                "description": "",
                "file": "src/app/data/utils/enums.ts"
            },
            {
                "name": "Enum_Booking_Currency",
                "childs": [
                    {
                        "name": "Dollar",
                        "value": "dollar"
                    },
                    {
                        "name": "Lira",
                        "value": "lira"
                    }
                ],
                "ctype": "miscellaneous",
                "subtype": "enum",
                "description": "",
                "file": "src/app/data/services/saferniGraphql.service.ts"
            },
            {
                "name": "Enum_Booking_Userbookingstatus",
                "childs": [
                    {
                        "name": "Initial",
                        "value": "initial"
                    },
                    {
                        "name": "Confirmed",
                        "value": "confirmed"
                    },
                    {
                        "name": "Canceled",
                        "value": "canceled"
                    }
                ],
                "ctype": "miscellaneous",
                "subtype": "enum",
                "description": "",
                "file": "src/app/data/services/saferniGraphql.service.ts"
            },
            {
                "name": "Enum_Componentpriceprice_Currency",
                "childs": [
                    {
                        "name": "Dollar",
                        "value": "dollar"
                    },
                    {
                        "name": "Lira",
                        "value": "lira"
                    }
                ],
                "ctype": "miscellaneous",
                "subtype": "enum",
                "description": "",
                "file": "src/app/data/services/saferniGraphql.service.ts"
            },
            {
                "name": "Enum_Componenttimelinetimeline_Transportationtype",
                "childs": [
                    {
                        "name": "Arrival",
                        "value": "arrival"
                    },
                    {
                        "name": "Departure",
                        "value": "departure"
                    },
                    {
                        "name": "BetweenCities",
                        "value": "betweenCities"
                    },
                    {
                        "name": "WithinCity",
                        "value": "withinCity"
                    }
                ],
                "ctype": "miscellaneous",
                "subtype": "enum",
                "description": "",
                "file": "src/app/data/services/saferniGraphql.service.ts"
            },
            {
                "name": "Enum_Partner_Agreementstatus",
                "childs": [
                    {
                        "name": "Agreed",
                        "value": "Agreed"
                    },
                    {
                        "name": "Discussing",
                        "value": "discussing"
                    },
                    {
                        "name": "Termination",
                        "value": "termination"
                    }
                ],
                "ctype": "miscellaneous",
                "subtype": "enum",
                "description": "",
                "file": "src/app/data/services/saferniGraphql.service.ts"
            },
            {
                "name": "Enum_Partner_Revenuesource",
                "childs": [
                    {
                        "name": "PricePercentage",
                        "value": "pricePercentage"
                    },
                    {
                        "name": "InflatedPrice",
                        "value": "inflatedPrice"
                    }
                ],
                "ctype": "miscellaneous",
                "subtype": "enum",
                "description": "",
                "file": "src/app/data/services/saferniGraphql.service.ts"
            },
            {
                "name": "Enum_Trips_Currency",
                "childs": [
                    {
                        "name": "Dollar",
                        "value": "dollar"
                    },
                    {
                        "name": "Lira",
                        "value": "lira"
                    }
                ],
                "ctype": "miscellaneous",
                "subtype": "enum",
                "description": "",
                "file": "src/app/data/services/saferniGraphql.service.ts"
            },
            {
                "name": "Enum_Trips_Traveltype",
                "childs": [
                    {
                        "name": "Private",
                        "value": "private"
                    },
                    {
                        "name": "Public",
                        "value": "public"
                    },
                    {
                        "name": "Both",
                        "value": "both"
                    }
                ],
                "ctype": "miscellaneous",
                "subtype": "enum",
                "description": "",
                "file": "src/app/data/services/saferniGraphql.service.ts"
            },
            {
                "name": "Enum_Trips_Trip_Type",
                "childs": [
                    {
                        "name": "Touristic",
                        "value": "touristic"
                    },
                    {
                        "name": "Medical",
                        "value": "medical"
                    }
                ],
                "ctype": "miscellaneous",
                "subtype": "enum",
                "description": "",
                "file": "src/app/data/services/saferniGraphql.service.ts"
            },
            {
                "name": "FeatureEnum",
                "childs": [
                    {
                        "name": "Hotel",
                        "value": "Hotel"
                    },
                    {
                        "name": "shuttle",
                        "value": "shuttle"
                    }
                ],
                "ctype": "miscellaneous",
                "subtype": "enum",
                "description": "",
                "file": "src/app/data/utils/enums.ts"
            },
            {
                "name": "ICONS",
                "childs": [
                    {
                        "name": "mode_edit",
                        "value": "mode_edit"
                    },
                    {
                        "name": "profile",
                        "value": "person"
                    },
                    {
                        "name": "phone",
                        "value": "call"
                    },
                    {
                        "name": "mail",
                        "value": "mail"
                    },
                    {
                        "name": "calendar",
                        "value": "date_range"
                    },
                    {
                        "name": "country",
                        "value": "flag"
                    },
                    {
                        "name": "title",
                        "value": "title"
                    },
                    {
                        "name": "pass",
                        "value": "lock"
                    },
                    {
                        "name": "ticket",
                        "value": "confirmation_number"
                    },
                    {
                        "name": "compass",
                        "value": "explore"
                    },
                    {
                        "name": "work",
                        "value": "work"
                    },
                    {
                        "name": "message",
                        "value": "message"
                    },
                    {
                        "name": "price",
                        "value": "local_offer"
                    },
                    {
                        "name": "directions_car",
                        "value": "directions_car"
                    }
                ],
                "ctype": "miscellaneous",
                "subtype": "enum",
                "description": "",
                "file": "src/app/data/utils/enums.ts"
            },
            {
                "name": "LoginEnum",
                "childs": [
                    {
                        "name": "login"
                    },
                    {
                        "name": "signup"
                    },
                    {
                        "name": "privacy"
                    }
                ],
                "ctype": "miscellaneous",
                "subtype": "enum",
                "description": "",
                "file": "src/app/data/utils/enums.ts"
            },
            {
                "name": "ProfileEnum",
                "childs": [
                    {
                        "name": "profile",
                        "value": "Profile"
                    },
                    {
                        "name": "trips",
                        "value": "Trips"
                    },
                    {
                        "name": "security",
                        "value": "Security"
                    }
                ],
                "ctype": "miscellaneous",
                "subtype": "enum",
                "description": "",
                "file": "src/app/data/utils/enums.ts"
            },
            {
                "name": "PublicationState",
                "childs": [
                    {
                        "name": "Live",
                        "value": "LIVE"
                    },
                    {
                        "name": "Preview",
                        "value": "PREVIEW"
                    }
                ],
                "ctype": "miscellaneous",
                "subtype": "enum",
                "description": "",
                "file": "src/app/data/services/saferniGraphql.service.ts"
            },
            {
                "name": "snackType",
                "childs": [
                    {
                        "name": "error",
                        "value": "error"
                    },
                    {
                        "name": "info",
                        "value": "report"
                    },
                    {
                        "name": "warn",
                        "value": "lightbulb"
                    },
                    {
                        "name": "succes",
                        "value": "check_circle"
                    }
                ],
                "ctype": "miscellaneous",
                "subtype": "enum",
                "description": "",
                "file": "src/app/data/utils/enums.ts"
            },
            {
                "name": "socialLinkType",
                "childs": [
                    {
                        "name": "whatsApp"
                    },
                    {
                        "name": "facebook"
                    },
                    {
                        "name": "instagram"
                    },
                    {
                        "name": "email"
                    },
                    {
                        "name": "phone"
                    },
                    {
                        "name": "twitter"
                    }
                ],
                "ctype": "miscellaneous",
                "subtype": "enum",
                "description": "",
                "file": "src/app/data/directives/social-link.directive.ts"
            },
            {
                "name": "WINDOW_SIZE",
                "childs": [
                    {
                        "name": "small",
                        "value": "500"
                    },
                    {
                        "name": "medium",
                        "value": "750"
                    },
                    {
                        "name": "large",
                        "value": "1000"
                    },
                    {
                        "name": "thumb",
                        "value": "499"
                    }
                ],
                "ctype": "miscellaneous",
                "subtype": "enum",
                "description": "",
                "file": "src/app/data/utils/enums.ts"
            }
        ],
        "groupedVariables": {
            "src/app/data/services/injectionTokens.ts": [
                {
                    "name": "ADAPTER_CONFIG",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/data/services/injectionTokens.ts",
                    "type": "",
                    "defaultValue": "new InjectionToken('app.config')"
                },
                {
                    "name": "ADAPTERINEJCTION",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/data/services/injectionTokens.ts",
                    "type": "MyAdapter",
                    "defaultValue": "{\n  class: CityModel,\n  adapter: CityModelAdapter,\n}"
                }
            ],
            "src/app/data/services/saferniGraphql.service.ts": [
                {
                    "name": "AddToNewsLetterDocument",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/data/services/saferniGraphql.service.ts",
                    "type": "",
                    "defaultValue": "gql`\n    mutation addToNewsLetter($email: String!) {\n  createSubscriber(input: {data: {email: $email}}) {\n    subscriber {\n      email\n    }\n  }\n}\n    `"
                },
                {
                    "name": "CitiesDocument",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/data/services/saferniGraphql.service.ts",
                    "type": "",
                    "defaultValue": "gql`\n    query cities($limit: Int, $locale: String) {\n  cities(limit: $limit, locale: $locale) {\n    ...CityInfo\n  }\n}\n    ${CityInfoFragmentDoc}`"
                },
                {
                    "name": "CityInfoFragmentDoc",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/data/services/saferniGraphql.service.ts",
                    "type": "",
                    "defaultValue": "gql`\n    fragment CityInfo on City {\n  id\n  name\n  description\n  locale\n  localizations {\n    id\n    locale\n  }\n  image {\n    id\n    width\n    height\n    url\n    formats\n  }\n}\n    `"
                },
                {
                    "name": "CreateBookingQueryDocument",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/data/services/saferniGraphql.service.ts",
                    "type": "",
                    "defaultValue": "gql`\n    mutation createBookingQuery($tripId: ID!, $fullName: String!, $basePrice: Float!, $discount: Float = 0, $basePeopleCount: Int!, $phone: String!, $arrivalDate: Date!, $message: String, $currency: ENUM_BOOKING_CURRENCY!, $email: String!, $language: String!, $adults: Int!, $children: Int!) {\n  createBooking(\n    input: {data: {trip: $tripId, basePrice: $basePrice, discount: $discount, message: $message, fullName: $fullName, basePeopleCount: $basePeopleCount, phone: $phone, arrivalDate: $arrivalDate, currency: $currency, email: $email, language: $language, adults: $adults, children: $children}}\n  ) {\n    booking {\n      message\n    }\n  }\n}\n    `"
                },
                {
                    "name": "FeaturesDocument",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/data/services/saferniGraphql.service.ts",
                    "type": "",
                    "defaultValue": "gql`\n    query features($locale: String!) {\n  features(locale: $locale) {\n    name\n  }\n}\n    `"
                },
                {
                    "name": "GetCityDocument",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/data/services/saferniGraphql.service.ts",
                    "type": "",
                    "defaultValue": "gql`\n    query getCity($id: ID!) {\n  city(id: $id) {\n    ...CityInfo\n  }\n}\n    ${CityInfoFragmentDoc}`"
                },
                {
                    "name": "GetLocalizedCityDocument",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/data/services/saferniGraphql.service.ts",
                    "type": "",
                    "defaultValue": "gql`\n    query getLocalizedCity($id: ID!, $locale: String!) {\n  cities(locale: $locale, where: {_or: [{localizations: {id: $id}}, {id: $id}]}) {\n    ...CityInfo\n  }\n}\n    ${CityInfoFragmentDoc}`"
                },
                {
                    "name": "GetLocalizedTripDocument",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/data/services/saferniGraphql.service.ts",
                    "type": "",
                    "defaultValue": "gql`\n    query getLocalizedTrip($id: ID!, $locale: String!) {\n  trips(locale: $locale, where: {_or: [{localizations: {id: $id}}, {id: $id}]}) {\n    ...tripInfo\n  }\n}\n    ${TripInfoFragmentDoc}`"
                },
                {
                    "name": "GetLocationsDocument",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/data/services/saferniGraphql.service.ts",
                    "type": "",
                    "defaultValue": "gql`\n    query getLocations($locale: String!, $ids: [String!]!) {\n  locations(locale: $locale, where: {id_in: $ids}) {\n    id\n    name\n    description\n    coordinate {\n      latitude\n      longitude\n    }\n    locale\n    images {\n      id\n      width\n      height\n      url\n      formats\n    }\n    city {\n      id\n      name\n      description\n      locale\n      localizations {\n        id\n        locale\n      }\n      image {\n        id\n        width\n        height\n        url\n        formats\n      }\n    }\n  }\n}\n    `"
                },
                {
                    "name": "GetTripDocument",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/data/services/saferniGraphql.service.ts",
                    "type": "",
                    "defaultValue": "gql`\n    query getTrip($id: ID!) {\n  trip(id: $id) {\n    ...tripInfo\n  }\n}\n    ${TripInfoFragmentDoc}`"
                },
                {
                    "name": "HomeCarousellDocument",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/data/services/saferniGraphql.service.ts",
                    "type": "",
                    "defaultValue": "gql`\n    query homeCarousell {\n  homeBanner {\n    images {\n      id\n      width\n      height\n      url\n      formats\n    }\n  }\n}\n    `"
                },
                {
                    "name": "TripInfoFragmentDoc",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/data/services/saferniGraphql.service.ts",
                    "type": "",
                    "defaultValue": "gql`\n    fragment tripInfo on Trips {\n  id\n  name\n  active\n  description\n  locale\n  trip_type\n  duration\n  travelType\n  city {\n    id\n    name\n  }\n  hotel {\n    id\n    name\n    url\n    stars\n  }\n  plan {\n    day\n    locations {\n      id\n      name\n      city {\n        id\n      }\n    }\n    transportationType\n    travelTo {\n      id\n      name\n    }\n    description\n    restDay\n  }\n  previewImage {\n    id\n    width\n    height\n    url\n    formats\n  }\n  localizations {\n    id\n    locale\n  }\n  basePrice\n  discount\n  currency\n  basePeopleCount\n  features {\n    included\n    feature {\n      name\n      info\n    }\n  }\n}\n    `"
                },
                {
                    "name": "TripsDocument",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/data/services/saferniGraphql.service.ts",
                    "type": "",
                    "defaultValue": "gql`\n    query trips($limit: Int = 10, $locale: String = \"en\", $where: JSON) {\n  trips(limit: $limit, locale: $locale, where: $where) {\n    ...tripInfo\n  }\n}\n    ${TripInfoFragmentDoc}`"
                }
            ],
            "src/test.ts": [
                {
                    "name": "context",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/test.ts",
                    "type": "",
                    "defaultValue": "require.context('./', true, /\\.spec\\.ts$/)"
                },
                {
                    "name": "require",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/test.ts",
                    "type": "literal type"
                }
            ],
            "src/environments/environment.ts": [
                {
                    "name": "environment",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/environments/environment.ts",
                    "type": "object",
                    "defaultValue": "{\n  baseUrl: 'http://localhost:4200',\n  production: false,\n\n  api: 'https://saferni.net/api',\n  firebase: {\n    apiKey: 'AIzaSyCFFDVIBbxgrXGYTGwnBT00Zr7kL4FF6BU',\n    authDomain: 'saferni-e66bf.firebaseapp.com',\n    projectId: 'saferni-e66bf',\n    storageBucket: 'saferni-e66bf.appspot.com',\n    messagingSenderId: '941898512347',\n    appId: '1:941898512347:web:43bdf6f9a48ba7c4fc99fe',\n    measurementId: 'G-ZWQR4B6FH5',\n  },\n}"
                }
            ],
            "src/environments/environment.prod.ts": [
                {
                    "name": "environment",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/environments/environment.prod.ts",
                    "type": "object",
                    "defaultValue": "{\n  baseUrl: 'https://saferni.net',\n  production: true,\n  api: 'https://saferni.net/api',\n  firebase: {\n    apiKey: 'AIzaSyCFFDVIBbxgrXGYTGwnBT00Zr7kL4FF6BU',\n    authDomain: 'saferni-e66bf.firebaseapp.com',\n    projectId: 'saferni-e66bf',\n    storageBucket: 'saferni-e66bf.appspot.com',\n    messagingSenderId: '941898512347',\n    appId: '1:941898512347:web:43bdf6f9a48ba7c4fc99fe',\n    measurementId: 'G-ZWQR4B6FH5',\n  },\n}"
                }
            ],
            "src/app/data/utils/enums.ts": [
                {
                    "name": "getTravelTypeData",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/data/utils/enums.ts",
                    "type": "",
                    "defaultValue": "(\n  locale: LocalService\n): { id: string; name: string }[] => {\n  return [\n    {\n      id: Enum_Trips_Traveltype.Private,\n      name: locale.getTranslation(\n        `travelType.${Enum_Trips_Traveltype.Private}`\n      ),\n    },\n    {\n      id: Enum_Trips_Traveltype.Public,\n      name: locale.getTranslation(`travelType.${Enum_Trips_Traveltype.Public}`),\n    },\n  ];\n}"
                }
            ],
            "src/app/common/widgets/guest-count-input/guest-count-input.component.ts": [
                {
                    "name": "isInstanceOfGuesCount",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/common/widgets/guest-count-input/guest-count-input.component.ts",
                    "type": "",
                    "defaultValue": "(obj: any) => {\n  if (typeof obj !== 'object') return false;\n  return 'adult' in obj && 'child' in obj;\n}"
                }
            ],
            "src/stories/Button.stories.ts": [
                {
                    "name": "Large",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Button.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Primary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Button.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Secondary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Button.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Small",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Button.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Button.stories.ts",
                    "type": "Story<Button>",
                    "defaultValue": "(args: Button) => ({\n  props: args,\n})"
                }
            ],
            "src/app/data/services/local.service.ts": [
                {
                    "name": "LOCALE_KEY",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/data/services/local.service.ts",
                    "type": "string",
                    "defaultValue": "'locale'"
                }
            ],
            "src/stories/Header.stories.ts": [
                {
                    "name": "LoggedIn",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Header.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "LoggedOut",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Header.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Header.stories.ts",
                    "type": "Story<Header>",
                    "defaultValue": "(args: Header) => ({\n  props: args,\n})"
                }
            ],
            "src/stories/Page.stories.ts": [
                {
                    "name": "LoggedIn",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Page.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "LoggedOut",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Page.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Page.stories.ts",
                    "type": "Story<Page>",
                    "defaultValue": "(args: Page) => ({\n  props: args,\n})"
                }
            ],
            "src/app/data/static/StaticFunctions.ts": [
                {
                    "name": "showErrorMsj",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/data/static/StaticFunctions.ts",
                    "type": "",
                    "defaultValue": "(err: LoadingState, dlg: MatDialog) => {}"
                }
            ],
            "src/app/graphql.module.ts": [
                {
                    "name": "uri",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/graphql.module.ts",
                    "type": "string",
                    "defaultValue": "'https://saferni.net/api/graphql'"
                }
            ]
        },
        "groupedFunctions": {
            "src/app/graphql.module.ts": [
                {
                    "name": "createApollo",
                    "file": "src/app/graphql.module.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "description": "",
                    "args": [
                        {
                            "name": "httpLink"
                        }
                    ],
                    "returnType": "ApolloClientOptions<any>",
                    "jsdoctags": [
                        {
                            "name": "httpLink",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "src/app/data/utils/helpers.ts": [
                {
                    "name": "delay",
                    "file": "src/app/data/utils/helpers.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "description": "",
                    "args": [
                        {
                            "name": "ms"
                        }
                    ],
                    "jsdoctags": [
                        {
                            "name": "ms",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "src/app/app.module.ts": [
                {
                    "name": "playerFactory",
                    "file": "src/app/app.module.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "description": "",
                    "args": []
                }
            ]
        },
        "groupedEnumerations": {
            "src/app/data/utils/enums.ts": [
                {
                    "name": "CitiesEnum",
                    "childs": [
                        {
                            "name": "Istanbul",
                            "value": "Istanbul"
                        },
                        {
                            "name": "Bursa",
                            "value": "Bursa"
                        },
                        {
                            "name": "Trabzon",
                            "value": "Trabzon"
                        }
                    ],
                    "ctype": "miscellaneous",
                    "subtype": "enum",
                    "description": "",
                    "file": "src/app/data/utils/enums.ts"
                },
                {
                    "name": "EndPoints",
                    "childs": [
                        {
                            "name": "trips",
                            "value": "trips"
                        },
                        {
                            "name": "cities",
                            "value": "cities"
                        }
                    ],
                    "ctype": "miscellaneous",
                    "subtype": "enum",
                    "description": "",
                    "file": "src/app/data/utils/enums.ts"
                },
                {
                    "name": "FeatureEnum",
                    "childs": [
                        {
                            "name": "Hotel",
                            "value": "Hotel"
                        },
                        {
                            "name": "shuttle",
                            "value": "shuttle"
                        }
                    ],
                    "ctype": "miscellaneous",
                    "subtype": "enum",
                    "description": "",
                    "file": "src/app/data/utils/enums.ts"
                },
                {
                    "name": "ICONS",
                    "childs": [
                        {
                            "name": "mode_edit",
                            "value": "mode_edit"
                        },
                        {
                            "name": "profile",
                            "value": "person"
                        },
                        {
                            "name": "phone",
                            "value": "call"
                        },
                        {
                            "name": "mail",
                            "value": "mail"
                        },
                        {
                            "name": "calendar",
                            "value": "date_range"
                        },
                        {
                            "name": "country",
                            "value": "flag"
                        },
                        {
                            "name": "title",
                            "value": "title"
                        },
                        {
                            "name": "pass",
                            "value": "lock"
                        },
                        {
                            "name": "ticket",
                            "value": "confirmation_number"
                        },
                        {
                            "name": "compass",
                            "value": "explore"
                        },
                        {
                            "name": "work",
                            "value": "work"
                        },
                        {
                            "name": "message",
                            "value": "message"
                        },
                        {
                            "name": "price",
                            "value": "local_offer"
                        },
                        {
                            "name": "directions_car",
                            "value": "directions_car"
                        }
                    ],
                    "ctype": "miscellaneous",
                    "subtype": "enum",
                    "description": "",
                    "file": "src/app/data/utils/enums.ts"
                },
                {
                    "name": "LoginEnum",
                    "childs": [
                        {
                            "name": "login"
                        },
                        {
                            "name": "signup"
                        },
                        {
                            "name": "privacy"
                        }
                    ],
                    "ctype": "miscellaneous",
                    "subtype": "enum",
                    "description": "",
                    "file": "src/app/data/utils/enums.ts"
                },
                {
                    "name": "ProfileEnum",
                    "childs": [
                        {
                            "name": "profile",
                            "value": "Profile"
                        },
                        {
                            "name": "trips",
                            "value": "Trips"
                        },
                        {
                            "name": "security",
                            "value": "Security"
                        }
                    ],
                    "ctype": "miscellaneous",
                    "subtype": "enum",
                    "description": "",
                    "file": "src/app/data/utils/enums.ts"
                },
                {
                    "name": "snackType",
                    "childs": [
                        {
                            "name": "error",
                            "value": "error"
                        },
                        {
                            "name": "info",
                            "value": "report"
                        },
                        {
                            "name": "warn",
                            "value": "lightbulb"
                        },
                        {
                            "name": "succes",
                            "value": "check_circle"
                        }
                    ],
                    "ctype": "miscellaneous",
                    "subtype": "enum",
                    "description": "",
                    "file": "src/app/data/utils/enums.ts"
                },
                {
                    "name": "WINDOW_SIZE",
                    "childs": [
                        {
                            "name": "small",
                            "value": "500"
                        },
                        {
                            "name": "medium",
                            "value": "750"
                        },
                        {
                            "name": "large",
                            "value": "1000"
                        },
                        {
                            "name": "thumb",
                            "value": "499"
                        }
                    ],
                    "ctype": "miscellaneous",
                    "subtype": "enum",
                    "description": "",
                    "file": "src/app/data/utils/enums.ts"
                }
            ],
            "src/app/data/services/saferniGraphql.service.ts": [
                {
                    "name": "Enum_Booking_Currency",
                    "childs": [
                        {
                            "name": "Dollar",
                            "value": "dollar"
                        },
                        {
                            "name": "Lira",
                            "value": "lira"
                        }
                    ],
                    "ctype": "miscellaneous",
                    "subtype": "enum",
                    "description": "",
                    "file": "src/app/data/services/saferniGraphql.service.ts"
                },
                {
                    "name": "Enum_Booking_Userbookingstatus",
                    "childs": [
                        {
                            "name": "Initial",
                            "value": "initial"
                        },
                        {
                            "name": "Confirmed",
                            "value": "confirmed"
                        },
                        {
                            "name": "Canceled",
                            "value": "canceled"
                        }
                    ],
                    "ctype": "miscellaneous",
                    "subtype": "enum",
                    "description": "",
                    "file": "src/app/data/services/saferniGraphql.service.ts"
                },
                {
                    "name": "Enum_Componentpriceprice_Currency",
                    "childs": [
                        {
                            "name": "Dollar",
                            "value": "dollar"
                        },
                        {
                            "name": "Lira",
                            "value": "lira"
                        }
                    ],
                    "ctype": "miscellaneous",
                    "subtype": "enum",
                    "description": "",
                    "file": "src/app/data/services/saferniGraphql.service.ts"
                },
                {
                    "name": "Enum_Componenttimelinetimeline_Transportationtype",
                    "childs": [
                        {
                            "name": "Arrival",
                            "value": "arrival"
                        },
                        {
                            "name": "Departure",
                            "value": "departure"
                        },
                        {
                            "name": "BetweenCities",
                            "value": "betweenCities"
                        },
                        {
                            "name": "WithinCity",
                            "value": "withinCity"
                        }
                    ],
                    "ctype": "miscellaneous",
                    "subtype": "enum",
                    "description": "",
                    "file": "src/app/data/services/saferniGraphql.service.ts"
                },
                {
                    "name": "Enum_Partner_Agreementstatus",
                    "childs": [
                        {
                            "name": "Agreed",
                            "value": "Agreed"
                        },
                        {
                            "name": "Discussing",
                            "value": "discussing"
                        },
                        {
                            "name": "Termination",
                            "value": "termination"
                        }
                    ],
                    "ctype": "miscellaneous",
                    "subtype": "enum",
                    "description": "",
                    "file": "src/app/data/services/saferniGraphql.service.ts"
                },
                {
                    "name": "Enum_Partner_Revenuesource",
                    "childs": [
                        {
                            "name": "PricePercentage",
                            "value": "pricePercentage"
                        },
                        {
                            "name": "InflatedPrice",
                            "value": "inflatedPrice"
                        }
                    ],
                    "ctype": "miscellaneous",
                    "subtype": "enum",
                    "description": "",
                    "file": "src/app/data/services/saferniGraphql.service.ts"
                },
                {
                    "name": "Enum_Trips_Currency",
                    "childs": [
                        {
                            "name": "Dollar",
                            "value": "dollar"
                        },
                        {
                            "name": "Lira",
                            "value": "lira"
                        }
                    ],
                    "ctype": "miscellaneous",
                    "subtype": "enum",
                    "description": "",
                    "file": "src/app/data/services/saferniGraphql.service.ts"
                },
                {
                    "name": "Enum_Trips_Traveltype",
                    "childs": [
                        {
                            "name": "Private",
                            "value": "private"
                        },
                        {
                            "name": "Public",
                            "value": "public"
                        },
                        {
                            "name": "Both",
                            "value": "both"
                        }
                    ],
                    "ctype": "miscellaneous",
                    "subtype": "enum",
                    "description": "",
                    "file": "src/app/data/services/saferniGraphql.service.ts"
                },
                {
                    "name": "Enum_Trips_Trip_Type",
                    "childs": [
                        {
                            "name": "Touristic",
                            "value": "touristic"
                        },
                        {
                            "name": "Medical",
                            "value": "medical"
                        }
                    ],
                    "ctype": "miscellaneous",
                    "subtype": "enum",
                    "description": "",
                    "file": "src/app/data/services/saferniGraphql.service.ts"
                },
                {
                    "name": "PublicationState",
                    "childs": [
                        {
                            "name": "Live",
                            "value": "LIVE"
                        },
                        {
                            "name": "Preview",
                            "value": "PREVIEW"
                        }
                    ],
                    "ctype": "miscellaneous",
                    "subtype": "enum",
                    "description": "",
                    "file": "src/app/data/services/saferniGraphql.service.ts"
                }
            ],
            "src/app/data/directives/social-link.directive.ts": [
                {
                    "name": "socialLinkType",
                    "childs": [
                        {
                            "name": "whatsApp"
                        },
                        {
                            "name": "facebook"
                        },
                        {
                            "name": "instagram"
                        },
                        {
                            "name": "email"
                        },
                        {
                            "name": "phone"
                        },
                        {
                            "name": "twitter"
                        }
                    ],
                    "ctype": "miscellaneous",
                    "subtype": "enum",
                    "description": "",
                    "file": "src/app/data/directives/social-link.directive.ts"
                }
            ]
        },
        "groupedTypeAliases": {
            "src/app/common/widgets/accordion-list/accordion-list.component.ts": [
                {
                    "name": "AccordionClickEventData",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/common/widgets/accordion-list/accordion-list.component.ts",
                    "description": "",
                    "kind": 165
                }
            ],
            "src/app/data/services/saferniGraphql.service.ts": [
                {
                    "name": "AddToNewsLetterMutation",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "",
                    "file": "src/app/data/services/saferniGraphql.service.ts",
                    "description": "",
                    "kind": 172
                },
                {
                    "name": "AddToNewsLetterMutationVariables",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "Exact<literal type>",
                    "file": "src/app/data/services/saferniGraphql.service.ts",
                    "description": "",
                    "kind": 161
                },
                {
                    "name": "AdminUser",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/data/services/saferniGraphql.service.ts",
                    "description": "",
                    "kind": 165
                },
                {
                    "name": "Booking",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/data/services/saferniGraphql.service.ts",
                    "description": "",
                    "kind": 165
                },
                {
                    "name": "BookingAggregator",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/data/services/saferniGraphql.service.ts",
                    "description": "",
                    "kind": 165
                },
                {
                    "name": "BookingAggregatorAvg",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/data/services/saferniGraphql.service.ts",
                    "description": "",
                    "kind": 165
                },
                {
                    "name": "BookingAggregatorMax",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/data/services/saferniGraphql.service.ts",
                    "description": "",
                    "kind": 165
                },
                {
                    "name": "BookingAggregatorMin",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/data/services/saferniGraphql.service.ts",
                    "description": "",
                    "kind": 165
                },
                {
                    "name": "BookingAggregatorSum",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/data/services/saferniGraphql.service.ts",
                    "description": "",
                    "kind": 165
                },
                {
                    "name": "BookingConnection",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/data/services/saferniGraphql.service.ts",
                    "description": "",
                    "kind": 165
                },
                {
                    "name": "BookingConnection_Id",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/data/services/saferniGraphql.service.ts",
                    "description": "",
                    "kind": 165
                },
                {
                    "name": "BookingConnectionAdults",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/data/services/saferniGraphql.service.ts",
                    "description": "",
                    "kind": 165
                },
                {
                    "name": "BookingConnectionApproved",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/data/services/saferniGraphql.service.ts",
                    "description": "",
                    "kind": 165
                },
                {
                    "name": "BookingConnectionArrivalDate",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/data/services/saferniGraphql.service.ts",
                    "description": "",
                    "kind": 165
                },
                {
                    "name": "BookingConnectionBasePeopleCount",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/data/services/saferniGraphql.service.ts",
                    "description": "",
                    "kind": 165
                },
                {
                    "name": "BookingConnectionBasePrice",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/data/services/saferniGraphql.service.ts",
                    "description": "",
                    "kind": 165
                },
                {
                    "name": "BookingConnectionChildren",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/data/services/saferniGraphql.service.ts",
                    "description": "",
                    "kind": 165
                },
                {
                    "name": "BookingConnectionCreatedAt",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/data/services/saferniGraphql.service.ts",
                    "description": "",
                    "kind": 165
                },
                {
                    "name": "BookingConnectionCurrency",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/data/services/saferniGraphql.service.ts",
                    "description": "",
                    "kind": 165
                },
                {
                    "name": "BookingConnectionDiscount",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/data/services/saferniGraphql.service.ts",
                    "description": "",
                    "kind": 165
                },
                {
                    "name": "BookingConnectionEmail",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/data/services/saferniGraphql.service.ts",
                    "description": "",
                    "kind": 165
                },
                {
                    "name": "BookingConnectionFullName",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/data/services/saferniGraphql.service.ts",
                    "description": "",
                    "kind": 165
                },
                {
                    "name": "BookingConnectionId",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/data/services/saferniGraphql.service.ts",
                    "description": "",
                    "kind": 165
                },
                {
                    "name": "BookingConnectionLanguage",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/data/services/saferniGraphql.service.ts",
                    "description": "",
                    "kind": 165
                },
                {
                    "name": "BookingConnectionMessage",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/data/services/saferniGraphql.service.ts",
                    "description": "",
                    "kind": 165
                },
                {
                    "name": "BookingConnectionPhone",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/data/services/saferniGraphql.service.ts",
                    "description": "",
                    "kind": 165
                },
                {
                    "name": "BookingConnectionPublished_At",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/data/services/saferniGraphql.service.ts",
                    "description": "",
                    "kind": 165
                },
                {
                    "name": "BookingConnectionTotalPrice",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/data/services/saferniGraphql.service.ts",
                    "description": "",
                    "kind": 165
                },
                {
                    "name": "BookingConnectionTrip",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/data/services/saferniGraphql.service.ts",
                    "description": "",
                    "kind": 165
                },
                {
                    "name": "BookingConnectionUpdatedAt",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/data/services/saferniGraphql.service.ts",
                    "description": "",
                    "kind": 165
                },
                {
                    "name": "BookingConnectionUserBookingStatus",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/data/services/saferniGraphql.service.ts",
                    "description": "",
                    "kind": 165
                },
                {
                    "name": "BookingGroupBy",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/data/services/saferniGraphql.service.ts",
                    "description": "",
                    "kind": 165
                },
                {
                    "name": "BookingInput",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/data/services/saferniGraphql.service.ts",
                    "description": "",
                    "kind": 165
                },
                {
                    "name": "CitiesQuery",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "",
                    "file": "src/app/data/services/saferniGraphql.service.ts",
                    "description": "",
                    "kind": 172
                },
                {
                    "name": "CitiesQueryVariables",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "Exact<literal type>",
                    "file": "src/app/data/services/saferniGraphql.service.ts",
                    "description": "",
                    "kind": 161
                },
                {
                    "name": "City",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/data/services/saferniGraphql.service.ts",
                    "description": "",
                    "kind": 165
                },
                {
                    "name": "CityAggregator",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/data/services/saferniGraphql.service.ts",
                    "description": "",
                    "kind": 165
                },
                {
                    "name": "CityConnection",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/data/services/saferniGraphql.service.ts",
                    "description": "",
                    "kind": 165
                },
                {
                    "name": "CityConnection_Id",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/data/services/saferniGraphql.service.ts",
                    "description": "",
                    "kind": 165
                },
                {
                    "name": "CityConnectionCreatedAt",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/data/services/saferniGraphql.service.ts",
                    "description": "",
                    "kind": 165
                },
                {
                    "name": "CityConnectionDescription",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/data/services/saferniGraphql.service.ts",
                    "description": "",
                    "kind": 165
                },
                {
                    "name": "CityConnectionId",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/data/services/saferniGraphql.service.ts",
                    "description": "",
                    "kind": 165
                },
                {
                    "name": "CityConnectionImage",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/data/services/saferniGraphql.service.ts",
                    "description": "",
                    "kind": 165
                },
                {
                    "name": "CityConnectionLocale",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/data/services/saferniGraphql.service.ts",
                    "description": "",
                    "kind": 165
                },
                {
                    "name": "CityConnectionName",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/data/services/saferniGraphql.service.ts",
                    "description": "",
                    "kind": 165
                },
                {
                    "name": "CityConnectionPublished_At",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/data/services/saferniGraphql.service.ts",
                    "description": "",
                    "kind": 165
                },
                {
                    "name": "CityConnectionUpdatedAt",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/data/services/saferniGraphql.service.ts",
                    "description": "",
                    "kind": 165
                },
                {
                    "name": "CityGroupBy",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/data/services/saferniGraphql.service.ts",
                    "description": "",
                    "kind": 165
                },
                {
                    "name": "CityInfoFragment",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "",
                    "file": "src/app/data/services/saferniGraphql.service.ts",
                    "description": "",
                    "kind": 172
                },
                {
                    "name": "CityInput",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/data/services/saferniGraphql.service.ts",
                    "description": "",
                    "kind": 165
                },
                {
                    "name": "CityLocalizationsArgs",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/data/services/saferniGraphql.service.ts",
                    "description": "",
                    "kind": 165
                },
                {
                    "name": "CityLocationsArgs",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/data/services/saferniGraphql.service.ts",
                    "description": "",
                    "kind": 165
                },
                {
                    "name": "ComponentCoordinateCoordinate",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/data/services/saferniGraphql.service.ts",
                    "description": "",
                    "kind": 165
                },
                {
                    "name": "ComponentCoordinateCoordinateInput",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/data/services/saferniGraphql.service.ts",
                    "description": "",
                    "kind": 165
                },
                {
                    "name": "ComponentFeatureFeature",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/data/services/saferniGraphql.service.ts",
                    "description": "",
                    "kind": 165
                },
                {
                    "name": "ComponentFeatureFeatureInput",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/data/services/saferniGraphql.service.ts",
                    "description": "",
                    "kind": 165
                },
                {
                    "name": "ComponentPricePrice",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/data/services/saferniGraphql.service.ts",
                    "description": "",
                    "kind": 165
                },
                {
                    "name": "ComponentPricePriceInput",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/data/services/saferniGraphql.service.ts",
                    "description": "",
                    "kind": 165
                },
                {
                    "name": "ComponentTimelineTimeline",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/data/services/saferniGraphql.service.ts",
                    "description": "",
                    "kind": 165
                },
                {
                    "name": "ComponentTimelineTimelineInput",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/data/services/saferniGraphql.service.ts",
                    "description": "",
                    "kind": 165
                },
                {
                    "name": "ComponentTimelineTimelineLocationsArgs",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/data/services/saferniGraphql.service.ts",
                    "description": "",
                    "kind": 165
                },
                {
                    "name": "CreateBookingInput",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/data/services/saferniGraphql.service.ts",
                    "description": "",
                    "kind": 165
                },
                {
                    "name": "CreateBookingPayload",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/data/services/saferniGraphql.service.ts",
                    "description": "",
                    "kind": 165
                },
                {
                    "name": "CreateBookingQueryMutation",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "",
                    "file": "src/app/data/services/saferniGraphql.service.ts",
                    "description": "",
                    "kind": 172
                },
                {
                    "name": "CreateBookingQueryMutationVariables",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "Exact<literal type>",
                    "file": "src/app/data/services/saferniGraphql.service.ts",
                    "description": "",
                    "kind": 161
                },
                {
                    "name": "CreateCityInput",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/data/services/saferniGraphql.service.ts",
                    "description": "",
                    "kind": 165
                },
                {
                    "name": "CreateCityPayload",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/data/services/saferniGraphql.service.ts",
                    "description": "",
                    "kind": 165
                },
                {
                    "name": "CreateFeatureInput",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/data/services/saferniGraphql.service.ts",
                    "description": "",
                    "kind": 165
                },
                {
                    "name": "CreateFeaturePayload",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/data/services/saferniGraphql.service.ts",
                    "description": "",
                    "kind": 165
                },
                {
                    "name": "CreateHotelInput",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/data/services/saferniGraphql.service.ts",
                    "description": "",
                    "kind": 165
                },
                {
                    "name": "CreateHotelPayload",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/data/services/saferniGraphql.service.ts",
                    "description": "",
                    "kind": 165
                },
                {
                    "name": "CreateLocationInput",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/data/services/saferniGraphql.service.ts",
                    "description": "",
                    "kind": 165
                },
                {
                    "name": "CreateLocationPayload",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/data/services/saferniGraphql.service.ts",
                    "description": "",
                    "kind": 165
                },
                {
                    "name": "CreatePartnerInput",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/data/services/saferniGraphql.service.ts",
                    "description": "",
                    "kind": 165
                },
                {
                    "name": "CreatePartnerPayload",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/data/services/saferniGraphql.service.ts",
                    "description": "",
                    "kind": 165
                },
                {
                    "name": "CreateReviewInput",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/data/services/saferniGraphql.service.ts",
                    "description": "",
                    "kind": 165
                },
                {
                    "name": "CreateReviewPayload",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/data/services/saferniGraphql.service.ts",
                    "description": "",
                    "kind": 165
                },
                {
                    "name": "CreateRoleInput",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/data/services/saferniGraphql.service.ts",
                    "description": "",
                    "kind": 165
                },
                {
                    "name": "CreateRolePayload",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/data/services/saferniGraphql.service.ts",
                    "description": "",
                    "kind": 165
                },
                {
                    "name": "CreateSubscriberInput",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/data/services/saferniGraphql.service.ts",
                    "description": "",
                    "kind": 165
                },
                {
                    "name": "CreateSubscriberPayload",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/data/services/saferniGraphql.service.ts",
                    "description": "",
                    "kind": 165
                },
                {
                    "name": "CreateTripInput",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/data/services/saferniGraphql.service.ts",
                    "description": "",
                    "kind": 165
                },
                {
                    "name": "CreateTripPayload",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/data/services/saferniGraphql.service.ts",
                    "description": "",
                    "kind": 165
                },
                {
                    "name": "CreateUserInput",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/data/services/saferniGraphql.service.ts",
                    "description": "",
                    "kind": 165
                },
                {
                    "name": "CreateUserPayload",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/data/services/saferniGraphql.service.ts",
                    "description": "",
                    "kind": 165
                },
                {
                    "name": "DeleteBookingInput",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/data/services/saferniGraphql.service.ts",
                    "description": "",
                    "kind": 165
                },
                {
                    "name": "DeleteBookingPayload",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/data/services/saferniGraphql.service.ts",
                    "description": "",
                    "kind": 165
                },
                {
                    "name": "DeleteCityInput",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/data/services/saferniGraphql.service.ts",
                    "description": "",
                    "kind": 165
                },
                {
                    "name": "DeleteCityPayload",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/data/services/saferniGraphql.service.ts",
                    "description": "",
                    "kind": 165
                },
                {
                    "name": "DeleteFeatureInput",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/data/services/saferniGraphql.service.ts",
                    "description": "",
                    "kind": 165
                },
                {
                    "name": "DeleteFeaturePayload",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/data/services/saferniGraphql.service.ts",
                    "description": "",
                    "kind": 165
                },
                {
                    "name": "DeleteFileInput",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/data/services/saferniGraphql.service.ts",
                    "description": "",
                    "kind": 165
                },
                {
                    "name": "DeleteFilePayload",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/data/services/saferniGraphql.service.ts",
                    "description": "",
                    "kind": 165
                },
                {
                    "name": "DeleteHomeBannerPayload",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/data/services/saferniGraphql.service.ts",
                    "description": "",
                    "kind": 165
                },
                {
                    "name": "DeleteHotelInput",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/data/services/saferniGraphql.service.ts",
                    "description": "",
                    "kind": 165
                },
                {
                    "name": "DeleteHotelPayload",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/data/services/saferniGraphql.service.ts",
                    "description": "",
                    "kind": 165
                },
                {
                    "name": "DeleteLocationInput",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/data/services/saferniGraphql.service.ts",
                    "description": "",
                    "kind": 165
                },
                {
                    "name": "DeleteLocationPayload",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/data/services/saferniGraphql.service.ts",
                    "description": "",
                    "kind": 165
                },
                {
                    "name": "DeletePartnerInput",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/data/services/saferniGraphql.service.ts",
                    "description": "",
                    "kind": 165
                },
                {
                    "name": "DeletePartnerPayload",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/data/services/saferniGraphql.service.ts",
                    "description": "",
                    "kind": 165
                },
                {
                    "name": "DeleteReviewInput",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/data/services/saferniGraphql.service.ts",
                    "description": "",
                    "kind": 165
                },
                {
                    "name": "DeleteReviewPayload",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/data/services/saferniGraphql.service.ts",
                    "description": "",
                    "kind": 165
                },
                {
                    "name": "DeleteRoleInput",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/data/services/saferniGraphql.service.ts",
                    "description": "",
                    "kind": 165
                },
                {
                    "name": "DeleteRolePayload",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/data/services/saferniGraphql.service.ts",
                    "description": "",
                    "kind": 165
                },
                {
                    "name": "DeleteSubscriberInput",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/data/services/saferniGraphql.service.ts",
                    "description": "",
                    "kind": 165
                },
                {
                    "name": "DeleteSubscriberPayload",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/data/services/saferniGraphql.service.ts",
                    "description": "",
                    "kind": 165
                },
                {
                    "name": "DeleteTripInput",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/data/services/saferniGraphql.service.ts",
                    "description": "",
                    "kind": 165
                },
                {
                    "name": "DeleteTripPayload",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/data/services/saferniGraphql.service.ts",
                    "description": "",
                    "kind": 165
                },
                {
                    "name": "DeleteUserInput",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/data/services/saferniGraphql.service.ts",
                    "description": "",
                    "kind": 165
                },
                {
                    "name": "DeleteUserPayload",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/data/services/saferniGraphql.service.ts",
                    "description": "",
                    "kind": 165
                },
                {
                    "name": "EditBookingInput",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/data/services/saferniGraphql.service.ts",
                    "description": "",
                    "kind": 165
                },
                {
                    "name": "EditCityInput",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/data/services/saferniGraphql.service.ts",
                    "description": "",
                    "kind": 165
                },
                {
                    "name": "EditComponentCoordinateCoordinateInput",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/data/services/saferniGraphql.service.ts",
                    "description": "",
                    "kind": 165
                },
                {
                    "name": "EditComponentFeatureFeatureInput",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/data/services/saferniGraphql.service.ts",
                    "description": "",
                    "kind": 165
                },
                {
                    "name": "EditComponentPricePriceInput",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/data/services/saferniGraphql.service.ts",
                    "description": "",
                    "kind": 165
                },
                {
                    "name": "EditComponentTimelineTimelineInput",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/data/services/saferniGraphql.service.ts",
                    "description": "",
                    "kind": 165
                },
                {
                    "name": "EditFeatureInput",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/data/services/saferniGraphql.service.ts",
                    "description": "",
                    "kind": 165
                },
                {
                    "name": "EditFileInput",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/data/services/saferniGraphql.service.ts",
                    "description": "",
                    "kind": 165
                },
                {
                    "name": "EditHomeBannerInput",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/data/services/saferniGraphql.service.ts",
                    "description": "",
                    "kind": 165
                },
                {
                    "name": "EditHotelInput",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/data/services/saferniGraphql.service.ts",
                    "description": "",
                    "kind": 165
                },
                {
                    "name": "EditLocaleInput",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/data/services/saferniGraphql.service.ts",
                    "description": "",
                    "kind": 165
                },
                {
                    "name": "EditLocationInput",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/data/services/saferniGraphql.service.ts",
                    "description": "",
                    "kind": 165
                },
                {
                    "name": "EditPartnerInput",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/data/services/saferniGraphql.service.ts",
                    "description": "",
                    "kind": 165
                },
                {
                    "name": "EditReviewInput",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/data/services/saferniGraphql.service.ts",
                    "description": "",
                    "kind": 165
                },
                {
                    "name": "EditRoleInput",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/data/services/saferniGraphql.service.ts",
                    "description": "",
                    "kind": 165
                },
                {
                    "name": "EditSubscriberInput",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/data/services/saferniGraphql.service.ts",
                    "description": "",
                    "kind": 165
                },
                {
                    "name": "EditTripInput",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/data/services/saferniGraphql.service.ts",
                    "description": "",
                    "kind": 165
                },
                {
                    "name": "EditUserInput",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/data/services/saferniGraphql.service.ts",
                    "description": "",
                    "kind": 165
                },
                {
                    "name": "Exact",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "",
                    "file": "src/app/data/services/saferniGraphql.service.ts",
                    "description": "",
                    "kind": 176
                },
                {
                    "name": "Feature",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/data/services/saferniGraphql.service.ts",
                    "description": "",
                    "kind": 165
                },
                {
                    "name": "FeatureAggregator",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/data/services/saferniGraphql.service.ts",
                    "description": "",
                    "kind": 165
                },
                {
                    "name": "FeatureConnection",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/data/services/saferniGraphql.service.ts",
                    "description": "",
                    "kind": 165
                },
                {
                    "name": "FeatureConnection_Id",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/data/services/saferniGraphql.service.ts",
                    "description": "",
                    "kind": 165
                },
                {
                    "name": "FeatureConnectionCreatedAt",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/data/services/saferniGraphql.service.ts",
                    "description": "",
                    "kind": 165
                },
                {
                    "name": "FeatureConnectionId",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/data/services/saferniGraphql.service.ts",
                    "description": "",
                    "kind": 165
                },
                {
                    "name": "FeatureConnectionInfo",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/data/services/saferniGraphql.service.ts",
                    "description": "",
                    "kind": 165
                },
                {
                    "name": "FeatureConnectionLocale",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/data/services/saferniGraphql.service.ts",
                    "description": "",
                    "kind": 165
                },
                {
                    "name": "FeatureConnectionName",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/data/services/saferniGraphql.service.ts",
                    "description": "",
                    "kind": 165
                },
                {
                    "name": "FeatureConnectionPublished_At",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/data/services/saferniGraphql.service.ts",
                    "description": "",
                    "kind": 165
                },
                {
                    "name": "FeatureConnectionUpdatedAt",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/data/services/saferniGraphql.service.ts",
                    "description": "",
                    "kind": 165
                },
                {
                    "name": "FeatureGroupBy",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/data/services/saferniGraphql.service.ts",
                    "description": "",
                    "kind": 165
                },
                {
                    "name": "FeatureInput",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/data/services/saferniGraphql.service.ts",
                    "description": "",
                    "kind": 165
                },
                {
                    "name": "FeatureLocalizationsArgs",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/data/services/saferniGraphql.service.ts",
                    "description": "",
                    "kind": 165
                },
                {
                    "name": "FeaturesQuery",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "",
                    "file": "src/app/data/services/saferniGraphql.service.ts",
                    "description": "",
                    "kind": 172
                },
                {
                    "name": "FeaturesQueryVariables",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "Exact<literal type>",
                    "file": "src/app/data/services/saferniGraphql.service.ts",
                    "description": "",
                    "kind": 161
                },
                {
                    "name": "FileInfoInput",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/data/services/saferniGraphql.service.ts",
                    "description": "",
                    "kind": 165
                },
                {
                    "name": "FileInput",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/data/services/saferniGraphql.service.ts",
                    "description": "",
                    "kind": 165
                },
                {
                    "name": "GetCityQuery",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "",
                    "file": "src/app/data/services/saferniGraphql.service.ts",
                    "description": "",
                    "kind": 172
                },
                {
                    "name": "GetCityQueryVariables",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "Exact<literal type>",
                    "file": "src/app/data/services/saferniGraphql.service.ts",
                    "description": "",
                    "kind": 161
                },
                {
                    "name": "GetLocalizedCityQuery",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "",
                    "file": "src/app/data/services/saferniGraphql.service.ts",
                    "description": "",
                    "kind": 172
                },
                {
                    "name": "GetLocalizedCityQueryVariables",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "Exact<literal type>",
                    "file": "src/app/data/services/saferniGraphql.service.ts",
                    "description": "",
                    "kind": 161
                },
                {
                    "name": "GetLocalizedTripQuery",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "",
                    "file": "src/app/data/services/saferniGraphql.service.ts",
                    "description": "",
                    "kind": 172
                },
                {
                    "name": "GetLocalizedTripQueryVariables",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "Exact<literal type>",
                    "file": "src/app/data/services/saferniGraphql.service.ts",
                    "description": "",
                    "kind": 161
                },
                {
                    "name": "GetLocationsQuery",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "",
                    "file": "src/app/data/services/saferniGraphql.service.ts",
                    "description": "",
                    "kind": 172
                },
                {
                    "name": "GetLocationsQueryVariables",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "Exact<literal type>",
                    "file": "src/app/data/services/saferniGraphql.service.ts",
                    "description": "",
                    "kind": 161
                },
                {
                    "name": "GetTripQuery",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "",
                    "file": "src/app/data/services/saferniGraphql.service.ts",
                    "description": "",
                    "kind": 172
                },
                {
                    "name": "GetTripQueryVariables",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "Exact<literal type>",
                    "file": "src/app/data/services/saferniGraphql.service.ts",
                    "description": "",
                    "kind": 161
                },
                {
                    "name": "HomeBanner",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/data/services/saferniGraphql.service.ts",
                    "description": "",
                    "kind": 165
                },
                {
                    "name": "HomeBannerImagesArgs",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/data/services/saferniGraphql.service.ts",
                    "description": "",
                    "kind": 165
                },
                {
                    "name": "HomeBannerInput",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/data/services/saferniGraphql.service.ts",
                    "description": "",
                    "kind": 165
                },
                {
                    "name": "HomeCarousellQuery",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "",
                    "file": "src/app/data/services/saferniGraphql.service.ts",
                    "description": "",
                    "kind": 172
                },
                {
                    "name": "HomeCarousellQueryVariables",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "Exact<literal type>",
                    "file": "src/app/data/services/saferniGraphql.service.ts",
                    "description": "",
                    "kind": 161
                },
                {
                    "name": "HotelInput",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/data/services/saferniGraphql.service.ts",
                    "description": "",
                    "kind": 165
                },
                {
                    "name": "Hotels",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/data/services/saferniGraphql.service.ts",
                    "description": "",
                    "kind": 165
                },
                {
                    "name": "HotelsAggregator",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/data/services/saferniGraphql.service.ts",
                    "description": "",
                    "kind": 165
                },
                {
                    "name": "HotelsAggregatorAvg",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/data/services/saferniGraphql.service.ts",
                    "description": "",
                    "kind": 165
                },
                {
                    "name": "HotelsAggregatorMax",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/data/services/saferniGraphql.service.ts",
                    "description": "",
                    "kind": 165
                },
                {
                    "name": "HotelsAggregatorMin",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/data/services/saferniGraphql.service.ts",
                    "description": "",
                    "kind": 165
                },
                {
                    "name": "HotelsAggregatorSum",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/data/services/saferniGraphql.service.ts",
                    "description": "",
                    "kind": 165
                },
                {
                    "name": "HotelsConnection",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/data/services/saferniGraphql.service.ts",
                    "description": "",
                    "kind": 165
                },
                {
                    "name": "HotelsConnection_Id",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/data/services/saferniGraphql.service.ts",
                    "description": "",
                    "kind": 165
                },
                {
                    "name": "HotelsConnectionCreatedAt",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/data/services/saferniGraphql.service.ts",
                    "description": "",
                    "kind": 165
                },
                {
                    "name": "HotelsConnectionId",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/data/services/saferniGraphql.service.ts",
                    "description": "",
                    "kind": 165
                },
                {
                    "name": "HotelsConnectionName",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/data/services/saferniGraphql.service.ts",
                    "description": "",
                    "kind": 165
                },
                {
                    "name": "HotelsConnectionPublished_At",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/data/services/saferniGraphql.service.ts",
                    "description": "",
                    "kind": 165
                },
                {
                    "name": "HotelsConnectionStars",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/data/services/saferniGraphql.service.ts",
                    "description": "",
                    "kind": 165
                },
                {
                    "name": "HotelsConnectionUpdatedAt",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/data/services/saferniGraphql.service.ts",
                    "description": "",
                    "kind": 165
                },
                {
                    "name": "HotelsConnectionUrl",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/data/services/saferniGraphql.service.ts",
                    "description": "",
                    "kind": 165
                },
                {
                    "name": "HotelsGroupBy",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/data/services/saferniGraphql.service.ts",
                    "description": "",
                    "kind": 165
                },
                {
                    "name": "HotelsTripsArgs",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/data/services/saferniGraphql.service.ts",
                    "description": "",
                    "kind": 165
                },
                {
                    "name": "I18NLocale",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/data/services/saferniGraphql.service.ts",
                    "description": "",
                    "kind": 165
                },
                {
                    "name": "InputId",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/data/services/saferniGraphql.service.ts",
                    "description": "",
                    "kind": 165
                },
                {
                    "name": "LocaleInput",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/data/services/saferniGraphql.service.ts",
                    "description": "",
                    "kind": 165
                },
                {
                    "name": "Location",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/data/services/saferniGraphql.service.ts",
                    "description": "",
                    "kind": 165
                },
                {
                    "name": "LocationAggregator",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/data/services/saferniGraphql.service.ts",
                    "description": "",
                    "kind": 165
                },
                {
                    "name": "LocationConnection",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/data/services/saferniGraphql.service.ts",
                    "description": "",
                    "kind": 165
                },
                {
                    "name": "LocationConnection_Id",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/data/services/saferniGraphql.service.ts",
                    "description": "",
                    "kind": 165
                },
                {
                    "name": "LocationConnectionCity",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/data/services/saferniGraphql.service.ts",
                    "description": "",
                    "kind": 165
                },
                {
                    "name": "LocationConnectionCoordinate",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/data/services/saferniGraphql.service.ts",
                    "description": "",
                    "kind": 165
                },
                {
                    "name": "LocationConnectionCreatedAt",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/data/services/saferniGraphql.service.ts",
                    "description": "",
                    "kind": 165
                },
                {
                    "name": "LocationConnectionDescription",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/data/services/saferniGraphql.service.ts",
                    "description": "",
                    "kind": 165
                },
                {
                    "name": "LocationConnectionId",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/data/services/saferniGraphql.service.ts",
                    "description": "",
                    "kind": 165
                },
                {
                    "name": "LocationConnectionLocale",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/data/services/saferniGraphql.service.ts",
                    "description": "",
                    "kind": 165
                },
                {
                    "name": "LocationConnectionName",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/data/services/saferniGraphql.service.ts",
                    "description": "",
                    "kind": 165
                },
                {
                    "name": "LocationConnectionPublished_At",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/data/services/saferniGraphql.service.ts",
                    "description": "",
                    "kind": 165
                },
                {
                    "name": "LocationConnectionUpdatedAt",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/data/services/saferniGraphql.service.ts",
                    "description": "",
                    "kind": 165
                },
                {
                    "name": "LocationGroupBy",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/data/services/saferniGraphql.service.ts",
                    "description": "",
                    "kind": 165
                },
                {
                    "name": "LocationImagesArgs",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/data/services/saferniGraphql.service.ts",
                    "description": "",
                    "kind": 165
                },
                {
                    "name": "LocationInput",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/data/services/saferniGraphql.service.ts",
                    "description": "",
                    "kind": 165
                },
                {
                    "name": "LocationLocalizationsArgs",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/data/services/saferniGraphql.service.ts",
                    "description": "",
                    "kind": 165
                },
                {
                    "name": "MakeMaybe",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "",
                    "file": "src/app/data/services/saferniGraphql.service.ts",
                    "description": "",
                    "kind": 169
                },
                {
                    "name": "MakeOptional",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "",
                    "file": "src/app/data/services/saferniGraphql.service.ts",
                    "description": "",
                    "kind": 169
                },
                {
                    "name": "Maybe",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "T | null",
                    "file": "src/app/data/services/saferniGraphql.service.ts",
                    "description": "",
                    "kind": 168
                },
                {
                    "name": "Morph",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "UsersPermissionsMe | UsersPermissionsMeRole | UsersPermissionsLoginPayload | UserPermissionsPasswordPayload | Booking | BookingConnection | BookingAggregator | BookingAggregatorSum | BookingAggregatorAvg | BookingAggregatorMin | BookingAggregatorMax | BookingGroupBy | BookingConnectionId | BookingConnection_Id | BookingConnectionCreatedAt | BookingConnectionUpdatedAt | BookingConnectionTrip | BookingConnectionApproved | BookingConnectionBasePrice | BookingConnectionCurrency | BookingConnectionBasePeopleCount | BookingConnectionDiscount | BookingConnectionFullName | BookingConnectionPhone | BookingConnectionMessage | BookingConnectionArrivalDate | BookingConnectionLanguage | BookingConnectionUserBookingStatus | BookingConnectionEmail | BookingConnectionAdults | BookingConnectionChildren | BookingConnectionTotalPrice | BookingConnectionPublished_At | CreateBookingPayload | UpdateBookingPayload | DeleteBookingPayload | City | CityConnection | CityAggregator | CityGroupBy | CityConnectionId | CityConnection_Id | CityConnectionCreatedAt | CityConnectionUpdatedAt | CityConnectionName | CityConnectionDescription | CityConnectionImage | CityConnectionLocale | CityConnectionPublished_At | CreateCityPayload | UpdateCityPayload | DeleteCityPayload | Feature | FeatureConnection | FeatureAggregator | FeatureGroupBy | FeatureConnectionId | FeatureConnection_Id | FeatureConnectionCreatedAt | FeatureConnectionUpdatedAt | FeatureConnectionName | FeatureConnectionInfo | FeatureConnectionLocale | FeatureConnectionPublished_At | CreateFeaturePayload | UpdateFeaturePayload | DeleteFeaturePayload | HomeBanner | UpdateHomeBannerPayload | DeleteHomeBannerPayload | Hotels | HotelsConnection | HotelsAggregator | HotelsAggregatorSum | HotelsAggregatorAvg | HotelsAggregatorMin | HotelsAggregatorMax | HotelsGroupBy | HotelsConnectionId | HotelsConnection_Id | HotelsConnectionCreatedAt | HotelsConnectionUpdatedAt | HotelsConnectionName | HotelsConnectionStars | HotelsConnectionUrl | HotelsConnectionPublished_At | CreateHotelPayload | UpdateHotelPayload | DeleteHotelPayload | Location | LocationConnection | LocationAggregator | LocationGroupBy | LocationConnectionId | LocationConnection_Id | LocationConnectionCreatedAt | LocationConnectionUpdatedAt | LocationConnectionName | LocationConnectionDescription | LocationConnectionCity | LocationConnectionCoordinate | LocationConnectionLocale | LocationConnectionPublished_At | CreateLocationPayload | UpdateLocationPayload | DeleteLocationPayload | Partner | PartnerConnection | PartnerAggregator | PartnerAggregatorSum | PartnerAggregatorAvg | PartnerAggregatorMin | PartnerAggregatorMax | PartnerGroupBy | PartnerConnectionId | PartnerConnection_Id | PartnerConnectionCreatedAt | PartnerConnectionUpdatedAt | PartnerConnectionName | PartnerConnectionPhone | PartnerConnectionAddress | PartnerConnectionEmail | PartnerConnectionAgreement | PartnerConnectionCommission | PartnerConnectionRevenueSource | PartnerConnectionAgreementStatus | PartnerConnectionNotes | PartnerConnectionPhone2 | PartnerConnectionPublished_At | CreatePartnerPayload | UpdatePartnerPayload | DeletePartnerPayload | Review | ReviewConnection | ReviewAggregator | ReviewAggregatorSum | ReviewAggregatorAvg | ReviewAggregatorMin | ReviewAggregatorMax | ReviewGroupBy | ReviewConnectionId | ReviewConnection_Id | ReviewConnectionCreatedAt | ReviewConnectionUpdatedAt | ReviewConnectionText | ReviewConnectionRating | ReviewConnectionAuthor | ReviewConnectionActive | ReviewConnectionTrip | ReviewConnectionPublished_At | CreateReviewPayload | UpdateReviewPayload | DeleteReviewPayload | Subscribers | SubscribersConnection | SubscribersAggregator | SubscribersGroupBy | SubscribersConnectionId | SubscribersConnection_Id | SubscribersConnectionCreatedAt | SubscribersConnectionUpdatedAt | SubscribersConnectionEmail | SubscribersConnectionPublished_At | CreateSubscriberPayload | UpdateSubscriberPayload | DeleteSubscriberPayload | Trips | TripsConnection | TripsAggregator | TripsAggregatorSum | TripsAggregatorAvg | TripsAggregatorMin | TripsAggregatorMax | TripsGroupBy | TripsConnectionId | TripsConnection_Id | TripsConnectionCreatedAt | TripsConnectionUpdatedAt | TripsConnectionName | TripsConnectionPreviewImage | TripsConnectionActive | TripsConnectionTrip_Type | TripsConnectionDescription | TripsConnectionDuration | TripsConnectionPartner | TripsConnectionCurrency | TripsConnectionCity | TripsConnectionBasePrice | TripsConnectionBasePeopleCount | TripsConnectionDiscount | TripsConnectionTravelType | TripsConnectionHotel | TripsConnectionLocale | TripsConnectionPublished_At | CreateTripPayload | UpdateTripPayload | DeleteTripPayload | I18NLocale | UploadFile | UploadFileConnection | UploadFileAggregator | UploadFileAggregatorSum | UploadFileAggregatorAvg | UploadFileAggregatorMin | UploadFileAggregatorMax | UploadFileGroupBy | UploadFileConnectionId | UploadFileConnection_Id | UploadFileConnectionCreatedAt | UploadFileConnectionUpdatedAt | UploadFileConnectionName | UploadFileConnectionAlternativeText | UploadFileConnectionCaption | UploadFileConnectionWidth | UploadFileConnectionHeight | UploadFileConnectionFormats | UploadFileConnectionHash | UploadFileConnectionExt | UploadFileConnectionMime | UploadFileConnectionSize | UploadFileConnectionUrl | UploadFileConnectionPreviewUrl | UploadFileConnectionProvider | UploadFileConnectionProvider_Metadata | DeleteFilePayload | UsersPermissionsPermission | UsersPermissionsRole | UsersPermissionsRoleConnection | UsersPermissionsRoleAggregator | UsersPermissionsRoleGroupBy | UsersPermissionsRoleConnectionId | UsersPermissionsRoleConnection_Id | UsersPermissionsRoleConnectionName | UsersPermissionsRoleConnectionDescription | UsersPermissionsRoleConnectionType | CreateRolePayload | UpdateRolePayload | DeleteRolePayload | UsersPermissionsUser | UsersPermissionsUserConnection | UsersPermissionsUserAggregator | UsersPermissionsUserGroupBy | UsersPermissionsUserConnectionId | UsersPermissionsUserConnection_Id | UsersPermissionsUserConnectionCreatedAt | UsersPermissionsUserConnectionUpdatedAt | UsersPermissionsUserConnectionUsername | UsersPermissionsUserConnectionEmail | UsersPermissionsUserConnectionProvider | UsersPermissionsUserConnectionConfirmed | UsersPermissionsUserConnectionBlocked | UsersPermissionsUserConnectionRole | CreateUserPayload | UpdateUserPayload | DeleteUserPayload | ComponentCoordinateCoordinate | ComponentFeatureFeature | ComponentPricePrice | ComponentTimelineTimeline",
                    "file": "src/app/data/services/saferniGraphql.service.ts",
                    "description": "",
                    "kind": 168
                },
                {
                    "name": "Mutation",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/data/services/saferniGraphql.service.ts",
                    "description": "",
                    "kind": 165
                },
                {
                    "name": "MutationCreateBookingArgs",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/data/services/saferniGraphql.service.ts",
                    "description": "",
                    "kind": 165
                },
                {
                    "name": "MutationCreateCityArgs",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/data/services/saferniGraphql.service.ts",
                    "description": "",
                    "kind": 165
                },
                {
                    "name": "MutationCreateCityLocalizationArgs",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/data/services/saferniGraphql.service.ts",
                    "description": "",
                    "kind": 165
                },
                {
                    "name": "MutationCreateFeatureArgs",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/data/services/saferniGraphql.service.ts",
                    "description": "",
                    "kind": 165
                },
                {
                    "name": "MutationCreateFeatureLocalizationArgs",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/data/services/saferniGraphql.service.ts",
                    "description": "",
                    "kind": 165
                },
                {
                    "name": "MutationCreateHotelArgs",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/data/services/saferniGraphql.service.ts",
                    "description": "",
                    "kind": 165
                },
                {
                    "name": "MutationCreateLocationArgs",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/data/services/saferniGraphql.service.ts",
                    "description": "",
                    "kind": 165
                },
                {
                    "name": "MutationCreateLocationLocalizationArgs",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/data/services/saferniGraphql.service.ts",
                    "description": "",
                    "kind": 165
                },
                {
                    "name": "MutationCreatePartnerArgs",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/data/services/saferniGraphql.service.ts",
                    "description": "",
                    "kind": 165
                },
                {
                    "name": "MutationCreateReviewArgs",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/data/services/saferniGraphql.service.ts",
                    "description": "",
                    "kind": 165
                },
                {
                    "name": "MutationCreateRoleArgs",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/data/services/saferniGraphql.service.ts",
                    "description": "",
                    "kind": 165
                },
                {
                    "name": "MutationCreateSubscriberArgs",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/data/services/saferniGraphql.service.ts",
                    "description": "",
                    "kind": 165
                },
                {
                    "name": "MutationCreateTripArgs",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/data/services/saferniGraphql.service.ts",
                    "description": "",
                    "kind": 165
                },
                {
                    "name": "MutationCreateTripLocalizationArgs",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/data/services/saferniGraphql.service.ts",
                    "description": "",
                    "kind": 165
                },
                {
                    "name": "MutationCreateUserArgs",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/data/services/saferniGraphql.service.ts",
                    "description": "",
                    "kind": 165
                },
                {
                    "name": "MutationDeleteBookingArgs",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/data/services/saferniGraphql.service.ts",
                    "description": "",
                    "kind": 165
                },
                {
                    "name": "MutationDeleteCityArgs",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/data/services/saferniGraphql.service.ts",
                    "description": "",
                    "kind": 165
                },
                {
                    "name": "MutationDeleteFeatureArgs",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/data/services/saferniGraphql.service.ts",
                    "description": "",
                    "kind": 165
                },
                {
                    "name": "MutationDeleteFileArgs",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/data/services/saferniGraphql.service.ts",
                    "description": "",
                    "kind": 165
                },
                {
                    "name": "MutationDeleteHotelArgs",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/data/services/saferniGraphql.service.ts",
                    "description": "",
                    "kind": 165
                },
                {
                    "name": "MutationDeleteLocationArgs",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/data/services/saferniGraphql.service.ts",
                    "description": "",
                    "kind": 165
                },
                {
                    "name": "MutationDeletePartnerArgs",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/data/services/saferniGraphql.service.ts",
                    "description": "",
                    "kind": 165
                },
                {
                    "name": "MutationDeleteReviewArgs",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/data/services/saferniGraphql.service.ts",
                    "description": "",
                    "kind": 165
                },
                {
                    "name": "MutationDeleteRoleArgs",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/data/services/saferniGraphql.service.ts",
                    "description": "",
                    "kind": 165
                },
                {
                    "name": "MutationDeleteSubscriberArgs",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/data/services/saferniGraphql.service.ts",
                    "description": "",
                    "kind": 165
                },
                {
                    "name": "MutationDeleteTripArgs",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/data/services/saferniGraphql.service.ts",
                    "description": "",
                    "kind": 165
                },
                {
                    "name": "MutationDeleteUserArgs",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/data/services/saferniGraphql.service.ts",
                    "description": "",
                    "kind": 165
                },
                {
                    "name": "MutationEmailConfirmationArgs",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/data/services/saferniGraphql.service.ts",
                    "description": "",
                    "kind": 165
                },
                {
                    "name": "MutationForgotPasswordArgs",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/data/services/saferniGraphql.service.ts",
                    "description": "",
                    "kind": 165
                },
                {
                    "name": "MutationLoginArgs",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/data/services/saferniGraphql.service.ts",
                    "description": "",
                    "kind": 165
                },
                {
                    "name": "MutationMultipleUploadArgs",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/data/services/saferniGraphql.service.ts",
                    "description": "",
                    "kind": 165
                },
                {
                    "name": "MutationRegisterArgs",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/data/services/saferniGraphql.service.ts",
                    "description": "",
                    "kind": 165
                },
                {
                    "name": "MutationResetPasswordArgs",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/data/services/saferniGraphql.service.ts",
                    "description": "",
                    "kind": 165
                },
                {
                    "name": "MutationUpdateBookingArgs",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/data/services/saferniGraphql.service.ts",
                    "description": "",
                    "kind": 165
                },
                {
                    "name": "MutationUpdateCityArgs",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/data/services/saferniGraphql.service.ts",
                    "description": "",
                    "kind": 165
                },
                {
                    "name": "MutationUpdateFeatureArgs",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/data/services/saferniGraphql.service.ts",
                    "description": "",
                    "kind": 165
                },
                {
                    "name": "MutationUpdateFileInfoArgs",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/data/services/saferniGraphql.service.ts",
                    "description": "",
                    "kind": 165
                },
                {
                    "name": "MutationUpdateHomeBannerArgs",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/data/services/saferniGraphql.service.ts",
                    "description": "",
                    "kind": 165
                },
                {
                    "name": "MutationUpdateHotelArgs",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/data/services/saferniGraphql.service.ts",
                    "description": "",
                    "kind": 165
                },
                {
                    "name": "MutationUpdateLocationArgs",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/data/services/saferniGraphql.service.ts",
                    "description": "",
                    "kind": 165
                },
                {
                    "name": "MutationUpdatePartnerArgs",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/data/services/saferniGraphql.service.ts",
                    "description": "",
                    "kind": 165
                },
                {
                    "name": "MutationUpdateReviewArgs",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/data/services/saferniGraphql.service.ts",
                    "description": "",
                    "kind": 165
                },
                {
                    "name": "MutationUpdateRoleArgs",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/data/services/saferniGraphql.service.ts",
                    "description": "",
                    "kind": 165
                },
                {
                    "name": "MutationUpdateSubscriberArgs",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/data/services/saferniGraphql.service.ts",
                    "description": "",
                    "kind": 165
                },
                {
                    "name": "MutationUpdateTripArgs",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/data/services/saferniGraphql.service.ts",
                    "description": "",
                    "kind": 165
                },
                {
                    "name": "MutationUpdateUserArgs",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/data/services/saferniGraphql.service.ts",
                    "description": "",
                    "kind": 165
                },
                {
                    "name": "MutationUploadArgs",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/data/services/saferniGraphql.service.ts",
                    "description": "",
                    "kind": 165
                },
                {
                    "name": "Partner",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/data/services/saferniGraphql.service.ts",
                    "description": "",
                    "kind": 165
                },
                {
                    "name": "PartnerAggregator",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/data/services/saferniGraphql.service.ts",
                    "description": "",
                    "kind": 165
                },
                {
                    "name": "PartnerAggregatorAvg",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/data/services/saferniGraphql.service.ts",
                    "description": "",
                    "kind": 165
                },
                {
                    "name": "PartnerAggregatorMax",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/data/services/saferniGraphql.service.ts",
                    "description": "",
                    "kind": 165
                },
                {
                    "name": "PartnerAggregatorMin",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/data/services/saferniGraphql.service.ts",
                    "description": "",
                    "kind": 165
                },
                {
                    "name": "PartnerAggregatorSum",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/data/services/saferniGraphql.service.ts",
                    "description": "",
                    "kind": 165
                },
                {
                    "name": "PartnerConnection",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/data/services/saferniGraphql.service.ts",
                    "description": "",
                    "kind": 165
                },
                {
                    "name": "PartnerConnection_Id",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/data/services/saferniGraphql.service.ts",
                    "description": "",
                    "kind": 165
                },
                {
                    "name": "PartnerConnectionAddress",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/data/services/saferniGraphql.service.ts",
                    "description": "",
                    "kind": 165
                },
                {
                    "name": "PartnerConnectionAgreement",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/data/services/saferniGraphql.service.ts",
                    "description": "",
                    "kind": 165
                },
                {
                    "name": "PartnerConnectionAgreementStatus",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/data/services/saferniGraphql.service.ts",
                    "description": "",
                    "kind": 165
                },
                {
                    "name": "PartnerConnectionCommission",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/data/services/saferniGraphql.service.ts",
                    "description": "",
                    "kind": 165
                },
                {
                    "name": "PartnerConnectionCreatedAt",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/data/services/saferniGraphql.service.ts",
                    "description": "",
                    "kind": 165
                },
                {
                    "name": "PartnerConnectionEmail",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/data/services/saferniGraphql.service.ts",
                    "description": "",
                    "kind": 165
                },
                {
                    "name": "PartnerConnectionId",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/data/services/saferniGraphql.service.ts",
                    "description": "",
                    "kind": 165
                },
                {
                    "name": "PartnerConnectionName",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/data/services/saferniGraphql.service.ts",
                    "description": "",
                    "kind": 165
                },
                {
                    "name": "PartnerConnectionNotes",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/data/services/saferniGraphql.service.ts",
                    "description": "",
                    "kind": 165
                },
                {
                    "name": "PartnerConnectionPhone",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/data/services/saferniGraphql.service.ts",
                    "description": "",
                    "kind": 165
                },
                {
                    "name": "PartnerConnectionPhone2",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/data/services/saferniGraphql.service.ts",
                    "description": "",
                    "kind": 165
                },
                {
                    "name": "PartnerConnectionPublished_At",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/data/services/saferniGraphql.service.ts",
                    "description": "",
                    "kind": 165
                },
                {
                    "name": "PartnerConnectionRevenueSource",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/data/services/saferniGraphql.service.ts",
                    "description": "",
                    "kind": 165
                },
                {
                    "name": "PartnerConnectionUpdatedAt",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/data/services/saferniGraphql.service.ts",
                    "description": "",
                    "kind": 165
                },
                {
                    "name": "PartnerGroupBy",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/data/services/saferniGraphql.service.ts",
                    "description": "",
                    "kind": 165
                },
                {
                    "name": "PartnerInput",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/data/services/saferniGraphql.service.ts",
                    "description": "",
                    "kind": 165
                },
                {
                    "name": "PartnerTripsArgs",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/data/services/saferniGraphql.service.ts",
                    "description": "",
                    "kind": 165
                },
                {
                    "name": "Query",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/data/services/saferniGraphql.service.ts",
                    "description": "",
                    "kind": 165
                },
                {
                    "name": "QueryBookingArgs",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/data/services/saferniGraphql.service.ts",
                    "description": "",
                    "kind": 165
                },
                {
                    "name": "QueryBookingsArgs",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/data/services/saferniGraphql.service.ts",
                    "description": "",
                    "kind": 165
                },
                {
                    "name": "QueryBookingsConnectionArgs",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/data/services/saferniGraphql.service.ts",
                    "description": "",
                    "kind": 165
                },
                {
                    "name": "QueryCitiesArgs",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/data/services/saferniGraphql.service.ts",
                    "description": "",
                    "kind": 165
                },
                {
                    "name": "QueryCitiesConnectionArgs",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/data/services/saferniGraphql.service.ts",
                    "description": "",
                    "kind": 165
                },
                {
                    "name": "QueryCityArgs",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/data/services/saferniGraphql.service.ts",
                    "description": "",
                    "kind": 165
                },
                {
                    "name": "QueryFeatureArgs",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/data/services/saferniGraphql.service.ts",
                    "description": "",
                    "kind": 165
                },
                {
                    "name": "QueryFeaturesArgs",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/data/services/saferniGraphql.service.ts",
                    "description": "",
                    "kind": 165
                },
                {
                    "name": "QueryFeaturesConnectionArgs",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/data/services/saferniGraphql.service.ts",
                    "description": "",
                    "kind": 165
                },
                {
                    "name": "QueryFilesArgs",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/data/services/saferniGraphql.service.ts",
                    "description": "",
                    "kind": 165
                },
                {
                    "name": "QueryFilesConnectionArgs",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/data/services/saferniGraphql.service.ts",
                    "description": "",
                    "kind": 165
                },
                {
                    "name": "QueryHomeBannerArgs",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/data/services/saferniGraphql.service.ts",
                    "description": "",
                    "kind": 165
                },
                {
                    "name": "QueryHotelArgs",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/data/services/saferniGraphql.service.ts",
                    "description": "",
                    "kind": 165
                },
                {
                    "name": "QueryHotelsArgs",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/data/services/saferniGraphql.service.ts",
                    "description": "",
                    "kind": 165
                },
                {
                    "name": "QueryHotelsConnectionArgs",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/data/services/saferniGraphql.service.ts",
                    "description": "",
                    "kind": 165
                },
                {
                    "name": "QueryLocationArgs",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/data/services/saferniGraphql.service.ts",
                    "description": "",
                    "kind": 165
                },
                {
                    "name": "QueryLocationsArgs",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/data/services/saferniGraphql.service.ts",
                    "description": "",
                    "kind": 165
                },
                {
                    "name": "QueryLocationsConnectionArgs",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/data/services/saferniGraphql.service.ts",
                    "description": "",
                    "kind": 165
                },
                {
                    "name": "QueryPartnerArgs",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/data/services/saferniGraphql.service.ts",
                    "description": "",
                    "kind": 165
                },
                {
                    "name": "QueryPartnersArgs",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/data/services/saferniGraphql.service.ts",
                    "description": "",
                    "kind": 165
                },
                {
                    "name": "QueryPartnersConnectionArgs",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/data/services/saferniGraphql.service.ts",
                    "description": "",
                    "kind": 165
                },
                {
                    "name": "QueryReviewArgs",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/data/services/saferniGraphql.service.ts",
                    "description": "",
                    "kind": 165
                },
                {
                    "name": "QueryReviewsArgs",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/data/services/saferniGraphql.service.ts",
                    "description": "",
                    "kind": 165
                },
                {
                    "name": "QueryReviewsConnectionArgs",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/data/services/saferniGraphql.service.ts",
                    "description": "",
                    "kind": 165
                },
                {
                    "name": "QueryRoleArgs",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/data/services/saferniGraphql.service.ts",
                    "description": "",
                    "kind": 165
                },
                {
                    "name": "QueryRolesArgs",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/data/services/saferniGraphql.service.ts",
                    "description": "",
                    "kind": 165
                },
                {
                    "name": "QueryRolesConnectionArgs",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/data/services/saferniGraphql.service.ts",
                    "description": "",
                    "kind": 165
                },
                {
                    "name": "QuerySubscriberArgs",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/data/services/saferniGraphql.service.ts",
                    "description": "",
                    "kind": 165
                },
                {
                    "name": "QuerySubscribersArgs",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/data/services/saferniGraphql.service.ts",
                    "description": "",
                    "kind": 165
                },
                {
                    "name": "QuerySubscribersConnectionArgs",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/data/services/saferniGraphql.service.ts",
                    "description": "",
                    "kind": 165
                },
                {
                    "name": "QueryTripArgs",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/data/services/saferniGraphql.service.ts",
                    "description": "",
                    "kind": 165
                },
                {
                    "name": "QueryTripsArgs",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/data/services/saferniGraphql.service.ts",
                    "description": "",
                    "kind": 165
                },
                {
                    "name": "QueryTripsConnectionArgs",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/data/services/saferniGraphql.service.ts",
                    "description": "",
                    "kind": 165
                },
                {
                    "name": "QueryUserArgs",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/data/services/saferniGraphql.service.ts",
                    "description": "",
                    "kind": 165
                },
                {
                    "name": "QueryUsersArgs",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/data/services/saferniGraphql.service.ts",
                    "description": "",
                    "kind": 165
                },
                {
                    "name": "QueryUsersConnectionArgs",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/data/services/saferniGraphql.service.ts",
                    "description": "",
                    "kind": 165
                },
                {
                    "name": "Review",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/data/services/saferniGraphql.service.ts",
                    "description": "",
                    "kind": 165
                },
                {
                    "name": "ReviewAggregator",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/data/services/saferniGraphql.service.ts",
                    "description": "",
                    "kind": 165
                },
                {
                    "name": "ReviewAggregatorAvg",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/data/services/saferniGraphql.service.ts",
                    "description": "",
                    "kind": 165
                },
                {
                    "name": "ReviewAggregatorMax",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/data/services/saferniGraphql.service.ts",
                    "description": "",
                    "kind": 165
                },
                {
                    "name": "ReviewAggregatorMin",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/data/services/saferniGraphql.service.ts",
                    "description": "",
                    "kind": 165
                },
                {
                    "name": "ReviewAggregatorSum",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/data/services/saferniGraphql.service.ts",
                    "description": "",
                    "kind": 165
                },
                {
                    "name": "ReviewConnection",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/data/services/saferniGraphql.service.ts",
                    "description": "",
                    "kind": 165
                },
                {
                    "name": "ReviewConnection_Id",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/data/services/saferniGraphql.service.ts",
                    "description": "",
                    "kind": 165
                },
                {
                    "name": "ReviewConnectionActive",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/data/services/saferniGraphql.service.ts",
                    "description": "",
                    "kind": 165
                },
                {
                    "name": "ReviewConnectionAuthor",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/data/services/saferniGraphql.service.ts",
                    "description": "",
                    "kind": 165
                },
                {
                    "name": "ReviewConnectionCreatedAt",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/data/services/saferniGraphql.service.ts",
                    "description": "",
                    "kind": 165
                },
                {
                    "name": "ReviewConnectionId",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/data/services/saferniGraphql.service.ts",
                    "description": "",
                    "kind": 165
                },
                {
                    "name": "ReviewConnectionPublished_At",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/data/services/saferniGraphql.service.ts",
                    "description": "",
                    "kind": 165
                },
                {
                    "name": "ReviewConnectionRating",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/data/services/saferniGraphql.service.ts",
                    "description": "",
                    "kind": 165
                },
                {
                    "name": "ReviewConnectionText",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/data/services/saferniGraphql.service.ts",
                    "description": "",
                    "kind": 165
                },
                {
                    "name": "ReviewConnectionTrip",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/data/services/saferniGraphql.service.ts",
                    "description": "",
                    "kind": 165
                },
                {
                    "name": "ReviewConnectionUpdatedAt",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/data/services/saferniGraphql.service.ts",
                    "description": "",
                    "kind": 165
                },
                {
                    "name": "ReviewGroupBy",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/data/services/saferniGraphql.service.ts",
                    "description": "",
                    "kind": 165
                },
                {
                    "name": "ReviewInput",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/data/services/saferniGraphql.service.ts",
                    "description": "",
                    "kind": 165
                },
                {
                    "name": "RoleInput",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/data/services/saferniGraphql.service.ts",
                    "description": "",
                    "kind": 165
                },
                {
                    "name": "Scalars",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/data/services/saferniGraphql.service.ts",
                    "description": "<p>All built-in and custom scalars, mapped to their actual values </p>\n",
                    "kind": 165
                },
                {
                    "name": "SubscriberInput",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/data/services/saferniGraphql.service.ts",
                    "description": "",
                    "kind": 165
                },
                {
                    "name": "Subscribers",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/data/services/saferniGraphql.service.ts",
                    "description": "",
                    "kind": 165
                },
                {
                    "name": "SubscribersAggregator",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/data/services/saferniGraphql.service.ts",
                    "description": "",
                    "kind": 165
                },
                {
                    "name": "SubscribersConnection",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/data/services/saferniGraphql.service.ts",
                    "description": "",
                    "kind": 165
                },
                {
                    "name": "SubscribersConnection_Id",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/data/services/saferniGraphql.service.ts",
                    "description": "",
                    "kind": 165
                },
                {
                    "name": "SubscribersConnectionCreatedAt",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/data/services/saferniGraphql.service.ts",
                    "description": "",
                    "kind": 165
                },
                {
                    "name": "SubscribersConnectionEmail",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/data/services/saferniGraphql.service.ts",
                    "description": "",
                    "kind": 165
                },
                {
                    "name": "SubscribersConnectionId",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/data/services/saferniGraphql.service.ts",
                    "description": "",
                    "kind": 165
                },
                {
                    "name": "SubscribersConnectionPublished_At",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/data/services/saferniGraphql.service.ts",
                    "description": "",
                    "kind": 165
                },
                {
                    "name": "SubscribersConnectionUpdatedAt",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/data/services/saferniGraphql.service.ts",
                    "description": "",
                    "kind": 165
                },
                {
                    "name": "SubscribersGroupBy",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/data/services/saferniGraphql.service.ts",
                    "description": "",
                    "kind": 165
                },
                {
                    "name": "TripInfoFragment",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "",
                    "file": "src/app/data/services/saferniGraphql.service.ts",
                    "description": "",
                    "kind": 172
                },
                {
                    "name": "TripInput",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/data/services/saferniGraphql.service.ts",
                    "description": "",
                    "kind": 165
                },
                {
                    "name": "Trips",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/data/services/saferniGraphql.service.ts",
                    "description": "",
                    "kind": 165
                },
                {
                    "name": "TripsAggregator",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/data/services/saferniGraphql.service.ts",
                    "description": "",
                    "kind": 165
                },
                {
                    "name": "TripsAggregatorAvg",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/data/services/saferniGraphql.service.ts",
                    "description": "",
                    "kind": 165
                },
                {
                    "name": "TripsAggregatorMax",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/data/services/saferniGraphql.service.ts",
                    "description": "",
                    "kind": 165
                },
                {
                    "name": "TripsAggregatorMin",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/data/services/saferniGraphql.service.ts",
                    "description": "",
                    "kind": 165
                },
                {
                    "name": "TripsAggregatorSum",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/data/services/saferniGraphql.service.ts",
                    "description": "",
                    "kind": 165
                },
                {
                    "name": "TripsConnection",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/data/services/saferniGraphql.service.ts",
                    "description": "",
                    "kind": 165
                },
                {
                    "name": "TripsConnection_Id",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/data/services/saferniGraphql.service.ts",
                    "description": "",
                    "kind": 165
                },
                {
                    "name": "TripsConnectionActive",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/data/services/saferniGraphql.service.ts",
                    "description": "",
                    "kind": 165
                },
                {
                    "name": "TripsConnectionBasePeopleCount",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/data/services/saferniGraphql.service.ts",
                    "description": "",
                    "kind": 165
                },
                {
                    "name": "TripsConnectionBasePrice",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/data/services/saferniGraphql.service.ts",
                    "description": "",
                    "kind": 165
                },
                {
                    "name": "TripsConnectionCity",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/data/services/saferniGraphql.service.ts",
                    "description": "",
                    "kind": 165
                },
                {
                    "name": "TripsConnectionCreatedAt",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/data/services/saferniGraphql.service.ts",
                    "description": "",
                    "kind": 165
                },
                {
                    "name": "TripsConnectionCurrency",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/data/services/saferniGraphql.service.ts",
                    "description": "",
                    "kind": 165
                },
                {
                    "name": "TripsConnectionDescription",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/data/services/saferniGraphql.service.ts",
                    "description": "",
                    "kind": 165
                },
                {
                    "name": "TripsConnectionDiscount",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/data/services/saferniGraphql.service.ts",
                    "description": "",
                    "kind": 165
                },
                {
                    "name": "TripsConnectionDuration",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/data/services/saferniGraphql.service.ts",
                    "description": "",
                    "kind": 165
                },
                {
                    "name": "TripsConnectionHotel",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/data/services/saferniGraphql.service.ts",
                    "description": "",
                    "kind": 165
                },
                {
                    "name": "TripsConnectionId",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/data/services/saferniGraphql.service.ts",
                    "description": "",
                    "kind": 165
                },
                {
                    "name": "TripsConnectionLocale",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/data/services/saferniGraphql.service.ts",
                    "description": "",
                    "kind": 165
                },
                {
                    "name": "TripsConnectionName",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/data/services/saferniGraphql.service.ts",
                    "description": "",
                    "kind": 165
                },
                {
                    "name": "TripsConnectionPartner",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/data/services/saferniGraphql.service.ts",
                    "description": "",
                    "kind": 165
                },
                {
                    "name": "TripsConnectionPreviewImage",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/data/services/saferniGraphql.service.ts",
                    "description": "",
                    "kind": 165
                },
                {
                    "name": "TripsConnectionPublished_At",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/data/services/saferniGraphql.service.ts",
                    "description": "",
                    "kind": 165
                },
                {
                    "name": "TripsConnectionTravelType",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/data/services/saferniGraphql.service.ts",
                    "description": "",
                    "kind": 165
                },
                {
                    "name": "TripsConnectionTrip_Type",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/data/services/saferniGraphql.service.ts",
                    "description": "",
                    "kind": 165
                },
                {
                    "name": "TripsConnectionUpdatedAt",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/data/services/saferniGraphql.service.ts",
                    "description": "",
                    "kind": 165
                },
                {
                    "name": "TripsGroupBy",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/data/services/saferniGraphql.service.ts",
                    "description": "",
                    "kind": 165
                },
                {
                    "name": "TripsLocalizationsArgs",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/data/services/saferniGraphql.service.ts",
                    "description": "",
                    "kind": 165
                },
                {
                    "name": "TripsQuery",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "",
                    "file": "src/app/data/services/saferniGraphql.service.ts",
                    "description": "",
                    "kind": 172
                },
                {
                    "name": "TripsQueryVariables",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "Exact<literal type>",
                    "file": "src/app/data/services/saferniGraphql.service.ts",
                    "description": "",
                    "kind": 161
                },
                {
                    "name": "UpdateBookingInput",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/data/services/saferniGraphql.service.ts",
                    "description": "",
                    "kind": 165
                },
                {
                    "name": "UpdateBookingPayload",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/data/services/saferniGraphql.service.ts",
                    "description": "",
                    "kind": 165
                },
                {
                    "name": "UpdateCityInput",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/data/services/saferniGraphql.service.ts",
                    "description": "",
                    "kind": 165
                },
                {
                    "name": "UpdateCityPayload",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/data/services/saferniGraphql.service.ts",
                    "description": "",
                    "kind": 165
                },
                {
                    "name": "UpdateFeatureInput",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/data/services/saferniGraphql.service.ts",
                    "description": "",
                    "kind": 165
                },
                {
                    "name": "UpdateFeaturePayload",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/data/services/saferniGraphql.service.ts",
                    "description": "",
                    "kind": 165
                },
                {
                    "name": "UpdateHomeBannerInput",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/data/services/saferniGraphql.service.ts",
                    "description": "",
                    "kind": 165
                },
                {
                    "name": "UpdateHomeBannerPayload",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/data/services/saferniGraphql.service.ts",
                    "description": "",
                    "kind": 165
                },
                {
                    "name": "UpdateHotelInput",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/data/services/saferniGraphql.service.ts",
                    "description": "",
                    "kind": 165
                },
                {
                    "name": "UpdateHotelPayload",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/data/services/saferniGraphql.service.ts",
                    "description": "",
                    "kind": 165
                },
                {
                    "name": "UpdateLocationInput",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/data/services/saferniGraphql.service.ts",
                    "description": "",
                    "kind": 165
                },
                {
                    "name": "UpdateLocationPayload",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/data/services/saferniGraphql.service.ts",
                    "description": "",
                    "kind": 165
                },
                {
                    "name": "UpdatePartnerInput",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/data/services/saferniGraphql.service.ts",
                    "description": "",
                    "kind": 165
                },
                {
                    "name": "UpdatePartnerPayload",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/data/services/saferniGraphql.service.ts",
                    "description": "",
                    "kind": 165
                },
                {
                    "name": "UpdateReviewInput",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/data/services/saferniGraphql.service.ts",
                    "description": "",
                    "kind": 165
                },
                {
                    "name": "UpdateReviewPayload",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/data/services/saferniGraphql.service.ts",
                    "description": "",
                    "kind": 165
                },
                {
                    "name": "UpdateRoleInput",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/data/services/saferniGraphql.service.ts",
                    "description": "",
                    "kind": 165
                },
                {
                    "name": "UpdateRolePayload",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/data/services/saferniGraphql.service.ts",
                    "description": "",
                    "kind": 165
                },
                {
                    "name": "UpdateSubscriberInput",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/data/services/saferniGraphql.service.ts",
                    "description": "",
                    "kind": 165
                },
                {
                    "name": "UpdateSubscriberPayload",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/data/services/saferniGraphql.service.ts",
                    "description": "",
                    "kind": 165
                },
                {
                    "name": "UpdateTripInput",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/data/services/saferniGraphql.service.ts",
                    "description": "",
                    "kind": 165
                },
                {
                    "name": "UpdateTripPayload",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/data/services/saferniGraphql.service.ts",
                    "description": "",
                    "kind": 165
                },
                {
                    "name": "UpdateUserInput",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/data/services/saferniGraphql.service.ts",
                    "description": "",
                    "kind": 165
                },
                {
                    "name": "UpdateUserPayload",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/data/services/saferniGraphql.service.ts",
                    "description": "",
                    "kind": 165
                },
                {
                    "name": "UploadFile",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/data/services/saferniGraphql.service.ts",
                    "description": "",
                    "kind": 165
                },
                {
                    "name": "UploadFileAggregator",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/data/services/saferniGraphql.service.ts",
                    "description": "",
                    "kind": 165
                },
                {
                    "name": "UploadFileAggregatorAvg",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/data/services/saferniGraphql.service.ts",
                    "description": "",
                    "kind": 165
                },
                {
                    "name": "UploadFileAggregatorMax",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/data/services/saferniGraphql.service.ts",
                    "description": "",
                    "kind": 165
                },
                {
                    "name": "UploadFileAggregatorMin",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/data/services/saferniGraphql.service.ts",
                    "description": "",
                    "kind": 165
                },
                {
                    "name": "UploadFileAggregatorSum",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/data/services/saferniGraphql.service.ts",
                    "description": "",
                    "kind": 165
                },
                {
                    "name": "UploadFileConnection",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/data/services/saferniGraphql.service.ts",
                    "description": "",
                    "kind": 165
                },
                {
                    "name": "UploadFileConnection_Id",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/data/services/saferniGraphql.service.ts",
                    "description": "",
                    "kind": 165
                },
                {
                    "name": "UploadFileConnectionAlternativeText",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/data/services/saferniGraphql.service.ts",
                    "description": "",
                    "kind": 165
                },
                {
                    "name": "UploadFileConnectionCaption",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/data/services/saferniGraphql.service.ts",
                    "description": "",
                    "kind": 165
                },
                {
                    "name": "UploadFileConnectionCreatedAt",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/data/services/saferniGraphql.service.ts",
                    "description": "",
                    "kind": 165
                },
                {
                    "name": "UploadFileConnectionExt",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/data/services/saferniGraphql.service.ts",
                    "description": "",
                    "kind": 165
                },
                {
                    "name": "UploadFileConnectionFormats",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/data/services/saferniGraphql.service.ts",
                    "description": "",
                    "kind": 165
                },
                {
                    "name": "UploadFileConnectionHash",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/data/services/saferniGraphql.service.ts",
                    "description": "",
                    "kind": 165
                },
                {
                    "name": "UploadFileConnectionHeight",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/data/services/saferniGraphql.service.ts",
                    "description": "",
                    "kind": 165
                },
                {
                    "name": "UploadFileConnectionId",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/data/services/saferniGraphql.service.ts",
                    "description": "",
                    "kind": 165
                },
                {
                    "name": "UploadFileConnectionMime",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/data/services/saferniGraphql.service.ts",
                    "description": "",
                    "kind": 165
                },
                {
                    "name": "UploadFileConnectionName",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/data/services/saferniGraphql.service.ts",
                    "description": "",
                    "kind": 165
                },
                {
                    "name": "UploadFileConnectionPreviewUrl",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/data/services/saferniGraphql.service.ts",
                    "description": "",
                    "kind": 165
                },
                {
                    "name": "UploadFileConnectionProvider",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/data/services/saferniGraphql.service.ts",
                    "description": "",
                    "kind": 165
                },
                {
                    "name": "UploadFileConnectionProvider_Metadata",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/data/services/saferniGraphql.service.ts",
                    "description": "",
                    "kind": 165
                },
                {
                    "name": "UploadFileConnectionSize",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/data/services/saferniGraphql.service.ts",
                    "description": "",
                    "kind": 165
                },
                {
                    "name": "UploadFileConnectionUpdatedAt",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/data/services/saferniGraphql.service.ts",
                    "description": "",
                    "kind": 165
                },
                {
                    "name": "UploadFileConnectionUrl",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/data/services/saferniGraphql.service.ts",
                    "description": "",
                    "kind": 165
                },
                {
                    "name": "UploadFileConnectionWidth",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/data/services/saferniGraphql.service.ts",
                    "description": "",
                    "kind": 165
                },
                {
                    "name": "UploadFileGroupBy",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/data/services/saferniGraphql.service.ts",
                    "description": "",
                    "kind": 165
                },
                {
                    "name": "UploadFileRelatedArgs",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/data/services/saferniGraphql.service.ts",
                    "description": "",
                    "kind": 165
                },
                {
                    "name": "UserInput",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/data/services/saferniGraphql.service.ts",
                    "description": "",
                    "kind": 165
                },
                {
                    "name": "UserPermissionsPasswordPayload",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/data/services/saferniGraphql.service.ts",
                    "description": "",
                    "kind": 165
                },
                {
                    "name": "UsersPermissionsLoginInput",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/data/services/saferniGraphql.service.ts",
                    "description": "",
                    "kind": 165
                },
                {
                    "name": "UsersPermissionsLoginPayload",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/data/services/saferniGraphql.service.ts",
                    "description": "",
                    "kind": 165
                },
                {
                    "name": "UsersPermissionsMe",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/data/services/saferniGraphql.service.ts",
                    "description": "",
                    "kind": 165
                },
                {
                    "name": "UsersPermissionsMeRole",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/data/services/saferniGraphql.service.ts",
                    "description": "",
                    "kind": 165
                },
                {
                    "name": "UsersPermissionsPermission",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/data/services/saferniGraphql.service.ts",
                    "description": "",
                    "kind": 165
                },
                {
                    "name": "UsersPermissionsRegisterInput",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/data/services/saferniGraphql.service.ts",
                    "description": "",
                    "kind": 165
                },
                {
                    "name": "UsersPermissionsRole",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/data/services/saferniGraphql.service.ts",
                    "description": "",
                    "kind": 165
                },
                {
                    "name": "UsersPermissionsRoleAggregator",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/data/services/saferniGraphql.service.ts",
                    "description": "",
                    "kind": 165
                },
                {
                    "name": "UsersPermissionsRoleConnection",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/data/services/saferniGraphql.service.ts",
                    "description": "",
                    "kind": 165
                },
                {
                    "name": "UsersPermissionsRoleConnection_Id",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/data/services/saferniGraphql.service.ts",
                    "description": "",
                    "kind": 165
                },
                {
                    "name": "UsersPermissionsRoleConnectionDescription",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/data/services/saferniGraphql.service.ts",
                    "description": "",
                    "kind": 165
                },
                {
                    "name": "UsersPermissionsRoleConnectionId",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/data/services/saferniGraphql.service.ts",
                    "description": "",
                    "kind": 165
                },
                {
                    "name": "UsersPermissionsRoleConnectionName",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/data/services/saferniGraphql.service.ts",
                    "description": "",
                    "kind": 165
                },
                {
                    "name": "UsersPermissionsRoleConnectionType",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/data/services/saferniGraphql.service.ts",
                    "description": "",
                    "kind": 165
                },
                {
                    "name": "UsersPermissionsRoleGroupBy",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/data/services/saferniGraphql.service.ts",
                    "description": "",
                    "kind": 165
                },
                {
                    "name": "UsersPermissionsRolePermissionsArgs",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/data/services/saferniGraphql.service.ts",
                    "description": "",
                    "kind": 165
                },
                {
                    "name": "UsersPermissionsRoleUsersArgs",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/data/services/saferniGraphql.service.ts",
                    "description": "",
                    "kind": 165
                },
                {
                    "name": "UsersPermissionsUser",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/data/services/saferniGraphql.service.ts",
                    "description": "",
                    "kind": 165
                },
                {
                    "name": "UsersPermissionsUserAggregator",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/data/services/saferniGraphql.service.ts",
                    "description": "",
                    "kind": 165
                },
                {
                    "name": "UsersPermissionsUserConnection",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/data/services/saferniGraphql.service.ts",
                    "description": "",
                    "kind": 165
                },
                {
                    "name": "UsersPermissionsUserConnection_Id",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/data/services/saferniGraphql.service.ts",
                    "description": "",
                    "kind": 165
                },
                {
                    "name": "UsersPermissionsUserConnectionBlocked",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/data/services/saferniGraphql.service.ts",
                    "description": "",
                    "kind": 165
                },
                {
                    "name": "UsersPermissionsUserConnectionConfirmed",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/data/services/saferniGraphql.service.ts",
                    "description": "",
                    "kind": 165
                },
                {
                    "name": "UsersPermissionsUserConnectionCreatedAt",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/data/services/saferniGraphql.service.ts",
                    "description": "",
                    "kind": 165
                },
                {
                    "name": "UsersPermissionsUserConnectionEmail",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/data/services/saferniGraphql.service.ts",
                    "description": "",
                    "kind": 165
                },
                {
                    "name": "UsersPermissionsUserConnectionId",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/data/services/saferniGraphql.service.ts",
                    "description": "",
                    "kind": 165
                },
                {
                    "name": "UsersPermissionsUserConnectionProvider",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/data/services/saferniGraphql.service.ts",
                    "description": "",
                    "kind": 165
                },
                {
                    "name": "UsersPermissionsUserConnectionRole",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/data/services/saferniGraphql.service.ts",
                    "description": "",
                    "kind": 165
                },
                {
                    "name": "UsersPermissionsUserConnectionUpdatedAt",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/data/services/saferniGraphql.service.ts",
                    "description": "",
                    "kind": 165
                },
                {
                    "name": "UsersPermissionsUserConnectionUsername",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/data/services/saferniGraphql.service.ts",
                    "description": "",
                    "kind": 165
                },
                {
                    "name": "UsersPermissionsUserGroupBy",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/data/services/saferniGraphql.service.ts",
                    "description": "",
                    "kind": 165
                }
            ],
            "src/app/data/models/LocationModel.ts": [
                {
                    "name": "Coordinates",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/data/models/LocationModel.ts",
                    "description": "",
                    "kind": 165
                }
            ],
            "src/app/data/models/ImageModel.ts": [
                {
                    "name": "ImageFormatsObject",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/data/models/ImageModel.ts",
                    "description": "",
                    "kind": 165
                }
            ],
            "src/app/data/models/localization.type.ts": [
                {
                    "name": "LocalizationType",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/data/models/localization.type.ts",
                    "description": "",
                    "kind": 165
                }
            ],
            "src/app/common/widgets/saferni-image/saferni-image.component.ts": [
                {
                    "name": "OverlayType",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "\"gradient\" | \"normal\"",
                    "file": "src/app/common/widgets/saferni-image/saferni-image.component.ts",
                    "description": "",
                    "kind": 168
                }
            ]
        }
    },
    "routes": {
        "name": "<root>",
        "kind": "module",
        "className": "AppModule",
        "children": [
            {
                "name": "routes",
                "filename": "src/app/app-routing.module.ts",
                "module": "AppRoutingModule",
                "kind": "module"
            }
        ]
    },
    "coverage": {
        "count": 0,
        "status": "low",
        "files": [
            {
                "filePath": "e2e/src/app.po.ts",
                "type": "class",
                "linktype": "classe",
                "name": "AppPage",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/app.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AppComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/app.module.ts",
                "type": "function",
                "linksubtype": "function",
                "name": "playerFactory",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/common/layout/footer/footer.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "FooterComponent",
                "coveragePercent": 0,
                "coverageCount": "0/9",
                "status": "low"
            },
            {
                "filePath": "src/app/common/layout/header-info/header-info.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "HeaderInfoComponent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/common/layout/header-tool-bar/header-tool-bar.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "HeaderToolBarComponent",
                "coveragePercent": 0,
                "coverageCount": "0/11",
                "status": "low"
            },
            {
                "filePath": "src/app/common/layout/language-selector/language-selector.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "LanguageSelectorComponent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/common/widgets/accordion-list/accordion-list-item.ts",
                "type": "class",
                "linktype": "classe",
                "name": "AccordionListItem",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/common/widgets/accordion-list/accordion-list-item.ts",
                "type": "class",
                "linktype": "classe",
                "name": "AccordionListItemOption",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/common/widgets/accordion-list/accordion-list.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AccordionListComponent",
                "coveragePercent": 0,
                "coverageCount": "0/8",
                "status": "low"
            },
            {
                "filePath": "src/app/common/widgets/banner-carousel/banner-carousel.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "BannerCarouselComponent",
                "coveragePercent": 0,
                "coverageCount": "0/11",
                "status": "low"
            },
            {
                "filePath": "src/app/common/widgets/booking-submit-popup/booking-submit-popup.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "BookingSubmitPopupComponent",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "src/app/common/widgets/booking-submit-popup/booking-submit-popup.component.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "BookingPopupData",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/common/widgets/custom-date-picker/custom-date-picker.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "CustomDatePickerComponent",
                "coveragePercent": 0,
                "coverageCount": "0/23",
                "status": "low"
            },
            {
                "filePath": "src/app/common/widgets/custom-input/custom-input.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "CustomInputComponent",
                "coveragePercent": 0,
                "coverageCount": "0/21",
                "status": "low"
            },
            {
                "filePath": "src/app/common/widgets/custom-select/custom-select.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "CustomSelectComponent",
                "coveragePercent": 0,
                "coverageCount": "0/21",
                "status": "low"
            },
            {
                "filePath": "src/app/common/widgets/custom-textarea/custom-textarea.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "CustomTextareaComponent",
                "coveragePercent": 0,
                "coverageCount": "0/20",
                "status": "low"
            },
            {
                "filePath": "src/app/common/widgets/error-dlg/error-dlg.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ErrorDlgComponent",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "src/app/common/widgets/guest-count-input/guest-count-input.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "GuestCountInputComponent",
                "coveragePercent": 0,
                "coverageCount": "0/45",
                "status": "low"
            },
            {
                "filePath": "src/app/common/widgets/guest-count-input/guest-count-input.component.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "isInstanceOfGuesCount",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/common/widgets/horizontal-listview/horizontal-listview.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "HorizontalListviewComponent",
                "coveragePercent": 0,
                "coverageCount": "0/9",
                "status": "low"
            },
            {
                "filePath": "src/app/common/widgets/loader/loader.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "LoaderComponent",
                "coveragePercent": 0,
                "coverageCount": "0/14",
                "status": "low"
            },
            {
                "filePath": "src/app/common/widgets/loader/nocontent/nocontent.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "NocontentComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/common/widgets/logo/logo.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "LogoComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/common/widgets/oursocialmedia/oursocialmedia.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "OursocialmediaComponent",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "src/app/common/widgets/phone-input/phone-input.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "PhoneInputComponent",
                "coveragePercent": 0,
                "coverageCount": "0/24",
                "status": "low"
            },
            {
                "filePath": "src/app/common/widgets/pill/pill.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "PillComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/common/widgets/profileinput/profileinput.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ProfileinputComponent",
                "coveragePercent": 0,
                "coverageCount": "0/39",
                "status": "low"
            },
            {
                "filePath": "src/app/common/widgets/read-only-stars/read-only-stars.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ReadOnlyStarsComponent",
                "coveragePercent": 0,
                "coverageCount": "0/10",
                "status": "low"
            },
            {
                "filePath": "src/app/common/widgets/saferni-image/saferni-image.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "SaferniImageComponent",
                "coveragePercent": 0,
                "coverageCount": "0/10",
                "status": "low"
            },
            {
                "filePath": "src/app/common/widgets/single-trip-card/single-trip-card.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "SingleTripCardComponent",
                "coveragePercent": 0,
                "coverageCount": "0/15",
                "status": "low"
            },
            {
                "filePath": "src/app/common/widgets/snack-comp/snack-comp.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "SnackCompComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/common/widgets/splash/splash.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "SplashComponent",
                "coveragePercent": 0,
                "coverageCount": "0/17",
                "status": "low"
            },
            {
                "filePath": "src/app/common/widgets/stepper/stepper-data.ts",
                "type": "class",
                "linktype": "classe",
                "name": "StepItem",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/common/widgets/stepper/stepper-data.ts",
                "type": "class",
                "linktype": "classe",
                "name": "StepperData",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/common/widgets/stepper/stepper.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "StepperComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/common/widgets/ticket-counter/ticket-counter.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "TicketCounterComponent",
                "coveragePercent": 0,
                "coverageCount": "0/28",
                "status": "low"
            },
            {
                "filePath": "src/app/common/widgets/validation-icon/validation-icon.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ValidationIconComponent",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "src/app/data/abstract/control-value-accessor-connector.ts",
                "type": "component",
                "linktype": "component",
                "name": "ControlValueAccessorConnector",
                "coveragePercent": 0,
                "coverageCount": "0/17",
                "status": "low"
            },
            {
                "filePath": "src/app/data/abstract/longX.ts",
                "type": "class",
                "linktype": "classe",
                "name": "longX",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/data/abstract/my-controls-abstract.ts",
                "type": "component",
                "linktype": "component",
                "name": "MyControlAbstract",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/data/abstract/query.string.builder.ts",
                "type": "class",
                "linktype": "classe",
                "name": "QueryStringParameters",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/data/adapters/adapter.ts",
                "type": "class",
                "linktype": "classe",
                "name": "Adapter",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/data/directives/onlynumbers.directive.ts",
                "type": "directive",
                "linktype": "directive",
                "name": "Onlynumbers",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/data/directives/social-link.directive.ts",
                "type": "directive",
                "linktype": "directive",
                "name": "SocialLinkDirective",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/data/models/CityModel.ts",
                "type": "class",
                "linktype": "classe",
                "name": "CityModel",
                "coveragePercent": 0,
                "coverageCount": "0/8",
                "status": "low"
            },
            {
                "filePath": "src/app/data/models/CityModel.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "CityModelAdapter",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/data/models/FeatureModel.ts",
                "type": "class",
                "linktype": "classe",
                "name": "FeatureModel",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/data/models/FeatureModel.ts",
                "type": "class",
                "linktype": "classe",
                "name": "FeatureModelAdapter",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/data/models/ImageModel.ts",
                "type": "class",
                "linktype": "classe",
                "name": "ImageFormatAdapter",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/data/models/ImageModel.ts",
                "type": "class",
                "linktype": "classe",
                "name": "ImageFormatModel",
                "coveragePercent": 0,
                "coverageCount": "0/8",
                "status": "low"
            },
            {
                "filePath": "src/app/data/models/ImageModel.ts",
                "type": "class",
                "linktype": "classe",
                "name": "ImageModel",
                "coveragePercent": 0,
                "coverageCount": "0/9",
                "status": "low"
            },
            {
                "filePath": "src/app/data/models/ImageModel.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "ImageModelAdapter",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/data/models/LocationModel.ts",
                "type": "class",
                "linktype": "classe",
                "name": "LocationModel",
                "coveragePercent": 0,
                "coverageCount": "0/9",
                "status": "low"
            },
            {
                "filePath": "src/app/data/models/LocationModel.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "LocationModelAdapter",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/data/models/MetaModel.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "MetaModel",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/data/models/TripModel.ts",
                "type": "class",
                "linktype": "classe",
                "name": "Hotel",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/data/models/TripModel.ts",
                "type": "class",
                "linktype": "classe",
                "name": "HotelAdapter",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/data/models/TripModel.ts",
                "type": "class",
                "linktype": "classe",
                "name": "PlanLocation",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/data/models/TripModel.ts",
                "type": "class",
                "linktype": "classe",
                "name": "TripDayPlan",
                "coveragePercent": 0,
                "coverageCount": "0/8",
                "status": "low"
            },
            {
                "filePath": "src/app/data/models/TripModel.ts",
                "type": "class",
                "linktype": "classe",
                "name": "TripDayPlanAdapter",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/data/models/TripModel.ts",
                "type": "class",
                "linktype": "classe",
                "name": "TripModel",
                "coveragePercent": 0,
                "coverageCount": "0/20",
                "status": "low"
            },
            {
                "filePath": "src/app/data/models/TripModel.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "TripModelAdapter",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/data/models/UserTripsModel.ts",
                "type": "class",
                "linktype": "classe",
                "name": "UserTripsModel",
                "coveragePercent": 0,
                "coverageCount": "0/11",
                "status": "low"
            },
            {
                "filePath": "src/app/data/models/bookingModel.ts",
                "type": "class",
                "linktype": "classe",
                "name": "BookingModel",
                "coveragePercent": 0,
                "coverageCount": "0/15",
                "status": "low"
            },
            {
                "filePath": "src/app/data/models/bookingModel.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "BookingInterface",
                "coveragePercent": 0,
                "coverageCount": "0/14",
                "status": "low"
            },
            {
                "filePath": "src/app/data/models/filterOptionModlel.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "FilterOptionsModel",
                "coveragePercent": 0,
                "coverageCount": "0/12",
                "status": "low"
            },
            {
                "filePath": "src/app/data/models/guestCountModel.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "GuestCountModel",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/data/models/localization.type.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "StrapiLocalizationsAdapter",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/data/models/variousModels.ts",
                "type": "class",
                "linktype": "classe",
                "name": "ImageSnippet",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/data/models/variousModels.ts",
                "type": "class",
                "linktype": "classe",
                "name": "TripOptions",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/data/pipes/language.pipe.ts",
                "type": "pipe",
                "linktype": "pipe",
                "name": "LanguagePipe",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/data/pipes/price-caculator.pipe.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "priceData",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/data/pipes/price-caculator.pipe.ts",
                "type": "pipe",
                "linktype": "pipe",
                "name": "PriceCaculatorPipe",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/data/pipes/price.pipe.ts",
                "type": "pipe",
                "linktype": "pipe",
                "name": "PricePipe",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/data/pipes/serverimage.pipe.ts",
                "type": "pipe",
                "linktype": "pipe",
                "name": "ServerimagePipe",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/data/pipes/travel-type.pipe.ts",
                "type": "pipe",
                "linktype": "pipe",
                "name": "TravelTypePipe",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/data/pipes/upper-first-char.pipe.ts",
                "type": "pipe",
                "linktype": "pipe",
                "name": "UpperFirstCharPipe",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/data/resolvers/home-landing.resolver.ts",
                "type": "guard",
                "linktype": "guard",
                "name": "HomeLandingResolver",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/data/resolvers/manage-booking.resolver.ts",
                "type": "guard",
                "linktype": "guard",
                "name": "ManageBookingResolver",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/data/resolvers/map.resolver.ts",
                "type": "guard",
                "linktype": "guard",
                "name": "MapResolver",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/data/resolvers/offers-page.resolver.ts",
                "type": "guard",
                "linktype": "guard",
                "name": "OffersPageResolver",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/data/resolvers/tour-information.resolver.ts",
                "type": "guard",
                "linktype": "guard",
                "name": "TourInformationResolver",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/data/services/base.service.ts",
                "type": "class",
                "linktype": "classe",
                "name": "BaseService",
                "coveragePercent": 0,
                "coverageCount": "0/10",
                "status": "low"
            },
            {
                "filePath": "src/app/data/services/booking.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "BookingService",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/data/services/city.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "CityService",
                "coveragePercent": 0,
                "coverageCount": "0/12",
                "status": "low"
            },
            {
                "filePath": "src/app/data/services/error.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "ErrorService",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/data/services/features.service.ts",
                "type": "class",
                "linktype": "classe",
                "name": "FeaturesService",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/data/services/home-page.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "HomePageService",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/data/services/home.banner.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "HomeBannerService",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/data/services/injectionTokens.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "MyAdapter",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/data/services/injectionTokens.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "ADAPTER_CONFIG",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/data/services/injectionTokens.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "ADAPTERINEJCTION",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/data/services/landing.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "LandingService",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/data/services/local.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "LocalService",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/data/services/local.service.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "LOCALE_KEY",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/data/services/messaging.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "MessagingService",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/data/services/meta.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "MetaService",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/data/services/news-letter.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "NewsLetterService",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/data/services/saferniGraphql.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "AddToNewsLetterGQL",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/data/services/saferniGraphql.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "CitiesGQL",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/data/services/saferniGraphql.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "CreateBookingQueryGQL",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/data/services/saferniGraphql.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "FeaturesGQL",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/data/services/saferniGraphql.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "GetCityGQL",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/data/services/saferniGraphql.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "GetLocalizedCityGQL",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/data/services/saferniGraphql.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "GetLocalizedTripGQL",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/data/services/saferniGraphql.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "GetLocationsGQL",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/data/services/saferniGraphql.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "GetTripGQL",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/data/services/saferniGraphql.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "HomeCarousellGQL",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/data/services/saferniGraphql.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "TripsGQL",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/data/services/saferniGraphql.service.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "AddToNewsLetterDocument",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/data/services/saferniGraphql.service.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "CitiesDocument",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/data/services/saferniGraphql.service.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "CityInfoFragmentDoc",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/data/services/saferniGraphql.service.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "CreateBookingQueryDocument",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/data/services/saferniGraphql.service.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "FeaturesDocument",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/data/services/saferniGraphql.service.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "GetCityDocument",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/data/services/saferniGraphql.service.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "GetLocalizedCityDocument",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/data/services/saferniGraphql.service.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "GetLocalizedTripDocument",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/data/services/saferniGraphql.service.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "GetLocationsDocument",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/data/services/saferniGraphql.service.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "GetTripDocument",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/data/services/saferniGraphql.service.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "HomeCarousellDocument",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/data/services/saferniGraphql.service.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "TripInfoFragmentDoc",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/data/services/saferniGraphql.service.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "TripsDocument",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/data/services/snack.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "SnackService",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/data/services/splash-screen-state.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "SplashScreenStateService",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/data/services/trip.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "TripService",
                "coveragePercent": 0,
                "coverageCount": "0/18",
                "status": "low"
            },
            {
                "filePath": "src/app/data/services/user.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "UserService",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/data/services/window.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "WindowService",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/data/static/StaticFunctions.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "showErrorMsj",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/data/static/main-info.ts",
                "type": "class",
                "linktype": "classe",
                "name": "DevData",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/data/static/main-info.ts",
                "type": "class",
                "linktype": "classe",
                "name": "StaticInfo",
                "coveragePercent": 0,
                "coverageCount": "0/13",
                "status": "low"
            },
            {
                "filePath": "src/app/data/static/main-info.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "LoadingState",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/data/utils/enums.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "getTravelTypeData",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/data/utils/helpers.ts",
                "type": "function",
                "linksubtype": "function",
                "name": "delay",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/graphql.module.ts",
                "type": "function",
                "linksubtype": "function",
                "name": "createApollo",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/graphql.module.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "uri",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages/Offer/offer-booking/offer-booking.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "OfferBookingComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/pages/Offer/offer-info-landing/offer-info-landing.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "OfferInfoLandingComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/pages/Offer/offer-info-landing/offer-information/offer-information.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "OfferInformationComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/pages/Offer/offer-info-landing/offer-location/offer-location.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "OfferLocationComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/pages/Offer/offer-info-landing/offer-plan/offer-plan.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "OfferPlanComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/pages/Offer/offer-landing/offer-landing.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "OfferLandingComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/pages/about-us/about-us.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AboutUsComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/pages/booking/booking-page.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "BookingPageComponent",
                "coveragePercent": 0,
                "coverageCount": "0/14",
                "status": "low"
            },
            {
                "filePath": "src/app/pages/e404/e404.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "E404Component",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/pages/main-landing/main-landing.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "MainLandingComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/pages/main-landing/search-panel/search-panel.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "SearchPanelComponent",
                "coveragePercent": 0,
                "coverageCount": "0/17",
                "status": "low"
            },
            {
                "filePath": "src/app/pages/main-landing/section-cities/section-cities.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "SectionCitiesComponent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/pages/main-landing/section-daily-trips/section-daily-trips.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "SectionDailyTripsComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/pages/main-landing/section-header/section-header.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "SectionHeaderComponent",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/pages/main-landing/section-offers/section-offers.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "SectionOffersComponent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/pages/manage-booking/manage-booking.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ManageBookingComponent",
                "coveragePercent": 0,
                "coverageCount": "0/8",
                "status": "low"
            },
            {
                "filePath": "src/app/pages/offers-page/filter-widget/filter-widget.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "FilterWidgetComponent",
                "coveragePercent": 0,
                "coverageCount": "0/19",
                "status": "low"
            },
            {
                "filePath": "src/app/pages/offers-page/offers-page.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "OffersPageComponent",
                "coveragePercent": 0,
                "coverageCount": "0/13",
                "status": "low"
            },
            {
                "filePath": "src/app/pages/playground/playground.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "PlaygroundComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/pages/tour-information/tour-information.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "TourInformationComponent",
                "coveragePercent": 0,
                "coverageCount": "0/24",
                "status": "low"
            },
            {
                "filePath": "src/app/pages/tour-information/tour-map/tour-map.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "TourMapComponent",
                "coveragePercent": 0,
                "coverageCount": "0/34",
                "status": "low"
            },
            {
                "filePath": "src/app/pages/user/login/login.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "LoginComponent",
                "coveragePercent": 0,
                "coverageCount": "0/14",
                "status": "low"
            },
            {
                "filePath": "src/app/pages/user/user-profile-landing/tabs/user-profile/user-profile.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "UserProfileComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/pages/user/user-profile-landing/tabs/user-security/user-security.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "UserSecurityComponent",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/pages/user/user-profile-landing/tabs/user-trips/user-trips.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "UserTripsComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/pages/user/user-profile-landing/user-profile-landing.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "UserProfileLandingComponent",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "src/app/transloco/transloco-root.module.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "TranslocoHttpLoader",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/environments/environment.prod.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "environment",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/environments/environment.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "environment",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Large",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Primary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Secondary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Small",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Header.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "LoggedIn",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Header.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "LoggedOut",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Header.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Page.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "LoggedIn",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Page.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "LoggedOut",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Page.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/button.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ButtonComponent",
                "coveragePercent": 83,
                "coverageCount": "5/6",
                "status": "very-good"
            },
            {
                "filePath": "src/stories/header.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "HeaderComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/stories/page.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "PageComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/test.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "context",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/test.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "require",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            }
        ]
    }
}